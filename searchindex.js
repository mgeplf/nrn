Search.setIndex({"alltitles": {"1. Find the proper cell class": [[80, "find-the-proper-cell-class"]], "1. Specifying the anatomical and biophysical properties of the M cell class": [[108, "specifying-the-anatomical-and-biophysical-properties-of-the-m-cell-class"]], "1. What physical system is being represented, and for what purpose?": [[46, "what-physical-system-is-being-represented-and-for-what-purpose"], [46, "id2"]], "2. Find the proper instance of that class": [[80, "find-the-proper-instance-of-that-class"]], "2. Specifying what kinds of synapses can be attached to an M cell": [[109, "specifying-what-kinds-of-synapses-can-be-attached-to-an-m-cell"]], "2. What is the representation of the physical system, and how was it implemented?": [[46, "what-is-the-representation-of-the-physical-system-and-how-was-it-implemented"], [46, "id4"]], "2021-06-24": [[393, "id1"]], "2021-06-29": [[393, "id2"]], "2021-07-01": [[393, "id3"]], "2021-07-08": [[393, "id4"]], "3-D specification of geometry": [[166, "d-specification-of-geometry"], [296, "d-specification-of-geometry"]], "3. Find the proper section": [[80, "find-the-proper-section"]], "3. Placing synapses on the M cell": [[110, "placing-synapses-on-the-m-cell"]], "3. What is the user interface, how was it implemented, and how do you use it?": [[46, "what-is-the-user-interface-how-was-it-implemented-and-how-do-you-use-it"], [46, "id5"]], "4. Find the proper variable": [[80, "find-the-proper-variable"]], "4. Reuse one of their cells in a model of your own design": [[46, "reuse-one-of-their-cells-in-a-model-of-your-own-design"]], "8.0.0": [[1, "id29"]], "8.0.1": [[1, "id25"]], "8.0.2": [[1, "id23"]], "8.1.0": [[1, "id17"]], "8.2.0": [[1, "id13"]], "8.2.1": [[1, "id9"]], "8.2.2": [[1, "id5"]], "8.2.3": [[1, "id2"]], "8.2.4": [[1, "id1"]], "A Versioning Scheme for NEURON": [[377, "a-versioning-scheme-for-neuron"]], "A first synapse, and input via a NetStim": [[383, "A-first-synapse,-and-input-via-a-NetStim"]], "A flexible and powerful simulator of neurons and networks": [[126, "a-flexible-and-powerful-simulator-of-neurons-and-networks"]], "A minimal principled strategy": [[96, "a-minimal-principled-strategy"]], "A model": [[372, "A-model"]], "A simple Julia example": [[253, "a-simple-julia-example"]], "A \u201clitmus test\u201d for models with complex architecture": [[47, "a-litmus-test-for-models-with-complex-architecture"]], "A. Get an Import3D tool.": [[47, "a-get-an-import3d-tool"]], "A. Set up a strategy": [[67, "a-set-up-a-strategy"]], "A. Specify the subset": [[104, "a-specify-the-subset"]], "A. Specifying a function": [[105, "a-specifying-a-function"]], "A. We need a Network Builder": [[111, "a-we-need-a-network-builder"]], "A. We need a Network Builder.": [[112, "a-we-need-a-network-builder"]], "A. We need a class of cells that can supply afferent spikes.": [[108, "a-we-need-a-class-of-cells-that-can-supply-afferent-spikes"]], "A. We need the GUI tool for specifying new types of artificial cells.": [[107, "a-we-need-the-gui-tool-for-specifying-new-types-of-artificial-cells"]], "A. We need to set up the network architecture.": [[113, "a-we-need-to-set-up-the-network-architecture"], [115, "a-we-need-to-set-up-the-network-architecture"]], "AFTER": [[155, "after"], [250, "AFTER"]], "ASSIGNED": [[154, "assigned"], [250, "ASSIGNED"], [283, "assigned"]], "AbsoluteTolerance": [[227, "absolutetolerance"], [351, "absolutetolerance"]], "Accessing GPU resources": [[54, "accessing-gpu-resources"]], "Accessing HOC from Python": [[314, "accessing-hoc-from-python"]], "Acknowledgement": [[89, "acknowledgement"]], "Activity Diagram": [[59, "activity-diagram"]], "Adapting MOD files for C++ with NEURON 9.0[.dev]": [[98, "adapting-mod-files-for-c-with-neuron-with-cpp-mechanisms"]], "Add a stimulus": [[371, "Add-a-stimulus"]], "Adding ion channels": [[393, "adding-ion-channels"]], "Adjusting position and orientation": [[383, "Adjusting-position-and-orientation"]], "Advanced container features": [[53, "advanced-container-features"]], "Advanced exercise": [[382, "Advanced-exercise"]], "Advanced field features": [[53, "advanced-field-features"]], "Advanced usage": [[381, "advanced-usage"]], "Advantages over general-purpose simulators": [[126, "advantages-over-general-purpose-simulators"]], "After creating object reference, can use it to point a new or old object": [[28, "after-creating-object-reference-can-use-it-to-point-a-new-or-old-object"]], "Always save your configured CellBuilder to a session file": [[66, "always-save-your-configured-cellbuilder-to-a-session-file"]], "Anaconda environment": [[0, "anaconda-environment"]], "Analysis": [[140, "analysis"], [269, "analysis"]], "Analyze the bookkeeping overhead": [[53, "analyze-the-bookkeeping-overhead"]], "Analyzing the Underlying Code": [[46, "analyzing-the-underlying-code"]], "Animate": [[29, "animate"]], "Anisotropy": [[373, "Anisotropy"]], "Another example: Mainen and Sejnowski 1996 modeldb.yale.edu/2488": [[46, "another-example-mainen-and-sejnowski-1996-modeldb-yale-edu-2488"]], "AnotherVariableToFit": [[134, "anothervariabletofit"], [262, "anothervariabletofit"]], "Anything not explicitly declared is assumed to be a number": [[28, "anything-not-explicitly-declared-is-assumed-to-be-a-number"], [28, "id2"]], "Archive And Hardcopy": [[227, "archive-and-hardcopy"], [351, "archive-and-hardcopy"]], "ArgValues": [[129, "argvalues"], [257, "argvalues"]], "Args": [[129, "args"], [257, "args"]], "Arguments": [[56, "arguments"], [185, "arguments"]], "Arguments to bbcore_read and bbcore_write.": [[4, "id1"]], "Arithmetic: +, -, *, /, **, % and comparisons": [[387, "Arithmetic:-+,--,-*,-/,-**,-%-and-comparisons"]], "Array variables": [[53, "array-variables"]], "Artificial Cells in NEURON": [[9, "artificial-cells-in-neuron"]], "ArtificialCell": [[227, "artificialcell"], [351, "artificialcell"]], "Ascii": [[231, "ascii"], [355, "ascii"]], "Aside 1: NEURON\u2019s h.topology function": [[388, "Aside-1:-NEURON's-h.topology-function"]], "Aside 2: The psection method": [[388, "Aside-2:-The-psection-method"]], "Aside 3: Python\u2019s dir function": [[388, "Aside-3:-Python's-dir-function"]], "Aside 4: Getting more help": [[388, "Aside-4:-Getting-more-help"]], "Aside 5: Sections and segments": [[388, "Aside-5:-Sections-and-segments"]], "Aside 6: Accessing segment variables": [[388, "Aside-6:-Accessing-segment-variables"]], "Assessing connectivity": [[29, "assessing-connectivity"]], "Assuming NEURON data types have visible definitions": [[53, "assuming-neuron-data-types-have-visible-definitions"]], "Assuming array-of-structs data layout": [[53, "assuming-array-of-structs-data-layout"]], "Assuming you know how the code generation works": [[53, "assuming-you-know-how-the-code-generation-works"]], "Availability and system requirements": [[126, "availability-and-system-requirements"]], "AxisType": [[231, "axistype"], [355, "axistype"]], "B. Choose a file to read.": [[47, "b-choose-a-file-to-read"]], "B. Execute the strategy": [[67, "b-execute-the-strategy"]], "B. Specify the distance metric": [[104, "b-specify-the-distance-metric"]], "B. Verifying a function": [[105, "b-verifying-a-function"]], "B. We need a cell to generate the afferent spike train.": [[112, "b-we-need-a-cell-to-generate-the-afferent-spike-train"]], "B. We need a class of cells that can supply spike trains.": [[107, "b-we-need-a-class-of-cells-that-can-supply-spike-trains"]], "B. We need a \u201cmotoneuron\u201d or \u201cM cell\u201d class.": [[108, "b-we-need-a-motoneuron-or-m-cell-class"]], "B. We need an instance of each of our three cell types.": [[111, "b-we-need-an-instance-of-each-of-our-three-cell-types"]], "B. We need to specify the parameters of the synaptic connections.": [[114, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"], [116, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"]], "BBCOREPOINTER": [[155, "bbcorepointer"], [284, "bbcorepointer"]], "BBSaveState": [[219, "bbsavestate"], [343, "bbsavestate"]], "BEFORE": [[155, "before"], [250, "BEFORE"]], "BEFORE / AFTER": [[284, "before-after"]], "BEST PRACTICES": [[377, "best-practices"]], "BREAKPOINT": [[154, "breakpoint"], [250, "BREAKPOINT"], [283, "breakpoint"]], "Back to the example": [[385, "Back-to-the-example"]], "Background": [[52, "background"]], "Ball and Stick tutorial": [[386, null]], "Ball and stick 1: Basic cell": [[382, "Ball-and-stick-1:-Basic-cell"]], "Ball and stick 2: Build a ring network of ball-and-stick cells": [[383, "Ball-and-stick-2:-Build-a-ring-network-of-ball-and-stick-cells"]], "Ball and stick 3: Extensible network of cells": [[384, "Ball-and-stick-3:-Extensible-network-of-cells"]], "Ball and stick 4: Parallel vs serial mode": [[385, "Ball-and-stick-4:-Parallel-vs-serial-mode"]], "Ball-Stick cell model": [[37, "ball-stick-cell-model"]], "Ball-Stick cell model with synapses": [[37, "ball-stick-cell-model-with-synapses"]], "Ball-and-stick approximation to cell": [[45, "ball-and-stick-approximation-to-cell"]], "Basic Concepts and GUI": [[393, "basic-concepts-and-gui"]], "Basic NEURON Usage": [[82, "basic-neuron-usage"]], "Basic NMODL Statements": [[154, "basic-nmodl-statements"], [283, "basic-nmodl-statements"]], "Basic Programming": [[140, "basic-programming"], [269, "basic-programming"]], "Basic Reaction-Diffusion": [[163, "basic-reaction-diffusion"], [292, "basic-reaction-diffusion"]], "Basic structure": [[369, "Basic-structure"]], "Basic tutorials": [[251, null], [386, null]], "Batch runs with bulletin board parallelization": [[10, "batch-runs-with-bulletin-board-parallelization"], [11, "batch-runs-with-bulletin-board-parallelization"]], "BeQuiet": [[134, "bequiet"], [262, "bequiet"]], "Behind the scenes": [[244, "behind-the-scenes"]], "Beyond the GUI \u2013 Saving and displaying spikes": [[29, "beyond-the-gui-saving-and-displaying-spikes"]], "Binding of A to R": [[95, "binding-of-a-to-r"]], "Biology Modeling FAQ": [[64, "biology-modeling-faq"]], "Biophysical mechanisms": [[388, "Biophysical-mechanisms"]], "Blocks of code": [[28, "blocks-of-code"]], "Boundary conditions": [[373, "Boundary-conditions"]], "Branched cells": [[393, "branched-cells"]], "Breaking Changes": [[1, "breaking-changes"], [1, "id19"], [1, "id31"]], "Bring up to date: Merge vs Rebase": [[377, "bring-up-to-date-merge-vs-rebase"]], "Browser": [[231, "browser"], [355, "browser"]], "Bug Fixes": [[1, "bug-fixes"], [1, "id4"], [1, "id7"], [1, "id11"], [1, "id15"], [1, "id20"], [1, "id24"], [1, "id27"], [1, "id33"]], "Build": [[227, "build"], [351, "build"]], "Build Environment installation": [[249, "build-environment-installation"]], "Builders": [[227, "builders"], [351, "builders"]], "Building GUI interfaces, Initialization, and Circuits 2021-08-03": [[393, "building-gui-interfaces-initialization-and-circuits-2021-08-03"]], "Building MOD files": [[8, "building-mod-files"]], "Building Python Wheels": [[248, "building-python-wheels"]], "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder": [[12, "building-and-labeling-a-two-electrode-voltage-clamp-with-the-linear-circuit-builder"]], "Building data driven multiscale models": [[392, "building-data-driven-multiscale-models"]], "Building the docker image manually": [[248, "building-the-docker-image-manually"]], "Building the docker images automatically": [[248, "building-the-docker-images-automatically"]], "Building the documentation": [[0, "building-the-documentation"]], "Built-in object types: graphs, vectors, lists, files": [[28, "built-in-object-types-graphs-vectors-lists-files"]], "Bulletin board code walkthroughs": [[13, "bulletin-board-code-walkthroughs"]], "Button": [[231, "button"], [355, "button"]], "C. Let\u2019s see what it looks like.": [[47, "c-let-s-see-what-it-looks-like"]], "C. We need a \u201cRenshaw cell\u201d class.": [[110, "c-we-need-a-renshaw-cell-class"]], "C. We need an integrate and fire cell.": [[112, "c-we-need-an-integrate-and-fire-cell"]], "C. We need to give this new cell class a short, unique name.": [[107, "c-we-need-to-give-this-new-cell-class-a-short-unique-name"]], "C/C++ API": [[62, "c-c-api"]], "CMAKE_BUILD_TYPE:STRING=RelWithDebInfo": [[3, "cmake-build-type-string-relwithdebinfo"]], "CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++": [[3, "cmake-cxx-compiler-filepath-usr-bin-c"]], "CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc": [[3, "cmake-c-compiler-filepath-usr-bin-cc"]], "CMAKE_INSTALL_PREFIX:PATH=<path-where-nrn-should-be-installed>": [[3, "cmake-install-prefix-path-path-where-nrn-should-be-installed"]], "CMake Build Options": [[2, "cmake-build-options"]], "CNS 2021 Online Tutorial": [[389, "cns-2021-online-tutorial"]], "COMMENT": [[154, "comment"], [283, "comment"]], "COMPARTMENT": [[154, "compartment"], [283, "compartment"]], "CONDUCTANCE": [[154, "conductance"], [283, "conductance"]], "CONSERVE": [[154, "conserve"], [250, "CONSERVE"], [283, "conserve"]], "CONSTANT": [[154, "constant"], [250, "CONSTANT"], [283, "constant"]], "CONSTRUCTOR": [[154, "constructor"], [250, "CONSTRUCTOR"], [283, "constructor"]], "CREATING RELEASES": [[377, "creating-releases"]], "CSV": [[388, "CSV"]], "CVode": [[220, "cvode"], [344, "cvode"]], "Calbindin D28K dynamics": [[372, "Calbindin-D28K-dynamics"]], "Can create an array of objrefs": [[28, "can-create-an-array-of-objrefs"]], "Cell creation": [[32, "cell-creation"], [37, "cell-creation"]], "Cell template": [[29, "cell-template"]], "CellBuilder": [[142, "cellbuilder"], [227, "cellbuilder"], [271, "cellbuilder"], [351, "cellbuilder"]], "CellBuilder Overview and Hints": [[14, "cellbuilder-overview-and-hints"]], "ChangeColor-Brush": [[231, "changecolor-brush"], [355, "changecolor-brush"]], "ChangeText": [[231, "changetext"], [355, "changetext"]], "Changeparmfromlist": [[134, "changeparmfromlist"], [262, "changeparmfromlist"]], "Channel gating": [[95, "channel-gating"]], "Channels": [[220, "channels"], [344, "channels"]], "Check for the existence of an argument": [[56, "check-for-the-existence-of-an-argument"]], "Check the type of an argument": [[56, "check-the-type-of-an-argument"]], "Checking if the name of an internal symbol": [[56, "checking-if-the-name-of-an-internal-symbol"]], "Checking what you saved": [[14, "checking-what-you-saved"]], "Checkout & Reset": [[377, "checkout-reset"]], "Checkout, Stage, Commit": [[377, "checkout-stage-commit"]], "Choose and use an optimization algorithm": [[94, "choose-and-use-an-optimization-algorithm"], [96, "choose-and-use-an-optimization-algorithm"]], "Circuit creation": [[60, "circuit-creation"]], "Class Hierarchy": [[331, "class-hierarchy"]], "Classes": [[56, "classes"], [387, "Classes"]], "Code Coverage": [[241, "code-coverage"]], "Code Formatting": [[244, "code-formatting"]], "Code development strategy": [[10, "code-development-strategy"], [11, "code-development-strategy"]], "Code walkthrough": [[13, "code-walkthrough"], [13, "id4"], [13, "id10"]], "Command": [[227, "command"], [351, "command"]], "Comments and suggestions": [[51, "comments-and-suggestions"]], "Common Math Functions (HOC)": [[195, "common-math-functions-hoc"], [322, "common-math-functions-hoc"]], "CommonFunctionalForms": [[129, "commonfunctionalforms"], [257, "commonfunctionalforms"]], "Compatibility with older MOD files": [[53, "compatibility-with-older-mod-files"]], "Compiler Selection": [[7, "compiler-selection"]], "Compiling example mod files": [[250, "Compiling-example-mod-files"]], "Completing migration of Node and Prop": [[53, "completing-migration-of-node-and-prop"]], "Computational Model": [[43, "computational-model"], [74, "computational-model"], [75, "computational-model"]], "Computational implementation": [[10, "computational-implementation"], [11, "computational-implementation"]], "Computational implementation of the conceptual model": [[24, "computational-implementation-of-the-conceptual-model"], [30, "computational-implementation-of-the-conceptual-model"], [31, "computational-implementation-of-the-conceptual-model"], [45, "computational-implementation-of-the-conceptual-model"]], "Concentrations": [[220, "concentrations"], [344, "concentrations"]], "Concept": [[369, "Concept"]], "Conceptual Model": [[24, "conceptual-model"], [30, "conceptual-model"], [31, "conceptual-model"], [43, "conceptual-model"], [45, "conceptual-model"], [74, "conceptual-model"], [75, "conceptual-model"]], "Conceptual Overview of Sections": [[166, "conceptual-overview-of-sections"], [296, "conceptual-overview-of-sections"]], "Conditionals": [[28, "conditionals"]], "Confguring the build": [[0, "confguring-the-build"]], "Config file": [[0, "config-file"]], "Connect the sections": [[382, "Connect-the-sections"]], "Connecting Mechanisms Together": [[155, "connecting-mechanisms-together"], [284, "connecting-mechanisms-together"]], "Connecting the cells": [[383, "Connecting-the-cells"]], "Connections": [[32, "connections"], [37, "connections"]], "Conservation": [[95, "conservation"]], "Constants": [[193, "constants"], [320, "constants"]], "Constraining parameters": [[94, "constraining-parameters"], [96, "constraining-parameters"]], "Construct and position our cells": [[383, "Construct-and-position-our-cells"]], "Constructing programs that contain the interepreter": [[81, "constructing-programs-that-contain-the-interepreter"]], "Contamination of the early response": [[96, "contamination-of-the-early-response"]], "Contamination of the late response": [[96, "contamination-of-the-late-response"]], "Continued": [[114, "continued"]], "Continuefor": [[224, "continuefor"], [348, "continuefor"]], "Continuetil": [[224, "continuetil"], [348, "continuetil"]], "Contributing": [[377, "contributing"], [378, "contributing"]], "Contributors": [[1, "contributors"]], "Control Flow": [[81, "control-flow"]], "Convenient user interface": [[126, "convenient-user-interface"]], "CoreNEURON": [[6, "coreneuron"]], "CoreNEURON Compatibility": [[4, "coreneuron-compatibility"]], "CoreNEURON options": [[3, "coreneuron-options"]], "Course Welcome": [[390, "course-welcome"]], "Course introduction": [[392, "course-introduction"]], "Create a Multiple Run Fitter.": [[96, "create-a-multiple-run-fitter"]], "Create the sections": [[382, "Create-the-sections"]], "Creating Changes/Pull Requests": [[377, "creating-changes-pull-requests"]], "Creating a PostScript output file": [[99, "creating-a-postscript-output-file"]], "Creating a stylized (\u201cstick-figure\u201d) model cell": [[66, "creating-a-stylized-stick-figure-model-cell"]], "Creating an ASCII output file": [[99, "creating-an-ascii-output-file"]], "Crosshair": [[231, "crosshair"], [355, "crosshair"]], "CurrentValuesAsDefault": [[129, "currentvaluesasdefault"], [134, "currentvaluesasdefault"], [257, "currentvaluesasdefault"], [262, "currentvaluesasdefault"]], "Currentaxis": [[227, "currentaxis"], [351, "currentaxis"]], "Custom Initialization": [[24, "custom-initialization"]], "Customizable initialization and simulation flow control": [[126, "customizable-initialization-and-simulation-flow-control"]], "D. Exporting the model.": [[47, "d-exporting-the-model"]], "D. We need a class of cells that can integrate synaptic inputs.": [[107, "d-we-need-a-class-of-cells-that-can-integrate-synaptic-inputs"]], "DEFINE": [[154, "define"], [250, "DEFINE"], [283, "define"]], "DEPEND": [[250, "DEPEND"]], "DERIVATIVE": [[154, "derivative"], [250, "DERIVATIVE"], [283, "derivative"]], "DESTRUCTOR": [[154, "destructor"], [250, "DESTRUCTOR"], [283, "destructor"]], "DISCRETE": [[154, "discrete"], [250, "DISCRETE"], [283, "discrete"]], "DOCUMENT HISTORY": [[377, "document-history"]], "Data structures": [[53, "data-structures"]], "Data types: numbers, strings, and objects": [[28, "data-types-numbers-strings-and-objects"]], "DataWeights": [[129, "dataweights"], [134, "dataweights"], [257, "dataweights"], [262, "dataweights"]], "Dealing with Simulations that Generate a lot of Data": [[51, "dealing-with-simulations-that-generate-a-lot-of-data"]], "Debugging and Internals Access": [[186, "debugging-and-internals-access"], [315, "debugging-and-internals-access"]], "Declaring classes": [[56, "declaring-classes"]], "Declaring proteins": [[370, "Declaring-proteins"]], "Default Value Editor": [[231, "default-value-editor"], [355, "default-value-editor"]], "Default section": [[169, "default-section"], [299, "default-section"]], "Define artificial cell types": [[32, "define-artificial-cell-types"]], "Define stylized geometry": [[382, "Define-stylized-geometry"]], "Define the morphology": [[370, "Define-the-morphology"]], "Defining proteins, ions, etc": [[163, "defining-proteins-ions-etc"], [292, "defining-proteins-ions-etc"]], "Defining reactions": [[163, "defining-reactions"], [292, "defining-reactions"]], "Defining the 3D Shape": [[166, "defining-the-3d-shape"], [296, "defining-the-3d-shape"]], "Defining the cell morphology": [[382, "Defining-the-cell-morphology"]], "Definition of new units": [[119, "definition-of-new-units"], [120, "definition-of-new-units"]], "Definitions": [[377, "definitions"]], "Delete": [[231, "delete"], [355, "delete"]], "Deleting a window from the layout area": [[99, "deleting-a-window-from-the-layout-area"]], "Dependencies": [[244, "dependencies"], [247, "dependencies"]], "Dependencies (Linux)": [[241, "dependencies-linux"]], "Deprecated overloads taking void*": [[98, "deprecated-overloads-taking-void"]], "Deprecation": [[380, "deprecation"]], "Deprecations": [[1, "deprecations"], [1, "id32"]], "Deprecations & future changes": [[1, "deprecations-future-changes"]], "Description": [[10, "description"], [10, "id1"], [10, "id4"], [13, "description"], [13, "id1"], [13, "id7"], [77, "description"], [77, "id2"]], "Detailed morphometric data: sources, caveats, and importing into NEURON": [[47, "detailed-morphometric-data-sources-caveats-and-importing-into-neuron"]], "Details": [[27, "details"]], "Developer Builds": [[243, "developer-builds"]], "Development, support, and documentation": [[126, "development-support-and-documentation"]], "Diagnosis and Debugging": [[242, "diagnosis-and-debugging"]], "Dialog Boxes": [[172, "dialog-boxes"], [302, "dialog-boxes"]], "Dictionaries": [[387, "Dictionaries"]], "Differences between idraw and CorelDraw": [[73, "differences-between-idraw-and-coreldraw"]], "Different results with different nhost or nthread.": [[242, "different-results-with-different-nhost-or-nthread"]], "Display": [[227, "display"], [351, "display"]], "Displaying results": [[387, "Displaying-results"]], "Dissociation of ARc": [[95, "dissociation-of-arc"]], "Distributed Mechanisms": [[227, "distributed-mechanisms"], [351, "distributed-mechanisms"]], "Do you have anything to declare?: objects and strings": [[28, "do-you-have-anything-to-declare-objects-and-strings"], [28, "id3"]], "Documentation not handled by RTD": [[0, "documentation-not-handled-by-rtd"]], "Dofit": [[134, "dofit"], [262, "dofit"]], "Domain Restrictions for Fields": [[175, "domain-restrictions-for-fields"], [305, "domain-restrictions-for-fields"]], "Dot notation": [[169, "dot-notation"]], "Dot notation for properties": [[299, "dot-notation-for-properties"]], "Download files": [[373, "Download-files"]], "Draw": [[227, "draw"], [351, "draw"]], "Dressing up these figures for publication": [[127, "dressing-up-these-figures-for-publication"]], "Dynamic Code Loading and Execution": [[170, "dynamic-code-loading-and-execution"], [300, "dynamic-code-loading-and-execution"]], "Dynamics (Channels, etc\u2026)": [[152, "dynamics-channels-etc"], [281, "dynamics-channels-etc"]], "E. Take a new look at the shape in the Import3D tool.": [[47, "e-take-a-new-look-at-the-shape-in-the-import3d-tool"]], "ELECTRODE_CURRENT": [[155, "electrode-current"], [250, "ELECTRODE_CURRENT"], [284, "electrode-current"]], "EOL (end of life)": [[380, "eol-end-of-life"]], "EXTERNAL": [[155, "external"], [284, "external"]], "Edit": [[227, "edit"], [351, "edit"]], "Editing": [[81, "editing"]], "Editing the image file": [[127, "editing-the-image-file"]], "Efficient and painless spatial and temporal discretization": [[126, "efficient-and-painless-spatial-and-temporal-discretization"]], "Electrode": [[144, "electrode"], [147, "electrode"], [273, "electrode"], [276, "electrode"]], "Electrotonic Analysis with NEURON": [[25, "electrotonic-analysis-with-neuron"]], "Eliminate the need for CvMembList::ml to be a vector": [[53, "eliminate-the-need-for-cvmemblist-ml-to-be-a-vector"]], "Eliminate the need for literal_value": [[53, "eliminate-the-need-for-literal-value"]], "Eliminating pdata in a less invasive way": [[53, "eliminating-pdata-in-a-less-invasive-way"]], "Elimination of \u201clegacy indices\u201d": [[53, "elimination-of-legacy-indices"]], "Enable variable time step": [[369, "Enable-variable-time-step"]], "Enabling CoreNEURON": [[8, "enabling-coreneuron"]], "Enhancements for modeling networks": [[126, "enhancements-for-modeling-networks"]], "Environment Variables": [[268, "environment-variables"]], "Erase": [[231, "erase"], [355, "erase"]], "EraseAll": [[230, "eraseall"], [354, "eraseall"]], "Error Handling": [[171, "error-handling"], [301, "error-handling"]], "Error handling": [[81, "error-handling"], [163, "error-handling"], [292, "error-handling"]], "Events": [[220, "events"], [344, "events"]], "Example mod file": [[250, "Example-mod-file"], [250, "id1"], [250, "id4"], [250, "id6"], [250, "id8"], [250, "id10"]], "Example mod files": [[250, "Example-mod-files"]], "Example of Generating a Movie": [[63, "example-of-generating-a-movie"]], "Example of a Hybrid Network": [[74, "example-of-a-hybrid-network"]], "Example of a Simple Network": [[75, "example-of-a-simple-network"]], "Example snippet": [[250, "Example-snippet"]], "Example: CA1 pyramidal neuron: as a 2-layer NN and subthreshold synaptic summation by Poirazi et al. 2003": [[89, "example-ca1-pyramidal-neuron-as-a-2-layer-nn-and-subthreshold-synaptic-summation-by-poirazi-et-al-2003"]], "Example: Calcium waves": [[369, "Example:-Calcium-waves"]], "Example: Circadian rhythm": [[370, "Example:-Circadian-rhythm"]], "Example: Degradable buffer": [[372, "Example:-Degradable-buffer"]], "Example: Moore et al. 1983 modeldb.yale.edu/9852": [[46, "example-moore-et-al-1983-modeldb-yale-edu-9852"]], "Example: combining MOD file ion channels with rxd": [[371, "Example:-combining-MOD-file-ion-channels-with-rxd"]], "Examples": [[5, "examples"], [77, "examples"], [210, "examples"], [335, "examples"], [366, "Examples"], [374, null]], "ExecCommand": [[221, "execcommand"], [345, "execcommand"]], "Execute a Command": [[216, "execute-a-command"], [340, "execute-a-command"]], "Execute the strategy": [[66, "execute-the-strategy"], [66, "id2"]], "Exercise": [[28, "exercise"], [127, "exercise"], [382, "Exercise"]], "Exercise 1": [[38, "exercise-1"], [39, "exercise-1"], [41, "exercise-1"]], "Exercise 2": [[38, "exercise-2"], [39, "exercise-2"], [41, "exercise-2"]], "Exercise 3": [[38, "exercise-3"], [39, "exercise-3"], [41, "exercise-3"]], "Exercise 4": [[38, "exercise-4"], [39, "exercise-4"], [41, "exercise-4"]], "Exercise 5": [[38, "exercise-5"], [39, "exercise-5"]], "Exercise 6": [[38, "exercise-6"], [39, "exercise-6"]], "Exercise: initializing to steady state": [[24, "exercise-initializing-to-steady-state"]], "Exercises": [[25, "exercises"], [28, "exercises"], [28, "id5"], [28, "id6"], [28, "id7"], [28, "id8"], [28, "id9"], [29, "exercises"], [30, "exercises"], [31, "exercises"], [45, "exercises"], [47, "exercises"], [392, "exercises"], [392, "id2"], [392, "id6"]], "Exercises to gain familiarity with the model": [[29, "exercises-to-gain-familiarity-with-the-model"]], "Existing Conventions": [[377, "existing-conventions"]], "Explicit ION Variables Update": [[4, "explicit-ion-variables-update"]], "Explicit default values": [[53, "explicit-default-values"]], "Explore effects of parameters": [[384, "Explore-effects-of-parameters"]], "Exploring morphometric data and fixing problems": [[86, "exploring-morphometric-data-and-fixing-problems"]], "Exporting hoc code vs. saving a cell type": [[66, "exporting-hoc-code-vs-saving-a-cell-type"]], "Exporting the model.": [[86, "exporting-the-model"]], "Expressions": [[81, "expressions"], [185, "expressions"]], "Extracellular reaction-diffusion tutorial": [[373, "Extracellular-reaction-diffusion-tutorial"]], "Extracellular reactions": [[373, "Extracellular-reactions"]], "Extracellular regions": [[163, "extracellular-regions"], [292, "extracellular-regions"]], "Extras": [[134, "extras"], [262, "extras"]], "F. Zooming in": [[47, "f-zooming-in"]], "FAQs": [[246, "faqs"]], "FIinitializeHandler": [[77, "fiinitializehandler"]], "FInitializeHandler": [[223, "finitializehandler"], [347, "finitializehandler"]], "FOR_NETCONS": [[155, "for-netcons"], [250, "FOR_NETCONS"], [284, "for-netcons"]], "FROM": [[250, "FROM"]], "FUNCTION": [[154, "function"], [250, "FUNCTION"], [283, "function"]], "FUNCTION_TABLE": [[154, "function-table"], [250, "FUNCTION_TABLE"], [283, "function-table"]], "Family": [[221, "family"], [227, "family"], [345, "family"], [351, "family"]], "Family1": [[227, "family1"], [351, "family1"]], "FamilyLabel": [[231, "familylabel"], [355, "familylabel"]], "Fast-Forward merge": [[377, "fast-forward-merge"]], "Faster Local Iterations": [[0, "faster-local-iterations"]], "Feedback / Help": [[1, "feedback-help"]], "FieldEditor": [[231, "fieldeditor"], [355, "fieldeditor"]], "File": [[28, "file"], [227, "file"], [351, "file"]], "File Access (Recommended Way)": [[188, "file-access-recommended-way"]], "File Access (objected-oriented via NEURON)": [[316, "file-access-objected-oriented-via-neuron"]], "Finally: The mod file": [[371, "Finally:-The-mod-file"]], "FitCriterion": [[129, "fitcriterion"], [257, "fitcriterion"]], "Fitness menu of a Generator instance in the generator Panel": [[133, "fitness-menu-of-a-generator-instance-in-the-generator-panel"], [261, "fitness-menu-of-a-generator-instance-in-the-generator-panel"]], "Fitting": [[227, "fitting"], [351, "fitting"]], "FittoData": [[129, "fittodata"], [257, "fittodata"]], "Fixing funny axes": [[78, "fixing-funny-axes"]], "Footnotes": [[377, "footnotes"]], "Footnotes and Asides": [[45, "footnotes-and-asides"]], "For loops and iterators": [[387, "For-loops-and-iterators"]], "For specifying the geometry": [[163, "for-specifying-the-geometry"], [292, "for-specifying-the-geometry"]], "Forum": [[82, "forum"]], "Fourier Analysis": [[201, "fourier-analysis"], [328, "fourier-analysis"]], "Frequency": [[227, "frequency"], [351, "frequency"]], "Frequently asked questions (FAQ)": [[76, "frequently-asked-questions-faq"]], "From Alpha to Final Release": [[377, "from-alpha-to-final-release"], [378, "from-alpha-to-final-release"]], "FromCellBuilder": [[227, "fromcellbuilder"], [351, "fromcellbuilder"]], "Function and Argument units": [[119, "function-and-argument-units"], [120, "function-and-argument-units"]], "Function declarations with incorrect types": [[98, "function-declarations-with-incorrect-types"]], "FunctionFitter": [[129, "functionfitter"], [257, "functionfitter"]], "Functionality Example": [[250, "Functionality-Example"]], "Functionality example": [[250, "Functionality-example"], [250, "id2"], [250, "id5"], [250, "id7"], [250, "id9"], [250, "id11"]], "Functions": [[223, "functions"], [347, "functions"], [387, "Functions"]], "Functions and Procedures": [[81, "functions-and-procedures"]], "Further comments": [[127, "further-comments"]], "Future work": [[53, "future-work"]], "GDB": [[242, "gdb"]], "GDB and MPI": [[242, "gdb-and-mpi"]], "GIT OPERATIONS": [[377, "git-operations"]], "GIT and GITHUB": [[377, "git-and-github"]], "GLOBAL": [[155, "global"], [284, "global"]], "GUI Analysis Tools": [[128, "gui-analysis-tools"], [256, "gui-analysis-tools"]], "GUI Design": [[183, "gui-design"], [313, "gui-design"]], "GUI Look And Feel": [[231, "gui-look-and-feel"], [355, "gui-look-and-feel"]], "GUI Widgets": [[312, "gui-widgets"]], "GUIMath": [[196, "guimath"], [323, "guimath"]], "GatherValues": [[227, "gathervalues"], [351, "gathervalues"]], "GatherVec": [[221, "gathervec"], [345, "gathervec"]], "Gathering spikes": [[385, "Gathering-spikes"]], "General": [[153, "general"], [282, "general"]], "General Paradigm": [[154, "general-paradigm"], [283, "general-paradigm"]], "General options": [[3, "general-options"]], "General tech basics": [[392, "general-tech-basics"]], "Generator": [[230, "generator"], [354, "generator"]], "Generators Menu": [[133, "generators-menu"], [261, "generators-menu"]], "Generic Cell class": [[384, "Generic-Cell-class"]], "Generic cell class": [[383, "Generic-cell-class"]], "Geometry": [[166, "geometry"], [296, "geometry-geometry"]], "Get the value of an argument": [[56, "get-the-value-of-an-argument"]], "Getting CoreNEURON": [[7, "getting-coreneuron"]], "Getting Started": [[35, "getting-started"]], "Getting started": [[24, "getting-started"], [45, "getting-started"], [373, "Getting-started"]], "Git Branches and Tags": [[377, "git-branches-and-tags"]], "Git Branching Models": [[377, "git-branching-models"]], "Git Flow": [[377, "git-flow"]], "GitHub": [[377, "github"]], "GitHub Flow": [[377, "github-flow"]], "GitLab Flow": [[377, "gitlab-flow"]], "Give the Function Fitness Generator a descriptive name.": [[94, "give-the-function-fitness-generator-a-descriptive-name"]], "Give the Run Fitness Generator a descriptive name.": [[96, "give-the-run-fitness-generator-a-descriptive-name"]], "Glyph": [[228, "glyph"], [352, "glyph"]], "Going Further": [[35, "going-further"]], "Graph": [[28, "graph"], [227, "graph"], [229, "graph"], [231, "graph"], [351, "graph"], [353, "graph"], [355, "graph"]], "Graph spike times \u2013 should look like SpikePlot1 graph": [[29, "graph-spike-times-should-look-like-spikeplot1-graph"]], "Grapher": [[227, "grapher"], [230, "grapher"], [351, "grapher"], [354, "grapher"]], "Graphing and analyzing data": [[28, "graphing-and-analyzing-data"]], "Graphing connectivity": [[29, "graphing-connectivity"]], "Group 1": [[392, "group-1"], [392, "id3"]], "Group 2": [[392, "group-2"], [392, "id4"]], "GroupManager": [[227, "groupmanager"], [351, "groupmanager"]], "Guides": [[87, "guides"]], "HOC Exercises": [[28, "hoc-exercises"]], "HOC Grammar": [[52, "hoc-grammar"]], "HOC Initialization": [[52, "hoc-initialization"]], "HOC Interpreter": [[52, "hoc-interpreter"]], "HOC Interpreter - executing the machine": [[52, "hoc-interpreter-executing-the-machine"]], "HOC Interpreter example - printf": [[52, "hoc-interpreter-example-printf"]], "HOC Keywords": [[204, "hoc-keywords"]], "HOC Language": [[184, "hoc-language"]], "HOC Morphology Loading - Legacy Import3D_GUI": [[58, "hoc-morphology-loading-legacy-import3d-gui"]], "HOC Morphology Loading with MorphIO": [[58, "hoc-morphology-loading-with-morphio"]], "HOC Sphinx Domain": [[55, "hoc-sphinx-domain"]], "HOC Syntax": [[185, "hoc-syntax"]], "HOC accessing Python": [[211, "hoc-accessing-python"]], "HOC-based Mechanisms": [[148, "hoc-based-mechanisms"], [277, "hoc-based-mechanisms"]], "Hacking the Python Domain": [[55, "hacking-the-python-domain"]], "Hands-on": [[392, "hands-on"]], "Have a question?": [[4, "have-a-question"]], "Help": [[231, "help"], [355, "help"]], "Help! I\u2019m having a hard time implementing models!": [[76, "help-i-m-having-a-hard-time-implementing-models"]], "Helper functions for clarity": [[370, "Helper-functions-for-clarity"]], "Hints": [[94, "hints"], [96, "hints"]], "History": [[154, "history"], [283, "history"]], "Hoc": [[81, "hoc"]], "HocCommand objects": [[56, "hoccommand-objects"]], "Hodgkin-Huxley cable equations": [[30, "hodgkin-huxley-cable-equations"]], "Homogeneous Spec": [[227, "homogeneous-spec"], [351, "homogeneous-spec"]], "Hopfield Brody synchronization (sync) model": [[29, "hopfield-brody-synchronization-sync-model"]], "How": [[366, "How"]], "How (and when) to save all windows to a ses file, and how to retrieve them": [[103, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"], [124, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"]], "How (and why) to save selected windows": [[103, "how-and-why-to-save-selected-windows"], [124, "how-and-why-to-save-selected-windows"]], "How can I read data from a binary PClamp file?": [[76, "how-can-i-read-data-from-a-binary-pclamp-file"]], "How create a custom colormap": [[92, "how-create-a-custom-colormap"]], "How do I change the background color used in NEURON\u2019s shape plots and other graphs?": [[76, "how-do-i-change-the-background-color-used-in-neuron-s-shape-plots-and-other-graphs"]], "How do I change the color scale used in shape plots?": [[76, "how-do-i-change-the-color-scale-used-in-shape-plots"]], "How do I compile mod files?": [[76, "how-do-i-compile-mod-files"]], "How do I create a NEURON model?": [[76, "how-do-i-create-a-neuron-model"]], "How do I exit NEURON? I\u2019m not using the GUI, and when I enter ^D at the oc> prompt it doesn\u2019t do anything?": [[76, "how-do-i-exit-neuron-i-m-not-using-the-gui-and-when-i-enter-d-at-the-oc-prompt-it-doesn-t-do-anything"]], "How do I make cytosolic concentrations change in response to ion channel activity?": [[64, "how-do-i-make-cytosolic-concentrations-change-in-response-to-ion-channel-activity"]], "How do I make cytosolic concentrations diffuse and respond to ion channel activity?": [[64, "how-do-i-make-cytosolic-concentrations-diffuse-and-respond-to-ion-channel-activity"]], "How do I plot something other than membrane potential?": [[76, "how-do-i-plot-something-other-than-membrane-potential"]], "How do I print a hard copy of a NEURON window?": [[76, "how-do-i-print-a-hard-copy-of-a-neuron-window"]], "How do I save and edit figures?": [[76, "how-do-i-save-and-edit-figures"]], "How do I simulate a current clamp pulse experiment?": [[64, "how-do-i-simulate-a-current-clamp-pulse-experiment"]], "How do I simulate a current clamp with non-pulse behavior?": [[64, "how-do-i-simulate-a-current-clamp-with-non-pulse-behavior"]], "How do I use NEURON\u2019s tools for electrotonic analysis?": [[76, "how-do-i-use-neuron-s-tools-for-electrotonic-analysis"]], "How do I work with neuron morphologies?": [[64, "how-do-i-work-with-neuron-morphologies"]], "How it works": [[29, "how-it-works"]], "How to build NEURON": [[249, "how-to-build-neuron"]], "How to change the background color used in shape plots and other graphs": [[92, "how-to-change-the-background-color-used-in-shape-plots-and-other-graphs"]], "How to change the colors of the plots": [[84, "how-to-change-the-colors-of-the-plots"]], "How to choose a window to be printed": [[99, "how-to-choose-a-window-to-be-printed"]], "How to delete v(.5) from the graph": [[79, "how-to-delete-v-5-from-the-graph"]], "How to develop and debug your own code": [[239, "how-to-develop-and-debug-your-own-code"]], "How to generate independent random spike streams": [[100, "how-to-generate-independent-random-spike-streams"]], "How to get started with NEURON": [[82, "how-to-get-started-with-neuron"], [83, "how-to-get-started-with-neuron"]], "How to move the labels": [[84, "how-to-move-the-labels"]], "How to plot variables that belong to biophysical cell models in a network": [[80, "how-to-plot-variables-that-belong-to-biophysical-cell-models-in-a-network"]], "How to test Azure wheels locally": [[248, "how-to-test-azure-wheels-locally"]], "How to translate the view": [[85, "how-to-translate-the-view"]], "How-Do-I Guide": [[56, "how-do-i-guide"]], "I can\u2019t get mod files to compile.": [[76, "i-can-t-get-mod-files-to-compile"]], "I have a set of recorded or calculated spike times. How can I use these to drive a postsynaptic mechanism?": [[76, "i-have-a-set-of-recorded-or-calculated-spike-times-how-can-i-use-these-to-drive-a-postsynaptic-mechanism"]], "I installed a new version of NEURON, and now I see error messages like this: \u2018mecanisms fooba needs to be re-translated. its version 5.2 \u201cc\u201d code is incompatible with this neuron version\u2019.": [[76, "i-installed-a-new-version-of-neuron-and-now-i-see-error-messages-like-this-mecanisms-fooba-needs-to-be-re-translated-its-version-5-2-c-code-is-incompatible-with-this-neuron-version"]], "I just want a current clamp that will deliver a sequence of current pulses at regular intervals. Vector play seems like overkill for this.": [[76, "i-just-want-a-current-clamp-that-will-deliver-a-sequence-of-current-pulses-at-regular-intervals-vector-play-seems-like-overkill-for-this"]], "I see an error message that says \u2026 procedure too big in ./foo.hoc \u2026": [[76, "i-see-an-error-message-that-says-procedure-too-big-in-foo-hoc"]], "I want a current clamp that will generate a pulse when I send it an event, or that I can use to produce pulses at precalculated times.": [[76, "i-want-a-current-clamp-that-will-generate-a-pulse-when-i-send-it-an-event-or-that-i-can-use-to-produce-pulses-at-precalculated-times"]], "IF / ELSE IF / ELSE": [[154, "if-else-if-else"], [283, "if-else-if-else"]], "INCF/CNS 2022 Online Tutorial": [[390, "incf-cns-2022-online-tutorial"]], "INCLUDE": [[154, "include"], [250, "INCLUDE"], [283, "include"]], "INDEPENDENT": [[154, "independent"], [283, "independent"]], "INITIAL": [[154, "initial"], [250, "INITIAL"], [283, "initial"]], "INTRODUCTION": [[377, "introduction"]], "IP3 demo": [[375, "IP3-demo"]], "IV_DIR:PATH=<path-to-external-installation-of-interviews>": [[3, "iv-dir-path-path-to-external-installation-of-interviews"]], "IV_ENABLE_SHARED:BOOL=OFF": [[3, "iv-enable-shared-bool-off"]], "IV_ENABLE_X11_DYNAMIC:BOOL=OFF": [[3, "iv-enable-x11-dynamic-bool-off"]], "IV_ENABLE_X11_DYNAMIC_MAKE_HEADERS:BOOL=OFF": [[3, "iv-enable-x11-dynamic-make-headers-bool-off"]], "Idraw": [[231, "idraw"], [355, "idraw"]], "ImpShape": [[130, "impshape"], [258, "impshape"]], "Impedance": [[136, "impedance"], [227, "impedance"], [264, "impedance"], [351, "impedance"]], "Impedance Tools": [[130, "impedance-tools"], [258, "impedance-tools"]], "ImpedanceRatio": [[132, "impedanceratio"], [260, "impedanceratio"]], "Implementation Notes": [[160, "implementation-notes"], [289, "implementation-notes"]], "Implementational Details of the Synaptic Mechanism": [[95, "implementational-details-of-the-synaptic-mechanism"]], "Implicit pointer type conversions": [[98, "implicit-pointer-type-conversions"]], "Important things to keep in mind": [[40, "important-things-to-keep-in-mind"]], "Importing modules": [[387, "Importing-modules"]], "Improvements /  Other Changes": [[1, "improvements-other-changes"], [1, "id8"], [1, "id12"], [1, "id16"], [1, "id28"], [1, "id34"]], "Improvements / Other Changes": [[1, "id21"]], "Impx": [[131, "impx"], [259, "impx"]], "Increase cell time constant.": [[29, "increase-cell-time-constant"]], "Increase to 100 neurons and run.": [[29, "increase-to-100-neurons-and-run"]], "IndepBegin": [[230, "indepbegin"], [354, "indepbegin"]], "IndepEnd": [[230, "independ"], [354, "independ"]], "IndependentVar": [[129, "independentvar"], [230, "independentvar"], [257, "independentvar"], [354, "independentvar"]], "Inhomogeneities": [[373, "Inhomogeneities"]], "Inhomogeneous Channel Distribution": [[43, "inhomogeneous-channel-distribution"]], "Init": [[224, "init"], [348, "init"]], "InitRun": [[224, "initrun"], [348, "initrun"]], "Initial conditions": [[373, "Initial-conditions"]], "Initialization": [[60, "initialization"]], "Initialization Strategies": [[368, "Initialization-Strategies"]], "Initialize and run the simulation": [[371, "Initialize-and-run-the-simulation"]], "Input and Output": [[81, "input-and-output"], [187, "input-and-output"]], "Insert Mechanisms": [[60, "insert-mechanisms"]], "Inserter": [[143, "inserter"], [227, "inserter"], [272, "inserter"], [351, "inserter"]], "Install Build Dependencies": [[246, "install-build-dependencies"]], "Install NEURON using CMake": [[246, "install-neuron-using-cmake"]], "Install NEURON, update matplotlib": [[63, "install-neuron-update-matplotlib"]], "Installation": [[82, "installation"], [240, "installation"], [245, "installation"]], "Installing Binary Distribution": [[246, "installing-binary-distribution"]], "Installing Source Distributions": [[246, "installing-source-distributions"]], "Installing from source": [[7, "installing-from-source"]], "Installing macOS prerequisites": [[248, "installing-macos-prerequisites"]], "Installing with pip": [[7, "installing-with-pip"]], "Instructions": [[241, "instructions"], [244, "instructions"]], "Instrumentation": [[13, "instrumentation"], [13, "id6"], [242, "instrumentation"], [382, "Instrumentation"]], "IntIbFire in sync model": [[29, "intibfire-in-sync-model"]], "Integration in NEURON": [[53, "integration-in-neuron"]], "Integration of data handles": [[53, "integration-of-data-handles"]], "Integrator-independent model specification": [[126, "integrator-independent-model-specification"]], "InterViews options": [[3, "interviews-options"]], "Interactive Modeling": [[30, "interactive-modeling"]], "Interpreter Management": [[222, "interpreter-management"], [346, "interpreter-management"]], "Intracellular regions and regions in Frankenhauser-Hodgkin space": [[163, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"], [292, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"]], "Introduction": [[3, "introduction"], [81, "introduction"], [89, "introduction"], [154, "introduction"], [283, "introduction"], [392, "introduction"]], "Introduction to Network Construction": [[88, "introduction-to-network-construction"]], "Introduction to Python": [[387, "Introduction-to-Python"]], "Introduction to the GUI": [[31, "introduction-to-the-gui"]], "Introduction to the Linear Circuit Builder": [[33, "introduction-to-the-linear-circuit-builder"]], "Introduction to the Network Builder": [[32, "introduction-to-the-network-builder"]], "Ions": [[149, "ions"], [278, "ions"]], "Is there a list of functions that are built into NEURON?": [[76, "is-there-a-list-of-functions-that-are-built-into-neuron"]], "Is there a list of functions that are built into NMODL?": [[76, "is-there-a-list-of-functions-that-are-built-into-nmodl"]], "Is there a list of functions that are built into hoc?": [[76, "is-there-a-list-of-functions-that-are-built-into-hoc"]], "I\u2019ve used the NEURON Main Menu to construct and manage models. How can I save what I have done?": [[76, "i-ve-used-the-neuron-main-menu-to-construct-and-manage-models-how-can-i-save-what-i-have-done"]], "JSON": [[388, "JSON"]], "K&R function definitions": [[98, "k-r-function-definitions"]], "KINETIC": [[154, "kinetic"], [250, "KINETIC"], [283, "kinetic"]], "KSChan": [[150, "kschan"], [279, "kschan"]], "KeepLines": [[231, "keeplines"], [355, "keeplines"]], "Keywords": [[81, "keywords"]], "Kinetic Scheme Builder": [[227, "kinetic-scheme-builder"], [351, "kinetic-scheme-builder"]], "KineticBuild": [[142, "kineticbuild"], [271, "kineticbuild"]], "LAG": [[154, "lag"], [283, "lag"]], "LINEAR": [[154, "linear"], [250, "LINEAR"], [283, "linear"]], "LOCAL": [[154, "local"], [250, "LOCAL"], [283, "local"]], "LONGITUDINAL_DIFFUSION": [[154, "longitudinal-diffusion"], [283, "longitudinal-diffusion"]], "LandPort": [[231, "landport"], [355, "landport"]], "Large user base": [[126, "large-user-base"]], "Launch the wheel building": [[248, "launch-the-wheel-building"]], "Layout": [[173, "layout"], [303, "layout"]], "Lecture": [[392, "lecture"], [392, "id1"], [392, "id5"], [392, "id7"]], "Lecture 2021-06-03": [[393, "lecture-2021-06-03"]], "Lecture 2021-06-10": [[393, "lecture-2021-06-10"]], "Lecture 2021-06-17": [[393, "lecture-2021-06-17"]], "Legacy patterns that are considered deprecated": [[98, "legacy-patterns-that-are-considered-deprecated"]], "Legacy patterns that are invalid C++": [[98, "legacy-patterns-that-are-invalid-c"]], "Legacy random number generators and API": [[98, "legacy-random-number-generators-and-api"]], "Let\u2019s look at the MP4": [[63, "let-s-look-at-the-mp4"]], "Let\u2019s see what it looks like.": [[86, "let-s-see-what-it-looks-like"]], "Leveraging conf.py": [[0, "leveraging-conf-py"]], "LinearMechanism": [[151, "linearmechanism"], [280, "linearmechanism"]], "Linux": [[244, "linux"], [246, "linux"], [246, "id1"], [248, "linux"]], "Linux wheels": [[248, "linux-wheels"]], "List": [[28, "list"], [174, "list"], [304, "list"]], "List comprehensions (set theory)": [[387, "List-comprehensions-(set-theory)"]], "Lists": [[387, "Lists"]], "Load NEURON": [[382, "Load-NEURON"]], "Load libraries": [[370, "Load-libraries"]], "Load the morphology definition": [[63, "load-the-morphology-definition"]], "LoadDLL": [[227, "loaddll"], [351, "loaddll"]], "LoadHoc": [[227, "loadhoc"], [351, "loadhoc"]], "LoadSession": [[227, "loadsession"], [351, "loadsession"]], "Loading data into the Run Fitness Generator": [[96, "loading-data-into-the-run-fitness-generator"]], "Loading libraries": [[384, "Loading-libraries"]], "Local build": [[0, "local-build"]], "Local non-prototype function declarations": [[98, "local-non-prototype-function-declarations"]], "Localvariabledt": [[227, "localvariabledt"], [351, "localvariabledt"]], "Log scaling": [[94, "log-scaling"]], "LogAvsX": [[131, "logavsx"], [227, "logavsx"], [259, "logavsx"], [351, "logavsx"]], "METHOD": [[250, "METHOD"]], "MOD File Compatibility": [[4, "mod-file-compatibility"]], "MPI": [[160, "mpi"], [289, "mpi"]], "MPI options": [[3, "mpi-options"]], "MPI support": [[248, "mpi-support"]], "MSWIN": [[35, "mswin"]], "MUTEXLOCK / MUTEXUNLOCK": [[155, "mutexlock-mutexunlock"], [250, "MUTEXLOCK-/-MUTEXUNLOCK"], [284, "mutexlock-mutexunlock"]], "Mac": [[244, "mac"]], "Mac Binary Package (Apple M1 and Mac x86_64)": [[247, "mac-binary-package-apple-m1-and-mac-x86-64"]], "Mac OS": [[246, "mac-os"]], "Mac OS - Apple M1": [[246, "mac-os-apple-m1"]], "Mac OS - x86_64": [[246, "mac-os-x86-64"]], "Mac OS X and Linux": [[35, "mac-os-x-and-linux"]], "MacOS considerations": [[248, "macos-considerations"]], "Machine Identification": [[216, "machine-identification"], [340, "machine-identification"]], "Make a Ring class": [[384, "Make-a-Ring-class"]], "Making choices: if, else": [[387, "Making-choices:-if,-else"]], "Making the representation of the biological properties": [[45, "making-the-representation-of-the-biological-properties"]], "Managers": [[144, "managers"], [227, "managers"], [273, "managers"], [351, "managers"]], "Managing Models on the Fly": [[34, "managing-models-on-the-fly"]], "Managing Releases": [[377, "managing-releases"], [378, "managing-releases"]], "Managing a model cell with complex anatomy": [[67, "managing-a-model-cell-with-complex-anatomy"]], "Manipulating nodes": [[163, "manipulating-nodes"], [292, "manipulating-nodes"]], "Math": [[366, "Math"]], "Mathematical functions for rate expressions": [[163, "mathematical-functions-for-rate-expressions"], [292, "mathematical-functions-for-rate-expressions"], [293, "mathematical-functions-for-rate-expressions"]], "Mathematics": [[202, "mathematics"], [329, "mathematics"]], "Matrix": [[197, "matrix"], [324, "matrix"]], "MechType": [[145, "mechtype"], [274, "mechtype"]], "Mechanism": [[314, "mechanism"]], "MechanismStandard (Parameter Control)": [[203, "mechanismstandard-parameter-control"], [330, "mechanismstandard-parameter-control"]], "MechanismType": [[156, "mechanismtype"], [285, "mechanismtype"]], "Mechanisms": [[153, "mechanisms"], [282, "mechanisms"]], "Mechanisms Globals": [[227, "mechanisms-globals"], [351, "mechanisms-globals"]], "Membrane potential": [[163, "membrane-potential"], [292, "membrane-potential"]], "Memory Management for POINTER Variables": [[4, "memory-management-for-pointer-variables"]], "Memory allocation of field data": [[60, "memory-allocation-of-field-data"]], "Menu": [[231, "menu"], [355, "menu"]], "MenuExplore": [[238, "menuexplore"], [362, "menuexplore"]], "Merge and Rebase": [[377, "merge-and-rebase"]], "Merge \u2013squash": [[377, "merge-squash"]], "Merging Branches": [[377, "merging-branches"]], "Miscellaneous": [[137, "miscellaneous"], [186, "miscellaneous"], [199, "miscellaneous"], [216, "miscellaneous"], [227, "miscellaneous"], [265, "miscellaneous"], [315, "miscellaneous"], [326, "miscellaneous"], [340, "miscellaneous"], [351, "miscellaneous"]], "Miscellaneous Menus": [[176, "miscellaneous-menus"], [306, "miscellaneous-menus"]], "Miscellaneous Rarely used options specific to NEURON:": [[3, "miscellaneous-rarely-used-options-specific-to-neuron"]], "Miscellaneous tips": [[56, "miscellaneous-tips"]], "Model": [[32, "model"], [33, "model"], [36, "model"], [36, "id2"], [37, "model"], [44, "model"]], "Model Description Language": [[154, "model-description-language"], [283, "model-description-language"]], "Model Specification": [[140, "model-specification"], [269, "model-specification"]], "Model Specification GUI Tools": [[141, "model-specification-gui-tools"], [270, "model-specification-gui-tools"]], "Model specification": [[13, "model-specification"]], "ModelDB exercises 2021-07-27": [[393, "modeldb-exercises-2021-07-27"]], "ModelDescriptionIssues": [[220, "modeldescriptionissues"], [344, "modeldescriptionissues"]], "ModelView and Interoperability Future Goals": [[89, "modelview-and-interoperability-future-goals"]], "ModelView and ModelDB": [[89, "modelview-and-modeldb"]], "ModelView in action": [[89, "modelview-in-action"]], "ModelView: Compact display of parameters for NEURON models": [[89, "modelview-compact-display-of-parameters-for-neuron-models"]], "Modular programming and reusable code": [[66, "modular-programming-and-reusable-code"]], "More Exercises": [[45, "more-exercises"]], "Morphology and discretization": [[367, "Morphology-and-discretization"]], "Morphology loading in NEURON": [[58, "morphology-loading-in-neuron"]], "MoveText": [[231, "movetext"], [234, "movetext"], [355, "movetext"], [358, "movetext"]], "MulRunFitter": [[133, "mulrunfitter"], [261, "mulrunfitter"]], "Multiple Run Fitter": [[227, "multiple-run-fitter"], [351, "multiple-run-fitter"]], "Multithreaded parallelization": [[36, "multithreaded-parallelization"]], "My PR is breaking the GitHub Windows CI": [[249, "my-pr-is-breaking-the-github-windows-ci"]], "NET_RECEIVE": [[154, "net-receive"], [250, "NET_RECEIVE"], [283, "net-receive"]], "NEURON": [[155, "neuron"], [250, "NEURON"], [284, "neuron"]], "NEURON 2021 Online Course": [[393, "neuron-2021-online-course"]], "NEURON 8.0": [[1, "neuron-8-0"]], "NEURON 8.1": [[1, "neuron-8-1"]], "NEURON 8.2": [[1, "neuron-8-2"]], "NEURON Course Exercises": [[26, "neuron-course-exercises"]], "NEURON Development topics": [[57, "neuron-development-topics"]], "NEURON Docker Image Workflow": [[248, "neuron-docker-image-workflow"]], "NEURON Documentation": [[0, "neuron-documentation"]], "NEURON Extension to NMODL": [[155, "neuron-extension-to-nmodl"], [284, "neuron-extension-to-nmodl"]], "NEURON HOC documentation": [[140, "neuron-hoc-documentation"]], "NEURON Main Menu": [[227, "neuron-main-menu"], [351, "neuron-main-menu"]], "NEURON Only MOD Files": [[4, "neuron-only-mod-files"]], "NEURON Python Classes and Objects": [[331, "neuron-python-classes-and-objects"]], "NEURON Python documentation": [[269, "neuron-python-documentation"]], "NEURON Release Management Guidelines": [[377, "neuron-release-management-guidelines"], [378, "neuron-release-management-guidelines"]], "NEURON RxD": [[392, "neuron-rxd"]], "NEURON SCM and Release": [[379, "neuron-scm-and-release"]], "NEURON Software Policies": [[380, "neuron-software-policies"]], "NEURON Source and Release Management Guide": [[377, "neuron-source-and-release-management-guide"]], "NEURON Versioning and Release Guidelines": [[378, "neuron-versioning-and-release-guidelines"]], "NEURON basics": [[392, "neuron-basics"]], "NEURON concepts": [[390, "neuron-concepts"]], "NEURON scripting exercises": [[38, "neuron-scripting-exercises"]], "NEURON simulations": [[60, "neuron-simulations"]], "NEURON_MODULE_OPTIONS": [[268, "neuron-module-options"]], "NEURON\u2019s Release Requirements": [[377, "neuron-s-release-requirements"]], "NMODL": [[154, "nmodl"], [283, "nmodl"]], "NMODL Code Blocks": [[250, "NMODL-Code-Blocks"]], "NMODL Variable Types": [[250, "NMODL-Variable-Types"]], "NMODL options": [[3, "nmodl-options"]], "NMODLRandom Class": [[327, "nmodlrandom-class"]], "NMODL_ENABLE_PYTHON_BINDINGS:BOOL=OFF": [[3, "nmodl-enable-python-bindings-bool-off"]], "NMODLanguage": [[251, "nmodlanguage"]], "NMODL\u2019s built-in functions": [[91, "nmodl-s-built-in-functions"]], "NONLINEAR": [[154, "nonlinear"], [250, "NONLINEAR"], [283, "nonlinear"]], "NONSPECIFIC_CURRENT": [[155, "nonspecific-current"], [250, "NONSPECIFIC_CURRENT"], [284, "nonspecific-current"]], "NRN_COVERAGE_FILES:STRING=": [[3, "nrn-coverage-files-string"]], "NRN_ENABLE_BACKTRACE:BOOL=OFF": [[3, "nrn-enable-backtrace-bool-off"]], "NRN_ENABLE_CORENEURON:BOOL=OFF": [[3, "nrn-enable-coreneuron-bool-off"]], "NRN_ENABLE_COVERAGE:BOOL=OFF": [[3, "nrn-enable-coverage-bool-off"]], "NRN_ENABLE_DISCRETE_EVENT_OBSERVER:BOOL=ON": [[3, "nrn-enable-discrete-event-observer-bool-on"]], "NRN_ENABLE_DOCS:BOOL=OFF": [[3, "nrn-enable-docs-bool-off"]], "NRN_ENABLE_INTERVIEWS:BOOL=ON": [[3, "nrn-enable-interviews-bool-on"]], "NRN_ENABLE_MATH_OPT:BOOL=OFF": [[3, "nrn-enable-math-opt-bool-off"]], "NRN_ENABLE_MECH_DLL_STYLE:BOOL=ON": [[3, "nrn-enable-mech-dll-style-bool-on"]], "NRN_ENABLE_MODULE_INSTALL:BOOL=ON": [[3, "nrn-enable-module-install-bool-on"]], "NRN_ENABLE_MOD_COMPATIBILITY:BOOL=OFF": [[3, "nrn-enable-mod-compatibility-bool-off"]], "NRN_ENABLE_MPI:BOOL=ON": [[3, "nrn-enable-mpi-bool-on"]], "NRN_ENABLE_MPI_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-mpi-dynamic-bool-off"]], "NRN_ENABLE_MUSIC:BOOL=OFF": [[3, "nrn-enable-music-bool-off"]], "NRN_ENABLE_PYTHON:BOOL=ON": [[3, "nrn-enable-python-bool-on"]], "NRN_ENABLE_PYTHON_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-python-dynamic-bool-off"]], "NRN_ENABLE_RX3D:BOOL=ON": [[3, "nrn-enable-rx3d-bool-on"]], "NRN_ENABLE_SHARED:BOOL=ON": [[3, "nrn-enable-shared-bool-on"]], "NRN_ENABLE_TESTS:BOOL=OFF": [[3, "nrn-enable-tests-bool-off"]], "NRN_ENABLE_THREADS:BOOL=ON": [[3, "nrn-enable-threads-bool-on"]], "NRN_EXTRA_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-cxx-flags-string"]], "NRN_EXTRA_MECH_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-mech-cxx-flags-string"]], "NRN_LINK_AGAINST_PYTHON:BOOL=OFF": [[3, "nrn-link-against-python-bool-off"]], "NRN_MPI_DYNAMIC:STRING=": [[3, "nrn-mpi-dynamic-string"]], "NRN_NMODL_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-nmodl-cxx-flags-string"]], "NRN_PYTHON_DYNAMIC:STRING=": [[3, "nrn-python-dynamic-string"]], "NRN_PYTHON_EXTRA_FOR_TESTS:STRING=": [[3, "nrn-python-extra-for-tests-string"]], "NRN_RX3D_OPT_LEVEL:STRING=0": [[3, "nrn-rx3d-opt-level-string-0"]], "NRN_SANITIZERS:STRING=": [[3, "nrn-sanitizers-string"]], "NRN_USE_REL_RPATH=OFF": [[3, "nrn-use-rel-rpath-off"]], "NULLobject": [[205, "nullobject"]], "NaN or Inf values": [[242, "nan-or-inf-values"]], "NameValues": [[227, "namevalues"], [351, "namevalues"]], "Names": [[81, "names"]], "Names introduced by nrnoc": [[81, "names-introduced-by-nrnoc"]], "Namespace Related": [[186, "namespace-related"], [315, "namespace-related"]], "Narrow the difference between fast and slow cells so as to make more of them fire.": [[29, "narrow-the-difference-between-fast-and-slow-cells-so-as-to-make-more-of-them-fire"]], "NetCon": [[159, "netcon"], [288, "netcon"]], "NetPyNE 2021 Online Course": [[392, "netpyne-2021-online-course"]], "NetPyNE GUI": [[392, "netpyne-gui"]], "NetPyNE analysis and plotting": [[392, "netpyne-analysis-and-plotting"]], "NetPyNE and RxD": [[392, "netpyne-and-rxd"]], "NetPyNE cell imports": [[392, "netpyne-cell-imports"]], "NetPyNE hands on batches": [[392, "netpyne-hands-on-batches"]], "NetPyNE virtual environments on mac and linux": [[392, "netpyne-virtual-environments-on-mac-and-linux"]], "Network": [[29, "network"]], "Network Builder tutorials": [[90, "network-builder-tutorials"]], "Network and synapse theory": [[392, "network-and-synapse-theory"]], "Network exercise solutions and discussion 2021-07-15": [[393, "network-exercise-solutions-and-discussion-2021-07-15"]], "Network ready cells from the CellBuilder": [[37, "network-ready-cells-from-the-cellbuilder"]], "NetworkBuilder": [[227, "networkbuilder"], [351, "networkbuilder"]], "NetworkCell": [[227, "networkcell"], [351, "networkcell"]], "Networks": [[157, "networks"], [286, "networks"]], "Networks and numerical methods": [[393, "networks-and-numerical-methods"]], "Networks in NEURON exercises": [[392, "networks-in-neuron-exercises"]], "Networks: spike-triggered synaptic transmission, events, and artificial cells": [[390, "networks-spike-triggered-synaptic-transmission-events-and-artificial-cells"]], "Neuron MODelling Language": [[250, "Neuron-MODelling-Language"]], "New Python versions": [[380, "new-python-versions"]], "New release on RTD": [[0, "new-release-on-rtd"]], "NewAxis": [[231, "newaxis"], [355, "newaxis"]], "NewView": [[231, "newview"], [355, "newview"]], "Nightly wheels": [[248, "nightly-wheels"]], "Ninja": [[3, "ninja"]], "Node": [[366, "Node"]], "NodeList": [[366, "NodeList"]], "Note on Existing releases": [[380, "note-on-existing-releases"]], "Note: On homeostatic mechanisms or the lack thereof": [[371, "Note:-On-homeostatic-mechanisms-or-the-lack-thereof"]], "Notebooks execution with neuron wheels": [[0, "notebooks-execution-with-neuron-wheels"]], "Notes": [[96, "notes"]], "Notification": [[232, "notification"], [356, "notification"]], "Now that I\u2019ve installed NEURON, how do I run it?": [[76, "now-that-i-ve-installed-neuron-how-do-i-run-it"]], "NumberOfDataRegions": [[134, "numberofdataregions"], [262, "numberofdataregions"]], "Numerical Methods Exercises": [[39, "numerical-methods-exercises"]], "Numerical Methods: accuracy, stability, speed": [[390, "numerical-methods-accuracy-stability-speed"]], "Numerical methods: adaptive integration": [[390, "numerical-methods-adaptive-integration"]], "Numerical options": [[163, "numerical-options"], [292, "numerical-options"]], "Object Oriented Programming": [[205, "object-oriented-programming"]], "Object Related": [[186, "object-related"], [315, "object-related"]], "Object types": [[56, "object-types"]], "ObjectName": [[231, "objectname"], [355, "objectname"]], "Objects include vectors, graphs, lists, \u2026": [[28, "objects-include-vectors-graphs-lists"]], "Obsolete Plotting": [[233, "obsolete-plotting"], [357, "obsolete-plotting"]], "Obsolete Pointer Functions": [[206, "obsolete-pointer-functions"], [332, "obsolete-pointer-functions"]], "Obsolete Stimuli": [[162, "obsolete-stimuli"], [291, "obsolete-stimuli"]], "Occasionally useful advanced options:": [[3, "occasionally-useful-advanced-options"]], "On your own computer:": [[49, "on-your-own-computer"]], "Online": [[0, "online"]], "Open and Write to Files (Obsolete)": [[192, "open-and-write-to-files-obsolete"], [319, "open-and-write-to-files-obsolete"]], "Operational Modes": [[59, "operational-modes"]], "Operators and numerical functions": [[28, "operators-and-numerical-functions"], [28, "id4"]], "Optimization": [[138, "optimization"], [266, "optimization"]], "Optimized CPU and GPU Support using CoreNEURON": [[246, "optimized-cpu-and-gpu-support-using-coreneuron"]], "Option 1: NEURON and NMODL defaults": [[368, "Option-1:-NEURON-and-NMODL-defaults"]], "Option 2: Uniform initial concentration": [[368, "Option-2:-Uniform-initial-concentration"]], "Option 3: Initializing to a function of position": [[368, "Option-3:-Initializing-to-a-function-of-position"]], "Option 4: to steady state": [[368, "Option-4:-to-steady-state"]], "Optional fields": [[53, "optional-fields"]], "Other": [[231, "other"], [355, "other"]], "Other Alternatives": [[377, "other-alternatives"]], "Other CoreNEURON options:": [[3, "other-coreneuron-options"]], "Other NMODL constructs": [[250, "Other-NMODL-constructs"]], "Other Simulation Exercises": [[32, "other-simulation-exercises"], [37, "other-simulation-exercises"]], "Other operations": [[50, "other-operations"]], "Other optimization tools that work with NEURON": [[93, "other-optimization-tools-that-work-with-neuron"]], "Other resources and wrap-up": [[390, "other-resources-and-wrap-up"]], "Other scripting languages": [[253, "other-scripting-languages"]], "Out-of-bounds access": [[53, "out-of-bounds-access"]], "Outline": [[117, "outline"], [118, "outline"]], "Outline of the solution:": [[100, "outline-of-the-solution"]], "Overview": [[53, "overview"], [55, "overview"], [163, "overview"], [292, "overview"], [366, "Overview"], [367, "Overview"], [369, "Overview"], [371, "Overview"]], "Overview of the Import3D tool": [[86, "overview-of-the-import3d-tool"]], "Overview of the Tasks": [[27, "overview-of-the-tasks"]], "PARAMETER": [[154, "parameter"], [250, "PARAMETER"], [283, "parameter"]], "PEP 440": [[377, "pep-440"]], "POINTER": [[154, "pointer"], [155, "pointer"], [283, "pointer"], [284, "pointer"]], "POINT_PROCESS": [[155, "point-process"], [250, "POINT_PROCESS"], [284, "point-process"]], "PROCEDURE": [[154, "procedure"], [250, "PROCEDURE"], [283, "procedure"]], "PROTECT": [[155, "protect"], [250, "PROTECT"], [284, "protect"]], "PWManager": [[177, "pwmanager"], [307, "pwmanager"]], "PYTHON_EXECUTABLE:PATH=": [[3, "python-executable-path"]], "Page orientation": [[99, "page-orientation"]], "Panel": [[231, "panel"], [355, "panel"]], "PaperItem": [[231, "paperitem"], [355, "paperitem"]], "Parallel Computing with MPI": [[35, "parallel-computing-with-mpi"]], "Parallel NEURON simulations 2021-07-13": [[393, "parallel-neuron-simulations-2021-07-13"]], "Parallel Network": [[160, "parallel-network"], [289, "parallel-network"]], "Parallel Transfer": [[160, "parallel-transfer"], [289, "parallel-transfer"]], "Parallel communication in NEURON": [[385, "Parallel-communication-in-NEURON"]], "Parallel simulation conclusion, reproducible randomness, more numerical methods 2021-07-20": [[393, "parallel-simulation-conclusion-reproducible-randomness-more-numerical-methods-2021-07-20"]], "ParallelContext": [[13, "parallelcontext"], [160, "parallelcontext"], [289, "parallelcontext"]], "ParallelNetManager": [[161, "parallelnetmanager"], [290, "parallelnetmanager"]], "Parameter exploration and optimization": [[392, "parameter-exploration-and-optimization"]], "Parameter specification": [[94, "parameter-specification"], [96, "parameter-specification"]], "ParameterRangeLimits": [[129, "parameterrangelimits"], [257, "parameterrangelimits"]], "ParameterRanges": [[134, "parameterranges"], [262, "parameterranges"]], "Parameterized Function": [[227, "parameterized-function"], [351, "parameterized-function"]], "Parameters": [[369, "Parameters"], [370, "Parameters"]], "Parameters Menu": [[133, "parameters-menu"], [261, "parameters-menu"]], "Parameterstovary": [[134, "parameterstovary"], [262, "parameterstovary"]], "Part 1": [[392, "part-1"]], "Part 2": [[392, "part-2"]], "Patch Releases": [[377, "patch-releases"], [378, "patch-releases"]], "Path": [[227, "path"], [351, "path"]], "Path Manipulation": [[216, "path-manipulation"], [340, "path-manipulation"]], "PhasePlane": [[227, "phaseplane"], [351, "phaseplane"]], "Physical System": [[24, "physical-system"], [30, "physical-system"], [31, "physical-system"], [33, "physical-system"], [36, "physical-system"], [36, "id1"], [43, "physical-system"], [44, "physical-system"], [45, "physical-system"]], "Physical system": [[10, "physical-system"], [11, "physical-system"]], "PickVector": [[231, "pickvector"], [355, "pickvector"]], "Pickles": [[388, "Pickles"]], "Pickling objects": [[387, "Pickling-objects"]], "Play": [[227, "play"], [351, "play"]], "Plot": [[129, "plot"], [230, "plot"], [257, "plot"], [354, "plot"], [370, "Plot"]], "Plot it": [[371, "Plot-it"]], "Plot the results": [[382, "Plot-the-results"]], "PlotRange": [[231, "plotrange"], [355, "plotrange"]], "PlotShape": [[235, "plotshape"], [359, "plotshape"]], "PlotShape Window": [[234, "plotshape-window"], [358, "plotshape-window"]], "PlotWhat": [[231, "plotwhat"], [234, "plotwhat"], [355, "plotwhat"], [358, "plotwhat"]], "Plotsms": [[224, "plotsms"], [348, "plotsms"]], "Plotter Control (obsolete)": [[189, "plotter-control-obsolete"]], "Plotting": [[383, "Plotting"]], "Plotting both the dendrite and the soma": [[382, "Plotting-both-the-dendrite-and-the-soma"]], "Point Processes and Artificial Cells": [[153, "point-processes-and-artificial-cells"], [282, "point-processes-and-artificial-cells"]], "PointGroup": [[144, "pointgroup"], [273, "pointgroup"]], "PointManager": [[144, "pointmanager"], [273, "pointmanager"]], "PointProcessGroupManager": [[144, "pointprocessgroupmanager"], [273, "pointprocessgroupmanager"]], "PointProcessLocator": [[238, "pointprocesslocator"], [362, "pointprocesslocator"]], "PointProcessManager": [[144, "pointprocessmanager"], [273, "pointprocessmanager"]], "PointProcesses": [[144, "pointprocesses"], [227, "pointprocesses"], [273, "pointprocesses"], [351, "pointprocesses"]], "Pointer Class": [[207, "pointer-class"], [333, "pointer-class"]], "Pointer-Communication": [[155, "pointer-communication"]], "Pointers": [[212, "pointers"], [336, "pointers"]], "Positioning a window in the layout area": [[99, "positioning-a-window-in-the-layout-area"]], "PostScript": [[231, "postscript"], [355, "postscript"]], "PraxisFit": [[129, "praxisfit"], [257, "praxisfit"]], "Pre-requisites": [[249, "pre-requisites"]], "Predeclared Variables": [[209, "predeclared-variables"]], "Pretty printing": [[53, "pretty-printing"]], "Print": [[231, "print"], [355, "print"]], "Print & File Window Manager": [[231, "print-file-window-manager"], [355, "print-file-window-manager"]], "PrintToFile": [[231, "printtofile"], [355, "printtofile"]], "PrintWindowManager Placement": [[175, "printwindowmanager-placement"], [305, "printwindowmanager-placement"]], "Printf (Formatted Output)": [[190, "printf-formatted-output"], [317, "printf-formatted-output"]], "Printing the contents of the layout area": [[99, "printing-the-contents-of-the-layout-area"]], "Problems and pitfalls": [[96, "problems-and-pitfalls"]], "Procedure interval2() in ocomm.hoc sets cell periods randomly": [[29, "procedure-interval2-in-ocomm-hoc-sets-cell-periods-randomly"]], "Procedures and functions": [[28, "procedures-and-functions"]], "Profiling and performance benchmarking": [[242, "profiling-and-performance-benchmarking"]], "Programmatic Analysis Tools": [[135, "programmatic-analysis-tools"], [263, "programmatic-analysis-tools"]], "Programmatic Model Specification": [[146, "programmatic-model-specification"], [275, "programmatic-model-specification"]], "Programmatic Simulation Control": [[223, "programmatic-simulation-control"], [347, "programmatic-simulation-control"]], "Project Management": [[210, "project-management"], [335, "project-management"]], "Project management time again!": [[96, "project-management-time-again"]], "Project management time!": [[96, "project-management-time"]], "Proxy parameters": [[96, "proxy-parameters"]], "Pseudo-Random Number Generation": [[200, "pseudo-random-number-generation"], [327, "pseudo-random-number-generation"]], "PtrVector": [[208, "ptrvector"], [334, "ptrvector"]], "Publications about NEURON": [[254, "publications-about-neuron"]], "Publications using NEURON": [[255, "publications-using-neuron"]], "Publishing the wheels on Pypi via Azure": [[248, "publishing-the-wheels-on-pypi-via-azure"]], "Publishing the wheels on Pypi via CircleCI": [[248, "publishing-the-wheels-on-pypi-via-circleci"]], "Pushing to DockerHub": [[248, "pushing-to-dockerhub"]], "Put it all together into an MP4": [[63, "put-it-all-together-into-an-mp4"]], "Python RXD tutorials": [[374, "python-rxd-tutorials"]], "Python Support Policy": [[380, "python-support-policy"]], "Python options": [[3, "python-options"]], "Python scripting": [[393, "python-scripting"]], "Python tutorials": [[386, "python-tutorials"]], "Python-specific documentation of discouraged HOC features": [[314, "python-specific-documentation-of-discouraged-hoc-features"]], "Q & A 2021-06-08": [[393, "q-a-2021-06-08"]], "Q & A 2021-06-22": [[393, "q-a-2021-06-22"]], "Q & A part 1 2021-06-15": [[393, "q-a-part-1-2021-06-15"]], "Q & A part 2 2021-06-15": [[393, "q-a-part-2-2021-06-15"]], "Quality Issues with Morphometric Data": [[40, "quality-issues-with-morphometric-data"]], "Quantitative tests of anatomy": [[47, "quantitative-tests-of-anatomy"]], "Questions and answers about sessions and ses files": [[14, "questions-and-answers-about-sessions-and-ses-files"]], "Quick Links": [[140, "quick-links"], [269, "quick-links"]], "Quiet": [[224, "quiet"], [348, "quiet"]], "Quit": [[227, "quit"], [231, "quit"], [351, "quit"], [355, "quit"]], "RANDOM": [[284, "random"]], "RANGE": [[155, "range"], [284, "range"]], "READ": [[155, "read"], [250, "READ"], [284, "read"]], "REFERENCES": [[377, "references"]], "RELEASE MANAGEMENT WITH GIT": [[377, "release-management-with-git"]], "REPRESENTS": [[155, "represents"], [250, "REPRESENTS"], [284, "represents"], [284, "id1"]], "Raising a NEURON error": [[56, "raising-a-neuron-error"]], "Random Class": [[200, "random-class"], [327, "random-class"]], "Random Number Generators: Random123 vs MCellRan4": [[4, "random-number-generators-random123-vs-mcellran4"]], "Randomness in NEURON models": [[100, "randomness-in-neuron-models"]], "RangeVarPlot": [[236, "rangevarplot"], [360, "rangevarplot"]], "Rarely Used Compilation Options": [[139, "rarely-used-compilation-options"], [267, "rarely-used-compilation-options"]], "Rationale": [[154, "rationale"], [283, "rationale"]], "Reaction-Diffusion Exercises": [[41, "reaction-diffusion-exercises"]], "Reaction-diffusion": [[374, null]], "Reaction-diffusion introduction": [[366, "Reaction-diffusion-introduction"]], "Reaction-diffusion simulations": [[390, "reaction-diffusion-simulations"]], "Reaction-diffusion thresholds": [[376, "Reaction-diffusion-thresholds"]], "Reactions": [[370, "Reactions"]], "Read from Terminal and Files": [[191, "read-from-terminal-and-files"], [318, "read-from-terminal-and-files"]], "ReadData": [[134, "readdata"], [262, "readdata"]], "ReadDataFile": [[129, "readdatafile"], [257, "readdatafile"]], "ReadTheDocs setup": [[0, "readthedocs-setup"]], "Reading 3D Data from NEURON": [[166, "reading-3d-data-from-neuron"], [296, "reading-3d-data-from-neuron"]], "Reading a morphometric data file and converting it to a NEURON model": [[86, "reading-a-morphometric-data-file-and-converting-it-to-a-neuron-model"]], "Reading the data": [[366, "Reading-the-data"]], "Readline_ROOT_DIR:PATH=/usr": [[3, "readline-root-dir-path-usr"]], "RealTime": [[224, "realtime"], [348, "realtime"]], "Record states": [[370, "Record-states"]], "Recording": [[382, "Recording"], [383, "Recording"]], "Recording from a single voxel": [[373, "Recording-from-a-single-voxel"]], "Recording synaptic conductance": [[383, "Recording-synaptic-conductance"]], "Recording the simulation": [[28, "recording-the-simulation"]], "Redirect Standard Out": [[190, "redirect-standard-out"], [317, "redirect-standard-out"]], "Redrawing the iclamp Run Fitness Generator": [[96, "redrawing-the-iclamp-run-fitness-generator"]], "Reduce indirection when MOD files use diam": [[53, "reduce-indirection-when-mod-files-use-diam"]], "Reduce the inhibition and demonstrate that synchrony worsens.": [[29, "reduce-the-inhibition-and-demonstrate-that-synchrony-worsens"]], "Reference": [[95, "reference"], [378, "reference"]], "References": [[41, "references"], [89, "references"], [126, "references"]], "Regions": [[369, "Regions"]], "Register Mechanisms": [[60, "register-mechanisms"]], "Related resources": [[292, "related-resources"]], "Release Deprecation": [[377, "release-deprecation"], [378, "release-deprecation"]], "Release Life Cycle: Alpha, Beta, Release Candidate": [[377, "release-life-cycle-alpha-beta-release-candidate"]], "Release Versioning": [[378, "release-versioning"]], "Release wheels": [[248, "release-wheels"]], "Removed Features": [[363, "removed-features"], [363, "id10"]], "Removeparmfromlist": [[134, "removeparmfromlist"], [262, "removeparmfromlist"]], "Repeat until done": [[105, "repeat-until-done"]], "Reporting of results": [[13, "reporting-of-results"]], "Resizing a window in the layout area": [[99, "resizing-a-window-in-the-layout-area"]], "Restricting parameter space": [[94, "restricting-parameter-space"]], "Restricting reactions to a part of a region": [[367, "Restricting-reactions-to-a-part-of-a-region"]], "Retrieve": [[231, "retrieve"], [355, "retrieve"]], "RetrievefromFile": [[227, "retrievefromfile"], [351, "retrievefromfile"]], "Reviewing": [[377, "reviewing"]], "Rewiring the network": [[29, "rewiring-the-network"]], "Role of current amplitude": [[382, "Role-of-current-amplitude"]], "Roll your own GUI": [[28, "roll-your-own-gui"]], "Rotate3D": [[234, "rotate3d"], [358, "rotate3d"]], "Rotation": [[50, "rotation"]], "RoughFit": [[129, "roughfit"], [257, "roughfit"]], "Roughfit": [[134, "roughfit"], [262, "roughfit"]], "RoundView": [[231, "roundview"], [355, "roundview"]], "Rule I: Don\u2019t write a bunch of code (or create a bunch of GUI windows) all at once, and then expect everything to work the first time you try it.": [[239, "rule-i-don-t-write-a-bunch-of-code-or-create-a-bunch-of-gui-windows-all-at-once-and-then-expect-everything-to-work-the-first-time-you-try-it"]], "Rule II: Learn how to debug your own code.": [[239, "rule-ii-learn-how-to-debug-your-own-code"]], "Run Control": [[227, "run-control"], [351, "run-control"]], "Run Fitter": [[227, "run-fitter"], [351, "run-fitter"]], "Run a simulation and plot the input and output spike trains": [[101, "run-a-simulation-and-plot-the-input-and-output-spike-trains"], [102, "run-a-simulation-and-plot-the-input-and-output-spike-trains"]], "Run and visualize the simulation": [[367, "Run-and-visualize-the-simulation"]], "Run integrated tests": [[246, "run-integrated-tests"]], "Run the simulation": [[370, "Run-the-simulation"], [382, "Run-the-simulation"]], "RunControl": [[224, "runcontrol"], [348, "runcontrol"]], "RunFitter": [[134, "runfitter"], [262, "runfitter"]], "Running": [[129, "running"], [134, "running"], [257, "running"], [262, "running"]], "Running GPU benchmarks": [[242, "running-gpu-benchmarks"]], "Running NEURON tests": [[54, "running-neuron-tests"]], "Running Python and HOC scripts": [[381, "running-python-and-hoc-scripts"]], "Running a simulation": [[8, "running-a-simulation"]], "Running and Saving Batch Jobs": [[218, "running-and-saving-batch-jobs"], [342, "running-and-saving-batch-jobs"]], "Running and plotting a simulation": [[383, "Running-and-plotting-a-simulation"]], "Running benchmarks": [[242, "running-benchmarks"]], "Running tests manually": [[54, "running-tests-manually"]], "Runtime-variable field counts": [[53, "runtime-variable-field-counts"]], "SBML Export": [[292, "sbml-export"]], "SEClamp and IClamp just deliver rectangular step waveforms. How can I make them produce an arbitrary waveform, e.g. something that I calculated or recorded from a real cell?": [[76, "seclamp-and-iclamp-just-deliver-rectangular-step-waveforms-how-can-i-make-them-produce-an-arbitrary-waveform-e-g-something-that-i-calculated-or-recorded-from-a-real-cell"]], "SOLVE": [[250, "SOLVE"]], "STATE": [[154, "state"], [250, "STATE"], [283, "state"]], "SUFFIX": [[155, "suffix"], [250, "SUFFIX"], [284, "suffix"]], "Sanitizers": [[242, "sanitizers"]], "Save to File": [[227, "save-to-file"], [351, "save-to-file"]], "SaveAll": [[231, "saveall"], [355, "saveall"]], "SaveRestoreFitParams": [[134, "saverestorefitparams"], [262, "saverestorefitparams"]], "SaveRestoreFunction": [[129, "saverestorefunction"], [257, "saverestorefunction"]], "SaveSelected": [[231, "saveselected"], [355, "saveselected"]], "SaveState": [[225, "savestate"], [349, "savestate"]], "Saving Windows": [[42, "saving-windows"]], "Saving and Retrieving the Experimental Rig": [[45, "saving-and-retrieving-the-experimental-rig"]], "Saving and restoring state": [[292, "saving-and-restoring-state"]], "Saving your work": [[14, "saving-your-work"]], "Scalar Bistable Wave": [[366, "Scalar-Bistable-Wave"]], "Scaling, spines, and reading HOC 2021-07-29": [[393, "scaling-spines-and-reading-hoc-2021-07-29"]], "Scene": [[231, "scene"], [355, "scene"]], "Scene = View": [[355, "scene-view"]], "Scene_equal_View": [[231, "scene-equal-view"]], "ScreenItem": [[231, "screenitem"], [355, "screenitem"]], "Scripting NEURON": [[390, "scripting-neuron"]], "Scripting NEURON basics": [[388, "Scripting-NEURON-basics"]], "Scripting and Morphologies 2021-07-06": [[393, "scripting-and-morphologies-2021-07-06"]], "Scripting, the GUI, and the interpreter": [[119, "scripting-the-gui-and-the-interpreter"]], "Section": [[234, "section"], [358, "section"]], "Section and Segment Selection": [[169, "section-and-segment-selection"], [299, "section-and-segment-selection"]], "SectionBrowser": [[178, "sectionbrowser"], [308, "sectionbrowser"]], "SectionList": [[167, "sectionlist"], [297, "sectionlist"]], "SectionRef": [[168, "sectionref"], [298, "sectionref"]], "See Also": [[81, "see-also"]], "Segfault and crash.": [[242, "segfault-and-crash"]], "Segment": [[314, "segment"]], "Select the source cell": [[37, "select-the-source-cell"]], "Select the synapse on the target cell": [[37, "select-the-synapse-on-the-target-cell"]], "Select the target cell": [[37, "select-the-target-cell"]], "SelectPrinter": [[231, "selectprinter"], [355, "selectprinter"]], "Selecting and Editing a Functional Form": [[94, "selecting-and-editing-a-functional-form"]], "Semantic Versioning": [[377, "semantic-versioning"]], "Separates biology from purely computational concerns": [[126, "separates-biology-from-purely-computational-concerns"]], "Session": [[231, "session"], [355, "session"]], "Session Printing and Saving": [[226, "session-printing-and-saving"], [350, "session-printing-and-saving"]], "Set up a strategy": [[66, "set-up-a-strategy"], [66, "id1"]], "SetView": [[231, "setview"], [355, "setview"]], "Setting up Docker": [[248, "setting-up-docker"]], "Setting up Julia for use with NEURON": [[253, "setting-up-julia-for-use-with-neuron"]], "Setting up Visual Studio Code": [[249, "setting-up-visual-studio-code"]], "Setup NEURON library and imports": [[367, "Setup-NEURON-library-and-imports"], [371, "Setup-NEURON-library-and-imports"]], "Setup recording variables": [[371, "Setup-recording-variables"]], "Setup the model": [[63, "setup-the-model"], [367, "Setup-the-model"], [371, "Setup-the-model"]], "Shape": [[227, "shape"], [237, "shape"], [351, "shape"], [361, "shape"]], "ShapeBrowser": [[238, "shapebrowser"], [362, "shapebrowser"]], "ShapeName": [[227, "shapename"], [351, "shapename"]], "ShapePlot": [[234, "shapeplot"], [358, "shapeplot"]], "ShapeStyle": [[234, "shapestyle"], [358, "shapestyle"]], "Shapeplot": [[227, "shapeplot"], [351, "shapeplot"]], "ShowMechanism": [[145, "showmechanism"], [274, "showmechanism"]], "Signing and Notarization": [[247, "signing-and-notarization"]], "Simple Reaction with Abrupt Change in Reaction Rate": [[366, "Simple-Reaction-with-Abrupt-Change-in-Reaction-Rate"]], "Simplified Workflow": [[241, "simplified-workflow"]], "Simulating": [[383, "Simulating"]], "Simulation": [[28, "simulation"], [30, "simulation"], [31, "simulation"], [32, "simulation"], [32, "id1"], [33, "simulation"], [36, "simulation"], [36, "id3"], [37, "simulation"], [37, "id2"], [44, "simulation"], [45, "simulation"]], "Simulation Control": [[140, "simulation-control"], [269, "simulation-control"]], "Simulation control": [[13, "simulation-control"], [13, "id11"]], "Simulation control and image saving": [[63, "simulation-control-and-image-saving"]], "Simulation control and reporting of results": [[13, "simulation-control-and-reporting-of-results"]], "Simulation parameters": [[13, "simulation-parameters"], [13, "id5"]], "Simulation studies": [[382, "Simulation-studies"]], "Single neuron theory I": [[392, "single-neuron-theory-i"]], "Single neuron theory II": [[392, "single-neuron-theory-ii"]], "SingleRunFit": [[134, "singlerunfit"], [262, "singlerunfit"]], "SingleStep": [[224, "singlestep"], [348, "singlestep"]], "Solving Nonlinear Systems": [[194, "solving-nonlinear-systems"], [321, "solving-nonlinear-systems"]], "Sorting algorithms": [[53, "sorting-algorithms"]], "Source": [[10, "source"], [10, "id3"], [10, "id6"], [13, "source"], [13, "id3"], [13, "id9"]], "Source Code": [[52, "source-code"]], "Source code that demonstrates the problem": [[100, "source-code-that-demonstrates-the-problem"]], "Source code that demonstrates the solution:": [[100, "source-code-that-demonstrates-the-solution"]], "SpacePlot": [[234, "spaceplot"], [358, "spaceplot"]], "Species": [[369, "Species"]], "Specification": [[369, "Specification"]], "Specify biophysics": [[382, "Specify-biophysics"]], "Specifying parameterized variation of biophysical properties": [[68, "specifying-parameterized-variation-of-biophysical-properties"]], "Specifying the domain": [[163, "specifying-the-domain"], [292, "specifying-the-domain"]], "Sphinx Setup": [[55, "sphinx-setup"]], "Stack of sections": [[169, "stack-of-sections"]], "Standard Run Tools": [[227, "standard-run-tools"], [351, "standard-run-tools"]], "Standard intfire implementation (eg IntFire1 from intfire1.mod))": [[29, "standard-intfire-implementation-eg-intfire1-from-intfire1-mod"]], "Starting the CellBuilder": [[14, "starting-the-cellbuilder"]], "Starting the interpreter": [[81, "starting-the-interpreter"]], "State and parameter discontinuities": [[44, "state-and-parameter-discontinuities"]], "StateTransitionEvent": [[164, "statetransitionevent"], [294, "statetransitionevent"]], "Stateaxis": [[227, "stateaxis"], [351, "stateaxis"]], "Statements": [[81, "statements"], [185, "statements"]], "Step 0. Download the data": [[94, "step-0-download-the-data"]], "Step 0:": [[48, "step-0"]], "Step 1. Bring up a CellBuilder": [[66, "step-1-bring-up-a-cellbuilder"]], "Step 1. Bring up a Multiple Run Fitter": [[94, "step-1-bring-up-a-multiple-run-fitter"]], "Step 1. Create an \u201cunoptimized\u201d model": [[96, "step-1-create-an-unoptimized-model"]], "Step 1. Define the types of cells": [[107, "step-1-define-the-types-of-cells"], [108, "step-1-define-the-types-of-cells"]], "Step 1. Set up a SubsetDomainIterator": [[104, "step-1-set-up-a-subsetdomainiterator"]], "Step 1:": [[48, "step-1"]], "Step 1: Get the cell\u2019s anatomy into a CellBuilder": [[67, "step-1-get-the-cell-s-anatomy-into-a-cellbuilder"]], "Step 1: Import the neuron module into Python": [[388, "Step-1:-Import-the-neuron-module-into-Python"]], "Step 2. Create each cell in the network": [[111, "step-2-create-each-cell-in-the-network"], [112, "step-2-create-each-cell-in-the-network"]], "Step 2. Create subsets": [[67, "step-2-create-subsets"]], "Step 2. Load the Experimental Data into the Multiple Run Fitter": [[94, "step-2-load-the-experimental-data-into-the-multiple-run-fitter"]], "Step 2. Set up a current clamp experiment on this model": [[96, "step-2-set-up-a-current-clamp-experiment-on-this-model"]], "Step 2. Specify the model parameter(s) to be varied": [[106, "step-2-specify-the-model-parameter-s-to-be-varied"]], "Step 2. Specify topology": [[66, "step-2-specify-topology"]], "Step 2:": [[48, "step-2"]], "Step 2: Create a cell": [[388, "Step-2:-Create-a-cell"]], "Step 3. Configure a MultipleRunFitter to do a \u201crun fitness\u201d optimization": [[96, "step-3-configure-a-multiplerunfitter-to-do-a-run-fitness-optimization"]], "Step 3. Connect the cells": [[113, "step-3-connect-the-cells"], [114, "step-3-connect-the-cells"], [115, "step-3-connect-the-cells"], [116, "step-3-connect-the-cells"]], "Step 3. Specify and verify the functions that govern the parameters": [[105, "step-3-specify-and-verify-the-functions-that-govern-the-parameters"]], "Step 3. Specify subsets": [[66, "step-3-specify-subsets"]], "Step 3. Specify the function we want to optimize": [[94, "step-3-specify-the-function-we-want-to-optimize"]], "Step 3. Specify the spatial grid": [[67, "step-3-specify-the-spatial-grid"]], "Step 3:": [[48, "step-3"]], "Step 3: Set the cell\u2019s morphological properties": [[388, "Step-3:-Set-the-cell's-morphological-properties"]], "Step 4. Load the Experimental Data into the iclamp Run Fitness Generator": [[96, "step-4-load-the-experimental-data-into-the-iclamp-run-fitness-generator"]], "Step 4. Specify biophysics": [[67, "step-4-specify-biophysics"]], "Step 4. Specify geometry": [[66, "step-4-specify-geometry"]], "Step 4. Specify the parameters that will be adjusted": [[94, "step-4-specify-the-parameters-that-will-be-adjusted"]], "Step 4. Use the model specification": [[121, "step-4-use-the-model-specification"]], "Step 4: Insert ion channels": [[388, "Step-4:-Insert-ion-channels"]], "Step 5. Specify biophysics": [[66, "step-5-specify-biophysics"]], "Step 5. Specify the criteria we want the function to satisfy": [[94, "step-5-specify-the-criteria-we-want-the-function-to-satisfy"]], "Step 5. Specify the parameters that will be adjusted": [[96, "step-5-specify-the-parameters-that-will-be-adjusted"]], "Step 5. Use the model specification": [[67, "step-5-use-the-model-specification"]], "Step 5: Insert a stimulus": [[388, "Step-5:-Insert-a-stimulus"]], "Step 6. Perform the optimization": [[94, "step-6-perform-the-optimization"], [96, "step-6-perform-the-optimization"]], "Step 6. Use the model specification": [[66, "step-6-use-the-model-specification"]], "Step 6: Set up recording variables": [[388, "Step-6:-Set-up-recording-variables"]], "Step 7: Run the simulation": [[388, "Step-7:-Run-the-simulation"]], "Step 8: Plot the results": [[388, "Step-8:-Plot-the-results"]], "Step 9: Saving and loading results": [[388, "Step-9:-Saving-and-loading-results"]], "Step-by-step instructions": [[7, "step-by-step-instructions"]], "Steps": [[129, "steps"], [230, "steps"], [257, "steps"], [354, "steps"]], "Stimulation": [[382, "Stimulation"]], "Stimulators": [[37, "stimulators"]], "Stop": [[224, "stop"], [348, "stop"]], "StopAtNextQuadForm": [[129, "stopatnextquadform"], [257, "stopatnextquadform"]], "StopatnextQuadForm": [[134, "stopatnextquadform"], [262, "stopatnextquadform"]], "Storing addresses of RANGE variables": [[53, "storing-addresses-of-range-variables"]], "String Parsing (sscanf)": [[213, "string-parsing-sscanf"], [337, "string-parsing-sscanf"]], "StringFunctions (String Manipulation Class)": [[214, "stringfunctions-string-manipulation-class"], [338, "stringfunctions-string-manipulation-class"]], "Strings": [[28, "strings"], [215, "strings"], [339, "strings"]], "Style Settings": [[175, "style-settings"], [305, "style-settings"]], "Stylized specification of geometry": [[166, "stylized-specification-of-geometry"], [296, "stylized-specification-of-geometry"]], "SubWorld": [[160, "subworld"], [289, "subworld"]], "Summary": [[89, "summary"]], "Summary of migrated data structures": [[53, "summary-of-migrated-data-structures"]], "SymChooser": [[179, "symchooser"], [309, "symchooser"]], "Synchronization measures": [[29, "synchronization-measures"]], "Synchronization with segments": [[163, "synchronization-with-segments"], [292, "synchronization-with-segments"]], "Syntax": [[77, "syntax"], [77, "id1"], [81, "syntax"]], "System Calls": [[216, "system-calls"], [340, "system-calls"]], "TABLE": [[154, "table"], [250, "TABLE"], [283, "table"]], "TABLE Usage With GPU Execution": [[4, "table-usage-with-gpu-execution"]], "THREADSAFE": [[155, "threadsafe"], [250, "THREADSAFE"], [284, "threadsafe"]], "TITLE": [[154, "title"], [283, "title"]], "TO": [[250, "TO"]], "Test MPI and Parallel NEURON": [[385, "Test-MPI-and-Parallel-NEURON"]], "Test the MRF": [[94, "test-the-mrf"], [96, "test-the-mrf"]], "Test the model": [[385, "Test-the-model"]], "Test the network": [[384, "Test-the-network"]], "Testing GPU functionality": [[54, "testing-gpu-functionality"]], "Testing on BB5": [[248, "testing-on-bb5"]], "Testing the Generator": [[94, "testing-the-generator"]], "Testing the Run Fitness Generator": [[96, "testing-the-run-fitness-generator"]], "Testing the proxy parameters": [[96, "testing-the-proxy-parameters"]], "Testing the wheels": [[248, "testing-the-wheels"]], "TextEditor": [[180, "texteditor"], [310, "texteditor"]], "The Frequency Tool": [[25, "the-frequency-tool"]], "The NEURON Simulator": [[240, "the-neuron-simulator"]], "The Path Tool": [[25, "the-path-tool"]], "The Print & File Manager": [[99, "the-print-file-manager"]], "The Print & File Window Manager (PFWM)": [[42, "the-print-file-window-manager-pfwm"]], "The Python Debugger: pdb": [[239, "the-python-debugger-pdb"]], "The Shape Tool": [[25, "the-shape-tool"]], "The Window Group Manager": [[103, "the-window-group-manager"], [124, "the-window-group-manager"]], "The automatically generated hoc code": [[32, "the-automatically-generated-hoc-code"], [37, "the-automatically-generated-hoc-code"]], "The cell and the electrical measurements": [[96, "the-cell-and-the-electrical-measurements"]], "The conceptual model": [[95, "the-conceptual-model"]], "The exercise": [[43, "the-exercise"]], "The graphical user interface": [[126, "the-graphical-user-interface"]], "The installer is missing some files (includes, libraries, etc.)": [[249, "the-installer-is-missing-some-files-includes-libraries-etc"]], "The interpreter in $NEURONHOME/bin/$CPU": [[81, "the-interpreter-in-neuronhome-bin-cpu"]], "The interpreters": [[126, "the-interpreters"]], "The log(A) vs x tool": [[25, "the-log-a-vs-x-tool"]], "The model cell": [[10, "the-model-cell"], [11, "the-model-cell"]], "The modeling experiment": [[127, "the-modeling-experiment"]], "The problem": [[96, "the-problem"], [100, "the-problem"]], "The reaction scheme": [[95, "the-reaction-scheme"]], "The role of nseg": [[382, "The-role-of-nseg"]], "The rxd.Reaction and its localization": [[367, "The-rxd.Reaction-and-its-localization"]], "The rxd.Region": [[367, "The-rxd.Region"]], "The rxd.Species": [[367, "The-rxd.Species"]], "The solution": [[100, "the-solution"]], "The stand-alone interpreter": [[81, "the-stand-alone-interpreter"]], "The system": [[127, "the-system"]], "The tutorials:": [[65, null], [93, null]], "Things to do": [[10, "things-to-do"], [11, "things-to-do"]], "Thread Safe MOD Files": [[4, "thread-safe-mod-files"]], "TimePlot": [[234, "timeplot"], [358, "timeplot"]], "Timer": [[217, "timer"], [341, "timer"]], "Timing": [[216, "timing"], [340, "timing"]], "Tips and tools for MSWindows": [[127, "tips-and-tools-for-mswindows"]], "Tissue characteristics": [[373, "Tissue-characteristics"]], "To check if a NEURON object is wrapping a PyObject": [[56, "to-check-if-a-neuron-object-is-wrapping-a-pyobject"]], "To check if a PyObject is a number": [[56, "to-check-if-a-pyobject-is-a-number"]], "To check if a PyObject is wrapping a NEURON object": [[56, "to-check-if-a-pyobject-is-wrapping-a-neuron-object"]], "To dereference a NEURON Object": [[56, "to-dereference-a-neuron-object"]], "To encapsulate a NEURON Object in a PyObject": [[56, "to-encapsulate-a-neuron-object-in-a-pyobject"]], "To encapsule a PyObject in a NEURON Object": [[56, "to-encapsule-a-pyobject-in-a-neuron-object"]], "To learn how to use NMODL to add new mechanisms to NEURON:": [[83, "to-learn-how-to-use-nmodl-to-add-new-mechanisms-to-neuron"]], "To learn the basics about using NEURON:": [[83, "to-learn-the-basics-about-using-neuron"]], "To reference a NEURON Object": [[56, "to-reference-a-neuron-object"]], "Tools": [[227, "tools"], [351, "tools"]], "Topology": [[165, "topology"], [295, "topology"]], "Training videos": [[391, "training-videos"]], "Transient cache": [[53, "transient-cache"]], "Translate": [[231, "translate"], [355, "translate"]], "Tray": [[231, "tray"], [355, "tray"]], "Troubleshooting": [[249, "troubleshooting"]], "Tstop": [[224, "tstop"], [348, "tstop"]], "Tutorial 1 : Fitting a function to data": [[94, "tutorial-1-fitting-a-function-to-data"]], "Tutorial 1: Making Networks of Artificial Neurons": [[118, "tutorial-1-making-networks-of-artificial-neurons"]], "Tutorial 2 : Fitting a model to data": [[96, "tutorial-2-fitting-a-model-to-data"]], "Tutorial 2 : Making Hybrid Nets": [[117, "tutorial-2-making-hybrid-nets"]], "Tutorial 2: spinal cord": [[392, "tutorial-2-spinal-cord"]], "Tutorial 3": [[392, "tutorial-3"]], "Tutorials 1 and 2: Spinal cord": [[392, "tutorials-1-and-2-spinal-cord"]], "Tutorials 3-5": [[392, "tutorials-3-5"]], "Tutorials 6 and 9": [[392, "tutorials-6-and-9"]], "UNITS": [[154, "units"], [250, "UNITS"], [283, "units"]], "UNITS Tutorial": [[120, "units-tutorial"]], "USEION": [[155, "useion"], [250, "USEION"], [284, "useion"]], "Under macOS, how do I compile mod files or start NEURON?": [[122, "under-macos-how-do-i-compile-mod-files-or-start-neuron"]], "Ungrouped": [[227, "ungrouped"], [351, "ungrouped"]], "Units": [[370, "Units"]], "Units for KINETIC blocks": [[119, "units-for-kinetic-blocks"], [120, "units-for-kinetic-blocks"]], "Units in NEURON models": [[119, "units-in-neuron-models"], [120, "units-in-neuron-models"]], "Units used in NEURON": [[119, "units-used-in-neuron"]], "Units within NMODL files": [[119, "units-within-nmodl-files"]], "Unsupported Features": [[4, "unsupported-features"]], "Upgrade Steps": [[1, "upgrade-steps"], [1, "id22"], [1, "id35"]], "Usage": [[10, "usage"], [10, "id2"], [10, "id5"], [13, "usage"], [13, "id2"], [13, "id8"], [154, "usage"], [283, "usage"]], "User-extendable library of biophysical mechanisms": [[126, "user-extendable-library-of-biophysical-mechanisms"]], "Usevariabledt": [[227, "usevariabledt"], [351, "usevariabledt"]], "Using Model View to Discover What\u2019s in a Model": [[46, "using-model-view-to-discover-what-s-in-a-model"]], "Using ModelDB with NEURON": [[46, "using-modeldb-with-neuron"]], "Using NEURON on the Mac": [[122, "using-neuron-on-the-mac"]], "Using NEURON\u2019s GUI to build and simulate cells": [[390, "using-neuron-s-gui-to-build-and-simulate-cells"]], "Using NEURON\u2019s Optimization Tools": [[93, "using-neuron-s-optimization-tools"]], "Using NMODL files": [[48, "using-nmodl-files"]], "Using NMODL to add new biophysical mechanisms": [[390, "using-nmodl-to-add-new-biophysical-mechanisms"]], "Using NMODL to add new mechanisms to NEURON": [[82, "using-nmodl-to-add-new-mechanisms-to-neuron"]], "Using NSG:": [[49, "using-nsg"]], "Using Plot what? to find names": [[80, "using-plot-what-to-find-names"]], "Using Python to Examine What\u2019s in the Model": [[46, "using-python-to-examine-what-s-in-the-model"]], "Using Session Files for Saving and Retrieving Windows": [[103, "using-session-files-for-saving-and-retrieving-windows"], [124, "using-session-files-for-saving-and-retrieving-windows"]], "Using bokeh": [[388, "Using-bokeh"]], "Using features of NEURON\u2019s graph windows": [[127, "using-features-of-neuron-s-graph-windows"]], "Using h.distance:": [[368, "Using-h.distance:"]], "Using matplotlib": [[388, "Using-matplotlib"]], "Using position:": [[368, "Using-position:"]], "Using resources from ModelDB and NeuroMorpho.Org": [[390, "using-resources-from-modeldb-and-neuromorpho-org"]], "Using the Cell Builder GUI": [[65, "using-the-cell-builder-gui"]], "Using the CellBuilder": [[14, "using-the-cellbuilder"], [45, "using-the-cellbuilder"]], "Using the Import3D GUI": [[86, "using-the-import3d-gui"]], "Using the Network Builder": [[90, "using-the-network-builder"]], "Using the Neuroscience Gateway (NSG) portal": [[49, "using-the-neuroscience-gateway-nsg-portal"]], "Using the computational model": [[24, "using-the-computational-model"], [30, "using-the-computational-model"], [31, "using-the-computational-model"]], "Using the d_lambda Rule": [[125, "using-the-d-lambda-rule"]], "Using the docker image": [[248, "using-the-docker-image"]], "Using the proxy parameters": [[96, "using-the-proxy-parameters"]], "Using the representation of the biological properties": [[45, "using-the-representation-of-the-biological-properties"]], "Using \u201cContinuous Create\u201d": [[66, "using-continuous-create"]], "Using \u201cPlot what?\u201d to Specify a Variable to be plotted": [[123, "using-plot-what-to-specify-a-variable-to-be-plotted"]], "Utilities": [[210, "utilities"], [335, "utilities"]], "VALENCE": [[155, "valence"], [250, "VALENCE"], [284, "valence"]], "VERBATIM": [[155, "verbatim"], [250, "VERBATIM"], [252, "verbatim"], [284, "verbatim"]], "VERSIONING SCHEMES": [[377, "versioning-schemes"]], "Valgrind": [[242, "valgrind"]], "Valgrind + gdb": [[242, "valgrind-gdb"]], "ValueEditor": [[231, "valueeditor"], [355, "valueeditor"]], "ValueFieldEditor": [[181, "valuefieldeditor"], [311, "valuefieldeditor"]], "Variable Step Control": [[227, "variable-step-control"], [351, "variable-step-control"]], "VariableScale": [[234, "variablescale"], [358, "variablescale"]], "Variables": [[81, "variables"]], "Variables that drive PyPI upload": [[248, "variables-that-drive-pypi-upload"]], "Variables: Strings, numbers, and dynamic type casting": [[387, "Variables:-Strings,-numbers,-and-dynamic-type-casting"]], "Variabletofit": [[134, "variabletofit"], [262, "variabletofit"]], "Varying initial concentrations and parameters": [[365, "Varying-initial-concentrations-and-parameters"]], "VecWrap": [[221, "vecwrap"], [345, "vecwrap"]], "Vector": [[28, "vector"], [201, "vector"], [227, "vector"], [328, "vector"], [351, "vector"]], "VectorMovie": [[227, "vectormovie"], [351, "vectormovie"]], "VectorPlay": [[221, "vectorplay"], [345, "vectorplay"]], "Versioning Scheme": [[378, "versioning-scheme"]], "View = Plot": [[355, "view-plot"]], "ViewAxis": [[231, "viewaxis"], [355, "viewaxis"]], "ViewBox": [[231, "viewbox"], [355, "viewbox"]], "View_equal_Plot": [[231, "view-equal-plot"]], "Viewers": [[144, "viewers"], [227, "viewers"], [273, "viewers"], [351, "viewers"]], "Viewing (and changing) parameter values": [[94, "viewing-and-changing-parameter-values"], [96, "viewing-and-changing-parameter-values"]], "Virtual environment": [[0, "virtual-environment"]], "VirtualScreen": [[231, "virtualscreen"], [355, "virtualscreen"]], "Visualization": [[140, "visualization"], [269, "visualization"]], "Voltageaxis": [[227, "voltageaxis"], [351, "voltageaxis"]], "WATCH": [[154, "watch"], [283, "watch"]], "WHILE": [[154, "while"], [283, "while"]], "WITH": [[250, "WITH"]], "WRITE": [[155, "write"], [250, "WRITE"], [284, "write"]], "WatchTheFit": [[129, "watchthefit"], [257, "watchthefit"]], "We need a tool for optimizing a function.": [[94, "we-need-a-tool-for-optimizing-a-function"]], "We need a tool to perform a \u201crun fitness\u201d optimization.": [[96, "we-need-a-tool-to-perform-a-run-fitness-optimization"]], "We need an Import3D tool.": [[86, "we-need-an-import3d-tool"]], "We need the GUI tool for optimization problems.": [[94, "we-need-the-gui-tool-for-optimization-problems"]], "We need to choose a file to read.": [[86, "we-need-to-choose-a-file-to-read"]], "We need to load our data into the Function Fitness Generator.": [[94, "we-need-to-load-our-data-into-the-function-fitness-generator"]], "We need to see this Function Fitness Generator.": [[94, "we-need-to-see-this-function-fitness-generator"]], "We need to see this Run Fitness Generator.": [[96, "we-need-to-see-this-run-fitness-generator"]], "What about dirty data?": [[96, "what-about-dirty-data"]], "What about input resistance?": [[96, "what-about-input-resistance"]], "What can go wrong, and how to fix it": [[42, "what-can-go-wrong-and-how-to-fix-it"], [103, "what-can-go-wrong-and-how-to-fix-it"], [124, "what-can-go-wrong-and-how-to-fix-it"]], "What is NEURON": [[126, "what-is-neuron"]], "What is NEURON?": [[388, "What-is-NEURON?"]], "What is a ses (session) file? Can I edit it?": [[76, "what-is-a-ses-session-file-can-i-edit-it"]], "What is a session?": [[42, "what-is-a-session"], [103, "what-is-a-session"], [124, "what-is-a-session"]], "What is the difference between SEClamp and VClamp, and which should I use?": [[76, "what-is-the-difference-between-seclamp-and-vclamp-and-which-should-i-use"]], "What units does NEURON use for current, concentration, etc.?": [[76, "what-units-does-neuron-use-for-current-concentration-etc"]], "What\u2019s New": [[1, "what-s-new"], [1, "id3"], [1, "id6"], [1, "id10"], [1, "id14"], [1, "id18"], [1, "id26"], [1, "id30"]], "What\u2019s a good stretegy for specifying nseg?": [[76, "what-s-a-good-stretegy-for-specifying-nseg"]], "What\u2019s all this, then?": [[25, "what-s-all-this-then"]], "What\u2019s going on": [[80, "what-s-going-on"]], "What\u2019s in a ses file": [[42, "what-s-in-a-ses-file"], [103, "what-s-in-a-ses-file"], [124, "what-s-in-a-ses-file"]], "What\u2019s the best way to learn how to use NEURON?": [[76, "what-s-the-best-way-to-learn-how-to-use-neuron"]], "When (and how) to save all windows to a ses file": [[42, "when-and-how-to-save-all-windows-to-a-ses-file"]], "When (and how) to save selected windows": [[42, "when-and-how-to-save-selected-windows"]], "When I type a new value into a numeric field, it doesn\u2019t seem to have any effect.": [[76, "when-i-type-a-new-value-into-a-numeric-field-it-doesn-t-seem-to-have-any-effect"]], "When you\u2019re done": [[50, "when-you-re-done"]], "Where": [[366, "Where"]], "Where can I find examples of mod files?": [[76, "where-can-i-find-examples-of-mod-files"]], "Who": [[366, "Who"]], "WholeScene": [[231, "wholescene"], [355, "wholescene"]], "Why can\u2019t NEURON read the text file (or hoc file) that I created?": [[76, "why-can-t-neuron-read-the-text-file-or-hoc-file-that-i-created"]], "Why is it called \u201cMultiple Run Fitter,\u201d and what does it really do?": [[93, "why-is-it-called-multiple-run-fitter-and-what-does-it-really-do"]], "Why should I use an odd value for nseg?": [[76, "why-should-i-use-an-odd-value-for-nseg"]], "Widgets": [[182, "widgets"]], "Window": [[227, "window"], [351, "window"]], "WindowTitlesPrinted": [[231, "windowtitlesprinted"], [355, "windowtitlesprinted"]], "Windows": [[246, "windows"]], "Windows CI has a new build failure without any code change": [[249, "windows-ci-has-a-new-build-failure-without-any-code-change"]], "Windows Subsystem for Linux (WSL) Python Wheel": [[246, "windows-subsystem-for-linux-wsl-python-wheel"]], "Windows build": [[249, "windows-build"]], "Workflow Code Paths": [[60, "workflow-code-paths"]], "Working with Morphometric Data": [[47, "working-with-morphometric-data"]], "Working with Object and PyObject": [[56, "working-with-object-and-pyobject"]], "Working with PostScript and idraw figures": [[127, "working-with-postscript-and-idraw-figures"]], "Working with Shape Plots": [[50, "working-with-shape-plots"]], "Working with familiar idioms": [[126, "working-with-familiar-idioms"]], "Xexpr": [[230, "xexpr"], [354, "xexpr"]], "Yexpr": [[129, "yexpr"], [257, "yexpr"]], "ZoomIn10": [[231, "zoomin10"], [355, "zoomin10"]], "ZoomInOut": [[231, "zoominout"], [355, "zoominout"]], "ZoomOut10": [[231, "zoomout10"], [355, "zoomout10"]], "Zooming in and out": [[86, "zooming-in-and-out"]], "association.hoc test failed": [[249, "association-hoc-test-failed"]], "begintemplate": [[205, "begintemplate"]], "bokeh 3 seems to break docs notebooks": [[61, "bokeh-3-seems-to-break-docs-notebooks"]], "celsius": [[227, "celsius"], [351, "celsius"]], "code-executing": [[170, "code-executing"], [300, "code-executing"]], "code-loading": [[170, "code-loading"], [300, "code-loading"]], "comments": [[185, "comments"]], "continued": [[116, "continued"]], "do not check import of next line": [[61, "do-not-check-import-of-next-line"], [61, "id1"]], "dt": [[224, "dt"], [348, "dt"]], "endtemplate": [[205, "endtemplate"]], "external": [[205, "external"]], "func": [[185, "func"]], "globalRa": [[227, "globalra"], [351, "globalra"]], "halfgap.mod": [[38, "halfgap-mod"]], "idraw and LaTeX": [[127, "idraw-and-latex"]], "initbatpar.hoc": [[11, "initbatpar-hoc"]], "initbatpar.py": [[10, "initbatpar-py"], [13, "initbatpar-py"]], "initbatser.hoc": [[11, "initbatser-hoc"]], "initbatser.py": [[10, "initbatser-py"], [13, "initbatser-py"]], "initonerun.hoc": [[11, "initonerun-hoc"]], "initonerun.py": [[10, "initonerun-py"], [13, "initonerun-py"]], "iterator": [[185, "iterator"]], "ivdialog": [[210, "ivdialog"], [335, "ivdialog"]], "macOS": [[248, "macos"]], "macOS wheels": [[248, "macos-wheels"]], "mcell_ran4": [[198, "mcell-ran4"], [325, "mcell-ran4"]], "new": [[205, "new"]], "obfunc": [[185, "obfunc"]], "objectvar": [[205, "objectvar"]], "objref": [[205, "objref"]], "prjnrnci": [[210, "prjnrnci"], [335, "prjnrnci"]], "prjnrncmp": [[210, "prjnrncmp"], [335, "prjnrncmp"]], "prjnrnco": [[210, "prjnrnco"], [335, "prjnrnco"]], "prjnrninit": [[210, "prjnrninit"], [335, "prjnrninit"]], "prjnrnpr": [[210, "prjnrnpr"], [335, "prjnrnpr"]], "proc": [[185, "proc"]], "public": [[205, "public"]], "recentdir": [[227, "recentdir"], [351, "recentdir"]], "savesession": [[227, "savesession"], [351, "savesession"]], "sec= for functions": [[299, "sec-for-functions"]], "setup.py": [[59, "setup-py"]], "setuptools": [[59, "setuptools"]], "singlecompartment": [[227, "singlecompartment"], [351, "singlecompartment"]], "t": [[224, "t"], [348, "t"]], "workingdir": [[227, "workingdir"], [351, "workingdir"]], "\u201cExtra credit\u201d problem": [[94, "extra-credit-problem"]], "\u201cSpecial credit\u201d Exercise": [[24, "special-credit-exercise"]]}, "docnames": ["README", "changelog", "cmake_doc/index", "cmake_doc/options", "coreneuron/compatibility", "coreneuron/examples", "coreneuron/index", "coreneuron/installation", "coreneuron/running-a-simulation", "courses/artificial_cells_neuron", "courses/batch_runs_bulletin_board_parallelization", "courses/batch_runs_with_bulletin_board", "courses/building_and_labeling_a_two_electrod", "courses/bulletin_board_walkthrough", "courses/cellbuilder_overview_and_hints", "courses/code/cell.ho", "courses/code/initbatpar.ho", "courses/code/initbatser.ho", "courses/code/initonerun.ho", "courses/code/initplotfi.ho", "courses/code/net1run.hoc", "courses/code/net1spec.ho", "courses/code/net2spec.ho", "courses/code/test0.hoc", "courses/custom-initialization", "courses/electrotonic_analysis", "courses/exercises2018", "courses/hints_for_inhomogeneous_channel_dist", "courses/hoc_exercises", "courses/hopfield_brody_network_in_python", "courses/interactive_modeling", "courses/intro_to_gui", "courses/intro_to_the_network_builder", "courses/introduction_to_the_linear_circuit", "courses/managing_models_on_the_fly", "courses/mpi_parallelization", "courses/multithread_parallelization", "courses/network_ready_cells_from_the_cellb", "courses/neuron_scripting_exercises", "courses/numerical-methods-exercises", "courses/quality_issues_with_morphometric", "courses/rxd_exercises", "courses/saving_windows", "courses/specifying_inhomogeneous_channel_dis", "courses/state_and_parameter_discontinuities", "courses/the_cellbuilder", "courses/using_modeldb_and_modelview", "courses/using_morphometric_data", "courses/using_nmodl_files", "courses/using_nsg_portal", "courses/working_with_shape_plots", "dealing_simulations_generate_lot", "dev/HOCInterpreter/HOCInterpreter", "dev/data-structures", "dev/gpu-testing", "dev/hocdomain-sphinx", "dev/how-do-i/how-do-i", "dev/index", "dev/morphology/morphology", "dev/setuptools/setuptools", "dev/workflow-code-paths", "docs_requirements", "doxygen", "example_of_generating_movie", "guide/bio_faq", "guide/cellbuilder", "guide/cellbuilder1", "guide/cellbuilder2", "guide/cellbuilder3", "guide/data/finithnd1.hoc", "guide/data/idraw-readme", "guide/data/readme", "guide/data/solution.ses", "guide/differences_between_idraw_and_core", "guide/example_hybrid_network", "guide/example_of_simple_network", "guide/faq", "guide/finitialize_handler", "guide/fixing_funny_axes", "guide/heres_how_delete_v5", "guide/heres_how_page", "guide/hoc_chapter_11_old_reference", "guide/how_to_get_started", "guide/how_to_get_started_with_neuron", "guide/how_to_move_labels", "guide/how_to_translate_view", "guide/import3d", "guide/index", "guide/introduction_to_network_construction", "guide/modelview_compact_display", "guide/network_builder_tutorials", "guide/nmodls_built_in_functions", "guide/nrn_defaults", "guide/optimization", "guide/optimization1", "guide/optimization1a", "guide/optimization2", "guide/plot_what", "guide/porting_mechanisms_to_cpp", "guide/print_file_manager", "guide/randomness", "guide/run_simulation_plot_input_output", "guide/run_simulation_plot_input_output2", "guide/saveses", "guide/set_up_a_subsetdomainiterator", "guide/specify_and_verify_the_functions", "guide/specify_the_model_parameters_varied", "guide/step_1_define_type_cell", "guide/step_1_define_type_of_cell", "guide/step_1_define_type_of_cell2", "guide/step_1_define_type_of_cell3", "guide/step_2_create_each_cell", "guide/step_2_create_network_cell", "guide/step_3_connect_cells", "guide/step_3_connect_cells_continued", "guide/step_3_connect_the_cells", "guide/step_3_connect_the_cells_continued", "guide/tutorial_2_hybrid_nets", "guide/tutorial_artificial_neurons", "guide/units", "guide/units_tutorial", "guide/use_the_model_specification", "guide/using_neuron_on_the_mac", "guide/using_plotwhat_to_specify_a_variable", "guide/using_session_files_for_saving", "guide/using_the_d_lambda_rule", "guide/what_is_neuron", "guide/working_with_postscript_and_idraw", "hoc/analysis/guitools", "hoc/analysis/guitools/funfit", "hoc/analysis/guitools/impedancetools", "hoc/analysis/guitools/impedanx", "hoc/analysis/guitools/impratio", "hoc/analysis/guitools/mulfit", "hoc/analysis/guitools/runfit", "hoc/analysis/programmatic", "hoc/analysis/programmatic/impedance", "hoc/analysis/programmatic/misc", "hoc/analysis/programmatic/optimization", "hoc/compilationoptions", "hoc/index", "hoc/modelspec/guitools", "hoc/modelspec/guitools/cellbuilder", "hoc/modelspec/guitools/inserter", "hoc/modelspec/guitools/pointman", "hoc/modelspec/guitools/showmech", "hoc/modelspec/programmatic", "hoc/modelspec/programmatic/electrod", "hoc/modelspec/programmatic/hocmech", "hoc/modelspec/programmatic/ions", "hoc/modelspec/programmatic/kschan", "hoc/modelspec/programmatic/linmod", "hoc/modelspec/programmatic/mechanisms", "hoc/modelspec/programmatic/mechanisms/mech", "hoc/modelspec/programmatic/mechanisms/nmodl", "hoc/modelspec/programmatic/mechanisms/nmodl2", "hoc/modelspec/programmatic/mechtype", "hoc/modelspec/programmatic/network", "hoc/modelspec/programmatic/network/lyttonmpi", "hoc/modelspec/programmatic/network/netcon", "hoc/modelspec/programmatic/network/parcon", "hoc/modelspec/programmatic/network/parnet", "hoc/modelspec/programmatic/obsoletestimuli", "hoc/modelspec/programmatic/rxd", "hoc/modelspec/programmatic/ste", "hoc/modelspec/programmatic/topology", "hoc/modelspec/programmatic/topology/geometry", "hoc/modelspec/programmatic/topology/seclist", "hoc/modelspec/programmatic/topology/secref", "hoc/modelspec/programmatic/topology/secspec", "hoc/programming/dynamiccode", "hoc/programming/errors", "hoc/programming/gui/dialog", "hoc/programming/gui/layout", "hoc/programming/gui/list", "hoc/programming/gui/misc", "hoc/programming/gui/nfunc", "hoc/programming/gui/pwman", "hoc/programming/gui/secbrows", "hoc/programming/gui/symchooser", "hoc/programming/gui/texteditor", "hoc/programming/gui/vfe", "hoc/programming/gui/widgets", "hoc/programming/guidesign", "hoc/programming/hoc", "hoc/programming/hocsyntax", "hoc/programming/internals", "hoc/programming/io", "hoc/programming/io/file", "hoc/programming/io/plotters", "hoc/programming/io/printf", "hoc/programming/io/read", "hoc/programming/io/ropen", "hoc/programming/math/constants", "hoc/programming/math/eqnsolve", "hoc/programming/math/functions", "hoc/programming/math/guimath", "hoc/programming/math/matrix", "hoc/programming/math/mcran4", "hoc/programming/math/misc", "hoc/programming/math/random", "hoc/programming/math/vector", "hoc/programming/mathematics", "hoc/programming/mechstan", "hoc/programming/ockeywor", "hoc/programming/oop", "hoc/programming/pointers/misc", "hoc/programming/pointers/pointer", "hoc/programming/pointers/ptrvector", "hoc/programming/predec", "hoc/programming/projectmanagement", "hoc/programming/python-from-hoc", "hoc/programming/references", "hoc/programming/sscanf", "hoc/programming/strfun", "hoc/programming/strings", "hoc/programming/system", "hoc/programming/timer", "hoc/simctrl/batch", "hoc/simctrl/bbsavestate", "hoc/simctrl/cvode", "hoc/simctrl/family", "hoc/simctrl/interpretermanagement", "hoc/simctrl/programmatic", "hoc/simctrl/runctrl", "hoc/simctrl/savstate", "hoc/simctrl/sessionsave", "hoc/simctrl/stdrun", "hoc/visualization/glyph", "hoc/visualization/graph", "hoc/visualization/grapher", "hoc/visualization/gui", "hoc/visualization/notify", "hoc/visualization/oldgrph", "hoc/visualization/plotshape", "hoc/visualization/plotshapeclass", "hoc/visualization/rvarplt", "hoc/visualization/shape", "hoc/visualization/shapebox", "how_to_develop_and_debug_code", "index", "install/code_coverage", "install/debug", "install/developer", "install/formatting", "install/install", "install/install_instructions", "install/mac_pkg", "install/python_wheels", "install/windows", "nmodl/NMODL_language", "nmodl/index", "nmodl/verbatim", "otherscripting", "publications", "publications-using-neuron", "python/analysis/guitools", "python/analysis/guitools/funfit", "python/analysis/guitools/impedancetools", "python/analysis/guitools/impedanx", "python/analysis/guitools/impratio", "python/analysis/guitools/mulfit", "python/analysis/guitools/runfit", "python/analysis/programmatic", "python/analysis/programmatic/impedance", "python/analysis/programmatic/misc", "python/analysis/programmatic/optimization", "python/compilationoptions", "python/envvariables", "python/index", "python/modelspec/guitools", "python/modelspec/guitools/cellbuilder", "python/modelspec/guitools/inserter", "python/modelspec/guitools/pointman", "python/modelspec/guitools/showmech", "python/modelspec/programmatic", "python/modelspec/programmatic/electrod", "python/modelspec/programmatic/hocmech", "python/modelspec/programmatic/ions", "python/modelspec/programmatic/kschan", "python/modelspec/programmatic/linmod", "python/modelspec/programmatic/mechanisms", "python/modelspec/programmatic/mechanisms/mech", "python/modelspec/programmatic/mechanisms/nmodl", "python/modelspec/programmatic/mechanisms/nmodl2", "python/modelspec/programmatic/mechtype", "python/modelspec/programmatic/network", "python/modelspec/programmatic/network/lyttonmpi", "python/modelspec/programmatic/network/netcon", "python/modelspec/programmatic/network/parcon", "python/modelspec/programmatic/network/parnet", "python/modelspec/programmatic/obsoletestimuli", "python/modelspec/programmatic/rxd", "python/modelspec/programmatic/rxdmath", "python/modelspec/programmatic/ste", "python/modelspec/programmatic/topology", "python/modelspec/programmatic/topology/geometry", "python/modelspec/programmatic/topology/seclist", "python/modelspec/programmatic/topology/secref", "python/modelspec/programmatic/topology/secspec", "python/programming/dynamiccode", "python/programming/errors", "python/programming/gui/dialog", "python/programming/gui/layout", "python/programming/gui/list", "python/programming/gui/misc", "python/programming/gui/nfunc", "python/programming/gui/pwman", "python/programming/gui/secbrows", "python/programming/gui/symchooser", "python/programming/gui/texteditor", "python/programming/gui/vfe", "python/programming/gui/widgets", "python/programming/guidesign", "python/programming/hoc-from-python", "python/programming/internals", "python/programming/io/file", "python/programming/io/printf", "python/programming/io/read", "python/programming/io/ropen", "python/programming/math/constants", "python/programming/math/eqnsolve", "python/programming/math/functions", "python/programming/math/guimath", "python/programming/math/matrix", "python/programming/math/mcran4", "python/programming/math/misc", "python/programming/math/random", "python/programming/math/vector", "python/programming/mathematics", "python/programming/mechstan", "python/programming/neuron_classes", "python/programming/pointers/misc", "python/programming/pointers/pointer", "python/programming/pointers/ptrvector", "python/programming/projectmanagement", "python/programming/references", "python/programming/sscanf", "python/programming/strfun", "python/programming/strings", "python/programming/system", "python/programming/timer", "python/simctrl/batch", "python/simctrl/bbsavestate", "python/simctrl/cvode", "python/simctrl/family", "python/simctrl/interpretermanagement", "python/simctrl/programmatic", "python/simctrl/runctrl", "python/simctrl/savstate", "python/simctrl/sessionsave", "python/simctrl/stdrun", "python/visualization/glyph", "python/visualization/graph", "python/visualization/grapher", "python/visualization/gui", "python/visualization/notify", "python/visualization/oldgrph", "python/visualization/plotshape", "python/visualization/plotshapeclass", "python/visualization/rvarplt", "python/visualization/shape", "python/visualization/shapebox", "removed_features", "rst_substitutions", "rxd-tutorials/Changing initial conditions and parameters", "rxd-tutorials/Reaction-Diffusion tutorial", "rxd-tutorials/Restricting reactions to certain sections", "rxd-tutorials/basic-initialization", "rxd-tutorials/calcium waves", "rxd-tutorials/circadian", "rxd-tutorials/combining currents from mod files with rxd", "rxd-tutorials/degradable_buffer", "rxd-tutorials/extracellular", "rxd-tutorials/index", "rxd-tutorials/ip3-demo", "rxd-tutorials/thresholds", "scm/guide/SCMGuide", "scm/guidelines/SCMGuidelines", "scm/index", "scm/policies/policies", "scripting", "tutorials/ball-and-stick-1", "tutorials/ball-and-stick-2", "tutorials/ball-and-stick-3", "tutorials/ball-and-stick-4", "tutorials/index", "tutorials/pythontutorial", "tutorials/scripting-neuron-basics", "videos/cns-tutorial-2021", "videos/incfcns-tutorial-2022", "videos/index", "videos/netpyne-course-2021", "videos/neuron-course-2021"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["README.md", "changelog.md", "cmake_doc/index.rst", "cmake_doc/options.rst", "coreneuron/compatibility.rst", "coreneuron/examples.rst", "coreneuron/index.rst", "coreneuron/installation.rst", "coreneuron/running-a-simulation.rst", "courses/artificial_cells_neuron.rst", "courses/batch_runs_bulletin_board_parallelization.rst", "courses/batch_runs_with_bulletin_board.rst", "courses/building_and_labeling_a_two_electrod.rst", "courses/bulletin_board_walkthrough.rst", "courses/cellbuilder_overview_and_hints.rst", "courses/code/cell.ho.txt", "courses/code/initbatpar.ho.txt", "courses/code/initbatser.ho.txt", "courses/code/initonerun.ho.txt", "courses/code/initplotfi.ho.txt", "courses/code/net1run.hoc.txt", "courses/code/net1spec.ho.txt", "courses/code/net2spec.ho.txt", "courses/code/test0.hoc.txt", "courses/custom-initialization.rst", "courses/electrotonic_analysis.rst", "courses/exercises2018.rst", "courses/hints_for_inhomogeneous_channel_dist.rst", "courses/hoc_exercises.rst", "courses/hopfield_brody_network_in_python.rst", "courses/interactive_modeling.rst", "courses/intro_to_gui.rst", "courses/intro_to_the_network_builder.rst", "courses/introduction_to_the_linear_circuit.rst", "courses/managing_models_on_the_fly.rst", "courses/mpi_parallelization.rst", "courses/multithread_parallelization.rst", "courses/network_ready_cells_from_the_cellb.rst", "courses/neuron_scripting_exercises.rst", "courses/numerical-methods-exercises.rst", "courses/quality_issues_with_morphometric.rst", "courses/rxd_exercises.rst", "courses/saving_windows.rst", "courses/specifying_inhomogeneous_channel_dis.rst", "courses/state_and_parameter_discontinuities.rst", "courses/the_cellbuilder.rst", "courses/using_modeldb_and_modelview.rst", "courses/using_morphometric_data.rst", "courses/using_nmodl_files.rst", "courses/using_nsg_portal.rst", "courses/working_with_shape_plots.rst", "dealing_simulations_generate_lot.rst", "dev/HOCInterpreter/HOCInterpreter.md", "dev/data-structures.rst", "dev/gpu-testing.rst", "dev/hocdomain-sphinx.md", "dev/how-do-i/how-do-i.rst", "dev/index.rst", "dev/morphology/morphology.rst", "dev/setuptools/setuptools.md", "dev/workflow-code-paths.rst", "docs_requirements.txt", "doxygen.rst", "example_of_generating_movie.rst", "guide/bio_faq.rst", "guide/cellbuilder.rst", "guide/cellbuilder1.rst", "guide/cellbuilder2.rst", "guide/cellbuilder3.rst", "guide/data/finithnd1.hoc.txt", "guide/data/idraw-readme.txt", "guide/data/readme.txt", "guide/data/solution.ses.txt", "guide/differences_between_idraw_and_core.rst", "guide/example_hybrid_network.rst", "guide/example_of_simple_network.rst", "guide/faq.rst", "guide/finitialize_handler.rst", "guide/fixing_funny_axes.rst", "guide/heres_how_delete_v5.rst", "guide/heres_how_page.rst", "guide/hoc_chapter_11_old_reference.rst", "guide/how_to_get_started.rst", "guide/how_to_get_started_with_neuron.rst", "guide/how_to_move_labels.rst", "guide/how_to_translate_view.rst", "guide/import3d.rst", "guide/index.rst", "guide/introduction_to_network_construction.rst", "guide/modelview_compact_display.rst", "guide/network_builder_tutorials.rst", "guide/nmodls_built_in_functions.rst", "guide/nrn_defaults.rst", "guide/optimization.rst", "guide/optimization1.rst", "guide/optimization1a.rst", "guide/optimization2.rst", "guide/plot_what.rst", "guide/porting_mechanisms_to_cpp.rst", "guide/print_file_manager.rst", "guide/randomness.rst", "guide/run_simulation_plot_input_output.rst", "guide/run_simulation_plot_input_output2.rst", "guide/saveses.rst", "guide/set_up_a_subsetdomainiterator.rst", "guide/specify_and_verify_the_functions.rst", "guide/specify_the_model_parameters_varied.rst", "guide/step_1_define_type_cell.rst", "guide/step_1_define_type_of_cell.rst", "guide/step_1_define_type_of_cell2.rst", "guide/step_1_define_type_of_cell3.rst", "guide/step_2_create_each_cell.rst", "guide/step_2_create_network_cell.rst", "guide/step_3_connect_cells.rst", "guide/step_3_connect_cells_continued.rst", "guide/step_3_connect_the_cells.rst", "guide/step_3_connect_the_cells_continued.rst", "guide/tutorial_2_hybrid_nets.rst", "guide/tutorial_artificial_neurons.rst", "guide/units.rst", "guide/units_tutorial.rst", "guide/use_the_model_specification.rst", "guide/using_neuron_on_the_mac.rst", "guide/using_plotwhat_to_specify_a_variable.rst", "guide/using_session_files_for_saving.rst", "guide/using_the_d_lambda_rule.rst", "guide/what_is_neuron.rst", "guide/working_with_postscript_and_idraw.rst", "hoc/analysis/guitools.rst", "hoc/analysis/guitools/funfit.rst", "hoc/analysis/guitools/impedancetools.rst", "hoc/analysis/guitools/impedanx.rst", "hoc/analysis/guitools/impratio.rst", "hoc/analysis/guitools/mulfit.rst", "hoc/analysis/guitools/runfit.rst", "hoc/analysis/programmatic.rst", "hoc/analysis/programmatic/impedance.rst", "hoc/analysis/programmatic/misc.rst", "hoc/analysis/programmatic/optimization.rst", "hoc/compilationoptions.rst", "hoc/index.rst", "hoc/modelspec/guitools.rst", "hoc/modelspec/guitools/cellbuilder.rst", "hoc/modelspec/guitools/inserter.rst", "hoc/modelspec/guitools/pointman.rst", "hoc/modelspec/guitools/showmech.rst", "hoc/modelspec/programmatic.rst", "hoc/modelspec/programmatic/electrod.rst", "hoc/modelspec/programmatic/hocmech.rst", "hoc/modelspec/programmatic/ions.rst", "hoc/modelspec/programmatic/kschan.rst", "hoc/modelspec/programmatic/linmod.rst", "hoc/modelspec/programmatic/mechanisms.rst", "hoc/modelspec/programmatic/mechanisms/mech.rst", "hoc/modelspec/programmatic/mechanisms/nmodl.rst", "hoc/modelspec/programmatic/mechanisms/nmodl2.rst", "hoc/modelspec/programmatic/mechtype.rst", "hoc/modelspec/programmatic/network.rst", "hoc/modelspec/programmatic/network/lyttonmpi.rst", "hoc/modelspec/programmatic/network/netcon.rst", "hoc/modelspec/programmatic/network/parcon.rst", "hoc/modelspec/programmatic/network/parnet.rst", "hoc/modelspec/programmatic/obsoletestimuli.rst", "hoc/modelspec/programmatic/rxd.rst", "hoc/modelspec/programmatic/ste.rst", "hoc/modelspec/programmatic/topology.rst", "hoc/modelspec/programmatic/topology/geometry.rst", "hoc/modelspec/programmatic/topology/seclist.rst", "hoc/modelspec/programmatic/topology/secref.rst", "hoc/modelspec/programmatic/topology/secspec.rst", "hoc/programming/dynamiccode.rst", "hoc/programming/errors.rst", "hoc/programming/gui/dialog.rst", "hoc/programming/gui/layout.rst", "hoc/programming/gui/list.rst", "hoc/programming/gui/misc.rst", "hoc/programming/gui/nfunc.rst", "hoc/programming/gui/pwman.rst", "hoc/programming/gui/secbrows.rst", "hoc/programming/gui/symchooser.rst", "hoc/programming/gui/texteditor.rst", "hoc/programming/gui/vfe.rst", "hoc/programming/gui/widgets.rst", "hoc/programming/guidesign.rst", "hoc/programming/hoc.rst", "hoc/programming/hocsyntax.rst", "hoc/programming/internals.rst", "hoc/programming/io.rst", "hoc/programming/io/file.rst", "hoc/programming/io/plotters.rst", "hoc/programming/io/printf.rst", "hoc/programming/io/read.rst", "hoc/programming/io/ropen.rst", "hoc/programming/math/constants.rst", "hoc/programming/math/eqnsolve.rst", "hoc/programming/math/functions.rst", "hoc/programming/math/guimath.rst", "hoc/programming/math/matrix.rst", "hoc/programming/math/mcran4.rst", "hoc/programming/math/misc.rst", "hoc/programming/math/random.rst", "hoc/programming/math/vector.rst", "hoc/programming/mathematics.rst", "hoc/programming/mechstan.rst", "hoc/programming/ockeywor.rst", "hoc/programming/oop.rst", "hoc/programming/pointers/misc.rst", "hoc/programming/pointers/pointer.rst", "hoc/programming/pointers/ptrvector.rst", "hoc/programming/predec.rst", "hoc/programming/projectmanagement.rst", "hoc/programming/python-from-hoc.rst", "hoc/programming/references.rst", "hoc/programming/sscanf.rst", "hoc/programming/strfun.rst", "hoc/programming/strings.rst", "hoc/programming/system.rst", "hoc/programming/timer.rst", "hoc/simctrl/batch.rst", "hoc/simctrl/bbsavestate.rst", "hoc/simctrl/cvode.rst", "hoc/simctrl/family.rst", "hoc/simctrl/interpretermanagement.rst", "hoc/simctrl/programmatic.rst", "hoc/simctrl/runctrl.rst", "hoc/simctrl/savstate.rst", "hoc/simctrl/sessionsave.rst", "hoc/simctrl/stdrun.rst", "hoc/visualization/glyph.rst", "hoc/visualization/graph.rst", "hoc/visualization/grapher.rst", "hoc/visualization/gui.rst", "hoc/visualization/notify.rst", "hoc/visualization/oldgrph.rst", "hoc/visualization/plotshape.rst", "hoc/visualization/plotshapeclass.rst", "hoc/visualization/rvarplt.rst", "hoc/visualization/shape.rst", "hoc/visualization/shapebox.rst", "how_to_develop_and_debug_code.rst", "index.rst", "install/code_coverage.md", "install/debug.md", "install/developer.rst", "install/formatting.md", "install/install.rst", "install/install_instructions.md", "install/mac_pkg.md", "install/python_wheels.md", "install/windows.md", "nmodl/NMODL_language.ipynb", "nmodl/index.rst", "nmodl/verbatim.rst", "otherscripting.rst", "publications.rst", "publications-using-neuron.rst", "python/analysis/guitools.rst", "python/analysis/guitools/funfit.rst", "python/analysis/guitools/impedancetools.rst", "python/analysis/guitools/impedanx.rst", "python/analysis/guitools/impratio.rst", "python/analysis/guitools/mulfit.rst", "python/analysis/guitools/runfit.rst", "python/analysis/programmatic.rst", "python/analysis/programmatic/impedance.rst", "python/analysis/programmatic/misc.rst", "python/analysis/programmatic/optimization.rst", "python/compilationoptions.rst", "python/envvariables.rst", "python/index.rst", "python/modelspec/guitools.rst", "python/modelspec/guitools/cellbuilder.rst", "python/modelspec/guitools/inserter.rst", "python/modelspec/guitools/pointman.rst", "python/modelspec/guitools/showmech.rst", "python/modelspec/programmatic.rst", "python/modelspec/programmatic/electrod.rst", "python/modelspec/programmatic/hocmech.rst", "python/modelspec/programmatic/ions.rst", "python/modelspec/programmatic/kschan.rst", "python/modelspec/programmatic/linmod.rst", "python/modelspec/programmatic/mechanisms.rst", "python/modelspec/programmatic/mechanisms/mech.rst", "python/modelspec/programmatic/mechanisms/nmodl.rst", "python/modelspec/programmatic/mechanisms/nmodl2.rst", "python/modelspec/programmatic/mechtype.rst", "python/modelspec/programmatic/network.rst", "python/modelspec/programmatic/network/lyttonmpi.rst", "python/modelspec/programmatic/network/netcon.rst", "python/modelspec/programmatic/network/parcon.rst", "python/modelspec/programmatic/network/parnet.rst", "python/modelspec/programmatic/obsoletestimuli.rst", "python/modelspec/programmatic/rxd.rst", "python/modelspec/programmatic/rxdmath.rst", "python/modelspec/programmatic/ste.rst", "python/modelspec/programmatic/topology.rst", "python/modelspec/programmatic/topology/geometry.rst", "python/modelspec/programmatic/topology/seclist.rst", "python/modelspec/programmatic/topology/secref.rst", "python/modelspec/programmatic/topology/secspec.rst", "python/programming/dynamiccode.rst", "python/programming/errors.rst", "python/programming/gui/dialog.rst", "python/programming/gui/layout.rst", "python/programming/gui/list.rst", "python/programming/gui/misc.rst", "python/programming/gui/nfunc.rst", "python/programming/gui/pwman.rst", "python/programming/gui/secbrows.rst", "python/programming/gui/symchooser.rst", "python/programming/gui/texteditor.rst", "python/programming/gui/vfe.rst", "python/programming/gui/widgets.rst", "python/programming/guidesign.rst", "python/programming/hoc-from-python.rst", "python/programming/internals.rst", "python/programming/io/file.rst", "python/programming/io/printf.rst", "python/programming/io/read.rst", "python/programming/io/ropen.rst", "python/programming/math/constants.rst", "python/programming/math/eqnsolve.rst", "python/programming/math/functions.rst", "python/programming/math/guimath.rst", "python/programming/math/matrix.rst", "python/programming/math/mcran4.rst", "python/programming/math/misc.rst", "python/programming/math/random.rst", "python/programming/math/vector.rst", "python/programming/mathematics.rst", "python/programming/mechstan.rst", "python/programming/neuron_classes.rst", "python/programming/pointers/misc.rst", "python/programming/pointers/pointer.rst", "python/programming/pointers/ptrvector.rst", "python/programming/projectmanagement.rst", "python/programming/references.rst", "python/programming/sscanf.rst", "python/programming/strfun.rst", "python/programming/strings.rst", "python/programming/system.rst", "python/programming/timer.rst", "python/simctrl/batch.rst", "python/simctrl/bbsavestate.rst", "python/simctrl/cvode.rst", "python/simctrl/family.rst", "python/simctrl/interpretermanagement.rst", "python/simctrl/programmatic.rst", "python/simctrl/runctrl.rst", "python/simctrl/savstate.rst", "python/simctrl/sessionsave.rst", "python/simctrl/stdrun.rst", "python/visualization/glyph.rst", "python/visualization/graph.rst", "python/visualization/grapher.rst", "python/visualization/gui.rst", "python/visualization/notify.rst", "python/visualization/oldgrph.rst", "python/visualization/plotshape.rst", "python/visualization/plotshapeclass.rst", "python/visualization/rvarplt.rst", "python/visualization/shape.rst", "python/visualization/shapebox.rst", "removed_features.rst", "rst_substitutions.txt", "rxd-tutorials/Changing initial conditions and parameters.ipynb", "rxd-tutorials/Reaction-Diffusion tutorial.ipynb", "rxd-tutorials/Restricting reactions to certain sections.ipynb", "rxd-tutorials/basic-initialization.ipynb", "rxd-tutorials/calcium waves.ipynb", "rxd-tutorials/circadian.ipynb", "rxd-tutorials/combining currents from mod files with rxd.ipynb", "rxd-tutorials/degradable_buffer.ipynb", "rxd-tutorials/extracellular.ipynb", "rxd-tutorials/index.rst", "rxd-tutorials/ip3-demo.ipynb", "rxd-tutorials/thresholds.ipynb", "scm/guide/SCMGuide.md", "scm/guidelines/SCMGuidelines.md", "scm/index.rst", "scm/policies/policies.md", "scripting.rst", "tutorials/ball-and-stick-1.ipynb", "tutorials/ball-and-stick-2.ipynb", "tutorials/ball-and-stick-3.ipynb", "tutorials/ball-and-stick-4.ipynb", "tutorials/index.rst", "tutorials/pythontutorial.ipynb", "tutorials/scripting-neuron-basics.ipynb", "videos/cns-tutorial-2021.rst", "videos/incfcns-tutorial-2022.rst", "videos/index.rst", "videos/netpyne-course-2021.rst", "videos/neuron-course-2021.rst"], "indexentries": {"_in() (mechanismstandard method)": [[330, "MechanismStandard._in", false]], "_ref_concentration (rxd.node.node property)": [[292, "rxd.node.Node._ref_concentration", false]], "_ref_concentration (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList._ref_concentration", false]], "_ref_molecules (rxd.node.node property)": [[292, "rxd.node.Node._ref_molecules", false]], "_ref_value (rxd.node.node property)": [[292, "rxd.node.Node._ref_value", false]], "_ref_value (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList._ref_value", false]], "ab() (hoc kstrans method)": [[150, "KSTrans.ab", false]], "ab() (kstrans method)": [[279, "KSTrans.ab", false]], "abs()": [[195, "abs", false], [322, "abs", false]], "abs() (hoc vector method)": [[201, "Vector.abs", false]], "abs() (vector method)": [[328, "Vector.abs", false]], "accept_action() (hoc list method)": [[174, "List.accept_action", false]], "accept_action() (hoc sectionbrowser method)": [[178, "SectionBrowser.accept_action", false]], "accept_action() (list method)": [[304, "List.accept_action", false]], "accept_action() (sectionbrowser method)": [[308, "SectionBrowser.accept_action", false]], "access (keyword)": [[169, "index-0", false]], "acg() (hoc random method)": [[200, "Random.ACG", false]], "acg() (random method)": [[327, "Random.ACG", false]], "acor() (cvode method)": [[344, "CVode.acor", false]], "acor() (hoc cvode method)": [[220, "CVode.acor", false]], "action() (hoc mechanismstandard method)": [[203, "MechanismStandard.action", false]], "action() (hoc mechanismtype method)": [[156, "MechanismType.action", false]], "action() (hoc shape method)": [[237, "Shape.action", false]], "action() (mechanismstandard method)": [[330, "MechanismStandard.action", false]], "action() (mechanismtype method)": [[285, "MechanismType.action", false]], "action() (shape method)": [[361, "Shape.action", false]], "active() (cvode method)": [[344, "CVode.active", false]], "active() (hoc cvode method)": [[220, "CVode.active", false]], "active() (hoc netcon method)": [[159, "NetCon.active", false]], "active() (netcon method)": [[288, "NetCon.active", false]], "add() (hoc matrix method)": [[197, "Matrix.add", false]], "add() (hoc vector method)": [[201, "Vector.add", false]], "add() (matrix method)": [[324, "Matrix.add", false]], "add() (vector method)": [[328, "Vector.add", false]], "add_hhstate() (hoc kschan method)": [[150, "KSChan.add_hhstate", false]], "add_hhstate() (kschan method)": [[279, "KSChan.add_hhstate", false]], "add_ksstate() (hoc kschan method)": [[150, "KSChan.add_ksstate", false]], "add_ksstate() (kschan method)": [[279, "KSChan.add_ksstate", false]], "add_transition() (hoc kschan method)": [[150, "KSChan.add_transition", false]], "add_transition() (kschan method)": [[279, "KSChan.add_transition", false]], "addexpr() (graph method)": [[353, "Graph.addexpr", false]], "addexpr() (hoc graph method)": [[229, "Graph.addexpr", false]], "addobject() (graph method)": [[353, "Graph.addobject", false]], "addobject() (hoc graph method)": [[229, "Graph.addobject", false]], "addrand() (hoc vector method)": [[201, "Vector.addrand", false]], "addrand() (vector method)": [[328, "Vector.addrand", false]], "addvar() (graph method)": [[353, "Graph.addvar", false]], "addvar() (hoc graph method)": [[229, "Graph.addvar", false]], "adjust() (hoc vbox method)": [[173, "VBox.adjust", false]], "adjust() (vbox method)": [[303, "VBox.adjust", false]], "adjuster() (hoc vbox method)": [[173, "VBox.adjuster", false]], "adjuster() (vbox method)": [[303, "VBox.adjuster", false]], "alias() (hoc stringfunctions method)": [[214, "StringFunctions.alias", false]], "alias() (stringfunctions method)": [[338, "StringFunctions.alias", false]], "alias_list() (hoc stringfunctions method)": [[214, "StringFunctions.alias_list", false]], "alias_list() (stringfunctions method)": [[338, "StringFunctions.alias_list", false]], "align() (graph method)": [[353, "Graph.align", false]], "align() (hoc graph method)": [[229, "Graph.align", false]], "allgather() (hoc parallelcontext method)": [[160, "ParallelContext.allgather", false]], "allgather() (parallelcontext method)": [[289, "ParallelContext.allgather", false]], "allobjects()": [[186, "allobjects", false], [315, "allobjects", false]], "allobjectvars()": [[186, "allobjectvars", false], [315, "allobjectvars", false]], "allprint() (finitializehandler method)": [[347, "FInitializeHandler.allprint", false]], "allprint() (hoc finitializehandler method)": [[223, "FInitializeHandler.allprint", false]], "allreduce() (hoc parallelcontext method)": [[160, "ParallelContext.allreduce", false]], "allreduce() (parallelcontext method)": [[289, "ParallelContext.allreduce", false]], "allroots() (hoc sectionlist method)": [[167, "SectionList.allroots", false]], "allroots() (sectionlist method)": [[297, "SectionList.allroots", false]], "alltoall() (hoc parallelcontext method)": [[160, "ParallelContext.alltoall", false]], "alltoall() (parallelcontext method)": [[289, "ParallelContext.alltoall", false]], "alphasynapse (built-in class)": [[282, "AlphaSynapse", false]], "alphasynapse (hoc built-in class)": [[153, "AlphaSynapse", false]], "amp() (electrode method)": [[276, "Electrode.amp", false]], "amp() (hoc electrode method)": [[147, "Electrode.amp", false]], "amp0() (electrode method)": [[276, "Electrode.amp0", false]], "amp0() (hoc electrode method)": [[147, "Electrode.amp0", false]], "aopen() (file method)": [[316, "File.aopen", false]], "aopen() (hoc file method)": [[188, "File.aopen", false]], "apcount (built-in class)": [[282, "APCount", false]], "apcount (hoc built-in class)": [[153, "APCount", false]], "append() (hoc list method)": [[174, "List.append", false]], "append() (hoc sectionlist method)": [[167, "SectionList.append", false]], "append() (hoc vector method)": [[201, "Vector.append", false]], "append() (list method)": [[304, "List.append", false]], "append() (sectionlist method)": [[297, "SectionList.append", false]], "append() (vector method)": [[328, "Vector.append", false]], "apply() (hoc vector method)": [[201, "Vector.apply", false]], "apply() (vector method)": [[328, "Vector.apply", false]], "arc3d()": [[166, "arc3d", false], [296, "arc3d", false]], "area()": [[166, "area", false], [296, "area", false]], "argtype()": [[185, "argtype", false]], "arguments": [[185, "index-8", false]], "as_numpy() (hoc vector method)": [[201, "Vector.as_numpy", false]], "as_numpy() (vector method)": [[328, "Vector.as_numpy", false]], "assign() (hoc pointer method)": [[207, "Pointer.assign", false]], "assign() (pointer method)": [[333, "Pointer.assign", false]], "at() (hoc vector method)": [[201, "Vector.at", false]], "at() (vector method)": [[328, "Vector.at", false]], "atan()": [[195, "atan", false], [322, "atan", false]], "atan2()": [[195, "atan2", false], [322, "atan2", false]], "atol() (cvode method)": [[344, "CVode.atol", false]], "atol() (hoc cvode method)": [[220, "CVode.atol", false]], "atolscale() (cvode method)": [[344, "CVode.atolscale", false]], "atolscale() (hoc cvode method)": [[220, "CVode.atolscale", false]], "attr_praxis()": [[138, "attr_praxis", false], [266, "attr_praxis", false]], "axis()": [[233, "axis", false], [357, "axis", false]], "b_rate (rxd.reaction property)": [[292, "rxd.Reaction.b_rate", false]], "barrier() (hoc parallelcontext method)": [[160, "ParallelContext.barrier", false]], "barrier() (parallelcontext method)": [[289, "ParallelContext.barrier", false]], "batch_run()": [[218, "batch_run", false], [342, "batch_run", false]], "batch_save()": [[218, "batch_save", false], [342, "batch_save", false]], "bbsavestate (built-in class)": [[343, "BBSaveState", false]], "bbsavestate (hoc built-in class)": [[219, "BBSaveState", false]], "bcopy() (hoc matrix method)": [[197, "Matrix.bcopy", false]], "bcopy() (matrix method)": [[324, "Matrix.bcopy", false]], "begin() (graph method)": [[353, "Graph.begin", false]], "begin() (hoc graph method)": [[229, "Graph.begin", false]], "begin() (hoc rangevarplot method)": [[236, "RangeVarPlot.begin", false]], "begin() (rangevarplot method)": [[360, "RangeVarPlot.begin", false]], "beginline() (graph method)": [[353, "Graph.beginline", false]], "beginline() (hoc graph method)": [[229, "Graph.beginline", false]], "beginline() (hoc plotshape method)": [[235, "PlotShape.beginline", false]], "beginline() (hoc shape method)": [[237, "Shape.beginline", false]], "beginline() (plotshape method)": [[359, "PlotShape.beginline", false]], "beginline() (shape method)": [[361, "Shape.beginline", false]], "begintemplate (keyword)": [[205, "index-0", false]], "binomial() (hoc random method)": [[200, "Random.binomial", false]], "binomial() (random method)": [[327, "Random.binomial", false]], "boolean_dialog()": [[172, "boolean_dialog", false], [302, "boolean_dialog", false]], "break (keyword)": [[204, "index-2", false]], "broadcast() (hoc parallelcontext method)": [[160, "ParallelContext.broadcast", false]], "broadcast() (parallelcontext method)": [[289, "ParallelContext.broadcast", false]], "browser() (hoc list method)": [[174, "List.browser", false]], "browser() (list method)": [[304, "List.browser", false]], "brush() (graph method)": [[353, "Graph.brush", false]], "brush() (hoc graph method)": [[229, "Graph.brush", false]], "buffer_size() (hoc vector method)": [[201, "Vector.buffer_size", false]], "buffer_size() (vector method)": [[328, "Vector.buffer_size", false]], "built-in function": [[265, "ghk", false], [265, "nernst", false], [266, "attr_praxis", false], [266, "fit_praxis", false], [266, "pval_praxis", false], [266, "stop_praxis", false], [277, "make_mechanism", false], [277, "make_pointprocess", false], [278, "ion_charge", false], [278, "ion_register", false], [278, "ion_style", false], [291, "fclamp", false], [291, "fclampi", false], [291, "fclampv", false], [291, "fstim", false], [291, "fstimi", false], [291, "prstim", false], [292, "rxd.export.sbml", false], [292, "rxd.nthread", false], [292, "rxd.re_init", false], [292, "rxd.set_solve_type", false], [293, "rxdmath.acos", false], [293, "rxdmath.acosh", false], [293, "rxdmath.asin", false], [293, "rxdmath.asinh", false], [293, "rxdmath.atan", false], [293, "rxdmath.atan2", false], [293, "rxdmath.ceil", false], [293, "rxdmath.copysign", false], [293, "rxdmath.cos", false], [293, "rxdmath.cosh", false], [293, "rxdmath.degrees", false], [293, "rxdmath.erf", false], [293, "rxdmath.erfc", false], [293, "rxdmath.exp", false], [293, "rxdmath.expm1", false], [293, "rxdmath.fabs", false], [293, "rxdmath.factorial", false], [293, "rxdmath.floor", false], [293, "rxdmath.fmod", false], [293, "rxdmath.gamma", false], [293, "rxdmath.lgamma", false], [293, "rxdmath.log", false], [293, "rxdmath.log10", false], [293, "rxdmath.log1p", false], [293, "rxdmath.pow", false], [293, "rxdmath.radians", false], [293, "rxdmath.sin", false], [293, "rxdmath.sinh", false], [293, "rxdmath.sqrt", false], [293, "rxdmath.tan", false], [293, "rxdmath.tanh", false], [293, "rxdmath.trunc", false], [293, "rxdmath.vtrap", false], [295, "delete_section", false], [295, "disconnect", false], [295, "id0", false], [295, "ismembrane", false], [295, "issection", false], [295, "parent_connection", false], [295, "parent_node", false], [295, "parent_section", false], [295, "psection", false], [295, "secname", false], [295, "section_exists", false], [295, "section_orientation", false], [295, "section_owner", false], [295, "sectionname", false], [296, "arc3d", false], [296, "area", false], [296, "define_shape", false], [296, "diam3d", false], [296, "distance", false], [296, "getSpineArea", false], [296, "n3d", false], [296, "pt3dadd", false], [296, "pt3dchange", false], [296, "pt3dclear", false], [296, "pt3dconst", false], [296, "pt3dinsert", false], [296, "pt3dremove", false], [296, "pt3dstyle", false], [296, "ri", false], [296, "setSpineArea", false], [296, "spine3d", false], [296, "x3d", false], [296, "y3d", false], [296, "z3d", false], [299, "pop_section", false], [299, "push_section", false], [300, "execute", false], [300, "execute1", false], [300, "load_file", false], [300, "load_func", false], [300, "load_proc", false], [300, "load_template", false], [301, "coredump_on_error", false], [301, "execerror", false], [301, "nrn_feenableexcept", false], [301, "show_errmess_always", false], [302, "boolean_dialog", false], [302, "continue_dialog", false], [302, "string_dialog", false], [305, "ivoc_style", false], [305, "pwman_place", false], [305, "variable_domain", false], [306, "nrnglobalmechmenu", false], [306, "nrnmechmenu", false], [306, "nrnpointmenu", false], [306, "nrnsecmenu", false], [312, "units", false], [312, "xbutton", false], [312, "xcheckbox", false], [312, "xfixedvalue", false], [312, "xlabel", false], [312, "xmenu", false], [312, "xpanel", false], [312, "xpvalue", false], [312, "xradiobutton", false], [312, "xslider", false], [312, "xstatebutton", false], [312, "xvalue", false], [312, "xvarlabel", false], [315, "allobjects", false], [315, "allobjectvars", false], [315, "hoc_pointer_", false], [315, "name_declared", false], [315, "object_id", false], [315, "object_pop", false], [315, "object_push", false], [315, "symbols", false], [317, "hoc_stdout", false], [317, "printf", false], [318, "fscan", false], [318, "getstr", false], [318, "sred", false], [318, "xred", false], [319, "fprint", false], [319, "id0", false], [319, "wopen", false], [319, "xopen", false], [321, "eqinit", false], [321, "prmat", false], [321, "solve", false], [322, "abs", false], [322, "atan", false], [322, "atan2", false], [322, "cos", false], [322, "erf", false], [322, "erfc", false], [322, "exp", false], [322, "int", false], [322, "log", false], [322, "log10", false], [322, "sin", false], [322, "sqrt", false], [322, "tanh", false], [325, "mcell_ran4", false], [325, "mcell_ran4_init", false], [325, "use_mcell_ran4", false], [332, "this_node", false], [332, "this_section", false], [337, "sscanf", false], [339, "sprint", false], [339, "strcmp", false], [340, "WinExec", false], [340, "chdir", false], [340, "getcwd", false], [340, "machine_name", false], [340, "neuronhome", false], [340, "nrn_load_dll", false], [340, "nrnversion", false], [340, "show_winio", false], [340, "startsw", false], [340, "stopsw", false], [340, "system", false], [340, "unix_mac_pc", false], [342, "batch_run", false], [342, "batch_save", false], [346, "quit", false], [346, "retrieveaudit", false], [346, "saveaudit", false], [347, "checkpoint", false], [347, "fadvance", false], [347, "fcurrent", false], [347, "finitialize", false], [347, "fmatrix", false], [347, "frecord_init", false], [347, "initnrn", false], [350, "print_session", false], [350, "save_session", false], [356, "doEvents", false], [356, "doNotify", false], [357, "axis", false], [357, "graph", false], [357, "graphmode", false], [357, "plot", false], [357, "plotx", false], [357, "ploty", false], [357, "plt", false], [357, "regraph", false], [357, "setcolor", false], [357, "settext", false]], "c() (hoc matrix method)": [[197, "Matrix.c", false]], "c() (hoc vector method)": [[201, "Vector.c", false]], "c() (matrix method)": [[324, "Matrix.c", false]], "c() (vector method)": [[328, "Vector.c", false]], "cache_efficient() (cvode method)": [[344, "CVode.cache_efficient", false]], "cache_efficient() (hoc cvode method)": [[220, "CVode.cache_efficient", false]], "capacitance (mechanism)": [[153, "index-1", false], [282, "index-1", false]], "cas() (neuron.h method)": [[314, "neuron.h.cas", false]], "cell() (hoc parallelcontext method)": [[160, "ParallelContext.cell", false]], "cell() (parallelcontext method)": [[289, "ParallelContext.cell", false]], "cell() (section method)": [[295, "Section.cell", false]], "celsius (built-in variable)": [[347, "celsius", false]], "celsius (hoc built-in variable)": [[223, "celsius", false]], "charge (rxd.species property)": [[292, "rxd.Species.charge", false]], "chdir()": [[216, "chdir", false], [340, "chdir", false]], "checkpoint()": [[223, "checkpoint", false], [347, "checkpoint", false]], "child() (hoc sectionref method)": [[168, "SectionRef.child", false]], "children() (hoc sectionlist method)": [[167, "SectionList.children", false]], "children() (sectionlist method)": [[297, "SectionList.children", false]], "cholesky_factor() (hoc matrix method)": [[197, "Matrix.cholesky_factor", false]], "chooser() (file method)": [[316, "File.chooser", false]], "chooser() (hoc file method)": [[188, "File.chooser", false]], "circle() (glyph method)": [[352, "Glyph.circle", false]], "circle() (hoc glyph method)": [[228, "Glyph.circle", false]], "cl() (hoc vector method)": [[201, "Vector.cl", false]], "cl() (vector method)": [[328, "Vector.cl", false]], "clamp_resist (built-in variable)": [[347, "clamp_resist", false]], "clamp_resist (hoc built-in variable)": [[223, "clamp_resist", false]], "close() (file method)": [[316, "File.close", false]], "close() (glyph method)": [[352, "Glyph.close", false]], "close() (hoc file method)": [[188, "File.close", false]], "close() (hoc pwmanager method)": [[177, "PWManager.close", false]], "close() (pwmanager method)": [[307, "PWManager.close", false]], "close_path() (hoc glyph method)": [[228, "Glyph.close_path", false]], "code() (mechanismtype method)": [[285, "MechanismType.code", false]], "color() (graph method)": [[353, "Graph.color", false]], "color() (hoc graph method)": [[229, "Graph.color", false]], "color() (hoc plotshape method)": [[235, "PlotShape.color", false]], "color() (hoc rangevarplot method)": [[236, "RangeVarPlot.color", false]], "color() (hoc shape method)": [[237, "Shape.color", false]], "color() (plotshape method)": [[359, "PlotShape.color", false]], "color() (rangevarplot method)": [[360, "RangeVarPlot.color", false]], "color() (shape method)": [[361, "Shape.color", false]], "color_all() (hoc plotshape method)": [[235, "PlotShape.color_all", false]], "color_all() (hoc shape method)": [[237, "Shape.color_all", false]], "color_all() (plotshape method)": [[359, "PlotShape.color_all", false]], "color_all() (shape method)": [[361, "Shape.color_all", false]], "color_list() (hoc plotshape method)": [[235, "PlotShape.color_list", false]], "color_list() (hoc shape method)": [[237, "Shape.color_list", false]], "color_list() (plotshape method)": [[359, "PlotShape.color_list", false]], "color_list() (shape method)": [[361, "Shape.color_list", false]], "colormap() (hoc plotshape method)": [[235, "PlotShape.colormap", false]], "colormap() (plotshape method)": [[359, "PlotShape.colormap", false]], "comments": [[185, "index-1", false]], "compute() (hoc impedance method)": [[136, "Impedance.compute", false]], "compute() (impedance method)": [[264, "Impedance.compute", false]], "concentration (rxd.node.node property)": [[292, "rxd.node.Node.concentration", false]], "concentration (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.concentration", false]], "concentrations() (rxd.species method)": [[292, "rxd.Species.concentrations", false]], "condition_order() (cvode method)": [[344, "CVode.condition_order", false]], "condition_order() (hoc cvode method)": [[220, "CVode.condition_order", false]], "connect (keyword)": [[165, "index-1", false]], "connect() (section method)": [[295, "Section.connect", false]], "contains() (hoc vector method)": [[201, "Vector.contains", false]], "contains() (vector method)": [[328, "Vector.contains", false]], "context() (hoc parallelcontext method)": [[160, "ParallelContext.context", false]], "context() (parallelcontext method)": [[289, "ParallelContext.context", false]], "continue (keyword)": [[204, "index-3", false]], "continue_dialog()": [[172, "continue_dialog", false], [302, "continue_dialog", false]], "control_point() (hoc glyph method)": [[228, "Glyph.control_point", false]], "convlv() (hoc vector method)": [[201, "Vector.convlv", false]], "convlv() (vector method)": [[328, "Vector.convlv", false]], "copy() (hoc vector method)": [[201, "Vector.copy", false]], "copy() (vector method)": [[328, "Vector.copy", false]], "coredump_on_error()": [[171, "coredump_on_error", false], [301, "coredump_on_error", false]], "correl() (hoc vector method)": [[201, "Vector.correl", false]], "correl() (vector method)": [[328, "Vector.correl", false]], "cos()": [[195, "cos", false], [322, "cos", false]], "count() (hoc list method)": [[174, "List.count", false]], "count() (hoc mechanismstandard method)": [[203, "MechanismStandard.count", false]], "count() (hoc mechanismtype method)": [[156, "MechanismType.count", false]], "count() (hoc pwmanager method)": [[177, "PWManager.count", false]], "count() (list method)": [[304, "List.count", false]], "count() (mechanismstandard method)": [[330, "MechanismStandard.count", false]], "count() (mechanismtype method)": [[285, "MechanismType.count", false]], "count() (pwmanager method)": [[307, "PWManager.count", false]], "cpt() (glyph method)": [[352, "Glyph.cpt", false]], "create (keyword)": [[165, "index-0", false]], "create_cell() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.create_cell", false]], "create_cell() (parallelnetmanager method)": [[290, "ParallelNetManager.create_cell", false]], "crosshair_action() (graph method)": [[353, "Graph.crosshair_action", false]], "crosshair_action() (hoc graph method)": [[229, "Graph.crosshair_action", false]], "current_method() (cvode method)": [[344, "CVode.current_method", false]], "current_method() (hoc cvode method)": [[220, "CVode.current_method", false]], "curve() (glyph method)": [[352, "Glyph.curve", false]], "curve_to() (hoc glyph method)": [[228, "Glyph.curve_to", false]], "cvode (built-in class)": [[344, "CVode", false]], "cvode (hoc built-in class)": [[220, "CVode", false]], "d (rxd.node.node property)": [[292, "rxd.node.Node.d", false]], "d2line() (guimath method)": [[323, "GUIMath.d2line", false]], "d2line() (hoc guimath method)": [[196, "GUIMath.d2line", false]], "d2line_seg() (guimath method)": [[323, "GUIMath.d2line_seg", false]], "d2line_seg() (hoc guimath method)": [[196, "GUIMath.d2line_seg", false]], "dae_init_dteps() (cvode method)": [[344, "CVode.dae_init_dteps", false]], "dae_init_dteps() (hoc cvode method)": [[220, "CVode.dae_init_dteps", false]], "debug (keyword)": [[204, "index-12", false]], "debug_event() (cvode method)": [[344, "CVode.debug_event", false]], "debug_event() (hoc cvode method)": [[220, "CVode.debug_event", false]], "deck (built-in class)": [[303, "Deck", false]], "deck (hoc built-in class)": [[173, "Deck", false]], "deco() (hoc pwmanager method)": [[177, "PWManager.deco", false]], "deco() (pwmanager method)": [[307, "PWManager.deco", false]], "default() (hoc valuefieldeditor method)": [[181, "ValueFieldEditor.default", false]], "default() (valuefieldeditor method)": [[311, "ValueFieldEditor.default", false]], "define_shape()": [[166, "define_shape", false], [296, "define_shape", false]], "defined_on_region() (rxd.species method)": [[292, "rxd.Species.defined_on_region", false]], "deiconify() (hoc pwmanager method)": [[177, "PWManager.deiconify", false]], "deiconify() (pwmanager method)": [[307, "PWManager.deiconify", false]], "del() (electrode method)": [[276, "Electrode.del", false]], "del() (hoc electrode method)": [[147, "Electrode.del", false]], "delete (keyword)": [[204, "index-10", false]], "delete_section()": [[165, "delete_section", false], [295, "delete_section", false]], "deltafac() (hoc impedance method)": [[136, "Impedance.deltafac", false]], "deltafac() (impedance method)": [[264, "Impedance.deltafac", false]], "depvar (keyword)": [[204, "index-14", false]], "deriv() (hoc vector method)": [[201, "Vector.deriv", false]], "deriv() (vector method)": [[328, "Vector.deriv", false]], "det() (hoc matrix method)": [[197, "Matrix.det", false]], "det() (matrix method)": [[324, "Matrix.det", false]], "dialog() (hoc vbox method)": [[173, "VBox.dialog", false]], "dialog() (vbox method)": [[303, "VBox.dialog", false]], "diam (built-in variable)": [[296, "diam", false]], "diam (hoc built-in variable)": [[166, "diam", false]], "diam3d()": [[166, "diam3d", false], [296, "diam3d", false]], "diam_change_count() (cvode method)": [[344, "CVode.diam_change_count", false]], "diam_changed (built-in variable)": [[296, "diam_changed", false]], "diam_changed (hoc built-in variable)": [[166, "diam_changed", false]], "diff (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.diff", false]], "dir() (file method)": [[316, "File.dir", false]], "dir() (hoc file method)": [[188, "File.dir", false]], "disconnect()": [[165, "disconnect", false], [295, "disconnect", false]], "disconnect() (section method)": [[295, "Section.disconnect", false]], "discunif() (hoc random method)": [[200, "Random.discunif", false]], "discunif() (random method)": [[327, "Random.discunif", false]], "dismiss_action() (hoc vbox method)": [[173, "VBox.dismiss_action", false]], "dismiss_action() (vbox method)": [[303, "VBox.dismiss_action", false]], "distance()": [[166, "distance", false], [296, "distance", false]], "div() (hoc vector method)": [[201, "Vector.div", false]], "div() (vector method)": [[328, "Vector.div", false]], "doevents()": [[232, "doEvents", false], [356, "doEvents", false]], "done() (hoc parallelcontext method)": [[160, "ParallelContext.done", false]], "done() (parallelcontext method)": [[289, "ParallelContext.done", false]], "donotify()": [[232, "doNotify", false], [356, "doNotify", false]], "dot() (hoc vector method)": [[201, "Vector.dot", false]], "dot() (vector method)": [[328, "Vector.dot", false]], "double (keyword)": [[204, "index-13", false]], "dstates() (cvode method)": [[344, "CVode.dstates", false]], "dstates() (hoc cvode method)": [[220, "CVode.dstates", false]], "dt (built-in variable)": [[347, "dt", false]], "dt (hoc built-in variable)": [[223, "dt", false]], "dt() (hoc parallelcontext method)": [[160, "ParallelContext.dt", false]], "dt() (parallelcontext method)": [[289, "ParallelContext.dt", false]], "dur() (electrode method)": [[276, "Electrode.dur", false]], "dur() (hoc electrode method)": [[147, "Electrode.dur", false]], "dur0() (electrode method)": [[276, "Electrode.dur0", false]], "dur0() (hoc electrode method)": [[147, "Electrode.dur0", false]], "electrode (built-in class)": [[276, "Electrode", false]], "electrode (hoc built-in class)": [[147, "Electrode", false]], "else (keyword)": [[204, "index-6", false]], "end() (hoc rangevarplot method)": [[236, "RangeVarPlot.end", false]], "end() (hoc timer method)": [[217, "Timer.end", false]], "end() (rangevarplot method)": [[360, "RangeVarPlot.end", false]], "end() (timer method)": [[341, "Timer.end", false]], "endtemplate (keyword)": [[205, "index-1", false]], "eof() (file method)": [[316, "File.eof", false]], "eof() (hoc file method)": [[188, "File.eof", false]], "eq() (hoc vector method)": [[201, "Vector.eq", false]], "eq() (vector method)": [[328, "Vector.eq", false]], "eqinit()": [[194, "eqinit", false], [321, "eqinit", false]], "eqn (keyword)": [[204, "index-15", false]], "erase() (glyph method)": [[352, "Glyph.erase", false]], "erase() (graph method)": [[353, "Graph.erase", false]], "erase() (hoc glyph method)": [[228, "Glyph.erase", false]], "erase() (hoc graph method)": [[229, "Graph.erase", false]], "erase() (hoc plotshape method)": [[235, "PlotShape.erase", false]], "erase() (hoc shape method)": [[237, "Shape.erase", false]], "erase() (plotshape method)": [[359, "PlotShape.erase", false]], "erase() (shape method)": [[361, "Shape.erase", false]], "erase_all() (graph method)": [[353, "Graph.erase_all", false]], "erase_all() (hoc graph method)": [[229, "Graph.erase_all", false]], "erase_all() (hoc plotshape method)": [[235, "PlotShape.erase_all", false]], "erase_all() (hoc shape method)": [[237, "Shape.erase_all", false]], "erase_all() (plotshape method)": [[359, "PlotShape.erase_all", false]], "erase_all() (shape method)": [[361, "Shape.erase_all", false]], "erev() (hoc kschan method)": [[150, "KSChan.erev", false]], "erev() (kschan method)": [[279, "KSChan.erev", false]], "erf()": [[195, "erf", false], [322, "erf", false]], "erfc()": [[195, "erfc", false], [322, "erfc", false]], "erlang() (hoc random method)": [[200, "Random.erlang", false]], "erlang() (random method)": [[327, "Random.erlang", false]], "error_weights() (cvode method)": [[344, "CVode.error_weights", false]], "error_weights() (hoc cvode method)": [[220, "CVode.error_weights", false]], "event() (cvode method)": [[344, "CVode.event", false]], "event() (hoc cvode method)": [[220, "CVode.event", false]], "event() (hoc netcon method)": [[159, "NetCon.event", false]], "event() (netcon method)": [[288, "NetCon.event", false]], "event_queue_info() (cvode method)": [[344, "CVode.event_queue_info", false]], "event_queue_info() (hoc cvode method)": [[220, "CVode.event_queue_info", false]], "event_time() (hoc parallelcontext method)": [[160, "ParallelContext.event_time", false]], "event_time() (parallelcontext method)": [[289, "ParallelContext.event_time", false]], "exec_menu() (graph method)": [[353, "Graph.exec_menu", false]], "exec_menu() (hoc graph method)": [[229, "Graph.exec_menu", false]], "exec_menu() (hoc plotshape method)": [[235, "PlotShape.exec_menu", false]], "exec_menu() (hoc shape method)": [[237, "Shape.exec_menu", false]], "exec_menu() (plotshape method)": [[359, "PlotShape.exec_menu", false]], "exec_menu() (shape method)": [[361, "Shape.exec_menu", false]], "execerror()": [[171, "execerror", false], [301, "execerror", false]], "execute()": [[170, "execute", false], [300, "execute", false]], "execute() (neuron.hoc method)": [[314, "neuron.hoc.execute", false]], "execute1()": [[170, "execute1", false], [300, "execute1", false]], "exists() (hoc sectionref method)": [[168, "SectionRef.exists", false]], "exists() (sectionref method)": [[298, "SectionRef.exists", false]], "exp()": [[195, "exp", false], [322, "exp", false]], "exp() (hoc matrix method)": [[197, "Matrix.exp", false]], "exp() (matrix method)": [[324, "Matrix.exp", false]], "exp2syn (built-in class)": [[282, "Exp2Syn", false]], "exp2syn (hoc built-in class)": [[153, "Exp2Syn", false]], "expression": [[185, "index-2", false]], "expsyn (built-in class)": [[282, "ExpSyn", false]], "expsyn (hoc built-in class)": [[153, "ExpSyn", false]], "external (keyword)": [[205, "index-5", false]], "extra_scatter_gather() (cvode method)": [[344, "CVode.extra_scatter_gather", false]], "extra_scatter_gather_remove() (cvode method)": [[344, "CVode.extra_scatter_gather_remove", false]], "extracellular (mechanism)": [[153, "index-5", false], [282, "index-5", false]], "f() (cvode method)": [[344, "CVode.f", false]], "f() (hoc cvode method)": [[220, "CVode.f", false]], "f() (hoc kstrans method)": [[150, "KSTrans.f", false]], "f() (kstrans method)": [[279, "KSTrans.f", false]], "f_rate (rxd.reaction property)": [[292, "rxd.Reaction.f_rate", false]], "fadvance()": [[223, "fadvance", false], [347, "fadvance", false]], "family() (graph method)": [[353, "Graph.family", false]], "family() (hoc graph method)": [[229, "Graph.family", false]], "fastflush() (graph method)": [[353, "Graph.fastflush", false]], "fastflush() (hoc graph method)": [[229, "Graph.fastflush", false]], "fastflush() (hoc plotshape method)": [[235, "PlotShape.fastflush", false]], "fastflush() (plotshape method)": [[359, "PlotShape.fastflush", false]], "fastpas (mechanism)": [[153, "index-4", false], [282, "index-4", false]], "fclamp()": [[162, "fclamp", false], [291, "fclamp", false]], "fclampi()": [[162, "fclampi", false], [291, "fclampi", false]], "fclampv()": [[162, "fclampv", false], [291, "fclampv", false]], "fcurrent()": [[223, "fcurrent", false], [347, "fcurrent", false]], "feround() (guimath method)": [[323, "GUIMath.feround", false]], "feround() (hoc guimath method)": [[196, "GUIMath.feround", false]], "fft() (hoc vector method)": [[201, "Vector.fft", false]], "fft() (vector method)": [[328, "Vector.fft", false]], "file (built-in class)": [[316, "File", false]], "file (hoc built-in class)": [[188, "File", false]], "file() (mechanismtype method)": [[285, "MechanismType.file", false]], "fill() (glyph method)": [[352, "Glyph.fill", false]], "fill() (hoc glyph method)": [[228, "Glyph.fill", false]], "fill() (hoc vector method)": [[201, "Vector.fill", false]], "fill() (vector method)": [[328, "Vector.fill", false]], "filter() (hoc vector method)": [[201, "Vector.filter", false]], "filter() (vector method)": [[328, "Vector.filter", false]], "finitialize()": [[223, "finitialize", false], [347, "finitialize", false]], "finitializehandler (built-in class)": [[347, "FInitializeHandler", false]], "finitializehandler (hoc built-in class)": [[223, "FInitializeHandler", false]], "fit() (hoc vector method)": [[201, "Vector.fit", false]], "fit() (vector method)": [[328, "Vector.fit", false]], "fit_praxis()": [[138, "fit_praxis", false], [266, "fit_praxis", false]], "fixed() (graph method)": [[353, "Graph.fixed", false]], "fixed() (hoc graph method)": [[229, "Graph.fixed", false]], "fixed_step() (cvode method)": [[344, "CVode.fixed_step", false]], "fixed_step() (hoc cvode method)": [[220, "CVode.fixed_step", false]], "flip_to() (deck method)": [[303, "Deck.flip_to", false]], "flip_to() (hoc deck method)": [[173, "Deck.flip_to", false]], "float_epsilon (built-in variable)": [[326, "float_epsilon", false]], "float_epsilon (hoc built-in variable)": [[199, "float_epsilon", false]], "floor() (hoc vector method)": [[201, "Vector.floor", false]], "floor() (vector method)": [[328, "Vector.floor", false]], "flush() (file method)": [[316, "File.flush", false]], "flush() (graph method)": [[353, "Graph.flush", false]], "flush() (hoc file method)": [[188, "File.flush", false]], "flush() (hoc graph method)": [[229, "Graph.flush", false]], "flush() (hoc plotshape method)": [[235, "PlotShape.flush", false]], "flush() (hoc shape method)": [[237, "Shape.flush", false]], "flush() (plotshape method)": [[359, "PlotShape.flush", false]], "flush() (shape method)": [[361, "Shape.flush", false]], "fmatrix()": [[223, "fmatrix", false], [347, "fmatrix", false]], "for (keyword)": [[204, "index-8", false]], "forall (keyword)": [[169, "index-1", false]], "forsec (keyword)": [[169, "index-3", false]], "fprint()": [[192, "fprint", false], [319, "fprint", false]], "fprint() (hoc matrix method)": [[197, "Matrix.fprint", false]], "fprint() (matrix method)": [[324, "Matrix.fprint", false]], "frac() (hoc ksstate method)": [[150, "KSState.frac", false]], "frac() (ksstate method)": [[279, "KSState.frac", false]], "fread() (hoc savestate method)": [[225, "SaveState.fread", false]], "fread() (hoc vector method)": [[201, "Vector.fread", false]], "fread() (savestate method)": [[349, "SaveState.fread", false]], "fread() (vector method)": [[328, "Vector.fread", false]], "frecord_init()": [[223, "frecord_init", false], [347, "frecord_init", false]], "free_event_queues() (cvode method)": [[344, "CVode.free_event_queues", false]], "free_event_queues() (hoc cvode method)": [[220, "CVode.free_event_queues", false]], "from_double() (hoc vector method)": [[201, "Vector.from_double", false]], "from_double() (vector method)": [[328, "Vector.from_double", false]], "from_python() (hoc vector method)": [[201, "Vector.from_python", false]], "from_python() (vector method)": [[328, "Vector.from_python", false]], "from_vector() (hoc matrix method)": [[197, "Matrix.from_vector", false]], "from_vector() (hoc rangevarplot method)": [[236, "RangeVarPlot.from_vector", false]], "from_vector() (matrix method)": [[324, "Matrix.from_vector", false]], "from_vector() (rangevarplot method)": [[360, "RangeVarPlot.from_vector", false]], "fscan()": [[191, "fscan", false], [318, "fscan", false]], "fstim()": [[162, "fstim", false], [291, "fstim", false]], "fstimi()": [[162, "fstimi", false], [291, "fstimi", false]], "ftype() (hoc kstrans method)": [[150, "KSTrans.ftype", false]], "ftype() (kstrans method)": [[279, "KSTrans.ftype", false]], "full_request() (hoc vbox method)": [[173, "VBox.full_request", false]], "full_request() (vbox method)": [[303, "VBox.full_request", false]], "func": [[185, "index-5", false]], "fwrite() (hoc savestate method)": [[225, "SaveState.fwrite", false]], "fwrite() (hoc vector method)": [[201, "Vector.fwrite", false]], "fwrite() (savestate method)": [[349, "SaveState.fwrite", false]], "fwrite() (vector method)": [[328, "Vector.fwrite", false]], "gate() (hoc kschan method)": [[150, "KSChan.gate", false]], "gate() (hoc ksstate method)": [[150, "KSState.gate", false]], "gate() (kschan method)": [[279, "KSChan.gate", false]], "gate() (ksstate method)": [[279, "KSState.gate", false]], "gather() (hoc ptrvector method)": [[208, "PtrVector.gather", false]], "gather() (ptrvector method)": [[334, "PtrVector.gather", false]], "gatherspikes() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.gatherspikes", false]], "gatherspikes() (parallelnetmanager method)": [[290, "ParallelNetManager.gatherspikes", false]], "geometric() (hoc random method)": [[200, "Random.geometric", false]], "geometric() (random method)": [[327, "Random.geometric", false]], "geometry (rxd.region property)": [[163, "rxd.Region.geometry", false], [292, "rxd.Region.geometry", false]], "get() (hoc mechanismstandard method)": [[203, "MechanismStandard.get", false]], "get() (hoc vector method)": [[201, "Vector.get", false]], "get() (mechanismstandard method)": [[330, "MechanismStandard.get", false]], "get() (vector method)": [[328, "Vector.get", false]], "get_ids() (nmodlrandom method)": [[327, "NMODLRandom.get_ids", false]], "get_loc() (hoc pnt method)": [[153, "pnt.get_loc", false]], "get_loc() (pnt method)": [[282, "pnt.get_loc", false]], "get_partition() (parallelcontext method)": [[289, "ParallelContext.get_partition", false]], "get_recordvec() (hoc netcon method)": [[159, "NetCon.get_recordvec", false]], "get_recordvec() (netcon method)": [[288, "NetCon.get_recordvec", false]], "get_segment() (hoc pnt method)": [[153, "pnt.get_segment", false]], "get_segment() (pnt method)": [[282, "pnt.get_segment", false]], "get_seq() (nmodlrandom method)": [[327, "NMODLRandom.get_seq", false]], "getcol() (hoc matrix method)": [[197, "Matrix.getcol", false]], "getcol() (matrix method)": [[324, "Matrix.getcol", false]], "getcwd()": [[216, "getcwd", false], [340, "getcwd", false]], "getdiag() (hoc matrix method)": [[197, "Matrix.getdiag", false]], "getdiag() (matrix method)": [[324, "Matrix.getdiag", false]], "getline() (graph method)": [[353, "Graph.getline", false]], "getline() (hoc graph method)": [[229, "Graph.getline", false]], "getname() (file method)": [[316, "File.getname", false]], "getname() (hoc file method)": [[188, "File.getname", false]], "getrow() (hoc matrix method)": [[197, "Matrix.getrow", false]], "getrow() (matrix method)": [[324, "Matrix.getrow", false]], "gets() (file method)": [[316, "File.gets", false]], "gets() (hoc file method)": [[188, "File.gets", false]], "getspinearea()": [[166, "getSpineArea", false], [296, "getSpineArea", false]], "getstr()": [[191, "getstr", false], [318, "getstr", false]], "getval() (hoc matrix method)": [[197, "Matrix.getval", false]], "getval() (hoc ptrvector method)": [[208, "PtrVector.getval", false]], "getval() (matrix method)": [[324, "Matrix.getval", false]], "getval() (ptrvector method)": [[334, "PtrVector.getval", false]], "ghk()": [[137, "ghk", false], [265, "ghk", false]], "gid2cell() (hoc parallelcontext method)": [[160, "ParallelContext.gid2cell", false]], "gid2cell() (parallelcontext method)": [[289, "ParallelContext.gid2cell", false]], "gid2obj() (hoc parallelcontext method)": [[160, "ParallelContext.gid2obj", false]], "gid2obj() (parallelcontext method)": [[289, "ParallelContext.gid2obj", false]], "gid_clear() (hoc parallelcontext method)": [[160, "ParallelContext.gid_clear", false]], "gid_clear() (parallelcontext method)": [[289, "ParallelContext.gid_clear", false]], "gid_connect() (hoc parallelcontext method)": [[160, "ParallelContext.gid_connect", false]], "gid_connect() (parallelcontext method)": [[289, "ParallelContext.gid_connect", false]], "gid_exists() (hoc parallelcontext method)": [[160, "ParallelContext.gid_exists", false]], "gid_exists() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.gid_exists", false]], "gid_exists() (parallelcontext method)": [[289, "ParallelContext.gid_exists", false]], "gid_exists() (parallelnetmanager method)": [[290, "ParallelNetManager.gid_exists", false]], "gif() (glyph method)": [[352, "Glyph.gif", false]], "gif() (graph method)": [[353, "Graph.gif", false]], "gif() (hoc glyph method)": [[228, "Glyph.gif", false]], "gif() (hoc graph method)": [[229, "Graph.gif", false]], "glyph (built-in class)": [[352, "Glyph", false]], "glyph (hoc built-in class)": [[228, "Glyph", false]], "glyph() (glyph method)": [[352, "Glyph.glyph", false]], "glyph() (graph method)": [[353, "Graph.glyph", false]], "glyph() (hoc glyph method)": [[228, "Glyph.glyph", false]], "glyph() (hoc graph method)": [[229, "Graph.glyph", false]], "gmax() (hoc kschan method)": [[150, "KSChan.gmax", false]], "gmax() (kschan method)": [[279, "KSChan.gmax", false]], "graph (built-in class)": [[353, "Graph", false]], "graph (hoc built-in class)": [[229, "Graph", false]], "graph()": [[233, "graph", false], [357, "graph", false]], "graphmode()": [[233, "graphmode", false], [357, "graphmode", false]], "group() (hoc pwmanager method)": [[177, "PWManager.group", false]], "group() (pwmanager method)": [[307, "PWManager.group", false]], "guimath (built-in class)": [[323, "GUIMath", false]], "guimath (hoc built-in class)": [[196, "GUIMath", false]], "has_loc() (hoc pnt method)": [[153, "pnt.has_loc", false]], "has_loc() (pnt method)": [[282, "pnt.has_loc", false]], "has_net_event() (hoc mechanismtype method)": [[156, "MechanismType.has_net_event", false]], "has_net_event() (mechanismtype method)": [[285, "MechanismType.has_net_event", false]], "has_parent() (hoc sectionref method)": [[168, "SectionRef.has_parent", false]], "has_parent() (sectionref method)": [[298, "SectionRef.has_parent", false]], "has_trueparent() (hoc sectionref method)": [[168, "SectionRef.has_trueparent", false]], "has_trueparent() (sectionref method)": [[298, "SectionRef.has_trueparent", false]], "hbox (built-in class)": [[303, "HBox", false]], "hbox (hoc built-in class)": [[173, "HBox", false]], "head() (hoc stringfunctions method)": [[214, "StringFunctions.head", false]], "head() (stringfunctions method)": [[338, "StringFunctions.head", false]], "help (keyword)": [[204, "index-0", false]], "hh (mechanism)": [[153, "index-2", false], [282, "index-2", false]], "hide() (hoc pwmanager method)": [[177, "PWManager.hide", false]], "hide() (pwmanager method)": [[307, "PWManager.hide", false]], "hinton() (hoc plotshape method)": [[235, "PlotShape.hinton", false]], "hinton() (plotshape method)": [[359, "PlotShape.hinton", false]], "hist() (hoc vector method)": [[201, "Vector.hist", false]], "hist() (vector method)": [[328, "Vector.hist", false]], "histogram() (hoc vector method)": [[201, "Vector.histogram", false]], "histogram() (vector method)": [[328, "Vector.histogram", false]], "hname() (section method)": [[295, "Section.hname", false]], "hoc built-in function": [[137, "ghk", false], [137, "nernst", false], [138, "attr_praxis", false], [138, "fit_praxis", false], [138, "pval_praxis", false], [138, "stop_praxis", false], [148, "hocmech", false], [149, "ion_charge", false], [149, "ion_register", false], [149, "ion_style", false], [162, "fclamp", false], [162, "fclampi", false], [162, "fclampv", false], [162, "fstim", false], [162, "fstimi", false], [162, "prstim", false], [163, "rxd.nthread", false], [163, "rxd.re_init", false], [163, "rxd.set_solve_type", false], [165, "delete_section", false], [165, "disconnect", false], [165, "id0", false], [165, "ismembrane", false], [165, "issection", false], [165, "parent_connection", false], [165, "parent_node", false], [165, "parent_section", false], [165, "psection", false], [165, "secname", false], [165, "section_exists", false], [165, "section_orientation", false], [165, "section_owner", false], [165, "sectionname", false], [166, "arc3d", false], [166, "area", false], [166, "define_shape", false], [166, "diam3d", false], [166, "distance", false], [166, "getSpineArea", false], [166, "n3d", false], [166, "pt3dadd", false], [166, "pt3dchange", false], [166, "pt3dclear", false], [166, "pt3dconst", false], [166, "pt3dinsert", false], [166, "pt3dremove", false], [166, "pt3dstyle", false], [166, "ri", false], [166, "setSpineArea", false], [166, "spine3d", false], [166, "x3d", false], [166, "y3d", false], [166, "z3d", false], [169, "pop_section", false], [169, "push_section", false], [170, "execute", false], [170, "execute1", false], [170, "load_file", false], [170, "load_func", false], [170, "load_proc", false], [170, "load_template", false], [171, "coredump_on_error", false], [171, "execerror", false], [171, "nrn_feenableexcept", false], [171, "show_errmess_always", false], [172, "boolean_dialog", false], [172, "continue_dialog", false], [172, "string_dialog", false], [175, "ivoc_style", false], [175, "pwman_place", false], [175, "variable_domain", false], [176, "nrnglobalmechmenu", false], [176, "nrnmechmenu", false], [176, "nrnpointmenu", false], [176, "nrnsecmenu", false], [182, "units", false], [182, "xbutton", false], [182, "xcheckbox", false], [182, "xfixedvalue", false], [182, "xlabel", false], [182, "xmenu", false], [182, "xpanel", false], [182, "xpvalue", false], [182, "xradiobutton", false], [182, "xslider", false], [182, "xstatebutton", false], [182, "xvalue", false], [182, "xvarlabel", false], [185, "argtype", false], [185, "numarg", false], [186, "allobjects", false], [186, "allobjectvars", false], [186, "hoc_pointer_", false], [186, "name_declared", false], [186, "object_id", false], [186, "object_pop", false], [186, "object_push", false], [186, "symbols", false], [189, "lw", false], [190, "hoc_stdio", false], [190, "printf", false], [191, "fscan", false], [191, "getstr", false], [191, "sred", false], [191, "xred", false], [192, "fprint", false], [192, "ropen", false], [192, "wopen", false], [192, "xopen", false], [194, "eqinit", false], [194, "prmat", false], [194, "solve", false], [195, "abs", false], [195, "atan", false], [195, "atan2", false], [195, "cos", false], [195, "erf", false], [195, "erfc", false], [195, "exp", false], [195, "int", false], [195, "log", false], [195, "log10", false], [195, "sin", false], [195, "sqrt", false], [195, "tanh", false], [198, "mcell_ran4", false], [198, "mcell_ran4_init", false], [198, "use_mcell_ran4", false], [205, "init", false], [205, "unref", false], [206, "this_node", false], [206, "this_section", false], [211, "nrnpython", false], [213, "sscanf", false], [215, "sprint", false], [215, "strcmp", false], [216, "WinExec", false], [216, "chdir", false], [216, "getcwd", false], [216, "machine_name", false], [216, "neuronhome", false], [216, "nrn_load_dll", false], [216, "nrnversion", false], [216, "show_winio", false], [216, "startsw", false], [216, "stopsw", false], [216, "system", false], [216, "unix_mac_pc", false], [218, "batch_run", false], [218, "batch_save", false], [222, "quit", false], [222, "retrieveaudit", false], [222, "saveaudit", false], [223, "checkpoint", false], [223, "fadvance", false], [223, "fcurrent", false], [223, "finitialize", false], [223, "fmatrix", false], [223, "frecord_init", false], [223, "initnrn", false], [226, "print_session", false], [226, "save_session", false], [232, "doEvents", false], [232, "doNotify", false], [233, "axis", false], [233, "graph", false], [233, "graphmode", false], [233, "plot", false], [233, "plotx", false], [233, "ploty", false], [233, "plt", false], [233, "regraph", false], [233, "setcolor", false], [233, "settext", false]], "hoc_ac() (neuron.hoc method)": [[314, "neuron.hoc.hoc_ac", false]], "hoc_ac_ (hoc built-in variable)": [[209, "hoc_ac_", false]], "hoc_cross_x_ (hoc built-in variable)": [[209, "hoc_cross_x_", false]], "hoc_cross_y_ (hoc built-in variable)": [[209, "hoc_cross_y_", false]], "hoc_obj_ (hoc built-in variable)": [[209, "hoc_obj_", false]], "hoc_pointer_()": [[186, "hoc_pointer_", false], [315, "hoc_pointer_", false]], "hoc_stdio()": [[190, "hoc_stdio", false]], "hoc_stdout()": [[317, "hoc_stdout", false]], "hocmech()": [[148, "hocmech", false]], "holding() (electrode method)": [[276, "Electrode.Holding", false]], "holding() (hoc electrode method)": [[147, "Electrode.Holding", false]], "hypergeo() (hoc random method)": [[200, "Random.hypergeo", false]], "hypergeo() (random method)": [[327, "Random.hypergeo", false]], "iclamp (built-in class)": [[282, "IClamp", false]], "iclamp (hoc built-in class)": [[153, "IClamp", false]], "iclamp() (electrode method)": [[276, "Electrode.IClamp", false]], "iclamp() (hoc electrode method)": [[147, "Electrode.IClamp", false]], "iconify() (hoc pwmanager method)": [[177, "PWManager.iconify", false]], "iconify() (pwmanager method)": [[307, "PWManager.iconify", false]], "id() (hoc parallelcontext method)": [[160, "ParallelContext.id", false]], "id() (parallelcontext method)": [[289, "ParallelContext.id", false]], "id_bbs() (hoc parallelcontext method)": [[160, "ParallelContext.id_bbs", false]], "id_bbs() (parallelcontext method)": [[289, "ParallelContext.id_bbs", false]], "id_world() (hoc parallelcontext method)": [[160, "ParallelContext.id_world", false]], "id_world() (parallelcontext method)": [[289, "ParallelContext.id_world", false]], "ident() (hoc matrix method)": [[197, "Matrix.ident", false]], "ident() (matrix method)": [[324, "Matrix.ident", false]], "if (keyword)": [[204, "index-5", false]], "ifsec (keyword)": [[169, "index-2", false]], "ignore() (bbsavestate method)": [[343, "BBSaveState.ignore", false]], "ignore() (hoc bbsavestate method)": [[219, "BBSaveState.ignore", false]], "impedance (built-in class)": [[264, "Impedance", false]], "impedance (hoc built-in class)": [[136, "Impedance", false]], "in() (hoc mechanismstandard method)": [[203, "MechanismStandard.in", false]], "include_flux() (rxd.node.node method)": [[292, "rxd.node.Node.include_flux", false]], "include_flux() (rxd.nodelist.nodelist method)": [[292, "rxd.nodelist.NodeList.include_flux", false]], "ind() (hoc vector method)": [[201, "Vector.ind", false]], "ind() (vector method)": [[328, "Vector.ind", false]], "index() (hoc ksgate method)": [[150, "KSGate.index", false]], "index() (hoc ksstate method)": [[150, "KSState.index", false]], "index() (hoc kstrans method)": [[150, "KSTrans.index", false]], "index() (hoc list method)": [[174, "List.index", false]], "index() (hoc vector method)": [[201, "Vector.index", false]], "index() (ksgate method)": [[279, "KSGate.index", false]], "index() (ksstate method)": [[279, "KSState.index", false]], "index() (kstrans method)": [[279, "KSTrans.index", false]], "index() (list method)": [[304, "List.index", false]], "index() (vector method)": [[328, "Vector.index", false]], "indgen() (hoc vector method)": [[201, "Vector.indgen", false]], "indgen() (vector method)": [[328, "Vector.indgen", false]], "indices() (rxd.species method)": [[292, "rxd.Species.indices", false]], "indvwhere() (hoc vector method)": [[201, "Vector.indvwhere", false]], "indvwhere() (vector method)": [[328, "Vector.indvwhere", false]], "indwhere() (hoc vector method)": [[201, "Vector.indwhere", false]], "indwhere() (vector method)": [[328, "Vector.indwhere", false]], "inf() (hoc vector method)": [[201, "Vector.inf", false]], "inf() (vector method)": [[328, "Vector.inf", false]], "inftau() (hoc kstrans method)": [[150, "KSTrans.inftau", false]], "inftau() (kstrans method)": [[279, "KSTrans.inftau", false]], "init()": [[205, "init", false]], "initnrn()": [[223, "initnrn", false], [347, "initnrn", false]], "input() (hoc impedance method)": [[136, "Impedance.input", false]], "input() (impedance method)": [[264, "Impedance.input", false]], "input_phase() (hoc impedance method)": [[136, "Impedance.input_phase", false]], "input_phase() (impedance method)": [[264, "Impedance.input_phase", false]], "insert (keyword)": [[204, "index-20", false]], "inside (rxd attribute)": [[292, "rxd.inside", false]], "inside() (guimath method)": [[323, "GUIMath.inside", false]], "inside() (hoc guimath method)": [[196, "GUIMath.inside", false]], "insrt() (hoc list method)": [[174, "List.insrt", false]], "insrt() (hoc vector method)": [[201, "Vector.insrt", false]], "insrt() (list method)": [[304, "List.insrt", false]], "insrt() (vector method)": [[328, "Vector.insrt", false]], "int()": [[195, "int", false], [322, "int", false]], "integ_time() (hoc parallelcontext method)": [[160, "ParallelContext.integ_time", false]], "integ_time() (parallelcontext method)": [[289, "ParallelContext.integ_time", false]], "integral() (hoc vector method)": [[201, "Vector.integral", false]], "integral() (vector method)": [[328, "Vector.integral", false]], "intercept() (deck method)": [[303, "Deck.intercept", false]], "intercept() (hoc deck method)": [[173, "Deck.intercept", false]], "intercept() (hoc vbox method)": [[173, "VBox.intercept", false]], "intercept() (vbox method)": [[303, "VBox.intercept", false]], "internal_type() (hoc mechanismtype method)": [[156, "MechanismType.internal_type", false]], "internal_type() (mechanismtype method)": [[285, "MechanismType.internal_type", false]], "interpolate() (hoc vector method)": [[201, "Vector.interpolate", false]], "interpolate() (vector method)": [[328, "Vector.interpolate", false]], "intfire1 (built-in class)": [[282, "IntFire1", false]], "intfire1 (hoc built-in class)": [[153, "IntFire1", false]], "intfire2 (built-in class)": [[282, "IntFire2", false]], "intfire2 (hoc built-in class)": [[153, "IntFire2", false]], "intfire4 (built-in class)": [[282, "IntFire4", false]], "intfire4 (hoc built-in class)": [[153, "IntFire4", false]], "inverse() (hoc matrix method)": [[197, "Matrix.inverse", false]], "inverse() (matrix method)": [[324, "Matrix.inverse", false]], "ion() (hoc kschan method)": [[150, "KSChan.ion", false]], "ion() (kschan method)": [[279, "KSChan.ion", false]], "ion_charge()": [[149, "ion_charge", false], [278, "ion_charge", false]], "ion_register()": [[149, "ion_register", false], [278, "ion_register", false]], "ion_style()": [[149, "ion_style", false], [278, "ion_style", false]], "is_array() (mechanismstandard method)": [[330, "MechanismStandard.is_array", false]], "is_artificial() (hoc mechanismtype method)": [[156, "MechanismType.is_artificial", false]], "is_artificial() (hoc stringfunctions method)": [[214, "StringFunctions.is_artificial", false]], "is_artificial() (mechanismtype method)": [[285, "MechanismType.is_artificial", false]], "is_artificial() (stringfunctions method)": [[338, "StringFunctions.is_artificial", false]], "is_cas() (hoc sectionref method)": [[168, "SectionRef.is_cas", false]], "is_cas() (sectionref method)": [[298, "SectionRef.is_cas", false]], "is_mapped() (hoc pwmanager method)": [[177, "PWManager.is_mapped", false]], "is_mapped() (pwmanager method)": [[307, "PWManager.is_mapped", false]], "is_name() (hoc stringfunctions method)": [[214, "StringFunctions.is_name", false]], "is_name() (stringfunctions method)": [[338, "StringFunctions.is_name", false]], "is_netcon_target() (hoc mechanismtype method)": [[156, "MechanismType.is_netcon_target", false]], "is_netcon_target() (mechanismtype method)": [[285, "MechanismType.is_netcon_target", false]], "is_point_process() (hoc stringfunctions method)": [[214, "StringFunctions.is_point_process", false]], "is_point_process() (stringfunctions method)": [[338, "StringFunctions.is_point_process", false]], "ismapped() (hoc vbox method)": [[173, "VBox.ismapped", false]], "ismapped() (vbox method)": [[303, "VBox.ismapped", false]], "ismembrane()": [[165, "ismembrane", false], [295, "ismembrane", false]], "isopen() (file method)": [[316, "File.isopen", false]], "isopen() (hoc file method)": [[188, "File.isopen", false]], "issection()": [[165, "issection", false], [295, "issection", false]], "iterator": [[185, "index-7", false]], "iv_type() (hoc kschan method)": [[150, "KSChan.iv_type", false]], "iv_type() (kschan method)": [[279, "KSChan.iv_type", false]], "ivoc_style()": [[175, "ivoc_style", false], [305, "ivoc_style", false]], "jacobian() (cvode method)": [[344, "CVode.jacobian", false]], "jacobian() (hoc cvode method)": [[220, "CVode.jacobian", false]], "kschan (built-in class)": [[279, "KSChan", false]], "kschan (hoc built-in class)": [[150, "KSChan", false]], "ksgate (built-in class)": [[279, "KSGate", false]], "ksgate (hoc built-in class)": [[150, "KSGate", false]], "ksstate (built-in class)": [[279, "KSState", false]], "ksstate (hoc built-in class)": [[150, "KSState", false]], "kstrans (built-in class)": [[279, "KSTrans", false]], "kstrans (hoc built-in class)": [[150, "KSTrans", false]], "l (built-in variable)": [[296, "L", false]], "l (hoc built-in variable)": [[166, "L", false]], "l() (glyph method)": [[352, "Glyph.l", false]], "label() (glyph method)": [[352, "Glyph.label", false]], "label() (graph method)": [[353, "Graph.label", false]], "label() (hoc glyph method)": [[228, "Glyph.label", false]], "label() (hoc graph method)": [[229, "Graph.label", false]], "label() (hoc plotshape method)": [[235, "PlotShape.label", false]], "label() (hoc shape method)": [[237, "Shape.label", false]], "label() (hoc vector method)": [[201, "Vector.label", false]], "label() (plotshape method)": [[359, "PlotShape.label", false]], "label() (ptrvector method)": [[334, "PtrVector.label", false]], "label() (shape method)": [[361, "Shape.label", false]], "label() (vector method)": [[328, "Vector.label", false]], "landscape() (hoc pwmanager method)": [[177, "PWManager.landscape", false]], "landscape() (pwmanager method)": [[307, "PWManager.landscape", false]], "leader() (hoc pwmanager method)": [[177, "PWManager.leader", false]], "leader() (pwmanager method)": [[307, "PWManager.leader", false]], "left() (hoc rangevarplot method)": [[236, "RangeVarPlot.left", false]], "left() (hoc stringfunctions method)": [[214, "StringFunctions.left", false]], "left() (rangevarplot method)": [[360, "RangeVarPlot.left", false]], "left() (stringfunctions method)": [[338, "StringFunctions.left", false]], "len() (hoc stringfunctions method)": [[214, "StringFunctions.len", false]], "len() (stringfunctions method)": [[338, "StringFunctions.len", false]], "len_scale() (hoc plotshape method)": [[235, "PlotShape.len_scale", false]], "len_scale() (hoc shape method)": [[237, "Shape.len_scale", false]], "len_scale() (plotshape method)": [[359, "PlotShape.len_scale", false]], "len_scale() (shape method)": [[361, "Shape.len_scale", false]], "ligand() (hoc kschan method)": [[150, "KSChan.ligand", false]], "ligand() (hoc kstrans method)": [[150, "KSTrans.ligand", false]], "ligand() (kschan method)": [[279, "KSChan.ligand", false]], "ligand() (kstrans method)": [[279, "KSTrans.ligand", false]], "line() (graph method)": [[353, "Graph.line", false]], "line() (hoc graph method)": [[229, "Graph.line", false]], "line() (hoc plotshape method)": [[235, "PlotShape.line", false]], "line() (hoc shape method)": [[237, "Shape.line", false]], "line() (hoc vector method)": [[201, "Vector.line", false]], "line() (plotshape method)": [[359, "PlotShape.line", false]], "line() (shape method)": [[361, "Shape.line", false]], "line() (vector method)": [[328, "Vector.line", false]], "line_info() (graph method)": [[353, "Graph.line_info", false]], "line_info() (hoc graph method)": [[229, "Graph.line_info", false]], "line_to() (hoc glyph method)": [[228, "Glyph.line_to", false]], "linearmechanism (built-in class)": [[280, "LinearMechanism", false]], "linearmechanism (hoc built-in class)": [[151, "LinearMechanism", false]], "list (built-in class)": [[304, "List", false]], "list (hoc built-in class)": [[174, "List", false]], "list() (hoc rangevarplot method)": [[236, "RangeVarPlot.list", false]], "list() (rangevarplot method)": [[360, "RangeVarPlot.list", false]], "load_file()": [[170, "load_file", false], [300, "load_file", false]], "load_func()": [[170, "load_func", false], [300, "load_func", false]], "load_proc()": [[170, "load_proc", false], [300, "load_proc", false]], "load_template()": [[170, "load_template", false], [300, "load_template", false]], "loc() (hoc impedance method)": [[136, "Impedance.loc", false]], "loc() (hoc pnt method)": [[153, "pnt.loc", false]], "loc() (impedance method)": [[264, "Impedance.loc", false]], "loc() (pnt method)": [[282, "pnt.loc", false]], "local (keyword)": [[204, "index-16", false]], "localobj (keyword)": [[204, "index-17", false]], "location() (electrode method)": [[276, "Electrode.Location", false]], "location() (hoc electrode method)": [[147, "Electrode.Location", false]], "log()": [[195, "log", false], [322, "log", false]], "log() (hoc vector method)": [[201, "Vector.log", false]], "log() (vector method)": [[328, "Vector.log", false]], "log10()": [[195, "log10", false], [322, "log10", false]], "log10() (hoc vector method)": [[201, "Vector.log10", false]], "log10() (vector method)": [[328, "Vector.log10", false]], "lognormal() (hoc random method)": [[200, "Random.lognormal", false]], "lognormal() (random method)": [[327, "Random.lognormal", false]], "look() (hoc parallelcontext method)": [[160, "ParallelContext.look", false]], "look() (parallelcontext method)": [[289, "ParallelContext.look", false]], "look_take() (hoc parallelcontext method)": [[160, "ParallelContext.look_take", false]], "look_take() (parallelcontext method)": [[289, "ParallelContext.look_take", false]], "lw()": [[189, "lw", false]], "m() (glyph method)": [[352, "Glyph.m", false]], "machine_name()": [[216, "machine_name", false], [340, "machine_name", false]], "mag() (hoc vector method)": [[201, "Vector.mag", false]], "mag() (vector method)": [[328, "Vector.mag", false]], "make() (hoc mechanismtype method)": [[156, "MechanismType.make", false]], "make() (mechanismtype method)": [[285, "MechanismType.make", false]], "make_mechanism()": [[277, "make_mechanism", false]], "make_pointprocess()": [[277, "make_pointprocess", false]], "makefamily (hoc function)": [[221, "index-0", false], [345, "index-0", false]], "manager() (hoc pwmanager method)": [[177, "PWManager.manager", false]], "manager() (pwmanager method)": [[307, "PWManager.manager", false]], "map() (deck method)": [[303, "Deck.map", false]], "map() (hoc deck method)": [[173, "Deck.map", false]], "map() (hoc pwmanager method)": [[177, "PWManager.map", false]], "map() (hoc texteditor method)": [[180, "TextEditor.map", false]], "map() (hoc vbox method)": [[173, "VBox.map", false]], "map() (pwmanager method)": [[307, "PWManager.map", false]], "map() (texteditor method)": [[310, "TextEditor.map", false]], "map() (vbox method)": [[303, "VBox.map", false]], "mark() (graph method)": [[353, "Graph.mark", false]], "mark() (hoc graph method)": [[229, "Graph.mark", false]], "mark() (hoc plotshape method)": [[235, "PlotShape.mark", false]], "mark() (hoc shape method)": [[237, "Shape.mark", false]], "mark() (hoc vector method)": [[201, "Vector.mark", false]], "mark() (plotshape method)": [[359, "PlotShape.mark", false]], "mark() (shape method)": [[361, "Shape.mark", false]], "mark() (vector method)": [[328, "Vector.mark", false]], "matrix (built-in class)": [[324, "Matrix", false]], "matrix (hoc built-in class)": [[197, "Matrix", false]], "matrix.x (built-in variable)": [[324, "Matrix.x", false]], "matrix.x (hoc built-in variable)": [[197, "Matrix.x", false]], "max() (hoc vector method)": [[201, "Vector.max", false]], "max() (vector method)": [[328, "Vector.max", false]], "max_histogram() (hoc parallelcontext method)": [[160, "ParallelContext.max_histogram", false]], "max_histogram() (parallelcontext method)": [[289, "ParallelContext.max_histogram", false]], "max_ind() (hoc vector method)": [[201, "Vector.max_ind", false]], "max_ind() (vector method)": [[328, "Vector.max_ind", false]], "maxorder() (cvode method)": [[344, "CVode.maxorder", false]], "maxorder() (hoc cvode method)": [[220, "CVode.maxorder", false]], "maxstep() (cvode method)": [[344, "CVode.maxstep", false]], "maxstep() (hoc cvode method)": [[220, "CVode.maxstep", false]], "mcell_ran4()": [[198, "mcell_ran4", false], [325, "mcell_ran4", false]], "mcell_ran4_init()": [[198, "mcell_ran4_init", false], [325, "mcell_ran4_init", false]], "mcellran4() (hoc random method)": [[200, "Random.MCellRan4", false]], "mcellran4() (random method)": [[327, "Random.MCellRan4", false]], "mean() (hoc vector method)": [[201, "Vector.mean", false]], "mean() (vector method)": [[328, "Vector.mean", false]], "meansqerr() (hoc vector method)": [[201, "Vector.meansqerr", false]], "meansqerr() (vector method)": [[328, "Vector.meansqerr", false]], "mech_time() (hoc parallelcontext method)": [[160, "ParallelContext.mech_time", false]], "mech_time() (parallelcontext method)": [[289, "ParallelContext.mech_time", false]], "mechanismstandard (built-in class)": [[330, "MechanismStandard", false]], "mechanismstandard (hoc built-in class)": [[203, "MechanismStandard", false]], "mechanismtype (built-in class)": [[285, "MechanismType", false]], "mechanismtype (hoc built-in class)": [[156, "MechanismType", false]], "medfltr() (hoc vector method)": [[201, "Vector.medfltr", false]], "medfltr() (vector method)": [[328, "Vector.medfltr", false]], "median() (hoc vector method)": [[201, "Vector.median", false]], "median() (vector method)": [[328, "Vector.median", false]], "membrane (rxd attribute)": [[292, "rxd.membrane", false]], "menu() (hoc mechanismtype method)": [[156, "MechanismType.menu", false]], "menu() (mechanismtype method)": [[285, "MechanismType.menu", false]], "menu_action() (graph method)": [[353, "Graph.menu_action", false]], "menu_action() (hoc graph method)": [[229, "Graph.menu_action", false]], "menu_action() (hoc plotshape method)": [[235, "PlotShape.menu_action", false]], "menu_action() (hoc shape method)": [[237, "Shape.menu_action", false]], "menu_action() (plotshape method)": [[359, "PlotShape.menu_action", false]], "menu_action() (shape method)": [[361, "Shape.menu_action", false]], "menu_remove() (graph method)": [[353, "Graph.menu_remove", false]], "menu_remove() (hoc graph method)": [[229, "Graph.menu_remove", false]], "menu_tool() (graph method)": [[353, "Graph.menu_tool", false]], "menu_tool() (hoc graph method)": [[229, "Graph.menu_tool", false]], "menu_tool() (hoc plotshape method)": [[235, "PlotShape.menu_tool", false]], "menu_tool() (hoc shape method)": [[237, "Shape.menu_tool", false]], "menu_tool() (plotshape method)": [[359, "PlotShape.menu_tool", false]], "menu_tool() (shape method)": [[361, "Shape.menu_tool", false]], "menuexpore (hoc class)": [[238, "index-0", false], [362, "index-0", false]], "min() (hoc vector method)": [[201, "Vector.min", false]], "min() (vector method)": [[328, "Vector.min", false]], "min_ind() (hoc vector method)": [[201, "Vector.min_ind", false]], "min_ind() (vector method)": [[328, "Vector.min_ind", false]], "minstep() (cvode method)": [[344, "CVode.minstep", false]], "minstep() (hoc cvode method)": [[220, "CVode.minstep", false]], "mktemp() (file method)": [[316, "File.mktemp", false]], "mktemp() (hoc file method)": [[188, "File.mktemp", false]], "mlcg() (hoc random method)": [[200, "Random.MLCG", false]], "mlcg() (random method)": [[327, "Random.MLCG", false]], "molecules (rxd.node.node property)": [[292, "rxd.node.Node.molecules", false]], "move_last() (deck method)": [[303, "Deck.move_last", false]], "move_last() (hoc deck method)": [[173, "Deck.move_last", false]], "move_to() (hoc glyph method)": [[228, "Glyph.move_to", false]], "mpi_init() (parallelcontext method)": [[289, "ParallelContext.mpi_init", false]], "mpiabort_on_error() (parallelcontext method)": [[289, "ParallelContext.mpiabort_on_error", false]], "mul() (hoc vector method)": [[201, "Vector.mul", false]], "mul() (vector method)": [[328, "Vector.mul", false]], "mulm() (hoc matrix method)": [[197, "Matrix.mulm", false]], "mulm() (matrix method)": [[324, "Matrix.mulm", false]], "mulrunfitter": [[133, "index-0", false], [261, "index-0", false]], "muls() (hoc matrix method)": [[197, "Matrix.muls", false]], "muls() (matrix method)": [[324, "Matrix.muls", false]], "multisplit() (hoc parallelcontext method)": [[160, "ParallelContext.multisplit", false]], "multisplit() (parallelcontext method)": [[289, "ParallelContext.multisplit", false]], "mulv() (hoc matrix method)": [[197, "Matrix.mulv", false]], "mulv() (matrix method)": [[324, "Matrix.mulv", false]], "n3d()": [[166, "n3d", false], [296, "n3d", false]], "name (rxd.region property)": [[163, "rxd.Region.name", false], [292, "rxd.Region.name", false]], "name (rxd.species property)": [[292, "rxd.Species.name", false]], "name() (hoc kschan method)": [[150, "KSChan.name", false]], "name() (hoc ksstate method)": [[150, "KSState.name", false]], "name() (hoc mechanismstandard method)": [[203, "MechanismStandard.name", false]], "name() (hoc pwmanager method)": [[177, "PWManager.name", false]], "name() (kschan method)": [[279, "KSChan.name", false]], "name() (ksstate method)": [[279, "KSState.name", false]], "name() (mechanismstandard method)": [[330, "MechanismStandard.name", false]], "name() (pwmanager method)": [[307, "PWManager.name", false]], "name() (section method)": [[295, "Section.name", false]], "name_declared()": [[186, "name_declared", false], [315, "name_declared", false]], "nc_append() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.nc_append", false]], "nc_append() (parallelnetmanager method)": [[290, "ParallelNetManager.nc_append", false]], "nchild() (hoc sectionref method)": [[168, "SectionRef.nchild", false]], "nchild() (sectionref method)": [[298, "SectionRef.nchild", false]], "ncol() (hoc matrix method)": [[197, "Matrix.ncol", false]], "ncol() (matrix method)": [[324, "Matrix.ncol", false]], "nearest() (hoc plotshape method)": [[235, "PlotShape.nearest", false]], "nearest() (hoc shape method)": [[237, "Shape.nearest", false]], "nearest() (plotshape method)": [[359, "PlotShape.nearest", false]], "nearest() (shape method)": [[361, "Shape.nearest", false]], "negexp() (hoc random method)": [[200, "Random.negexp", false]], "negexp() (random method)": [[327, "Random.negexp", false]], "nernst()": [[137, "nernst", false], [265, "nernst", false]], "netcon (built-in class)": [[288, "NetCon", false]], "netcon (hoc built-in class)": [[159, "NetCon", false]], "netcon.delay (built-in variable)": [[288, "NetCon.delay", false]], "netcon.delay (hoc built-in variable)": [[159, "NetCon.delay", false]], "netcon.threshold (built-in variable)": [[288, "NetCon.threshold", false]], "netcon.threshold (hoc built-in variable)": [[159, "NetCon.threshold", false]], "netcon.weight (built-in variable)": [[288, "NetCon.weight", false]], "netcon.weight (hoc built-in variable)": [[159, "NetCon.weight", false]], "netcon.x (built-in variable)": [[288, "NetCon.x", false]], "netcon.x (hoc built-in variable)": [[159, "NetCon.x", false]], "netconlist() (cvode method)": [[344, "CVode.netconlist", false]], "netconlist() (hoc cvode method)": [[220, "CVode.netconlist", false]], "netstim (built-in class)": [[282, "NetStim", false]], "netstim (hoc built-in class)": [[153, "NetStim", false]], "neuron.h.section (built-in class)": [[314, "neuron.h.Section", false]], "neuron.hoc.hocobject (built-in class)": [[314, "neuron.hoc.HocObject", false]], "neuronhome()": [[216, "neuronhome", false], [340, "neuronhome", false]], "new (keyword)": [[205, "index-6", false]], "new_path() (hoc glyph method)": [[228, "Glyph.new_path", false]], "ngate() (hoc kschan method)": [[150, "KSChan.ngate", false]], "ngate() (kschan method)": [[279, "KSChan.ngate", false]], "nhost() (hoc parallelcontext method)": [[160, "ParallelContext.nhost", false]], "nhost() (parallelcontext method)": [[289, "ParallelContext.nhost", false]], "nhost_bbs() (hoc parallelcontext method)": [[160, "ParallelContext.nhost_bbs", false]], "nhost_bbs() (parallelcontext method)": [[289, "ParallelContext.nhost_bbs", false]], "nhost_world() (hoc parallelcontext method)": [[160, "ParallelContext.nhost_world", false]], "nhost_world() (parallelcontext method)": [[289, "ParallelContext.nhost_world", false]], "nligand() (hoc kschan method)": [[150, "KSChan.nligand", false]], "nligand() (kschan method)": [[279, "KSChan.nligand", false]], "nmodlrandom (built-in class)": [[327, "NMODLRandom", false]], "nodes (rxd.species property)": [[292, "rxd.Species.nodes", false]], "normal() (hoc random method)": [[200, "Random.normal", false]], "normal() (random method)": [[327, "Random.normal", false]], "nrn_feenableexcept()": [[171, "nrn_feenableexcept", false], [301, "nrn_feenableexcept", false]], "nrn_load_dll()": [[216, "nrn_load_dll", false], [340, "nrn_load_dll", false]], "nrn_region (rxd.region property)": [[163, "rxd.Region.nrn_region", false], [292, "rxd.Region.nrn_region", false]], "nrncore_run() (parallelcontext method)": [[289, "ParallelContext.nrncore_run", false]], "nrncore_write() (parallelcontext method)": [[289, "ParallelContext.nrncore_write", false]], "nrnglobalmechmenu()": [[176, "nrnglobalmechmenu", false], [306, "nrnglobalmechmenu", false]], "nrnmechmenu()": [[176, "nrnmechmenu", false], [306, "nrnmechmenu", false]], "nrnpointmenu()": [[176, "nrnpointmenu", false], [306, "nrnpointmenu", false]], "nrnpython()": [[211, "nrnpython", false]], "nrnsecmenu()": [[176, "nrnsecmenu", false], [306, "nrnsecmenu", false]], "nrnversion()": [[216, "nrnversion", false], [340, "nrnversion", false]], "nrow() (hoc matrix method)": [[197, "Matrix.nrow", false]], "nrow() (matrix method)": [[324, "Matrix.nrow", false]], "nseg (hoc built-in variable)": [[165, "nseg", false]], "nstate() (hoc kschan method)": [[150, "KSChan.nstate", false]], "nstate() (hoc ksgate method)": [[150, "KSGate.nstate", false]], "nstate() (kschan method)": [[279, "KSChan.nstate", false]], "nstate() (ksgate method)": [[279, "KSGate.nstate", false]], "nthread() (hoc parallelcontext method)": [[160, "ParallelContext.nthread", false]], "nthread() (parallelcontext method)": [[289, "ParallelContext.nthread", false]], "ntrans() (hoc kschan method)": [[150, "KSChan.ntrans", false]], "ntrans() (kschan method)": [[279, "KSChan.ntrans", false]], "nullobject": [[205, "index-7", false]], "numarg()": [[185, "numarg", false]], "nworker() (parallelcontext method)": [[289, "ParallelContext.nworker", false]], "o() (hoc list method)": [[174, "List.o", false]], "o() (list method)": [[304, "List.o", false]], "obfunc": [[185, "index-6", false]], "object() (hoc list method)": [[174, "List.object", false]], "object() (list method)": [[304, "List.object", false]], "object_id()": [[186, "object_id", false], [315, "object_id", false]], "object_pop()": [[186, "object_pop", false], [315, "object_pop", false]], "object_push()": [[186, "object_push", false], [315, "object_push", false]], "objectvar (keyword)": [[205, "index-2", false]], "objref (keyword)": [[205, "index-3", false]], "observe() (hoc plotshape method)": [[235, "PlotShape.observe", false]], "observe() (hoc shape method)": [[237, "Shape.observe", false]], "observe() (plotshape method)": [[359, "PlotShape.observe", false]], "observe() (shape method)": [[361, "Shape.observe", false]], "optimize_node_order() (parallelcontext method)": [[289, "ParallelContext.optimize_node_order", false]], "order() (cvode method)": [[344, "CVode.order", false]], "order() (hoc cvode method)": [[220, "CVode.order", false]], "orientation() (section method)": [[295, "Section.orientation", false]], "origin() (hoc rangevarplot method)": [[236, "RangeVarPlot.origin", false]], "origin() (rangevarplot method)": [[360, "RangeVarPlot.origin", false]], "out() (hoc mechanismstandard method)": [[203, "MechanismStandard.out", false]], "out() (mechanismstandard method)": [[330, "MechanismStandard.out", false]], "outputcell() (hoc parallelcontext method)": [[160, "ParallelContext.outputcell", false]], "outputcell() (parallelcontext method)": [[289, "ParallelContext.outputcell", false]], "pack() (hoc parallelcontext method)": [[160, "ParallelContext.pack", false]], "pack() (parallelcontext method)": [[289, "ParallelContext.pack", false]], "panel() (hoc mechanismstandard method)": [[203, "MechanismStandard.panel", false]], "panel() (mechanismstandard method)": [[330, "MechanismStandard.panel", false]], "paper_place() (hoc pwmanager method)": [[177, "PWManager.paper_place", false]], "paper_place() (pwmanager method)": [[307, "PWManager.paper_place", false]], "parallelcontext (built-in class)": [[289, "ParallelContext", false]], "parallelcontext (hoc built-in class)": [[160, "ParallelContext", false]], "parallelnetmanager (built-in class)": [[290, "ParallelNetManager", false]], "parallelnetmanager (hoc built-in class)": [[161, "ParallelNetManager", false]], "parent() (hoc sectionref method)": [[168, "SectionRef.parent", false]], "parent_connection()": [[165, "parent_connection", false], [295, "parent_connection", false]], "parent_node()": [[165, "parent_node", false], [295, "parent_node", false]], "parent_section()": [[165, "parent_section", false], [295, "parent_section", false]], "parentseg() (section method)": [[295, "Section.parentseg", false]], "parm() (hoc kstrans method)": [[150, "KSTrans.parm", false]], "parm() (kstrans method)": [[279, "KSTrans.parm", false]], "partition() (hoc parallelcontext method)": [[160, "ParallelContext.partition", false]], "partition() (parallelcontext method)": [[289, "ParallelContext.partition", false]], "pas (mechanism)": [[153, "index-3", false], [282, "index-3", false]], "path() (glyph method)": [[352, "Glyph.path", false]], "patternstim (built-in class)": [[282, "PatternStim", false]], "pcontinue() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.pcontinue", false]], "pcontinue() (parallelnetmanager method)": [[290, "ParallelNetManager.pcontinue", false]], "pinit() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.pinit", false]], "pinit() (parallelnetmanager method)": [[290, "ParallelNetManager.pinit", false]], "play() (hoc random method)": [[200, "Random.play", false]], "play() (hoc vector method)": [[201, "Vector.play", false]], "play() (random method)": [[327, "Random.play", false]], "play() (vector method)": [[328, "Vector.play", false]], "play_remove() (hoc vector method)": [[201, "Vector.play_remove", false]], "play_remove() (vector method)": [[328, "Vector.play_remove", false]], "plot()": [[233, "plot", false], [357, "plot", false]], "plot() (graph method)": [[353, "Graph.plot", false]], "plot() (hoc graph method)": [[229, "Graph.plot", false]], "plot() (hoc vector method)": [[201, "Vector.plot", false]], "plot() (plotshape method)": [[359, "PlotShape.plot", false]], "plot() (ptrvector method)": [[334, "PtrVector.plot", false]], "plot() (rangevarplot method)": [[360, "RangeVarPlot.plot", false]], "plot() (vector method)": [[328, "Vector.plot", false]], "ploterr() (hoc vector method)": [[201, "Vector.ploterr", false]], "ploterr() (vector method)": [[328, "Vector.ploterr", false]], "plotshape (built-in class)": [[359, "PlotShape", false]], "plotshape (hoc built-in class)": [[235, "PlotShape", false]], "plotx()": [[233, "plotx", false], [357, "plotx", false]], "ploty()": [[233, "ploty", false], [357, "ploty", false]], "plt()": [[233, "plt", false], [357, "plt", false]], "point_mark() (hoc shape method)": [[237, "Shape.point_mark", false]], "point_mark() (shape method)": [[361, "Shape.point_mark", false]], "point_mark_remove() (hoc shape method)": [[237, "Shape.point_mark_remove", false]], "point_mark_remove() (shape method)": [[361, "Shape.point_mark_remove", false]], "pointer (built-in class)": [[333, "Pointer", false]], "pointer (hoc built-in class)": [[207, "Pointer", false]], "pointprocesslocator (hoc class)": [[238, "index-1", false], [362, "index-1", false]], "poisson() (hoc random method)": [[200, "Random.poisson", false]], "poisson() (random method)": [[327, "Random.poisson", false]], "poolshrink() (cvode method)": [[344, "CVode.poolshrink", false]], "poolshrink() (hoc cvode method)": [[220, "CVode.poolshrink", false]], "pop_section()": [[169, "pop_section", false], [299, "pop_section", false]], "post() (hoc parallelcontext method)": [[160, "ParallelContext.post", false]], "post() (parallelcontext method)": [[289, "ParallelContext.post", false]], "postcell() (hoc netcon method)": [[159, "NetCon.postcell", false]], "postcell() (netcon method)": [[288, "NetCon.postcell", false]], "postcelllist() (hoc netcon method)": [[159, "NetCon.postcelllist", false]], "postcelllist() (netcon method)": [[288, "NetCon.postcelllist", false]], "postloc() (hoc netcon method)": [[159, "NetCon.postloc", false]], "postloc() (netcon method)": [[288, "NetCon.postloc", false]], "postseg() (netcon method)": [[288, "NetCon.postseg", false]], "pow() (hoc matrix method)": [[197, "Matrix.pow", false]], "pow() (hoc vector method)": [[201, "Vector.pow", false]], "pow() (matrix method)": [[324, "Matrix.pow", false]], "pow() (vector method)": [[328, "Vector.pow", false]], "power() (hoc ksgate method)": [[150, "KSGate.power", false]], "power() (ksgate method)": [[279, "KSGate.power", false]], "pp_begin() (hoc mechanismtype method)": [[156, "MechanismType.pp_begin", false]], "pp_begin() (mechanismtype method)": [[285, "MechanismType.pp_begin", false]], "pp_next() (hoc mechanismtype method)": [[156, "MechanismType.pp_next", false]], "pp_next() (mechanismtype method)": [[285, "MechanismType.pp_next", false]], "pr() (hoc kschan method)": [[150, "KSChan.pr", false]], "pr() (kschan method)": [[279, "KSChan.pr", false]], "prcellstate() (hoc parallelcontext method)": [[160, "ParallelContext.prcellstate", false]], "prcellstate() (parallelcontext method)": [[289, "ParallelContext.prcellstate", false]], "pre() (hoc netcon method)": [[159, "NetCon.pre", false]], "pre() (netcon method)": [[288, "NetCon.pre", false]], "precell() (hoc netcon method)": [[159, "NetCon.precell", false]], "precell() (netcon method)": [[288, "NetCon.precell", false]], "precelllist() (hoc netcon method)": [[159, "NetCon.precelllist", false]], "precelllist() (netcon method)": [[288, "NetCon.precelllist", false]], "prelist() (hoc netcon method)": [[159, "NetCon.prelist", false]], "prelist() (netcon method)": [[288, "NetCon.prelist", false]], "preloc() (hoc netcon method)": [[159, "NetCon.preloc", false]], "preloc() (netcon method)": [[288, "NetCon.preloc", false]], "prepend() (hoc list method)": [[174, "List.prepend", false]], "prepend() (list method)": [[304, "List.prepend", false]], "preseg() (netcon method)": [[288, "NetCon.preseg", false]], "print (keyword)": [[204, "index-9", false]], "print_event_queue() (cvode method)": [[344, "CVode.print_event_queue", false]], "print_event_queue() (hoc cvode method)": [[220, "CVode.print_event_queue", false]], "print_session()": [[226, "print_session", false], [350, "print_session", false]], "printf()": [[190, "printf", false], [317, "printf", false]], "printf() (file method)": [[316, "File.printf", false]], "printf() (hoc file method)": [[188, "File.printf", false]], "printf() (hoc matrix method)": [[197, "Matrix.printf", false]], "printf() (hoc vector method)": [[201, "Vector.printf", false]], "printf() (matrix method)": [[324, "Matrix.printf", false]], "printf() (vector method)": [[328, "Vector.printf", false]], "printfile() (graph method)": [[353, "Graph.printfile", false]], "printfile() (hoc graph method)": [[229, "Graph.printfile", false]], "printfile() (hoc plotshape method)": [[235, "PlotShape.printfile", false]], "printfile() (hoc pwmanager method)": [[177, "PWManager.printfile", false]], "printfile() (hoc shape method)": [[237, "Shape.printfile", false]], "printfile() (plotshape method)": [[359, "PlotShape.printfile", false]], "printfile() (pwmanager method)": [[307, "PWManager.printfile", false]], "printfile() (shape method)": [[361, "Shape.printfile", false]], "printnames() (hoc sectionlist method)": [[167, "SectionList.printnames", false]], "printnames() (sectionlist method)": [[297, "SectionList.printnames", false]], "priority() (hoc vbox method)": [[173, "VBox.priority", false]], "priority() (vbox method)": [[303, "VBox.priority", false]], "prmat()": [[194, "prmat", false], [321, "prmat", false]], "proc": [[185, "index-4", false]], "prstat() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.prstat", false]], "prstat() (parallelnetmanager method)": [[290, "ParallelNetManager.prstat", false]], "prstim()": [[162, "prstim", false], [291, "prstim", false]], "prun() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.prun", false]], "prun() (parallelnetmanager method)": [[290, "ParallelNetManager.prun", false]], "psection()": [[165, "psection", false], [295, "psection", false]], "pset() (hoc ptrvector method)": [[208, "PtrVector.pset", false]], "pset() (ptrvector method)": [[334, "PtrVector.pset", false]], "psolve() (hoc parallelcontext method)": [[160, "ParallelContext.psolve", false]], "psolve() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.psolve", false]], "psolve() (parallelcontext method)": [[289, "ParallelContext.psolve", false]], "psolve() (parallelnetmanager method)": [[290, "ParallelNetManager.psolve", false]], "psth() (hoc vector method)": [[201, "Vector.psth", false]], "psth() (vector method)": [[328, "Vector.psth", false]], "pt3dadd()": [[166, "pt3dadd", false], [296, "pt3dadd", false]], "pt3dchange()": [[166, "pt3dchange", false], [296, "pt3dchange", false]], "pt3dclear()": [[166, "pt3dclear", false], [296, "pt3dclear", false]], "pt3dconst()": [[166, "pt3dconst", false], [296, "pt3dconst", false]], "pt3dinsert()": [[166, "pt3dinsert", false], [296, "pt3dinsert", false]], "pt3dremove()": [[166, "pt3dremove", false], [296, "pt3dremove", false]], "pt3dstyle()": [[166, "pt3dstyle", false], [296, "pt3dstyle", false]], "ptr_update_callback() (hoc ptrvector method)": [[208, "PtrVector.ptr_update_callback", false]], "ptr_update_callback() (ptrvector method)": [[334, "PtrVector.ptr_update_callback", false]], "ptrvector (built-in class)": [[334, "PtrVector", false]], "ptrvector (hoc built-in class)": [[208, "PtrVector", false]], "public (keyword)": [[205, "index-4", false]], "push_section()": [[169, "push_section", false], [299, "push_section", false]], "push_selected() (hoc plotshape method)": [[235, "PlotShape.push_selected", false]], "push_selected() (hoc shape method)": [[237, "Shape.push_selected", false]], "push_selected() (plotshape method)": [[359, "PlotShape.push_selected", false]], "push_selected() (shape method)": [[361, "Shape.push_selected", false]], "pval_praxis()": [[138, "pval_praxis", false], [266, "pval_praxis", false]], "pwman_place()": [[175, "pwman_place", false], [305, "pwman_place", false]], "pwmanager (built-in class)": [[307, "PWManager", false]], "pwmanager (hoc built-in class)": [[177, "PWManager", false]], "py_allgather() (parallelcontext method)": [[289, "ParallelContext.py_allgather", false]], "py_alltoall() (hoc parallelcontext method)": [[160, "ParallelContext.py_alltoall", false]], "py_alltoall() (parallelcontext method)": [[289, "ParallelContext.py_alltoall", false]], "py_broadcast() (parallelcontext method)": [[289, "ParallelContext.py_broadcast", false]], "py_gather() (parallelcontext method)": [[289, "ParallelContext.py_gather", false]], "py_scatter() (parallelcontext method)": [[289, "ParallelContext.py_scatter", false]], "pyret() (hoc parallelcontext method)": [[160, "ParallelContext.pyret", false]], "pyret() (parallelcontext method)": [[289, "ParallelContext.pyret", false]], "pythonobject (hoc built-in class)": [[211, "PythonObject", false]], "queue_mode() (cvode method)": [[344, "CVode.queue_mode", false]], "queue_mode() (hoc cvode method)": [[220, "CVode.queue_mode", false]], "quit()": [[222, "quit", false], [346, "quit", false]], "ra (built-in variable)": [[296, "Ra", false]], "ra (hoc built-in variable)": [[166, "Ra", false]], "random (built-in class)": [[327, "Random", false]], "random (hoc built-in class)": [[200, "Random", false]], "random123() (hoc random method)": [[200, "Random.Random123", false]], "random123() (random method)": [[327, "Random.Random123", false]], "random123_globalindex() (hoc random method)": [[200, "Random.Random123_globalindex", false]], "random123_globalindex() (random method)": [[327, "Random.Random123_globalindex", false]], "rangevarplot (built-in class)": [[360, "RangeVarPlot", false]], "rangevarplot (hoc built-in class)": [[236, "RangeVarPlot", false]], "ratio() (hoc impedance method)": [[136, "Impedance.ratio", false]], "ratio() (impedance method)": [[264, "Impedance.ratio", false]], "re_init() (cvode method)": [[344, "CVode.re_init", false]], "re_init() (hoc cvode method)": [[220, "CVode.re_init", false]], "re_init() (rxd.species method)": [[292, "rxd.Species.re_init", false]], "read (keyword)": [[204, "index-11", false]], "readonly() (hoc texteditor method)": [[180, "TextEditor.readonly", false]], "readonly() (texteditor method)": [[310, "TextEditor.readonly", false]], "rebin() (hoc vector method)": [[201, "Vector.rebin", false]], "rebin() (vector method)": [[328, "Vector.rebin", false]], "record() (cvode method)": [[344, "CVode.record", false]], "record() (hoc cvode method)": [[220, "CVode.record", false]], "record() (hoc netcon method)": [[159, "NetCon.record", false]], "record() (hoc vector method)": [[201, "Vector.record", false]], "record() (netcon method)": [[288, "NetCon.record", false]], "record() (vector method)": [[328, "Vector.record", false]], "record_remove() (cvode method)": [[344, "CVode.record_remove", false]], "record_remove() (hoc cvode method)": [[220, "CVode.record_remove", false]], "reduce() (hoc vector method)": [[201, "Vector.reduce", false]], "reduce() (vector method)": [[328, "Vector.reduce", false]], "ref() (hoc vbox method)": [[173, "VBox.ref", false]], "ref() (vbox method)": [[303, "VBox.ref", false]], "references() (hoc stringfunctions method)": [[214, "StringFunctions.references", false]], "references() (stringfunctions method)": [[338, "StringFunctions.references", false]], "region (rxd.node.node property)": [[292, "rxd.node.Node.region", false]], "region (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.region", false]], "regions (rxd.species property)": [[292, "rxd.Species.regions", false]], "register_cell() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.register_cell", false]], "register_cell() (parallelnetmanager method)": [[290, "ParallelNetManager.register_cell", false]], "regraph()": [[233, "regraph", false], [357, "regraph", false]], "relative() (graph method)": [[353, "Graph.relative", false]], "relative() (hoc graph method)": [[229, "Graph.relative", false]], "remove() (deck method)": [[303, "Deck.remove", false]], "remove() (hoc deck method)": [[173, "Deck.remove", false]], "remove() (hoc list method)": [[174, "List.remove", false]], "remove() (hoc mechanismtype method)": [[156, "MechanismType.remove", false]], "remove() (hoc sectionlist method)": [[167, "SectionList.remove", false]], "remove() (hoc vector method)": [[201, "Vector.remove", false]], "remove() (list method)": [[304, "List.remove", false]], "remove() (mechanismtype method)": [[285, "MechanismType.remove", false]], "remove() (sectionlist method)": [[297, "SectionList.remove", false]], "remove() (vector method)": [[328, "Vector.remove", false]], "remove_all() (hoc list method)": [[174, "List.remove_all", false]], "remove_all() (list method)": [[304, "List.remove_all", false]], "remove_last() (deck method)": [[303, "Deck.remove_last", false]], "remove_last() (hoc deck method)": [[173, "Deck.remove_last", false]], "remove_state() (hoc kschan method)": [[150, "KSChan.remove_state", false]], "remove_state() (kschan method)": [[279, "KSChan.remove_state", false]], "remove_transition() (hoc kschan method)": [[150, "KSChan.remove_transition", false]], "remove_transition() (kschan method)": [[279, "KSChan.remove_transition", false]], "repick() (hoc random method)": [[200, "Random.repick", false]], "repick() (random method)": [[327, "Random.repick", false]], "resample() (hoc vector method)": [[201, "Vector.resample", false]], "resample() (vector method)": [[328, "Vector.resample", false]], "resize() (hoc matrix method)": [[197, "Matrix.resize", false]], "resize() (hoc ptrvector method)": [[208, "PtrVector.resize", false]], "resize() (hoc vector method)": [[201, "Vector.resize", false]], "resize() (matrix method)": [[324, "Matrix.resize", false]], "resize() (ptrvector method)": [[334, "PtrVector.resize", false]], "resize() (vector method)": [[328, "Vector.resize", false]], "restore() (bbsavestate method)": [[343, "BBSaveState.restore", false]], "restore() (hoc savestate method)": [[225, "SaveState.restore", false]], "restore() (savestate method)": [[349, "SaveState.restore", false]], "restore_test() (bbsavestate method)": [[343, "BBSaveState.restore_test", false]], "restore_test() (hoc bbsavestate method)": [[219, "BBSaveState.restore_test", false]], "retrieveaudit()": [[222, "retrieveaudit", false], [346, "retrieveaudit", false]], "return (keyword)": [[204, "index-1", false]], "returnlevel() (electrode method)": [[276, "Electrode.Returnlevel", false]], "returnlevel() (hoc electrode method)": [[147, "Electrode.Returnlevel", false]], "retval() (hoc parallelcontext method)": [[160, "ParallelContext.retval", false]], "retval() (parallelcontext method)": [[289, "ParallelContext.retval", false]], "reverse() (hoc vector method)": [[201, "Vector.reverse", false]], "reverse() (vector method)": [[328, "Vector.reverse", false]], "ri()": [[166, "ri", false], [296, "ri", false]], "right() (hoc rangevarplot method)": [[236, "RangeVarPlot.right", false]], "right() (hoc stringfunctions method)": [[214, "StringFunctions.right", false]], "right() (rangevarplot method)": [[360, "RangeVarPlot.right", false]], "right() (stringfunctions method)": [[338, "StringFunctions.right", false]], "root() (hoc sectionref method)": [[168, "SectionRef.root", false]], "ropen()": [[192, "ropen", false], [319, "id0", false]], "ropen() (file method)": [[316, "File.ropen", false]], "ropen() (hoc file method)": [[188, "File.ropen", false]], "rotate() (hoc plotshape method)": [[235, "PlotShape.rotate", false]], "rotate() (hoc shape method)": [[237, "Shape.rotate", false]], "rotate() (hoc vector method)": [[201, "Vector.rotate", false]], "rotate() (plotshape method)": [[359, "PlotShape.rotate", false]], "rotate() (shape method)": [[361, "Shape.rotate", false]], "rotate() (vector method)": [[328, "Vector.rotate", false]], "round_robin() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.round_robin", false]], "round_robin() (parallelnetmanager method)": [[290, "ParallelNetManager.round_robin", false]], "rtol() (cvode method)": [[344, "CVode.rtol", false]], "rtol() (hoc cvode method)": [[220, "CVode.rtol", false]], "run() (hoc symchooser method)": [[179, "SymChooser.run", false]], "run() (symchooser method)": [[309, "SymChooser.run", false]], "runworker() (hoc parallelcontext method)": [[160, "ParallelContext.runworker", false]], "runworker() (parallelcontext method)": [[289, "ParallelContext.runworker", false]], "rxd.distributedboundary (built-in class)": [[292, "rxd.DistributedBoundary", false]], "rxd.export.sbml()": [[292, "rxd.export.sbml", false]], "rxd.extracellular (built-in class)": [[292, "rxd.Extracellular", false]], "rxd.extracellular (hoc built-in class)": [[163, "rxd.Extracellular", false]], "rxd.fixedcrosssection (built-in class)": [[292, "rxd.FixedCrossSection", false]], "rxd.fixedperimeter (built-in class)": [[292, "rxd.FixedPerimeter", false]], "rxd.fractionalvolume (built-in class)": [[292, "rxd.FractionalVolume", false]], "rxd.multicompartmentreaction (built-in class)": [[292, "rxd.MultiCompartmentReaction", false]], "rxd.multicompartmentreaction (hoc built-in class)": [[163, "rxd.MultiCompartmentReaction", false]], "rxd.node.node (built-in class)": [[292, "rxd.node.Node", false]], "rxd.node.node1d (built-in class)": [[292, "rxd.node.Node1D", false]], "rxd.node.node3d (built-in class)": [[292, "rxd.node.Node3D", false]], "rxd.node.nodeextracellular (built-in class)": [[292, "rxd.node.NodeExtracellular", false]], "rxd.nodelist.nodelist (built-in class)": [[292, "rxd.nodelist.NodeList", false]], "rxd.nodelist.nodelist (hoc built-in class)": [[163, "rxd.nodelist.NodeList", false]], "rxd.nthread()": [[163, "rxd.nthread", false], [292, "rxd.nthread", false]], "rxd.parameter (built-in class)": [[292, "rxd.Parameter", false]], "rxd.parameter (hoc built-in class)": [[163, "rxd.Parameter", false]], "rxd.rate (built-in class)": [[292, "rxd.Rate", false]], "rxd.rate (hoc built-in class)": [[163, "rxd.Rate", false]], "rxd.re_init()": [[163, "rxd.re_init", false], [292, "rxd.re_init", false]], "rxd.reaction (built-in class)": [[292, "rxd.Reaction", false]], "rxd.reaction (hoc built-in class)": [[163, "rxd.Reaction", false]], "rxd.region (built-in class)": [[292, "rxd.Region", false]], "rxd.region (hoc built-in class)": [[163, "rxd.Region", false]], "rxd.rxdexception (built-in class)": [[292, "rxd.RxDException", false]], "rxd.rxdexception (hoc built-in class)": [[163, "rxd.RxDException", false]], "rxd.scalableborder (built-in class)": [[292, "rxd.ScalableBorder", false]], "rxd.set_solve_type()": [[163, "rxd.set_solve_type", false], [292, "rxd.set_solve_type", false]], "rxd.shell (built-in class)": [[292, "rxd.Shell", false]], "rxd.species (built-in class)": [[292, "rxd.Species", false]], "rxd.species (hoc built-in class)": [[163, "rxd.Species", false]], "rxd.state (built-in class)": [[292, "rxd.State", false]], "rxd.state (hoc built-in class)": [[163, "rxd.State", false]], "rxdmath.acos()": [[293, "rxdmath.acos", false]], "rxdmath.acosh()": [[293, "rxdmath.acosh", false]], "rxdmath.asin()": [[293, "rxdmath.asin", false]], "rxdmath.asinh()": [[293, "rxdmath.asinh", false]], "rxdmath.atan()": [[293, "rxdmath.atan", false]], "rxdmath.atan2()": [[293, "rxdmath.atan2", false]], "rxdmath.ceil()": [[293, "rxdmath.ceil", false]], "rxdmath.copysign()": [[293, "rxdmath.copysign", false]], "rxdmath.cos()": [[293, "rxdmath.cos", false]], "rxdmath.cosh()": [[293, "rxdmath.cosh", false]], "rxdmath.degrees()": [[293, "rxdmath.degrees", false]], "rxdmath.erf()": [[293, "rxdmath.erf", false]], "rxdmath.erfc()": [[293, "rxdmath.erfc", false]], "rxdmath.exp()": [[293, "rxdmath.exp", false]], "rxdmath.expm1()": [[293, "rxdmath.expm1", false]], "rxdmath.fabs()": [[293, "rxdmath.fabs", false]], "rxdmath.factorial()": [[293, "rxdmath.factorial", false]], "rxdmath.floor()": [[293, "rxdmath.floor", false]], "rxdmath.fmod()": [[293, "rxdmath.fmod", false]], "rxdmath.gamma()": [[293, "rxdmath.gamma", false]], "rxdmath.lgamma()": [[293, "rxdmath.lgamma", false]], "rxdmath.log()": [[293, "rxdmath.log", false]], "rxdmath.log10()": [[293, "rxdmath.log10", false]], "rxdmath.log1p()": [[293, "rxdmath.log1p", false]], "rxdmath.pow()": [[293, "rxdmath.pow", false]], "rxdmath.radians()": [[293, "rxdmath.radians", false]], "rxdmath.sin()": [[293, "rxdmath.sin", false]], "rxdmath.sinh()": [[293, "rxdmath.sinh", false]], "rxdmath.sqrt()": [[293, "rxdmath.sqrt", false]], "rxdmath.tan()": [[293, "rxdmath.tan", false]], "rxdmath.tanh()": [[293, "rxdmath.tanh", false]], "rxdmath.trunc()": [[293, "rxdmath.trunc", false]], "rxdmath.vtrap()": [[293, "rxdmath.vtrap", false]], "s() (glyph method)": [[352, "Glyph.s", false]], "s() (hoc pointer method)": [[207, "Pointer.s", false]], "s() (pointer method)": [[333, "Pointer.s", false]], "satisfies() (rxd.node.node method)": [[292, "rxd.node.Node.satisfies", false]], "satisfies() (rxd.node.node1d method)": [[292, "rxd.node.Node1D.satisfies", false]], "satisfies() (rxd.node.node3d method)": [[292, "rxd.node.Node3D.satisfies", false]], "satisfies() (rxd.node.nodeextracellular method)": [[292, "rxd.node.NodeExtracellular.satisfies", false]], "save() (bbsavestate method)": [[343, "BBSaveState.save", false]], "save() (deck method)": [[303, "Deck.save", false]], "save() (hoc deck method)": [[173, "Deck.save", false]], "save() (hoc mechanismstandard method)": [[203, "MechanismStandard.save", false]], "save() (hoc pwmanager method)": [[177, "PWManager.save", false]], "save() (hoc savestate method)": [[225, "SaveState.save", false]], "save() (hoc vbox method)": [[173, "VBox.save", false]], "save() (mechanismstandard method)": [[330, "MechanismStandard.save", false]], "save() (pwmanager method)": [[307, "PWManager.save", false]], "save() (savestate method)": [[349, "SaveState.save", false]], "save() (vbox method)": [[303, "VBox.save", false]], "save_name() (graph method)": [[353, "Graph.save_name", false]], "save_name() (hoc graph method)": [[229, "Graph.save_name", false]], "save_name() (hoc plotshape method)": [[235, "PlotShape.save_name", false]], "save_name() (hoc shape method)": [[237, "Shape.save_name", false]], "save_name() (plotshape method)": [[359, "PlotShape.save_name", false]], "save_name() (shape method)": [[361, "Shape.save_name", false]], "save_session()": [[226, "save_session", false], [350, "save_session", false]], "save_test() (bbsavestate method)": [[343, "BBSaveState.save_test", false]], "save_test() (hoc bbsavestate method)": [[219, "BBSaveState.save_test", false]], "saveaudit()": [[222, "saveaudit", false], [346, "saveaudit", false]], "savestate (built-in class)": [[349, "SaveState", false]], "savestate (hoc built-in class)": [[225, "SaveState", false]], "scale() (hoc plotshape method)": [[235, "PlotShape.scale", false]], "scale() (hoc pwmanager method)": [[177, "PWManager.scale", false]], "scale() (hoc vector method)": [[201, "Vector.scale", false]], "scale() (plotshape method)": [[359, "PlotShape.scale", false]], "scale() (pwmanager method)": [[307, "PWManager.scale", false]], "scale() (vector method)": [[328, "Vector.scale", false]], "scanf() (hoc matrix method)": [[197, "Matrix.scanf", false]], "scanf() (hoc vector method)": [[201, "Vector.scanf", false]], "scanf() (matrix method)": [[324, "Matrix.scanf", false]], "scanf() (vector method)": [[328, "Vector.scanf", false]], "scanstr() (file method)": [[316, "File.scanstr", false]], "scanstr() (hoc file method)": [[188, "File.scanstr", false]], "scantil() (hoc vector method)": [[201, "Vector.scantil", false]], "scantil() (vector method)": [[328, "Vector.scantil", false]], "scanvar() (file method)": [[316, "File.scanvar", false]], "scanvar() (hoc file method)": [[188, "File.scanvar", false]], "scatter() (hoc ptrvector method)": [[208, "PtrVector.scatter", false]], "scatter() (ptrvector method)": [[334, "PtrVector.scatter", false]], "scroll_pos() (hoc list method)": [[174, "List.scroll_pos", false]], "scroll_pos() (list method)": [[304, "List.scroll_pos", false]], "sec (rxd.node.node1d property)": [[292, "rxd.node.Node1D.sec", false]], "sec (rxd.node.node3d property)": [[292, "rxd.node.Node3D.sec", false]], "sec() (hoc sectionref method)": [[168, "SectionRef.sec", false]], "sec_in_thread() (hoc parallelcontext method)": [[160, "ParallelContext.sec_in_thread", false]], "sec_in_thread() (parallelcontext method)": [[289, "ParallelContext.sec_in_thread", false]], "seclamp (built-in class)": [[282, "SEClamp", false]], "seclamp (hoc built-in class)": [[153, "SEClamp", false]], "secname()": [[165, "secname", false], [295, "secname", false]], "secondorder (built-in variable)": [[347, "secondorder", false]], "secondorder (hoc built-in variable)": [[223, "secondorder", false]], "seconds() (hoc timer method)": [[217, "Timer.seconds", false]], "seconds() (timer method)": [[341, "Timer.seconds", false]], "secs (rxd.region property)": [[163, "rxd.Region.secs", false], [292, "rxd.Region.secs", false]], "section (built-in class)": [[295, "Section", false]], "section.nseg (built-in variable)": [[295, "Section.nseg", false]], "section_exists()": [[165, "section_exists", false], [295, "section_exists", false]], "section_orientation()": [[165, "section_orientation", false], [295, "section_orientation", false]], "section_owner()": [[165, "section_owner", false], [295, "section_owner", false]], "sectionbrowser (built-in class)": [[308, "SectionBrowser", false]], "sectionbrowser (hoc built-in class)": [[178, "SectionBrowser", false]], "sectionlist (built-in class)": [[297, "SectionList", false]], "sectionlist (hoc built-in class)": [[167, "SectionList", false]], "sectionname()": [[165, "sectionname", false], [295, "sectionname", false]], "sectionref (built-in class)": [[298, "SectionRef", false]], "sectionref (hoc built-in class)": [[168, "SectionRef", false]], "sectionref.child (built-in variable)": [[298, "SectionRef.child", false]], "sectionref.parent (built-in variable)": [[298, "SectionRef.parent", false]], "sectionref.root (built-in variable)": [[298, "SectionRef.root", false]], "sectionref.sec (built-in variable)": [[298, "SectionRef.sec", false]], "sectionref.trueparent (built-in variable)": [[298, "SectionRef.trueparent", false]], "seek() (file method)": [[316, "File.seek", false]], "seek() (hoc file method)": [[188, "File.seek", false]], "segment (rxd.node.node1d property)": [[292, "rxd.node.Node1D.segment", false]], "segment (rxd.node.node3d property)": [[292, "rxd.node.Node3D.segment", false]], "segment (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.segment", false]], "select() (hoc list method)": [[174, "List.select", false]], "select() (hoc mechanismtype method)": [[156, "MechanismType.select", false]], "select() (hoc sectionbrowser method)": [[178, "SectionBrowser.select", false]], "select() (hoc shape method)": [[237, "Shape.select", false]], "select() (list method)": [[304, "List.select", false]], "select() (mechanismtype method)": [[285, "MechanismType.select", false]], "select() (sectionbrowser method)": [[308, "SectionBrowser.select", false]], "select() (shape method)": [[361, "Shape.select", false]], "select_action() (hoc list method)": [[174, "List.select_action", false]], "select_action() (hoc sectionbrowser method)": [[178, "SectionBrowser.select_action", false]], "select_action() (list method)": [[304, "List.select_action", false]], "select_action() (sectionbrowser method)": [[308, "SectionBrowser.select_action", false]], "selected() (hoc list method)": [[174, "List.selected", false]], "selected() (hoc mechanismtype method)": [[156, "MechanismType.selected", false]], "selected() (list method)": [[304, "List.selected", false]], "selected() (mechanismtype method)": [[285, "MechanismType.selected", false]], "send_time() (hoc parallelcontext method)": [[160, "ParallelContext.send_time", false]], "send_time() (parallelcontext method)": [[289, "ParallelContext.send_time", false]], "seq() (hoc random method)": [[200, "Random.seq", false]], "seq() (random method)": [[327, "Random.seq", false]], "set() (hoc mechanismstandard method)": [[203, "MechanismStandard.set", false]], "set() (hoc vector method)": [[201, "Vector.set", false]], "set() (mechanismstandard method)": [[330, "MechanismStandard.set", false]], "set() (vector method)": [[328, "Vector.set", false]], "set_f() (hoc kstrans method)": [[150, "KSTrans.set_f", false]], "set_f() (kstrans method)": [[279, "KSTrans.set_f", false]], "set_gid2node() (hoc parallelcontext method)": [[160, "ParallelContext.set_gid2node", false]], "set_gid2node() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.set_gid2node", false]], "set_gid2node() (parallelcontext method)": [[289, "ParallelContext.set_gid2node", false]], "set_gid2node() (parallelnetmanager method)": [[290, "ParallelNetManager.set_gid2node", false]], "set_ids() (nmodlrandom method)": [[327, "NMODLRandom.set_ids", false]], "set_maxstep() (hoc parallelcontext method)": [[160, "ParallelContext.set_maxstep", false]], "set_maxstep() (parallelcontext method)": [[289, "ParallelContext.set_maxstep", false]], "set_seq() (nmodlrandom method)": [[327, "NMODLRandom.set_seq", false]], "setcol() (hoc matrix method)": [[197, "Matrix.setcol", false]], "setcol() (matrix method)": [[324, "Matrix.setcol", false]], "setcolor()": [[233, "setcolor", false], [357, "setcolor", false]], "setdata (mechanism)": [[153, "index-0", false], [282, "index-0", false]], "setdiag() (hoc matrix method)": [[197, "Matrix.setdiag", false]], "setdiag() (matrix method)": [[324, "Matrix.setdiag", false]], "setpointer (keyword)": [[204, "index-19", false]], "setpost() (hoc netcon method)": [[159, "NetCon.setpost", false]], "setpost() (netcon method)": [[288, "NetCon.setpost", false]], "setrand() (hoc vector method)": [[201, "Vector.setrand", false]], "setrand() (vector method)": [[328, "Vector.setrand", false]], "setrow() (hoc matrix method)": [[197, "Matrix.setrow", false]], "setrow() (matrix method)": [[324, "Matrix.setrow", false]], "setspinearea()": [[166, "setSpineArea", false], [296, "setSpineArea", false]], "setstructure() (hoc kschan method)": [[150, "KSChan.setstructure", false]], "setstructure() (kschan method)": [[279, "KSChan.setstructure", false]], "settext()": [[233, "settext", false], [357, "settext", false]], "setup_transfer() (hoc parallelcontext method)": [[160, "ParallelContext.setup_transfer", false]], "setup_transfer() (parallelcontext method)": [[289, "ParallelContext.setup_transfer", false]], "setval() (hoc matrix method)": [[197, "Matrix.setval", false]], "setval() (hoc ptrvector method)": [[208, "PtrVector.setval", false]], "setval() (matrix method)": [[324, "Matrix.setval", false]], "setval() (ptrvector method)": [[334, "PtrVector.setval", false]], "shape (built-in class)": [[361, "Shape", false]], "shape (hoc built-in class)": [[237, "Shape", false]], "show() (hoc plotshape method)": [[235, "PlotShape.show", false]], "show() (hoc shape method)": [[237, "Shape.show", false]], "show() (plotshape method)": [[359, "PlotShape.show", false]], "show() (shape method)": [[361, "Shape.show", false]], "show_errmess_always()": [[171, "show_errmess_always", false], [301, "show_errmess_always", false]], "show_winio()": [[216, "show_winio", false], [340, "show_winio", false]], "simgraph() (graph method)": [[353, "Graph.simgraph", false]], "simgraph() (hoc graph method)": [[229, "Graph.simgraph", false]], "simgraph_remove() (cvode method)": [[344, "CVode.simgraph_remove", false]], "simgraph_remove() (hoc cvode method)": [[220, "CVode.simgraph_remove", false]], "sin()": [[195, "sin", false], [322, "sin", false]], "sin() (hoc vector method)": [[201, "Vector.sin", false]], "sin() (vector method)": [[328, "Vector.sin", false]], "sindex() (hoc ksgate method)": [[150, "KSGate.sindex", false]], "sindex() (ksgate method)": [[279, "KSGate.sindex", false]], "size() (graph method)": [[353, "Graph.size", false]], "size() (hoc graph method)": [[229, "Graph.size", false]], "size() (hoc plotshape method)": [[235, "PlotShape.size", false]], "size() (hoc ptrvector method)": [[208, "PtrVector.size", false]], "size() (hoc shape method)": [[237, "Shape.size", false]], "size() (hoc vbox method)": [[173, "VBox.size", false]], "size() (hoc vector method)": [[201, "Vector.size", false]], "size() (plotshape method)": [[359, "PlotShape.size", false]], "size() (ptrvector method)": [[334, "PtrVector.size", false]], "size() (shape method)": [[361, "Shape.size", false]], "size() (vbox method)": [[303, "VBox.size", false]], "size() (vector method)": [[328, "Vector.size", false]], "smhist() (hoc vector method)": [[201, "Vector.smhist", false]], "smhist() (vector method)": [[328, "Vector.smhist", false]], "snap() (hoc pwmanager method)": [[177, "PWManager.snap", false]], "snap() (pwmanager method)": [[307, "PWManager.snap", false]], "solv() (hoc matrix method)": [[197, "Matrix.solv", false]], "solv() (matrix method)": [[324, "Matrix.solv", false]], "solve()": [[194, "solve", false], [321, "solve", false]], "solve() (cvode method)": [[344, "CVode.solve", false]], "solve() (hoc cvode method)": [[220, "CVode.solve", false]], "sort() (hoc vector method)": [[201, "Vector.sort", false]], "sort() (vector method)": [[328, "Vector.sort", false]], "sortindex() (hoc vector method)": [[201, "Vector.sortindex", false]], "sortindex() (vector method)": [[328, "Vector.sortindex", false]], "source_var() (hoc parallelcontext method)": [[160, "ParallelContext.source_var", false]], "source_var() (parallelcontext method)": [[289, "ParallelContext.source_var", false]], "spctrm() (hoc vector method)": [[201, "Vector.spctrm", false]], "spctrm() (vector method)": [[328, "Vector.spctrm", false]], "species (rxd.node.node property)": [[292, "rxd.node.Node.species", false]], "species (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.species", false]], "spgetrowval() (hoc matrix method)": [[197, "Matrix.spgetrowval", false]], "spgetrowval() (matrix method)": [[324, "Matrix.spgetrowval", false]], "spike_compress() (hoc parallelcontext method)": [[160, "ParallelContext.spike_compress", false]], "spike_compress() (parallelcontext method)": [[289, "ParallelContext.spike_compress", false]], "spike_record() (hoc parallelcontext method)": [[160, "ParallelContext.spike_record", false]], "spike_record() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.spike_record", false]], "spike_record() (parallelcontext method)": [[289, "ParallelContext.spike_record", false]], "spike_record() (parallelnetmanager method)": [[290, "ParallelNetManager.spike_record", false]], "spike_stat() (cvode method)": [[344, "CVode.spike_stat", false]], "spike_stat() (hoc cvode method)": [[220, "CVode.spike_stat", false]], "spike_statistics() (hoc parallelcontext method)": [[160, "ParallelContext.spike_statistics", false]], "spike_statistics() (parallelcontext method)": [[289, "ParallelContext.spike_statistics", false]], "spikebin() (hoc vector method)": [[201, "Vector.spikebin", false]], "spikebin() (vector method)": [[328, "Vector.spikebin", false]], "spine3d()": [[166, "spine3d", false], [296, "spine3d", false]], "splitcell() (hoc parallelcontext method)": [[160, "ParallelContext.splitcell", false]], "splitcell() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.splitcell", false]], "splitcell() (parallelcontext method)": [[289, "ParallelContext.splitcell", false]], "splitcell() (parallelnetmanager method)": [[290, "ParallelNetManager.splitcell", false]], "sprint()": [[215, "sprint", false], [339, "sprint", false]], "sprowlen() (hoc matrix method)": [[197, "Matrix.sprowlen", false]], "sprowlen() (matrix method)": [[324, "Matrix.sprowlen", false]], "sqrt()": [[195, "sqrt", false], [322, "sqrt", false]], "sqrt() (hoc vector method)": [[201, "Vector.sqrt", false]], "sqrt() (vector method)": [[328, "Vector.sqrt", false]], "src() (hoc kstrans method)": [[150, "KSTrans.src", false]], "src() (kstrans method)": [[279, "KSTrans.src", false]], "srcgid() (hoc netcon method)": [[159, "NetCon.srcgid", false]], "srcgid() (netcon method)": [[288, "NetCon.srcgid", false]], "sred()": [[191, "sred", false], [318, "sred", false]], "sscanf()": [[213, "sscanf", false], [337, "sscanf", false]], "start() (hoc timer method)": [[217, "Timer.start", false]], "start() (timer method)": [[341, "Timer.start", false]], "startsw()": [[216, "startsw", false], [340, "startsw", false]], "state() (hoc kschan method)": [[150, "KSChan.state", false]], "state() (hoc statetransitionevent method)": [[164, "StateTransitionEvent.state", false]], "state() (kschan method)": [[279, "KSChan.state", false]], "state() (statetransitionevent method)": [[294, "StateTransitionEvent.state", false]], "state_magnitudes() (cvode method)": [[344, "CVode.state_magnitudes", false]], "state_magnitudes() (hoc cvode method)": [[220, "CVode.state_magnitudes", false]], "statement": [[185, "index-3", false]], "statename() (cvode method)": [[344, "CVode.statename", false]], "statename() (hoc cvode method)": [[220, "CVode.statename", false]], "states (rxd.species property)": [[292, "rxd.Species.states", false]], "states() (cvode method)": [[344, "CVode.states", false]], "states() (hoc cvode method)": [[220, "CVode.states", false]], "statetransitionevent (built-in class)": [[294, "StateTransitionEvent", false]], "statetransitionevent (hoc built-in class)": [[164, "StateTransitionEvent", false]], "statistics() (cvode method)": [[344, "CVode.statistics", false]], "statistics() (hoc cvode method)": [[220, "CVode.statistics", false]], "stderr() (hoc vector method)": [[201, "Vector.stderr", false]], "stderr() (vector method)": [[328, "Vector.stderr", false]], "stdev() (hoc vector method)": [[201, "Vector.stdev", false]], "stdev() (vector method)": [[328, "Vector.stdev", false]], "step_time() (hoc parallelcontext method)": [[160, "ParallelContext.step_time", false]], "step_time() (parallelcontext method)": [[289, "ParallelContext.step_time", false]], "step_wait() (hoc parallelcontext method)": [[160, "ParallelContext.step_wait", false]], "stiff() (cvode method)": [[344, "CVode.stiff", false]], "stiff() (hoc cvode method)": [[220, "CVode.stiff", false]], "stop (keyword)": [[204, "index-4", false]], "stop_praxis()": [[138, "stop_praxis", false], [266, "stop_praxis", false]], "stoprun (built-in variable)": [[347, "stoprun", false]], "stoprun (hoc built-in variable)": [[223, "stoprun", false]], "stopsw()": [[216, "stopsw", false], [340, "stopsw", false]], "store_events() (cvode method)": [[344, "CVode.store_events", false]], "store_events() (hoc cvode method)": [[220, "CVode.store_events", false]], "strcmp()": [[215, "strcmp", false], [339, "strcmp", false]], "strdef (keyword)": [[204, "index-18", false]], "string_dialog()": [[172, "string_dialog", false], [302, "string_dialog", false]], "stringfunctions (built-in class)": [[338, "StringFunctions", false]], "stringfunctions (hoc built-in class)": [[214, "StringFunctions", false]], "stroke() (hoc glyph method)": [[228, "Glyph.stroke", false]], "structure_change_count() (cvode method)": [[344, "CVode.structure_change_count", false]], "sub() (hoc vector method)": [[201, "Vector.sub", false]], "sub() (vector method)": [[328, "Vector.sub", false]], "submit() (hoc parallelcontext method)": [[160, "ParallelContext.submit", false]], "submit() (parallelcontext method)": [[289, "ParallelContext.submit", false]], "substr() (hoc stringfunctions method)": [[214, "StringFunctions.substr", false]], "substr() (stringfunctions method)": [[338, "StringFunctions.substr", false]], "subtree() (hoc sectionlist method)": [[167, "SectionList.subtree", false]], "subtree() (section method)": [[295, "Section.subtree", false]], "subtree() (sectionlist method)": [[297, "SectionList.subtree", false]], "subworlds() (hoc parallelcontext method)": [[160, "ParallelContext.subworlds", false]], "subworlds() (parallelcontext method)": [[289, "ParallelContext.subworlds", false]], "sum() (hoc vector method)": [[201, "Vector.sum", false]], "sum() (vector method)": [[328, "Vector.sum", false]], "sumgauss() (hoc vector method)": [[201, "Vector.sumgauss", false]], "sumgauss() (vector method)": [[328, "Vector.sumgauss", false]], "sumsq() (hoc vector method)": [[201, "Vector.sumsq", false]], "sumsq() (vector method)": [[328, "Vector.sumsq", false]], "surface_area (rxd.node.node1d property)": [[292, "rxd.node.Node1D.surface_area", false]], "surface_area (rxd.node.node3d property)": [[292, "rxd.node.Node3D.surface_area", false]], "surface_area (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.surface_area", false]], "svd() (hoc matrix method)": [[197, "Matrix.svd", false]], "svd() (matrix method)": [[324, "Matrix.svd", false]], "symbols()": [[186, "symbols", false], [315, "symbols", false]], "symchooser (built-in class)": [[309, "SymChooser", false]], "symchooser (hoc built-in class)": [[179, "SymChooser", false]], "symmeig() (hoc matrix method)": [[197, "Matrix.symmeig", false]], "symmeig() (matrix method)": [[324, "Matrix.symmeig", false]], "syn() (hoc netcon method)": [[159, "NetCon.syn", false]], "syn() (netcon method)": [[288, "NetCon.syn", false]], "synlist() (hoc netcon method)": [[159, "NetCon.synlist", false]], "synlist() (netcon method)": [[288, "NetCon.synlist", false]], "syntax (hoc)": [[185, "index-0", false]], "system()": [[216, "system", false], [340, "system", false]], "t (built-in variable)": [[347, "t", false]], "t (hoc built-in variable)": [[223, "t", false]], "t() (hoc parallelcontext method)": [[160, "ParallelContext.t", false]], "t() (parallelcontext method)": [[289, "ParallelContext.t", false]], "tail() (hoc stringfunctions method)": [[214, "StringFunctions.tail", false]], "tail() (stringfunctions method)": [[338, "StringFunctions.tail", false]], "take() (hoc parallelcontext method)": [[160, "ParallelContext.take", false]], "take() (parallelcontext method)": [[289, "ParallelContext.take", false]], "tanh()": [[195, "tanh", false], [322, "tanh", false]], "tanh() (hoc vector method)": [[201, "Vector.tanh", false]], "tanh() (vector method)": [[328, "Vector.tanh", false]], "target() (hoc kstrans method)": [[150, "KSTrans.target", false]], "target() (kstrans method)": [[279, "KSTrans.target", false]], "target_var() (hoc parallelcontext method)": [[160, "ParallelContext.target_var", false]], "target_var() (parallelcontext method)": [[289, "ParallelContext.target_var", false]], "tell() (file method)": [[316, "File.tell", false]], "tell() (hoc file method)": [[188, "File.tell", false]], "testlevel() (electrode method)": [[276, "Electrode.Testlevel", false]], "testlevel() (hoc electrode method)": [[147, "Electrode.Testlevel", false]], "text() (hoc symchooser method)": [[179, "SymChooser.text", false]], "text() (hoc texteditor method)": [[180, "TextEditor.text", false]], "text() (symchooser method)": [[309, "SymChooser.text", false]], "text() (texteditor method)": [[310, "TextEditor.text", false]], "texteditor (built-in class)": [[310, "TextEditor", false]], "texteditor (hoc built-in class)": [[180, "TextEditor", false]], "this (hoc built-in variable)": [[205, "this", false]], "this_node()": [[206, "this_node", false], [332, "this_node", false]], "this_section()": [[206, "this_section", false], [332, "this_section", false]], "thread_busywait() (hoc parallelcontext method)": [[160, "ParallelContext.thread_busywait", false]], "thread_busywait() (parallelcontext method)": [[289, "ParallelContext.thread_busywait", false]], "thread_ctime() (hoc parallelcontext method)": [[160, "ParallelContext.thread_ctime", false]], "thread_ctime() (parallelcontext method)": [[289, "ParallelContext.thread_ctime", false]], "thread_how_many_proc() (hoc parallelcontext method)": [[160, "ParallelContext.thread_how_many_proc", false]], "thread_how_many_proc() (parallelcontext method)": [[289, "ParallelContext.thread_how_many_proc", false]], "thread_stat() (hoc parallelcontext method)": [[160, "ParallelContext.thread_stat", false]], "thread_stat() (parallelcontext method)": [[289, "ParallelContext.thread_stat", false]], "threads() (hoc parallelcontext method)": [[160, "ParallelContext.Threads", false]], "threads() (parallelcontext method)": [[289, "ParallelContext.Threads", false]], "threshold() (hoc parallelcontext method)": [[160, "ParallelContext.threshold", false]], "threshold() (parallelcontext method)": [[289, "ParallelContext.threshold", false]], "time() (hoc parallelcontext method)": [[160, "ParallelContext.time", false]], "time() (parallelcontext method)": [[289, "ParallelContext.time", false]], "timeout() (hoc parallelcontext method)": [[160, "ParallelContext.timeout", false]], "timeout() (parallelcontext method)": [[289, "ParallelContext.timeout", false]], "timer (built-in class)": [[341, "Timer", false]], "timer (hoc built-in class)": [[217, "Timer", false]], "to_python() (hoc vector method)": [[201, "Vector.to_python", false]], "to_python() (vector method)": [[328, "Vector.to_python", false]], "to_vector() (hoc matrix method)": [[197, "Matrix.to_vector", false]], "to_vector() (hoc rangevarplot method)": [[236, "RangeVarPlot.to_vector", false]], "to_vector() (matrix method)": [[324, "Matrix.to_vector", false]], "to_vector() (rangevarplot method)": [[360, "RangeVarPlot.to_vector", false]], "topology()": [[165, "id0", false], [295, "id0", false]], "trans() (hoc kschan method)": [[150, "KSChan.trans", false]], "trans() (kschan method)": [[279, "KSChan.trans", false]], "transfer() (hoc impedance method)": [[136, "Impedance.transfer", false]], "transfer() (impedance method)": [[264, "Impedance.transfer", false]], "transfer_phase() (hoc impedance method)": [[136, "Impedance.transfer_phase", false]], "transfer_phase() (impedance method)": [[264, "Impedance.transfer_phase", false]], "transition() (hoc statetransitionevent method)": [[164, "StateTransitionEvent.transition", false]], "transition() (statetransitionevent method)": [[294, "StateTransitionEvent.transition", false]], "transpose() (hoc matrix method)": [[197, "Matrix.transpose", false]], "transpose() (matrix method)": [[324, "Matrix.transpose", false]], "trigavg() (hoc vector method)": [[201, "Vector.trigavg", false]], "trigavg() (vector method)": [[328, "Vector.trigavg", false]], "trueparent() (hoc sectionref method)": [[168, "SectionRef.trueparent", false]], "type() (hoc kstrans method)": [[150, "KSTrans.type", false]], "type() (kstrans method)": [[279, "KSTrans.type", false]], "uniform() (hoc random method)": [[200, "Random.uniform", false]], "uniform() (nmodlrandom method)": [[327, "NMODLRandom.uniform", false]], "uniform() (random method)": [[327, "Random.uniform", false]], "uninsert (keyword)": [[204, "index-21", false]], "unique() (hoc sectionlist method)": [[167, "SectionList.unique", false]], "unique() (sectionlist method)": [[297, "SectionList.unique", false]], "units()": [[182, "units", false], [312, "units", false]], "unix_mac_pc()": [[216, "unix_mac_pc", false], [340, "unix_mac_pc", false]], "unlink() (file method)": [[316, "File.unlink", false]], "unlink() (hoc file method)": [[188, "File.unlink", false]], "unmap() (deck method)": [[303, "Deck.unmap", false]], "unmap() (graph method)": [[353, "Graph.unmap", false]], "unmap() (hoc deck method)": [[173, "Deck.unmap", false]], "unmap() (hoc graph method)": [[229, "Graph.unmap", false]], "unmap() (hoc plotshape method)": [[235, "PlotShape.unmap", false]], "unmap() (hoc shape method)": [[237, "Shape.unmap", false]], "unmap() (hoc vbox method)": [[173, "VBox.unmap", false]], "unmap() (plotshape method)": [[359, "PlotShape.unmap", false]], "unmap() (shape method)": [[361, "Shape.unmap", false]], "unmap() (vbox method)": [[303, "VBox.unmap", false]], "unpack() (hoc parallelcontext method)": [[160, "ParallelContext.unpack", false]], "unpack() (parallelcontext method)": [[289, "ParallelContext.unpack", false]], "unref()": [[205, "unref", false]], "upkpyobj() (hoc parallelcontext method)": [[160, "ParallelContext.upkpyobj", false]], "upkpyobj() (parallelcontext method)": [[289, "ParallelContext.upkpyobj", false]], "upkscalar() (hoc parallelcontext method)": [[160, "ParallelContext.upkscalar", false]], "upkscalar() (parallelcontext method)": [[289, "ParallelContext.upkscalar", false]], "upkstr() (hoc parallelcontext method)": [[160, "ParallelContext.upkstr", false]], "upkstr() (parallelcontext method)": [[289, "ParallelContext.upkstr", false]], "upkvec() (hoc parallelcontext method)": [[160, "ParallelContext.upkvec", false]], "upkvec() (parallelcontext method)": [[289, "ParallelContext.upkvec", false]], "use_daspk() (cvode method)": [[344, "CVode.use_daspk", false]], "use_daspk() (hoc cvode method)": [[220, "CVode.use_daspk", false]], "use_fast_imem() (cvode method)": [[344, "CVode.use_fast_imem", false]], "use_fast_imem() (hoc cvode method)": [[220, "CVode.use_fast_imem", false]], "use_local_dt() (cvode method)": [[344, "CVode.use_local_dt", false]], "use_local_dt() (hoc cvode method)": [[220, "CVode.use_local_dt", false]], "use_long_double() (cvode method)": [[344, "CVode.use_long_double", false]], "use_long_double() (hoc cvode method)": [[220, "CVode.use_long_double", false]], "use_mcell_ran4()": [[198, "use_mcell_ran4", false], [325, "use_mcell_ran4", false]], "use_mxb() (cvode method)": [[344, "CVode.use_mxb", false]], "use_mxb() (hoc cvode method)": [[220, "CVode.use_mxb", false]], "userid() (hoc parallelcontext method)": [[160, "ParallelContext.userid", false]], "userid() (parallelcontext method)": [[289, "ParallelContext.userid", false]], "v (rxd property)": [[163, "rxd.v", false], [292, "rxd.v", false]], "val (pointer attribute)": [[333, "Pointer.val", false]], "val() (hoc pointer method)": [[207, "Pointer.val", false]], "valid() (hoc netcon method)": [[159, "NetCon.valid", false]], "valid() (netcon method)": [[288, "NetCon.valid", false]], "value (rxd.node.node property)": [[292, "rxd.node.Node.value", false]], "value (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.value", false]], "value_to_grid() (rxd.nodelist.nodelist method)": [[292, "rxd.nodelist.NodeList.value_to_grid", false]], "valuefieldeditor (built-in class)": [[311, "ValueFieldEditor", false]], "valuefieldeditor (hoc built-in class)": [[181, "ValueFieldEditor", false]], "var() (hoc vector method)": [[201, "Vector.var", false]], "var() (vector method)": [[328, "Vector.var", false]], "variable() (hoc plotshape method)": [[235, "PlotShape.variable", false]], "variable() (plotshape method)": [[359, "PlotShape.variable", false]], "variable_domain()": [[175, "variable_domain", false], [305, "variable_domain", false]], "vbox (built-in class)": [[303, "VBox", false]], "vbox (hoc built-in class)": [[173, "VBox", false]], "vclamp (built-in class)": [[282, "VClamp", false]], "vclamp (hoc built-in class)": [[153, "VClamp", false]], "vclamp() (electrode method)": [[276, "Electrode.VClamp", false]], "vclamp() (hoc electrode method)": [[147, "Electrode.VClamp", false]], "vclampfamily() (electrode method)": [[276, "Electrode.VClampFamily", false]], "vclampfamily() (hoc electrode method)": [[147, "Electrode.VClampFamily", false]], "vclampigraph() (electrode method)": [[276, "Electrode.VClampigraph", false]], "vclampigraph() (hoc electrode method)": [[147, "Electrode.VClampigraph", false]], "vector (built-in class)": [[328, "Vector", false]], "vector (hoc built-in class)": [[201, "Vector", false]], "vector() (graph method)": [[353, "Graph.vector", false]], "vector() (hoc graph method)": [[229, "Graph.vector", false]], "vector() (rangevarplot method)": [[360, "RangeVarPlot.vector", false]], "vector.x (built-in variable)": [[328, "Vector.x", false]], "vector.x (hoc built-in variable)": [[201, "Vector.x", false]], "vector_play_init() (bbsavestate method)": [[343, "BBSaveState.vector_play_init", false]], "vector_play_init() (hoc bbsavestate method)": [[219, "BBSaveState.vector_play_init", false]], "vfixed() (graph method)": [[353, "Graph.vfixed", false]], "vfixed() (hoc graph method)": [[229, "Graph.vfixed", false]], "view() (graph method)": [[353, "Graph.view", false]], "view() (hoc graph method)": [[229, "Graph.view", false]], "view() (hoc plotshape method)": [[235, "PlotShape.view", false]], "view() (hoc shape method)": [[237, "Shape.view", false]], "view() (plotshape method)": [[359, "PlotShape.view", false]], "view() (shape method)": [[361, "Shape.view", false]], "view_count() (graph method)": [[353, "Graph.view_count", false]], "view_count() (hoc graph method)": [[229, "Graph.view_count", false]], "view_count() (hoc plotshape method)": [[235, "PlotShape.view_count", false]], "view_count() (hoc shape method)": [[237, "Shape.view_count", false]], "view_count() (plotshape method)": [[359, "PlotShape.view_count", false]], "view_count() (shape method)": [[361, "Shape.view_count", false]], "view_info() (graph method)": [[353, "Graph.view_info", false]], "view_info() (hoc graph method)": [[229, "Graph.view_info", false]], "view_size() (graph method)": [[353, "Graph.view_size", false]], "view_size() (hoc graph method)": [[229, "Graph.view_size", false]], "volume (rxd.node.node property)": [[292, "rxd.node.Node.volume", false]], "volume (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.volume", false]], "vread() (file method)": [[316, "File.vread", false]], "vread() (hoc file method)": [[188, "File.vread", false]], "vread() (hoc vector method)": [[201, "Vector.vread", false]], "vread() (vector method)": [[328, "Vector.vread", false]], "vtransfer_time() (hoc parallelcontext method)": [[160, "ParallelContext.vtransfer_time", false]], "vtransfer_time() (parallelcontext method)": [[289, "ParallelContext.vtransfer_time", false]], "vwrite() (file method)": [[316, "File.vwrite", false]], "vwrite() (hoc file method)": [[188, "File.vwrite", false]], "vwrite() (hoc vector method)": [[201, "Vector.vwrite", false]], "vwrite() (vector method)": [[328, "Vector.vwrite", false]], "wait_time() (hoc parallelcontext method)": [[160, "ParallelContext.wait_time", false]], "wait_time() (parallelcontext method)": [[289, "ParallelContext.wait_time", false]], "want_all_spikes() (hoc parallelnetmanager method)": [[161, "ParallelNetManager.want_all_spikes", false]], "want_all_spikes() (parallelnetmanager method)": [[290, "ParallelNetManager.want_all_spikes", false]], "wcnt() (hoc netcon method)": [[159, "NetCon.wcnt", false]], "wcnt() (netcon method)": [[288, "NetCon.wcnt", false]], "weibull() (hoc random method)": [[200, "Random.weibull", false]], "weibull() (random method)": [[327, "Random.weibull", false]], "where() (hoc vector method)": [[201, "Vector.where", false]], "where() (vector method)": [[328, "Vector.where", false]], "while (keyword)": [[204, "index-7", false]], "wholetree() (hoc sectionlist method)": [[167, "SectionList.wholetree", false]], "wholetree() (section method)": [[295, "Section.wholetree", false]], "wholetree() (sectionlist method)": [[297, "SectionList.wholetree", false]], "window_place() (hoc pwmanager method)": [[177, "PWManager.window_place", false]], "window_place() (pwmanager method)": [[307, "PWManager.window_place", false]], "winexec()": [[216, "WinExec", false], [340, "WinExec", false]], "wopen()": [[192, "wopen", false], [319, "wopen", false]], "wopen() (file method)": [[316, "File.wopen", false]], "wopen() (hoc file method)": [[188, "File.wopen", false]], "working() (hoc parallelcontext method)": [[160, "ParallelContext.working", false]], "working() (parallelcontext method)": [[289, "ParallelContext.working", false]], "writehoc() (hoc savestate method)": [[225, "SaveState.writehoc", false]], "writehoc() (savestate method)": [[349, "SaveState.writehoc", false]], "x (rxd.node.node1d property)": [[292, "rxd.node.Node1D.x", false]], "x (rxd.nodelist.nodelist property)": [[292, "rxd.nodelist.NodeList.x", false]], "x3d (rxd.node.node property)": [[292, "rxd.node.Node.x3d", false]], "x3d()": [[166, "x3d", false], [296, "x3d", false]], "xaxis() (graph method)": [[353, "Graph.xaxis", false]], "xaxis() (hoc graph method)": [[229, "Graph.xaxis", false]], "xbutton()": [[182, "xbutton", false], [312, "xbutton", false]], "xcheckbox()": [[182, "xcheckbox", false], [312, "xcheckbox", false]], "xexpr() (graph method)": [[353, "Graph.xexpr", false]], "xexpr() (hoc graph method)": [[229, "Graph.xexpr", false]], "xfixedvalue()": [[182, "xfixedvalue", false], [312, "xfixedvalue", false]], "xlabel()": [[182, "xlabel", false], [312, "xlabel", false]], "xmenu()": [[182, "xmenu", false], [312, "xmenu", false]], "xopen()": [[192, "xopen", false], [319, "xopen", false]], "xopen() (file method)": [[316, "File.xopen", false]], "xopen() (hoc file method)": [[188, "File.xopen", false]], "xpanel()": [[182, "xpanel", false], [312, "xpanel", false]], "xpvalue()": [[182, "xpvalue", false], [312, "xpvalue", false]], "xradiobutton()": [[182, "xradiobutton", false], [312, "xradiobutton", false]], "xred()": [[191, "xred", false], [318, "xred", false]], "xslider()": [[182, "xslider", false], [312, "xslider", false]], "xstatebutton()": [[182, "xstatebutton", false], [312, "xstatebutton", false]], "xvalue()": [[182, "xvalue", false], [312, "xvalue", false]], "xvarlabel()": [[182, "xvarlabel", false], [312, "xvarlabel", false]], "y3d (rxd.node.node property)": [[292, "rxd.node.Node.y3d", false]], "y3d()": [[166, "y3d", false], [296, "y3d", false]], "yaxis() (graph method)": [[353, "Graph.yaxis", false]], "yaxis() (hoc graph method)": [[229, "Graph.yaxis", false]], "ygather() (cvode method)": [[344, "CVode.ygather", false]], "ygather() (hoc cvode method)": [[220, "CVode.ygather", false]], "yscatter() (cvode method)": [[344, "CVode.yscatter", false]], "yscatter() (hoc cvode method)": [[220, "CVode.yscatter", false]], "z3d (rxd.node.node property)": [[292, "rxd.node.Node.z3d", false]], "z3d()": [[166, "z3d", false], [296, "z3d", false]], "zero() (hoc matrix method)": [[197, "Matrix.zero", false]], "zero() (matrix method)": [[324, "Matrix.zero", false]]}, "objects": {"": [[153, 0, 1, "", "APCount"], [153, 0, 1, "", "AlphaSynapse"], [219, 0, 1, "", "BBSaveState"], [220, 0, 1, "", "CVode"], [173, 0, 1, "", "Deck"], [147, 0, 1, "", "Electrode"], [153, 0, 1, "", "Exp2Syn"], [153, 0, 1, "", "ExpSyn"], [223, 0, 1, "", "FInitializeHandler"], [188, 0, 1, "", "File"], [196, 0, 1, "", "GUIMath"], [228, 0, 1, "", "Glyph"], [229, 0, 1, "", "Graph"], [173, 0, 1, "", "HBox"], [153, 0, 1, "", "IClamp"], [136, 0, 1, "", "Impedance"], [153, 0, 1, "", "IntFire1"], [153, 0, 1, "", "IntFire2"], [153, 0, 1, "", "IntFire4"], [150, 0, 1, "", "KSChan"], [150, 0, 1, "", "KSGate"], [150, 0, 1, "", "KSState"], [150, 0, 1, "", "KSTrans"], [166, 2, 1, "", "L"], [151, 0, 1, "", "LinearMechanism"], [174, 0, 1, "", "List"], [197, 0, 1, "", "Matrix"], [203, 0, 1, "", "MechanismStandard"], [156, 0, 1, "", "MechanismType"], [159, 0, 1, "", "NetCon"], [153, 0, 1, "", "NetStim"], [177, 0, 1, "", "PWManager"], [160, 0, 1, "", "ParallelContext"], [161, 0, 1, "", "ParallelNetManager"], [235, 0, 1, "", "PlotShape"], [207, 0, 1, "", "Pointer"], [208, 0, 1, "", "PtrVector"], [211, 0, 1, "", "PythonObject"], [166, 2, 1, "", "Ra"], [200, 0, 1, "", "Random"], [236, 0, 1, "", "RangeVarPlot"], [153, 0, 1, "", "SEClamp"], [225, 0, 1, "", "SaveState"], [178, 0, 1, "", "SectionBrowser"], [167, 0, 1, "", "SectionList"], [168, 0, 1, "", "SectionRef"], [237, 0, 1, "", "Shape"], [164, 0, 1, "", "StateTransitionEvent"], [214, 0, 1, "", "StringFunctions"], [179, 0, 1, "", "SymChooser"], [180, 0, 1, "", "TextEditor"], [217, 0, 1, "", "Timer"], [173, 0, 1, "", "VBox"], [153, 0, 1, "", "VClamp"], [181, 0, 1, "", "ValueFieldEditor"], [201, 0, 1, "", "Vector"], [216, 3, 1, "", "WinExec"], [195, 3, 1, "", "abs"], [186, 3, 1, "", "allobjects"], [186, 3, 1, "", "allobjectvars"], [166, 3, 1, "", "arc3d"], [166, 3, 1, "", "area"], [185, 3, 1, "", "argtype"], [195, 3, 1, "", "atan"], [195, 3, 1, "", "atan2"], [138, 3, 1, "", "attr_praxis"], [233, 3, 1, "", "axis"], [218, 3, 1, "", "batch_run"], [218, 3, 1, "", "batch_save"], [172, 3, 1, "", "boolean_dialog"], [223, 2, 1, "", "celsius"], [216, 3, 1, "", "chdir"], [223, 3, 1, "", "checkpoint"], [223, 2, 1, "", "clamp_resist"], [172, 3, 1, "", "continue_dialog"], [171, 3, 1, "", "coredump_on_error"], [195, 3, 1, "", "cos"], [166, 3, 1, "", "define_shape"], [165, 3, 1, "", "delete_section"], [166, 2, 1, "", "diam"], [166, 3, 1, "", "diam3d"], [166, 2, 1, "", "diam_changed"], [165, 3, 1, "", "disconnect"], [166, 3, 1, "", "distance"], [232, 3, 1, "", "doEvents"], [232, 3, 1, "", "doNotify"], [223, 2, 1, "", "dt"], [194, 3, 1, "", "eqinit"], [195, 3, 1, "", "erf"], [195, 3, 1, "", "erfc"], [171, 3, 1, "", "execerror"], [170, 3, 1, "", "execute"], [170, 3, 1, "", "execute1"], [195, 3, 1, "", "exp"], [223, 3, 1, "", "fadvance"], [162, 3, 1, "", "fclamp"], [162, 3, 1, "", "fclampi"], [162, 3, 1, "", "fclampv"], [223, 3, 1, "", "fcurrent"], [223, 3, 1, "", "finitialize"], [138, 3, 1, "", "fit_praxis"], [199, 2, 1, "", "float_epsilon"], [223, 3, 1, "", "fmatrix"], [192, 3, 1, "", "fprint"], [223, 3, 1, "", "frecord_init"], [191, 3, 1, "", "fscan"], [162, 3, 1, "", "fstim"], [162, 3, 1, "", "fstimi"], [166, 3, 1, "", "getSpineArea"], [216, 3, 1, "", "getcwd"], [191, 3, 1, "", "getstr"], [137, 3, 1, "", "ghk"], [233, 3, 1, "", "graph"], [233, 3, 1, "", "graphmode"], [209, 2, 1, "", "hoc_ac_"], [209, 2, 1, "", "hoc_cross_x_"], [209, 2, 1, "", "hoc_cross_y_"], [209, 2, 1, "", "hoc_obj_"], [186, 3, 1, "", "hoc_pointer_"], [190, 3, 1, "", "hoc_stdio"], [148, 3, 1, "", "hocmech"], [205, 3, 1, "", "init"], [223, 3, 1, "", "initnrn"], [195, 3, 1, "", "int"], [149, 3, 1, "", "ion_charge"], [149, 3, 1, "", "ion_register"], [149, 3, 1, "", "ion_style"], [165, 3, 1, "", "ismembrane"], [165, 3, 1, "", "issection"], [175, 3, 1, "", "ivoc_style"], [170, 3, 1, "", "load_file"], [170, 3, 1, "", "load_func"], [170, 3, 1, "", "load_proc"], [170, 3, 1, "", "load_template"], [195, 3, 1, "", "log"], [195, 3, 1, "", "log10"], [189, 3, 1, "", "lw"], [216, 3, 1, "", "machine_name"], [198, 3, 1, "", "mcell_ran4"], [198, 3, 1, "", "mcell_ran4_init"], [166, 3, 1, "", "n3d"], [186, 3, 1, "", "name_declared"], [137, 3, 1, "", "nernst"], [216, 3, 1, "", "neuronhome"], [171, 3, 1, "", "nrn_feenableexcept"], [216, 3, 1, "", "nrn_load_dll"], [176, 3, 1, "", "nrnglobalmechmenu"], [176, 3, 1, "", "nrnmechmenu"], [176, 3, 1, "", "nrnpointmenu"], [211, 3, 1, "", "nrnpython"], [176, 3, 1, "", "nrnsecmenu"], [216, 3, 1, "", "nrnversion"], [165, 2, 1, "", "nseg"], [185, 3, 1, "", "numarg"], [186, 3, 1, "", "object_id"], [186, 3, 1, "", "object_pop"], [186, 3, 1, "", "object_push"], [165, 3, 1, "", "parent_connection"], [165, 3, 1, "", "parent_node"], [165, 3, 1, "", "parent_section"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plotx"], [233, 3, 1, "", "ploty"], [233, 3, 1, "", "plt"], [169, 3, 1, "", "pop_section"], [226, 3, 1, "", "print_session"], [190, 3, 1, "", "printf"], [194, 3, 1, "", "prmat"], [162, 3, 1, "", "prstim"], [165, 3, 1, "", "psection"], [166, 3, 1, "", "pt3dadd"], [166, 3, 1, "", "pt3dchange"], [166, 3, 1, "", "pt3dclear"], [166, 3, 1, "", "pt3dconst"], [166, 3, 1, "", "pt3dinsert"], [166, 3, 1, "", "pt3dremove"], [166, 3, 1, "", "pt3dstyle"], [169, 3, 1, "", "push_section"], [138, 3, 1, "", "pval_praxis"], [175, 3, 1, "", "pwman_place"], [222, 3, 1, "", "quit"], [233, 3, 1, "", "regraph"], [222, 3, 1, "", "retrieveaudit"], [166, 3, 1, "", "ri"], [192, 3, 1, "", "ropen"], [226, 3, 1, "", "save_session"], [222, 3, 1, "", "saveaudit"], [165, 3, 1, "", "secname"], [223, 2, 1, "", "secondorder"], [165, 3, 1, "", "section_exists"], [165, 3, 1, "", "section_orientation"], [165, 3, 1, "", "section_owner"], [165, 3, 1, "", "sectionname"], [166, 3, 1, "", "setSpineArea"], [233, 3, 1, "", "setcolor"], [233, 3, 1, "", "settext"], [171, 3, 1, "", "show_errmess_always"], [216, 3, 1, "", "show_winio"], [195, 3, 1, "", "sin"], [194, 3, 1, "", "solve"], [166, 3, 1, "", "spine3d"], [215, 3, 1, "", "sprint"], [195, 3, 1, "", "sqrt"], [191, 3, 1, "", "sred"], [213, 3, 1, "", "sscanf"], [216, 3, 1, "", "startsw"], [138, 3, 1, "", "stop_praxis"], [223, 2, 1, "", "stoprun"], [216, 3, 1, "", "stopsw"], [215, 3, 1, "", "strcmp"], [172, 3, 1, "", "string_dialog"], [186, 3, 1, "", "symbols"], [216, 3, 1, "", "system"], [223, 2, 1, "", "t"], [195, 3, 1, "", "tanh"], [205, 2, 1, "", "this"], [206, 3, 1, "", "this_node"], [206, 3, 1, "", "this_section"], [165, 3, 1, "id0", "topology"], [182, 3, 1, "", "units"], [216, 3, 1, "", "unix_mac_pc"], [205, 3, 1, "", "unref"], [198, 3, 1, "", "use_mcell_ran4"], [175, 3, 1, "", "variable_domain"], [192, 3, 1, "", "wopen"], [166, 3, 1, "", "x3d"], [182, 3, 1, "", "xbutton"], [182, 3, 1, "", "xcheckbox"], [182, 3, 1, "", "xfixedvalue"], [182, 3, 1, "", "xlabel"], [182, 3, 1, "", "xmenu"], [192, 3, 1, "", "xopen"], [182, 3, 1, "", "xpanel"], [182, 3, 1, "", "xpvalue"], [182, 3, 1, "", "xradiobutton"], [191, 3, 1, "", "xred"], [182, 3, 1, "", "xslider"], [182, 3, 1, "", "xstatebutton"], [182, 3, 1, "", "xvalue"], [182, 3, 1, "", "xvarlabel"], [166, 3, 1, "", "y3d"], [166, 3, 1, "", "z3d"], [282, 4, 1, "", "APCount"], [282, 4, 1, "", "AlphaSynapse"], [343, 4, 1, "", "BBSaveState"], [344, 4, 1, "", "CVode"], [303, 4, 1, "", "Deck"], [276, 4, 1, "", "Electrode"], [282, 4, 1, "", "Exp2Syn"], [282, 4, 1, "", "ExpSyn"], [347, 4, 1, "", "FInitializeHandler"], [316, 4, 1, "", "File"], [323, 4, 1, "", "GUIMath"], [352, 4, 1, "", "Glyph"], [353, 4, 1, "", "Graph"], [303, 4, 1, "", "HBox"], [282, 4, 1, "", "IClamp"], [264, 4, 1, "", "Impedance"], [282, 4, 1, "", "IntFire1"], [282, 4, 1, "", "IntFire2"], [282, 4, 1, "", "IntFire4"], [279, 4, 1, "", "KSChan"], [279, 4, 1, "", "KSGate"], [279, 4, 1, "", "KSState"], [279, 4, 1, "", "KSTrans"], [296, 6, 1, "", "L"], [280, 4, 1, "", "LinearMechanism"], [304, 4, 1, "", "List"], [324, 4, 1, "", "Matrix"], [330, 4, 1, "", "MechanismStandard"], [285, 4, 1, "", "MechanismType"], [327, 4, 1, "", "NMODLRandom"], [288, 4, 1, "", "NetCon"], [282, 4, 1, "", "NetStim"], [307, 4, 1, "", "PWManager"], [289, 4, 1, "", "ParallelContext"], [290, 4, 1, "", "ParallelNetManager"], [282, 4, 1, "", "PatternStim"], [359, 4, 1, "", "PlotShape"], [333, 4, 1, "", "Pointer"], [334, 4, 1, "", "PtrVector"], [296, 6, 1, "", "Ra"], [327, 4, 1, "", "Random"], [360, 4, 1, "", "RangeVarPlot"], [282, 4, 1, "", "SEClamp"], [349, 4, 1, "", "SaveState"], [295, 4, 1, "", "Section"], [308, 4, 1, "", "SectionBrowser"], [297, 4, 1, "", "SectionList"], [298, 4, 1, "", "SectionRef"], [361, 4, 1, "", "Shape"], [294, 4, 1, "", "StateTransitionEvent"], [338, 4, 1, "", "StringFunctions"], [309, 4, 1, "", "SymChooser"], [310, 4, 1, "", "TextEditor"], [341, 4, 1, "", "Timer"], [303, 4, 1, "", "VBox"], [282, 4, 1, "", "VClamp"], [311, 4, 1, "", "ValueFieldEditor"], [328, 4, 1, "", "Vector"], [340, 8, 1, "", "WinExec"], [322, 8, 1, "", "abs"], [315, 8, 1, "", "allobjects"], [315, 8, 1, "", "allobjectvars"], [296, 8, 1, "", "arc3d"], [296, 8, 1, "", "area"], [322, 8, 1, "", "atan"], [322, 8, 1, "", "atan2"], [266, 8, 1, "", "attr_praxis"], [357, 8, 1, "", "axis"], [342, 8, 1, "", "batch_run"], [342, 8, 1, "", "batch_save"], [302, 8, 1, "", "boolean_dialog"], [347, 6, 1, "", "celsius"], [340, 8, 1, "", "chdir"], [347, 8, 1, "", "checkpoint"], [347, 6, 1, "", "clamp_resist"], [302, 8, 1, "", "continue_dialog"], [301, 8, 1, "", "coredump_on_error"], [322, 8, 1, "", "cos"], [296, 8, 1, "", "define_shape"], [295, 8, 1, "", "delete_section"], [296, 6, 1, "", "diam"], [296, 8, 1, "", "diam3d"], [296, 6, 1, "", "diam_changed"], [295, 8, 1, "", "disconnect"], [296, 8, 1, "", "distance"], [356, 8, 1, "", "doEvents"], [356, 8, 1, "", "doNotify"], [347, 6, 1, "", "dt"], [321, 8, 1, "", "eqinit"], [322, 8, 1, "", "erf"], [322, 8, 1, "", "erfc"], [301, 8, 1, "", "execerror"], [300, 8, 1, "", "execute"], [300, 8, 1, "", "execute1"], [322, 8, 1, "", "exp"], [347, 8, 1, "", "fadvance"], [291, 8, 1, "", "fclamp"], [291, 8, 1, "", "fclampi"], [291, 8, 1, "", "fclampv"], [347, 8, 1, "", "fcurrent"], [347, 8, 1, "", "finitialize"], [266, 8, 1, "", "fit_praxis"], [326, 6, 1, "", "float_epsilon"], [347, 8, 1, "", "fmatrix"], [319, 8, 1, "", "fprint"], [347, 8, 1, "", "frecord_init"], [318, 8, 1, "", "fscan"], [291, 8, 1, "", "fstim"], [291, 8, 1, "", "fstimi"], [296, 8, 1, "", "getSpineArea"], [340, 8, 1, "", "getcwd"], [318, 8, 1, "", "getstr"], [265, 8, 1, "", "ghk"], [357, 8, 1, "", "graph"], [357, 8, 1, "", "graphmode"], [315, 8, 1, "", "hoc_pointer_"], [317, 8, 1, "", "hoc_stdout"], [347, 8, 1, "", "initnrn"], [322, 8, 1, "", "int"], [278, 8, 1, "", "ion_charge"], [278, 8, 1, "", "ion_register"], [278, 8, 1, "", "ion_style"], [295, 8, 1, "", "ismembrane"], [295, 8, 1, "", "issection"], [305, 8, 1, "", "ivoc_style"], [300, 8, 1, "", "load_file"], [300, 8, 1, "", "load_func"], [300, 8, 1, "", "load_proc"], [300, 8, 1, "", "load_template"], [322, 8, 1, "", "log"], [322, 8, 1, "", "log10"], [340, 8, 1, "", "machine_name"], [277, 8, 1, "", "make_mechanism"], [277, 8, 1, "", "make_pointprocess"], [325, 8, 1, "", "mcell_ran4"], [325, 8, 1, "", "mcell_ran4_init"], [296, 8, 1, "", "n3d"], [315, 8, 1, "", "name_declared"], [265, 8, 1, "", "nernst"], [340, 8, 1, "", "neuronhome"], [301, 8, 1, "", "nrn_feenableexcept"], [340, 8, 1, "", "nrn_load_dll"], [306, 8, 1, "", "nrnglobalmechmenu"], [306, 8, 1, "", "nrnmechmenu"], [306, 8, 1, "", "nrnpointmenu"], [306, 8, 1, "", "nrnsecmenu"], [340, 8, 1, "", "nrnversion"], [315, 8, 1, "", "object_id"], [315, 8, 1, "", "object_pop"], [315, 8, 1, "", "object_push"], [295, 8, 1, "", "parent_connection"], [295, 8, 1, "", "parent_node"], [295, 8, 1, "", "parent_section"], [357, 8, 1, "", "plot"], [357, 8, 1, "", "plotx"], [357, 8, 1, "", "ploty"], [357, 8, 1, "", "plt"], [299, 8, 1, "", "pop_section"], [350, 8, 1, "", "print_session"], [317, 8, 1, "", "printf"], [321, 8, 1, "", "prmat"], [291, 8, 1, "", "prstim"], [295, 8, 1, "", "psection"], [296, 8, 1, "", "pt3dadd"], [296, 8, 1, "", "pt3dchange"], [296, 8, 1, "", "pt3dclear"], [296, 8, 1, "", "pt3dconst"], [296, 8, 1, "", "pt3dinsert"], [296, 8, 1, "", "pt3dremove"], [296, 8, 1, "", "pt3dstyle"], [299, 8, 1, "", "push_section"], [266, 8, 1, "", "pval_praxis"], [305, 8, 1, "", "pwman_place"], [346, 8, 1, "", "quit"], [357, 8, 1, "", "regraph"], [346, 8, 1, "", "retrieveaudit"], [296, 8, 1, "", "ri"], [319, 8, 1, "id0", "ropen"], [350, 8, 1, "", "save_session"], [346, 8, 1, "", "saveaudit"], [295, 8, 1, "", "secname"], [347, 6, 1, "", "secondorder"], [295, 8, 1, "", "section_exists"], [295, 8, 1, "", "section_orientation"], [295, 8, 1, "", "section_owner"], [295, 8, 1, "", "sectionname"], [296, 8, 1, "", "setSpineArea"], [357, 8, 1, "", "setcolor"], [357, 8, 1, "", "settext"], [301, 8, 1, "", "show_errmess_always"], [340, 8, 1, "", "show_winio"], [322, 8, 1, "", "sin"], [321, 8, 1, "", "solve"], [296, 8, 1, "", "spine3d"], [339, 8, 1, "", "sprint"], [322, 8, 1, "", "sqrt"], [318, 8, 1, "", "sred"], [337, 8, 1, "", "sscanf"], [340, 8, 1, "", "startsw"], [266, 8, 1, "", "stop_praxis"], [347, 6, 1, "", "stoprun"], [340, 8, 1, "", "stopsw"], [339, 8, 1, "", "strcmp"], [302, 8, 1, "", "string_dialog"], [315, 8, 1, "", "symbols"], [340, 8, 1, "", "system"], [347, 6, 1, "", "t"], [322, 8, 1, "", "tanh"], [332, 8, 1, "", "this_node"], [332, 8, 1, "", "this_section"], [295, 8, 1, "id0", "topology"], [312, 8, 1, "", "units"], [340, 8, 1, "", "unix_mac_pc"], [325, 8, 1, "", "use_mcell_ran4"], [305, 8, 1, "", "variable_domain"], [319, 8, 1, "", "wopen"], [296, 8, 1, "", "x3d"], [312, 8, 1, "", "xbutton"], [312, 8, 1, "", "xcheckbox"], [312, 8, 1, "", "xfixedvalue"], [312, 8, 1, "", "xlabel"], [312, 8, 1, "", "xmenu"], [319, 8, 1, "", "xopen"], [312, 8, 1, "", "xpanel"], [312, 8, 1, "", "xpvalue"], [312, 8, 1, "", "xradiobutton"], [318, 8, 1, "", "xred"], [312, 8, 1, "", "xslider"], [312, 8, 1, "", "xstatebutton"], [312, 8, 1, "", "xvalue"], [312, 8, 1, "", "xvarlabel"], [296, 8, 1, "", "y3d"], [296, 8, 1, "", "z3d"]], "BBSaveState": [[219, 1, 1, "", "ignore"], [219, 1, 1, "", "restore_test"], [219, 1, 1, "", "save_test"], [219, 1, 1, "", "vector_play_init"], [343, 5, 1, "", "ignore"], [343, 5, 1, "", "restore"], [343, 5, 1, "", "restore_test"], [343, 5, 1, "", "save"], [343, 5, 1, "", "save_test"], [343, 5, 1, "", "vector_play_init"]], "CVode": [[220, 1, 1, "", "acor"], [220, 1, 1, "", "active"], [220, 1, 1, "", "atol"], [220, 1, 1, "", "atolscale"], [220, 1, 1, "", "cache_efficient"], [220, 1, 1, "", "condition_order"], [220, 1, 1, "", "current_method"], [220, 1, 1, "", "dae_init_dteps"], [220, 1, 1, "", "debug_event"], [220, 1, 1, "", "dstates"], [220, 1, 1, "", "error_weights"], [220, 1, 1, "", "event"], [220, 1, 1, "", "event_queue_info"], [220, 1, 1, "", "f"], [220, 1, 1, "", "fixed_step"], [220, 1, 1, "", "free_event_queues"], [220, 1, 1, "", "jacobian"], [220, 1, 1, "", "maxorder"], [220, 1, 1, "", "maxstep"], [220, 1, 1, "", "minstep"], [220, 1, 1, "", "netconlist"], [220, 1, 1, "", "order"], [220, 1, 1, "", "poolshrink"], [220, 1, 1, "", "print_event_queue"], [220, 1, 1, "", "queue_mode"], [220, 1, 1, "", "re_init"], [220, 1, 1, "", "record"], [220, 1, 1, "", "record_remove"], [220, 1, 1, "", "rtol"], [220, 1, 1, "", "simgraph_remove"], [220, 1, 1, "", "solve"], [220, 1, 1, "", "spike_stat"], [220, 1, 1, "", "state_magnitudes"], [220, 1, 1, "", "statename"], [220, 1, 1, "", "states"], [220, 1, 1, "", "statistics"], [220, 1, 1, "", "stiff"], [220, 1, 1, "", "store_events"], [220, 1, 1, "", "use_daspk"], [220, 1, 1, "", "use_fast_imem"], [220, 1, 1, "", "use_local_dt"], [220, 1, 1, "", "use_long_double"], [220, 1, 1, "", "use_mxb"], [220, 1, 1, "", "ygather"], [220, 1, 1, "", "yscatter"], [344, 5, 1, "", "acor"], [344, 5, 1, "", "active"], [344, 5, 1, "", "atol"], [344, 5, 1, "", "atolscale"], [344, 5, 1, "", "cache_efficient"], [344, 5, 1, "", "condition_order"], [344, 5, 1, "", "current_method"], [344, 5, 1, "", "dae_init_dteps"], [344, 5, 1, "", "debug_event"], [344, 5, 1, "", "diam_change_count"], [344, 5, 1, "", "dstates"], [344, 5, 1, "", "error_weights"], [344, 5, 1, "", "event"], [344, 5, 1, "", "event_queue_info"], [344, 5, 1, "", "extra_scatter_gather"], [344, 5, 1, "", "extra_scatter_gather_remove"], [344, 5, 1, "", "f"], [344, 5, 1, "", "fixed_step"], [344, 5, 1, "", "free_event_queues"], [344, 5, 1, "", "jacobian"], [344, 5, 1, "", "maxorder"], [344, 5, 1, "", "maxstep"], [344, 5, 1, "", "minstep"], [344, 5, 1, "", "netconlist"], [344, 5, 1, "", "order"], [344, 5, 1, "", "poolshrink"], [344, 5, 1, "", "print_event_queue"], [344, 5, 1, "", "queue_mode"], [344, 5, 1, "", "re_init"], [344, 5, 1, "", "record"], [344, 5, 1, "", "record_remove"], [344, 5, 1, "", "rtol"], [344, 5, 1, "", "simgraph_remove"], [344, 5, 1, "", "solve"], [344, 5, 1, "", "spike_stat"], [344, 5, 1, "", "state_magnitudes"], [344, 5, 1, "", "statename"], [344, 5, 1, "", "states"], [344, 5, 1, "", "statistics"], [344, 5, 1, "", "stiff"], [344, 5, 1, "", "store_events"], [344, 5, 1, "", "structure_change_count"], [344, 5, 1, "", "use_daspk"], [344, 5, 1, "", "use_fast_imem"], [344, 5, 1, "", "use_local_dt"], [344, 5, 1, "", "use_long_double"], [344, 5, 1, "", "use_mxb"], [344, 5, 1, "", "ygather"], [344, 5, 1, "", "yscatter"]], "Deck": [[173, 1, 1, "", "flip_to"], [173, 1, 1, "", "intercept"], [173, 1, 1, "", "map"], [173, 1, 1, "", "move_last"], [173, 1, 1, "", "remove"], [173, 1, 1, "", "remove_last"], [173, 1, 1, "", "save"], [173, 1, 1, "", "unmap"], [303, 5, 1, "", "flip_to"], [303, 5, 1, "", "intercept"], [303, 5, 1, "", "map"], [303, 5, 1, "", "move_last"], [303, 5, 1, "", "remove"], [303, 5, 1, "", "remove_last"], [303, 5, 1, "", "save"], [303, 5, 1, "", "unmap"]], "Electrode": [[147, 1, 1, "", "Holding"], [147, 1, 1, "", "IClamp"], [147, 1, 1, "", "Location"], [147, 1, 1, "", "Returnlevel"], [147, 1, 1, "", "Testlevel"], [147, 1, 1, "", "VClamp"], [147, 1, 1, "", "VClampFamily"], [147, 1, 1, "", "VClampigraph"], [147, 1, 1, "", "amp"], [147, 1, 1, "", "amp0"], [147, 1, 1, "", "del"], [147, 1, 1, "", "dur"], [147, 1, 1, "", "dur0"], [276, 5, 1, "", "Holding"], [276, 5, 1, "", "IClamp"], [276, 5, 1, "", "Location"], [276, 5, 1, "", "Returnlevel"], [276, 5, 1, "", "Testlevel"], [276, 5, 1, "", "VClamp"], [276, 5, 1, "", "VClampFamily"], [276, 5, 1, "", "VClampigraph"], [276, 5, 1, "", "amp"], [276, 5, 1, "", "amp0"], [276, 5, 1, "", "del"], [276, 5, 1, "", "dur"], [276, 5, 1, "", "dur0"]], "FInitializeHandler": [[223, 1, 1, "", "allprint"], [347, 5, 1, "", "allprint"]], "File": [[188, 1, 1, "", "aopen"], [188, 1, 1, "", "chooser"], [188, 1, 1, "", "close"], [188, 1, 1, "", "dir"], [188, 1, 1, "", "eof"], [188, 1, 1, "", "flush"], [188, 1, 1, "", "getname"], [188, 1, 1, "", "gets"], [188, 1, 1, "", "isopen"], [188, 1, 1, "", "mktemp"], [188, 1, 1, "", "printf"], [188, 1, 1, "", "ropen"], [188, 1, 1, "", "scanstr"], [188, 1, 1, "", "scanvar"], [188, 1, 1, "", "seek"], [188, 1, 1, "", "tell"], [188, 1, 1, "", "unlink"], [188, 1, 1, "", "vread"], [188, 1, 1, "", "vwrite"], [188, 1, 1, "", "wopen"], [188, 1, 1, "", "xopen"], [316, 5, 1, "", "aopen"], [316, 5, 1, "", "chooser"], [316, 5, 1, "", "close"], [316, 5, 1, "", "dir"], [316, 5, 1, "", "eof"], [316, 5, 1, "", "flush"], [316, 5, 1, "", "getname"], [316, 5, 1, "", "gets"], [316, 5, 1, "", "isopen"], [316, 5, 1, "", "mktemp"], [316, 5, 1, "", "printf"], [316, 5, 1, "", "ropen"], [316, 5, 1, "", "scanstr"], [316, 5, 1, "", "scanvar"], [316, 5, 1, "", "seek"], [316, 5, 1, "", "tell"], [316, 5, 1, "", "unlink"], [316, 5, 1, "", "vread"], [316, 5, 1, "", "vwrite"], [316, 5, 1, "", "wopen"], [316, 5, 1, "", "xopen"]], "GUIMath": [[196, 1, 1, "", "d2line"], [196, 1, 1, "", "d2line_seg"], [196, 1, 1, "", "feround"], [196, 1, 1, "", "inside"], [323, 5, 1, "", "d2line"], [323, 5, 1, "", "d2line_seg"], [323, 5, 1, "", "feround"], [323, 5, 1, "", "inside"]], "Glyph": [[228, 1, 1, "", "circle"], [228, 1, 1, "", "close_path"], [228, 1, 1, "", "control_point"], [228, 1, 1, "", "curve_to"], [228, 1, 1, "", "erase"], [228, 1, 1, "", "fill"], [228, 1, 1, "", "gif"], [228, 1, 1, "", "glyph"], [228, 1, 1, "", "label"], [228, 1, 1, "", "line_to"], [228, 1, 1, "", "move_to"], [228, 1, 1, "", "new_path"], [228, 1, 1, "", "stroke"], [352, 5, 1, "", "circle"], [352, 5, 1, "", "close"], [352, 5, 1, "", "cpt"], [352, 5, 1, "", "curve"], [352, 5, 1, "", "erase"], [352, 5, 1, "", "fill"], [352, 5, 1, "", "gif"], [352, 5, 1, "", "glyph"], [352, 5, 1, "", "l"], [352, 5, 1, "", "label"], [352, 5, 1, "", "m"], [352, 5, 1, "", "path"], [352, 5, 1, "", "s"]], "Graph": [[229, 1, 1, "", "addexpr"], [229, 1, 1, "", "addobject"], [229, 1, 1, "", "addvar"], [229, 1, 1, "", "align"], [229, 1, 1, "", "begin"], [229, 1, 1, "", "beginline"], [229, 1, 1, "", "brush"], [229, 1, 1, "", "color"], [229, 1, 1, "", "crosshair_action"], [229, 1, 1, "", "erase"], [229, 1, 1, "", "erase_all"], [229, 1, 1, "", "exec_menu"], [229, 1, 1, "", "family"], [229, 1, 1, "", "fastflush"], [229, 1, 1, "", "fixed"], [229, 1, 1, "", "flush"], [229, 1, 1, "", "getline"], [229, 1, 1, "", "gif"], [229, 1, 1, "", "glyph"], [229, 1, 1, "", "label"], [229, 1, 1, "", "line"], [229, 1, 1, "", "line_info"], [229, 1, 1, "", "mark"], [229, 1, 1, "", "menu_action"], [229, 1, 1, "", "menu_remove"], [229, 1, 1, "", "menu_tool"], [229, 1, 1, "", "plot"], [229, 1, 1, "", "printfile"], [229, 1, 1, "", "relative"], [229, 1, 1, "", "save_name"], [229, 1, 1, "", "simgraph"], [229, 1, 1, "", "size"], [229, 1, 1, "", "unmap"], [229, 1, 1, "", "vector"], [229, 1, 1, "", "vfixed"], [229, 1, 1, "", "view"], [229, 1, 1, "", "view_count"], [229, 1, 1, "", "view_info"], [229, 1, 1, "", "view_size"], [229, 1, 1, "", "xaxis"], [229, 1, 1, "", "xexpr"], [229, 1, 1, "", "yaxis"], [353, 5, 1, "", "addexpr"], [353, 5, 1, "", "addobject"], [353, 5, 1, "", "addvar"], [353, 5, 1, "", "align"], [353, 5, 1, "", "begin"], [353, 5, 1, "", "beginline"], [353, 5, 1, "", "brush"], [353, 5, 1, "", "color"], [353, 5, 1, "", "crosshair_action"], [353, 5, 1, "", "erase"], [353, 5, 1, "", "erase_all"], [353, 5, 1, "", "exec_menu"], [353, 5, 1, "", "family"], [353, 5, 1, "", "fastflush"], [353, 5, 1, "", "fixed"], [353, 5, 1, "", "flush"], [353, 5, 1, "", "getline"], [353, 5, 1, "", "gif"], [353, 5, 1, "", "glyph"], [353, 5, 1, "", "label"], [353, 5, 1, "", "line"], [353, 5, 1, "", "line_info"], [353, 5, 1, "", "mark"], [353, 5, 1, "", "menu_action"], [353, 5, 1, "", "menu_remove"], [353, 5, 1, "", "menu_tool"], [353, 5, 1, "", "plot"], [353, 5, 1, "", "printfile"], [353, 5, 1, "", "relative"], [353, 5, 1, "", "save_name"], [353, 5, 1, "", "simgraph"], [353, 5, 1, "", "size"], [353, 5, 1, "", "unmap"], [353, 5, 1, "", "vector"], [353, 5, 1, "", "vfixed"], [353, 5, 1, "", "view"], [353, 5, 1, "", "view_count"], [353, 5, 1, "", "view_info"], [353, 5, 1, "", "view_size"], [353, 5, 1, "", "xaxis"], [353, 5, 1, "", "xexpr"], [353, 5, 1, "", "yaxis"]], "Impedance": [[136, 1, 1, "", "compute"], [136, 1, 1, "", "deltafac"], [136, 1, 1, "", "input"], [136, 1, 1, "", "input_phase"], [136, 1, 1, "", "loc"], [136, 1, 1, "", "ratio"], [136, 1, 1, "", "transfer"], [136, 1, 1, "", "transfer_phase"], [264, 5, 1, "", "compute"], [264, 5, 1, "", "deltafac"], [264, 5, 1, "", "input"], [264, 5, 1, "", "input_phase"], [264, 5, 1, "", "loc"], [264, 5, 1, "", "ratio"], [264, 5, 1, "", "transfer"], [264, 5, 1, "", "transfer_phase"]], "KSChan": [[150, 1, 1, "", "add_hhstate"], [150, 1, 1, "", "add_ksstate"], [150, 1, 1, "", "add_transition"], [150, 1, 1, "", "erev"], [150, 1, 1, "", "gate"], [150, 1, 1, "", "gmax"], [150, 1, 1, "", "ion"], [150, 1, 1, "", "iv_type"], [150, 1, 1, "", "ligand"], [150, 1, 1, "", "name"], [150, 1, 1, "", "ngate"], [150, 1, 1, "", "nligand"], [150, 1, 1, "", "nstate"], [150, 1, 1, "", "ntrans"], [150, 1, 1, "", "pr"], [150, 1, 1, "", "remove_state"], [150, 1, 1, "", "remove_transition"], [150, 1, 1, "", "setstructure"], [150, 1, 1, "", "state"], [150, 1, 1, "", "trans"], [279, 5, 1, "", "add_hhstate"], [279, 5, 1, "", "add_ksstate"], [279, 5, 1, "", "add_transition"], [279, 5, 1, "", "erev"], [279, 5, 1, "", "gate"], [279, 5, 1, "", "gmax"], [279, 5, 1, "", "ion"], [279, 5, 1, "", "iv_type"], [279, 5, 1, "", "ligand"], [279, 5, 1, "", "name"], [279, 5, 1, "", "ngate"], [279, 5, 1, "", "nligand"], [279, 5, 1, "", "nstate"], [279, 5, 1, "", "ntrans"], [279, 5, 1, "", "pr"], [279, 5, 1, "", "remove_state"], [279, 5, 1, "", "remove_transition"], [279, 5, 1, "", "setstructure"], [279, 5, 1, "", "state"], [279, 5, 1, "", "trans"]], "KSGate": [[150, 1, 1, "", "index"], [150, 1, 1, "", "nstate"], [150, 1, 1, "", "power"], [150, 1, 1, "", "sindex"], [279, 5, 1, "", "index"], [279, 5, 1, "", "nstate"], [279, 5, 1, "", "power"], [279, 5, 1, "", "sindex"]], "KSState": [[150, 1, 1, "", "frac"], [150, 1, 1, "", "gate"], [150, 1, 1, "", "index"], [150, 1, 1, "", "name"], [279, 5, 1, "", "frac"], [279, 5, 1, "", "gate"], [279, 5, 1, "", "index"], [279, 5, 1, "", "name"]], "KSTrans": [[150, 1, 1, "", "ab"], [150, 1, 1, "", "f"], [150, 1, 1, "", "ftype"], [150, 1, 1, "", "index"], [150, 1, 1, "", "inftau"], [150, 1, 1, "", "ligand"], [150, 1, 1, "", "parm"], [150, 1, 1, "", "set_f"], [150, 1, 1, "", "src"], [150, 1, 1, "", "target"], [150, 1, 1, "", "type"], [279, 5, 1, "", "ab"], [279, 5, 1, "", "f"], [279, 5, 1, "", "ftype"], [279, 5, 1, "", "index"], [279, 5, 1, "", "inftau"], [279, 5, 1, "", "ligand"], [279, 5, 1, "", "parm"], [279, 5, 1, "", "set_f"], [279, 5, 1, "", "src"], [279, 5, 1, "", "target"], [279, 5, 1, "", "type"]], "List": [[174, 1, 1, "", "accept_action"], [174, 1, 1, "", "append"], [174, 1, 1, "", "browser"], [174, 1, 1, "", "count"], [174, 1, 1, "", "index"], [174, 1, 1, "", "insrt"], [174, 1, 1, "", "o"], [174, 1, 1, "", "object"], [174, 1, 1, "", "prepend"], [174, 1, 1, "", "remove"], [174, 1, 1, "", "remove_all"], [174, 1, 1, "", "scroll_pos"], [174, 1, 1, "", "select"], [174, 1, 1, "", "select_action"], [174, 1, 1, "", "selected"], [304, 5, 1, "", "accept_action"], [304, 5, 1, "", "append"], [304, 5, 1, "", "browser"], [304, 5, 1, "", "count"], [304, 5, 1, "", "index"], [304, 5, 1, "", "insrt"], [304, 5, 1, "", "o"], [304, 5, 1, "", "object"], [304, 5, 1, "", "prepend"], [304, 5, 1, "", "remove"], [304, 5, 1, "", "remove_all"], [304, 5, 1, "", "scroll_pos"], [304, 5, 1, "", "select"], [304, 5, 1, "", "select_action"], [304, 5, 1, "", "selected"]], "Matrix": [[197, 1, 1, "", "add"], [197, 1, 1, "", "bcopy"], [197, 1, 1, "", "c"], [197, 1, 1, "", "cholesky_factor"], [197, 1, 1, "", "det"], [197, 1, 1, "", "exp"], [197, 1, 1, "", "fprint"], [197, 1, 1, "", "from_vector"], [197, 1, 1, "", "getcol"], [197, 1, 1, "", "getdiag"], [197, 1, 1, "", "getrow"], [197, 1, 1, "", "getval"], [197, 1, 1, "", "ident"], [197, 1, 1, "", "inverse"], [197, 1, 1, "", "mulm"], [197, 1, 1, "", "muls"], [197, 1, 1, "", "mulv"], [197, 1, 1, "", "ncol"], [197, 1, 1, "", "nrow"], [197, 1, 1, "", "pow"], [197, 1, 1, "", "printf"], [197, 1, 1, "", "resize"], [197, 1, 1, "", "scanf"], [197, 1, 1, "", "setcol"], [197, 1, 1, "", "setdiag"], [197, 1, 1, "", "setrow"], [197, 1, 1, "", "setval"], [197, 1, 1, "", "solv"], [197, 1, 1, "", "spgetrowval"], [197, 1, 1, "", "sprowlen"], [197, 1, 1, "", "svd"], [197, 1, 1, "", "symmeig"], [197, 1, 1, "", "to_vector"], [197, 1, 1, "", "transpose"], [197, 2, 1, "", "x"], [197, 1, 1, "", "zero"], [324, 5, 1, "", "add"], [324, 5, 1, "", "bcopy"], [324, 5, 1, "", "c"], [324, 5, 1, "", "det"], [324, 5, 1, "", "exp"], [324, 5, 1, "", "fprint"], [324, 5, 1, "", "from_vector"], [324, 5, 1, "", "getcol"], [324, 5, 1, "", "getdiag"], [324, 5, 1, "", "getrow"], [324, 5, 1, "", "getval"], [324, 5, 1, "", "ident"], [324, 5, 1, "", "inverse"], [324, 5, 1, "", "mulm"], [324, 5, 1, "", "muls"], [324, 5, 1, "", "mulv"], [324, 5, 1, "", "ncol"], [324, 5, 1, "", "nrow"], [324, 5, 1, "", "pow"], [324, 5, 1, "", "printf"], [324, 5, 1, "", "resize"], [324, 5, 1, "", "scanf"], [324, 5, 1, "", "setcol"], [324, 5, 1, "", "setdiag"], [324, 5, 1, "", "setrow"], [324, 5, 1, "", "setval"], [324, 5, 1, "", "solv"], [324, 5, 1, "", "spgetrowval"], [324, 5, 1, "", "sprowlen"], [324, 5, 1, "", "svd"], [324, 5, 1, "", "symmeig"], [324, 5, 1, "", "to_vector"], [324, 5, 1, "", "transpose"], [324, 6, 1, "", "x"], [324, 5, 1, "", "zero"]], "MechanismStandard": [[203, 1, 1, "", "action"], [203, 1, 1, "", "count"], [203, 1, 1, "", "get"], [203, 1, 1, "", "in"], [203, 1, 1, "", "name"], [203, 1, 1, "", "out"], [203, 1, 1, "", "panel"], [203, 1, 1, "", "save"], [203, 1, 1, "", "set"], [330, 5, 1, "", "_in"], [330, 5, 1, "", "action"], [330, 5, 1, "", "count"], [330, 5, 1, "", "get"], [330, 5, 1, "", "is_array"], [330, 5, 1, "", "name"], [330, 5, 1, "", "out"], [330, 5, 1, "", "panel"], [330, 5, 1, "", "save"], [330, 5, 1, "", "set"]], "MechanismType": [[156, 1, 1, "", "action"], [156, 1, 1, "", "count"], [156, 1, 1, "", "has_net_event"], [156, 1, 1, "", "internal_type"], [156, 1, 1, "", "is_artificial"], [156, 1, 1, "", "is_netcon_target"], [156, 1, 1, "", "make"], [156, 1, 1, "", "menu"], [156, 1, 1, "", "pp_begin"], [156, 1, 1, "", "pp_next"], [156, 1, 1, "", "remove"], [156, 1, 1, "", "select"], [156, 1, 1, "", "selected"], [285, 5, 1, "", "action"], [285, 5, 1, "", "code"], [285, 5, 1, "", "count"], [285, 5, 1, "", "file"], [285, 5, 1, "", "has_net_event"], [285, 5, 1, "", "internal_type"], [285, 5, 1, "", "is_artificial"], [285, 5, 1, "", "is_netcon_target"], [285, 5, 1, "", "make"], [285, 5, 1, "", "menu"], [285, 5, 1, "", "pp_begin"], [285, 5, 1, "", "pp_next"], [285, 5, 1, "", "remove"], [285, 5, 1, "", "select"], [285, 5, 1, "", "selected"]], "NMODLRandom": [[327, 5, 1, "", "get_ids"], [327, 5, 1, "", "get_seq"], [327, 5, 1, "", "set_ids"], [327, 5, 1, "", "set_seq"], [327, 5, 1, "", "uniform"]], "NetCon": [[159, 1, 1, "", "active"], [159, 2, 1, "", "delay"], [159, 1, 1, "", "event"], [159, 1, 1, "", "get_recordvec"], [159, 1, 1, "", "postcell"], [159, 1, 1, "", "postcelllist"], [159, 1, 1, "", "postloc"], [159, 1, 1, "", "pre"], [159, 1, 1, "", "precell"], [159, 1, 1, "", "precelllist"], [159, 1, 1, "", "prelist"], [159, 1, 1, "", "preloc"], [159, 1, 1, "", "record"], [159, 1, 1, "", "setpost"], [159, 1, 1, "", "srcgid"], [159, 1, 1, "", "syn"], [159, 1, 1, "", "synlist"], [159, 2, 1, "", "threshold"], [159, 1, 1, "", "valid"], [159, 1, 1, "", "wcnt"], [159, 2, 1, "", "weight"], [159, 2, 1, "", "x"], [288, 5, 1, "", "active"], [288, 6, 1, "", "delay"], [288, 5, 1, "", "event"], [288, 5, 1, "", "get_recordvec"], [288, 5, 1, "", "postcell"], [288, 5, 1, "", "postcelllist"], [288, 5, 1, "", "postloc"], [288, 5, 1, "", "postseg"], [288, 5, 1, "", "pre"], [288, 5, 1, "", "precell"], [288, 5, 1, "", "precelllist"], [288, 5, 1, "", "prelist"], [288, 5, 1, "", "preloc"], [288, 5, 1, "", "preseg"], [288, 5, 1, "", "record"], [288, 5, 1, "", "setpost"], [288, 5, 1, "", "srcgid"], [288, 5, 1, "", "syn"], [288, 5, 1, "", "synlist"], [288, 6, 1, "", "threshold"], [288, 5, 1, "", "valid"], [288, 5, 1, "", "wcnt"], [288, 6, 1, "", "weight"], [288, 6, 1, "", "x"]], "PWManager": [[177, 1, 1, "", "close"], [177, 1, 1, "", "count"], [177, 1, 1, "", "deco"], [177, 1, 1, "", "deiconify"], [177, 1, 1, "", "group"], [177, 1, 1, "", "hide"], [177, 1, 1, "", "iconify"], [177, 1, 1, "", "is_mapped"], [177, 1, 1, "", "landscape"], [177, 1, 1, "", "leader"], [177, 1, 1, "", "manager"], [177, 1, 1, "", "map"], [177, 1, 1, "", "name"], [177, 1, 1, "", "paper_place"], [177, 1, 1, "", "printfile"], [177, 1, 1, "", "save"], [177, 1, 1, "", "scale"], [177, 1, 1, "", "snap"], [177, 1, 1, "", "window_place"], [307, 5, 1, "", "close"], [307, 5, 1, "", "count"], [307, 5, 1, "", "deco"], [307, 5, 1, "", "deiconify"], [307, 5, 1, "", "group"], [307, 5, 1, "", "hide"], [307, 5, 1, "", "iconify"], [307, 5, 1, "", "is_mapped"], [307, 5, 1, "", "landscape"], [307, 5, 1, "", "leader"], [307, 5, 1, "", "manager"], [307, 5, 1, "", "map"], [307, 5, 1, "", "name"], [307, 5, 1, "", "paper_place"], [307, 5, 1, "", "printfile"], [307, 5, 1, "", "save"], [307, 5, 1, "", "scale"], [307, 5, 1, "", "snap"], [307, 5, 1, "", "window_place"]], "ParallelContext": [[160, 1, 1, "", "Threads"], [160, 1, 1, "", "allgather"], [160, 1, 1, "", "allreduce"], [160, 1, 1, "", "alltoall"], [160, 1, 1, "", "barrier"], [160, 1, 1, "", "broadcast"], [160, 1, 1, "", "cell"], [160, 1, 1, "", "context"], [160, 1, 1, "", "done"], [160, 1, 1, "", "dt"], [160, 1, 1, "", "event_time"], [160, 1, 1, "", "gid2cell"], [160, 1, 1, "", "gid2obj"], [160, 1, 1, "", "gid_clear"], [160, 1, 1, "", "gid_connect"], [160, 1, 1, "", "gid_exists"], [160, 1, 1, "", "id"], [160, 1, 1, "", "id_bbs"], [160, 1, 1, "", "id_world"], [160, 1, 1, "", "integ_time"], [160, 1, 1, "", "look"], [160, 1, 1, "", "look_take"], [160, 1, 1, "", "max_histogram"], [160, 1, 1, "", "mech_time"], [160, 1, 1, "", "multisplit"], [160, 1, 1, "", "nhost"], [160, 1, 1, "", "nhost_bbs"], [160, 1, 1, "", "nhost_world"], [160, 1, 1, "", "nthread"], [160, 1, 1, "", "outputcell"], [160, 1, 1, "", "pack"], [160, 1, 1, "", "partition"], [160, 1, 1, "", "post"], [160, 1, 1, "", "prcellstate"], [160, 1, 1, "", "psolve"], [160, 1, 1, "", "py_alltoall"], [160, 1, 1, "", "pyret"], [160, 1, 1, "", "retval"], [160, 1, 1, "", "runworker"], [160, 1, 1, "", "sec_in_thread"], [160, 1, 1, "", "send_time"], [160, 1, 1, "", "set_gid2node"], [160, 1, 1, "", "set_maxstep"], [160, 1, 1, "", "setup_transfer"], [160, 1, 1, "", "source_var"], [160, 1, 1, "", "spike_compress"], [160, 1, 1, "", "spike_record"], [160, 1, 1, "", "spike_statistics"], [160, 1, 1, "", "splitcell"], [160, 1, 1, "", "step_time"], [160, 1, 1, "", "step_wait"], [160, 1, 1, "", "submit"], [160, 1, 1, "", "subworlds"], [160, 1, 1, "", "t"], [160, 1, 1, "", "take"], [160, 1, 1, "", "target_var"], [160, 1, 1, "", "thread_busywait"], [160, 1, 1, "", "thread_ctime"], [160, 1, 1, "", "thread_how_many_proc"], [160, 1, 1, "", "thread_stat"], [160, 1, 1, "", "threshold"], [160, 1, 1, "", "time"], [160, 1, 1, "", "timeout"], [160, 1, 1, "", "unpack"], [160, 1, 1, "", "upkpyobj"], [160, 1, 1, "", "upkscalar"], [160, 1, 1, "", "upkstr"], [160, 1, 1, "", "upkvec"], [160, 1, 1, "", "userid"], [160, 1, 1, "", "vtransfer_time"], [160, 1, 1, "", "wait_time"], [160, 1, 1, "", "working"], [289, 5, 1, "", "Threads"], [289, 5, 1, "", "allgather"], [289, 5, 1, "", "allreduce"], [289, 5, 1, "", "alltoall"], [289, 5, 1, "", "barrier"], [289, 5, 1, "", "broadcast"], [289, 5, 1, "", "cell"], [289, 5, 1, "", "context"], [289, 5, 1, "", "done"], [289, 5, 1, "", "dt"], [289, 5, 1, "", "event_time"], [289, 5, 1, "", "get_partition"], [289, 5, 1, "", "gid2cell"], [289, 5, 1, "", "gid2obj"], [289, 5, 1, "", "gid_clear"], [289, 5, 1, "", "gid_connect"], [289, 5, 1, "", "gid_exists"], [289, 5, 1, "", "id"], [289, 5, 1, "", "id_bbs"], [289, 5, 1, "", "id_world"], [289, 5, 1, "", "integ_time"], [289, 5, 1, "", "look"], [289, 5, 1, "", "look_take"], [289, 5, 1, "", "max_histogram"], [289, 5, 1, "", "mech_time"], [289, 5, 1, "", "mpi_init"], [289, 5, 1, "", "mpiabort_on_error"], [289, 5, 1, "", "multisplit"], [289, 5, 1, "", "nhost"], [289, 5, 1, "", "nhost_bbs"], [289, 5, 1, "", "nhost_world"], [289, 5, 1, "", "nrncore_run"], [289, 5, 1, "", "nrncore_write"], [289, 5, 1, "", "nthread"], [289, 5, 1, "", "nworker"], [289, 5, 1, "", "optimize_node_order"], [289, 5, 1, "", "outputcell"], [289, 5, 1, "", "pack"], [289, 5, 1, "", "partition"], [289, 5, 1, "", "post"], [289, 5, 1, "", "prcellstate"], [289, 5, 1, "", "psolve"], [289, 5, 1, "", "py_allgather"], [289, 5, 1, "", "py_alltoall"], [289, 5, 1, "", "py_broadcast"], [289, 5, 1, "", "py_gather"], [289, 5, 1, "", "py_scatter"], [289, 5, 1, "", "pyret"], [289, 5, 1, "", "retval"], [289, 5, 1, "", "runworker"], [289, 5, 1, "", "sec_in_thread"], [289, 5, 1, "", "send_time"], [289, 5, 1, "", "set_gid2node"], [289, 5, 1, "", "set_maxstep"], [289, 5, 1, "", "setup_transfer"], [289, 5, 1, "", "source_var"], [289, 5, 1, "", "spike_compress"], [289, 5, 1, "", "spike_record"], [289, 5, 1, "", "spike_statistics"], [289, 5, 1, "", "splitcell"], [289, 5, 1, "", "step_time"], [289, 5, 1, "", "submit"], [289, 5, 1, "", "subworlds"], [289, 5, 1, "", "t"], [289, 5, 1, "", "take"], [289, 5, 1, "", "target_var"], [289, 5, 1, "", "thread_busywait"], [289, 5, 1, "", "thread_ctime"], [289, 5, 1, "", "thread_how_many_proc"], [289, 5, 1, "", "thread_stat"], [289, 5, 1, "", "threshold"], [289, 5, 1, "", "time"], [289, 5, 1, "", "timeout"], [289, 5, 1, "", "unpack"], [289, 5, 1, "", "upkpyobj"], [289, 5, 1, "", "upkscalar"], [289, 5, 1, "", "upkstr"], [289, 5, 1, "", "upkvec"], [289, 5, 1, "", "userid"], [289, 5, 1, "", "vtransfer_time"], [289, 5, 1, "", "wait_time"], [289, 5, 1, "", "working"]], "ParallelNetManager": [[161, 1, 1, "", "create_cell"], [161, 1, 1, "", "gatherspikes"], [161, 1, 1, "", "gid_exists"], [161, 1, 1, "", "nc_append"], [161, 1, 1, "", "pcontinue"], [161, 1, 1, "", "pinit"], [161, 1, 1, "", "prstat"], [161, 1, 1, "", "prun"], [161, 1, 1, "", "psolve"], [161, 1, 1, "", "register_cell"], [161, 1, 1, "", "round_robin"], [161, 1, 1, "", "set_gid2node"], [161, 1, 1, "", "spike_record"], [161, 1, 1, "", "splitcell"], [161, 1, 1, "", "want_all_spikes"], [290, 5, 1, "", "create_cell"], [290, 5, 1, "", "gatherspikes"], [290, 5, 1, "", "gid_exists"], [290, 5, 1, "", "nc_append"], [290, 5, 1, "", "pcontinue"], [290, 5, 1, "", "pinit"], [290, 5, 1, "", "prstat"], [290, 5, 1, "", "prun"], [290, 5, 1, "", "psolve"], [290, 5, 1, "", "register_cell"], [290, 5, 1, "", "round_robin"], [290, 5, 1, "", "set_gid2node"], [290, 5, 1, "", "spike_record"], [290, 5, 1, "", "splitcell"], [290, 5, 1, "", "want_all_spikes"]], "PlotShape": [[235, 1, 1, "", "beginline"], [235, 1, 1, "", "color"], [235, 1, 1, "", "color_all"], [235, 1, 1, "", "color_list"], [235, 1, 1, "", "colormap"], [235, 1, 1, "", "erase"], [235, 1, 1, "", "erase_all"], [235, 1, 1, "", "exec_menu"], [235, 1, 1, "", "fastflush"], [235, 1, 1, "", "flush"], [235, 1, 1, "", "hinton"], [235, 1, 1, "", "label"], [235, 1, 1, "", "len_scale"], [235, 1, 1, "", "line"], [235, 1, 1, "", "mark"], [235, 1, 1, "", "menu_action"], [235, 1, 1, "", "menu_tool"], [235, 1, 1, "", "nearest"], [235, 1, 1, "", "observe"], [235, 1, 1, "", "printfile"], [235, 1, 1, "", "push_selected"], [235, 1, 1, "", "rotate"], [235, 1, 1, "", "save_name"], [235, 1, 1, "", "scale"], [235, 1, 1, "", "show"], [235, 1, 1, "", "size"], [235, 1, 1, "", "unmap"], [235, 1, 1, "", "variable"], [235, 1, 1, "", "view"], [235, 1, 1, "", "view_count"], [359, 5, 1, "", "beginline"], [359, 5, 1, "", "color"], [359, 5, 1, "", "color_all"], [359, 5, 1, "", "color_list"], [359, 5, 1, "", "colormap"], [359, 5, 1, "", "erase"], [359, 5, 1, "", "erase_all"], [359, 5, 1, "", "exec_menu"], [359, 5, 1, "", "fastflush"], [359, 5, 1, "", "flush"], [359, 5, 1, "", "hinton"], [359, 5, 1, "", "label"], [359, 5, 1, "", "len_scale"], [359, 5, 1, "", "line"], [359, 5, 1, "", "mark"], [359, 5, 1, "", "menu_action"], [359, 5, 1, "", "menu_tool"], [359, 5, 1, "", "nearest"], [359, 5, 1, "", "observe"], [359, 5, 1, "", "plot"], [359, 5, 1, "", "printfile"], [359, 5, 1, "", "push_selected"], [359, 5, 1, "", "rotate"], [359, 5, 1, "", "save_name"], [359, 5, 1, "", "scale"], [359, 5, 1, "", "show"], [359, 5, 1, "", "size"], [359, 5, 1, "", "unmap"], [359, 5, 1, "", "variable"], [359, 5, 1, "", "view"], [359, 5, 1, "", "view_count"]], "Pointer": [[207, 1, 1, "", "assign"], [207, 1, 1, "", "s"], [207, 1, 1, "", "val"], [333, 5, 1, "", "assign"], [333, 5, 1, "", "s"], [333, 7, 1, "", "val"]], "PtrVector": [[208, 1, 1, "", "gather"], [208, 1, 1, "", "getval"], [208, 1, 1, "", "pset"], [208, 1, 1, "", "ptr_update_callback"], [208, 1, 1, "", "resize"], [208, 1, 1, "", "scatter"], [208, 1, 1, "", "setval"], [208, 1, 1, "", "size"], [334, 5, 1, "", "gather"], [334, 5, 1, "", "getval"], [334, 5, 1, "", "label"], [334, 5, 1, "", "plot"], [334, 5, 1, "", "pset"], [334, 5, 1, "", "ptr_update_callback"], [334, 5, 1, "", "resize"], [334, 5, 1, "", "scatter"], [334, 5, 1, "", "setval"], [334, 5, 1, "", "size"]], "Random": [[200, 1, 1, "", "ACG"], [200, 1, 1, "", "MCellRan4"], [200, 1, 1, "", "MLCG"], [200, 1, 1, "", "Random123"], [200, 1, 1, "", "Random123_globalindex"], [200, 1, 1, "", "binomial"], [200, 1, 1, "", "discunif"], [200, 1, 1, "", "erlang"], [200, 1, 1, "", "geometric"], [200, 1, 1, "", "hypergeo"], [200, 1, 1, "", "lognormal"], [200, 1, 1, "", "negexp"], [200, 1, 1, "", "normal"], [200, 1, 1, "", "play"], [200, 1, 1, "", "poisson"], [200, 1, 1, "", "repick"], [200, 1, 1, "", "seq"], [200, 1, 1, "", "uniform"], [200, 1, 1, "", "weibull"], [327, 5, 1, "", "ACG"], [327, 5, 1, "", "MCellRan4"], [327, 5, 1, "", "MLCG"], [327, 5, 1, "", "Random123"], [327, 5, 1, "", "Random123_globalindex"], [327, 5, 1, "", "binomial"], [327, 5, 1, "", "discunif"], [327, 5, 1, "", "erlang"], [327, 5, 1, "", "geometric"], [327, 5, 1, "", "hypergeo"], [327, 5, 1, "", "lognormal"], [327, 5, 1, "", "negexp"], [327, 5, 1, "", "normal"], [327, 5, 1, "", "play"], [327, 5, 1, "", "poisson"], [327, 5, 1, "", "repick"], [327, 5, 1, "", "seq"], [327, 5, 1, "", "uniform"], [327, 5, 1, "", "weibull"]], "RangeVarPlot": [[236, 1, 1, "", "begin"], [236, 1, 1, "", "color"], [236, 1, 1, "", "end"], [236, 1, 1, "", "from_vector"], [236, 1, 1, "", "left"], [236, 1, 1, "", "list"], [236, 1, 1, "", "origin"], [236, 1, 1, "", "right"], [236, 1, 1, "", "to_vector"], [360, 5, 1, "", "begin"], [360, 5, 1, "", "color"], [360, 5, 1, "", "end"], [360, 5, 1, "", "from_vector"], [360, 5, 1, "", "left"], [360, 5, 1, "", "list"], [360, 5, 1, "", "origin"], [360, 5, 1, "", "plot"], [360, 5, 1, "", "right"], [360, 5, 1, "", "to_vector"], [360, 5, 1, "", "vector"]], "SaveState": [[225, 1, 1, "", "fread"], [225, 1, 1, "", "fwrite"], [225, 1, 1, "", "restore"], [225, 1, 1, "", "save"], [225, 1, 1, "", "writehoc"], [349, 5, 1, "", "fread"], [349, 5, 1, "", "fwrite"], [349, 5, 1, "", "restore"], [349, 5, 1, "", "save"], [349, 5, 1, "", "writehoc"]], "Section": [[295, 5, 1, "", "cell"], [295, 5, 1, "", "connect"], [295, 5, 1, "", "disconnect"], [295, 5, 1, "", "hname"], [295, 5, 1, "", "name"], [295, 6, 1, "", "nseg"], [295, 5, 1, "", "orientation"], [295, 5, 1, "", "parentseg"], [295, 5, 1, "", "subtree"], [295, 5, 1, "", "wholetree"]], "SectionBrowser": [[178, 1, 1, "", "accept_action"], [178, 1, 1, "", "select"], [178, 1, 1, "", "select_action"], [308, 5, 1, "", "accept_action"], [308, 5, 1, "", "select"], [308, 5, 1, "", "select_action"]], "SectionList": [[167, 1, 1, "", "allroots"], [167, 1, 1, "", "append"], [167, 1, 1, "", "children"], [167, 1, 1, "", "printnames"], [167, 1, 1, "", "remove"], [167, 1, 1, "", "subtree"], [167, 1, 1, "", "unique"], [167, 1, 1, "", "wholetree"], [297, 5, 1, "", "allroots"], [297, 5, 1, "", "append"], [297, 5, 1, "", "children"], [297, 5, 1, "", "printnames"], [297, 5, 1, "", "remove"], [297, 5, 1, "", "subtree"], [297, 5, 1, "", "unique"], [297, 5, 1, "", "wholetree"]], "SectionRef": [[168, 1, 1, "", "child"], [168, 1, 1, "", "exists"], [168, 1, 1, "", "has_parent"], [168, 1, 1, "", "has_trueparent"], [168, 1, 1, "", "is_cas"], [168, 1, 1, "", "nchild"], [168, 1, 1, "", "parent"], [168, 1, 1, "", "root"], [168, 1, 1, "", "sec"], [168, 1, 1, "", "trueparent"], [298, 6, 1, "", "child"], [298, 5, 1, "", "exists"], [298, 5, 1, "", "has_parent"], [298, 5, 1, "", "has_trueparent"], [298, 5, 1, "", "is_cas"], [298, 5, 1, "", "nchild"], [298, 6, 1, "", "parent"], [298, 6, 1, "", "root"], [298, 6, 1, "", "sec"], [298, 6, 1, "", "trueparent"]], "Shape": [[237, 1, 1, "", "action"], [237, 1, 1, "", "beginline"], [237, 1, 1, "", "color"], [237, 1, 1, "", "color_all"], [237, 1, 1, "", "color_list"], [237, 1, 1, "", "erase"], [237, 1, 1, "", "erase_all"], [237, 1, 1, "", "exec_menu"], [237, 1, 1, "", "flush"], [237, 1, 1, "", "label"], [237, 1, 1, "", "len_scale"], [237, 1, 1, "", "line"], [237, 1, 1, "", "mark"], [237, 1, 1, "", "menu_action"], [237, 1, 1, "", "menu_tool"], [237, 1, 1, "", "nearest"], [237, 1, 1, "", "observe"], [237, 1, 1, "", "point_mark"], [237, 1, 1, "", "point_mark_remove"], [237, 1, 1, "", "printfile"], [237, 1, 1, "", "push_selected"], [237, 1, 1, "", "rotate"], [237, 1, 1, "", "save_name"], [237, 1, 1, "", "select"], [237, 1, 1, "", "show"], [237, 1, 1, "", "size"], [237, 1, 1, "", "unmap"], [237, 1, 1, "", "view"], [237, 1, 1, "", "view_count"], [361, 5, 1, "", "action"], [361, 5, 1, "", "beginline"], [361, 5, 1, "", "color"], [361, 5, 1, "", "color_all"], [361, 5, 1, "", "color_list"], [361, 5, 1, "", "erase"], [361, 5, 1, "", "erase_all"], [361, 5, 1, "", "exec_menu"], [361, 5, 1, "", "flush"], [361, 5, 1, "", "label"], [361, 5, 1, "", "len_scale"], [361, 5, 1, "", "line"], [361, 5, 1, "", "mark"], [361, 5, 1, "", "menu_action"], [361, 5, 1, "", "menu_tool"], [361, 5, 1, "", "nearest"], [361, 5, 1, "", "observe"], [361, 5, 1, "", "point_mark"], [361, 5, 1, "", "point_mark_remove"], [361, 5, 1, "", "printfile"], [361, 5, 1, "", "push_selected"], [361, 5, 1, "", "rotate"], [361, 5, 1, "", "save_name"], [361, 5, 1, "", "select"], [361, 5, 1, "", "show"], [361, 5, 1, "", "size"], [361, 5, 1, "", "unmap"], [361, 5, 1, "", "view"], [361, 5, 1, "", "view_count"]], "StateTransitionEvent": [[164, 1, 1, "", "state"], [164, 1, 1, "", "transition"], [294, 5, 1, "", "state"], [294, 5, 1, "", "transition"]], "StringFunctions": [[214, 1, 1, "", "alias"], [214, 1, 1, "", "alias_list"], [214, 1, 1, "", "head"], [214, 1, 1, "", "is_artificial"], [214, 1, 1, "", "is_name"], [214, 1, 1, "", "is_point_process"], [214, 1, 1, "", "left"], [214, 1, 1, "", "len"], [214, 1, 1, "", "references"], [214, 1, 1, "", "right"], [214, 1, 1, "", "substr"], [214, 1, 1, "", "tail"], [338, 5, 1, "", "alias"], [338, 5, 1, "", "alias_list"], [338, 5, 1, "", "head"], [338, 5, 1, "", "is_artificial"], [338, 5, 1, "", "is_name"], [338, 5, 1, "", "is_point_process"], [338, 5, 1, "", "left"], [338, 5, 1, "", "len"], [338, 5, 1, "", "references"], [338, 5, 1, "", "right"], [338, 5, 1, "", "substr"], [338, 5, 1, "", "tail"]], "SymChooser": [[179, 1, 1, "", "run"], [179, 1, 1, "", "text"], [309, 5, 1, "", "run"], [309, 5, 1, "", "text"]], "TextEditor": [[180, 1, 1, "", "map"], [180, 1, 1, "", "readonly"], [180, 1, 1, "", "text"], [310, 5, 1, "", "map"], [310, 5, 1, "", "readonly"], [310, 5, 1, "", "text"]], "Timer": [[217, 1, 1, "", "end"], [217, 1, 1, "", "seconds"], [217, 1, 1, "", "start"], [341, 5, 1, "", "end"], [341, 5, 1, "", "seconds"], [341, 5, 1, "", "start"]], "VBox": [[173, 1, 1, "", "adjust"], [173, 1, 1, "", "adjuster"], [173, 1, 1, "", "dialog"], [173, 1, 1, "", "dismiss_action"], [173, 1, 1, "", "full_request"], [173, 1, 1, "", "intercept"], [173, 1, 1, "", "ismapped"], [173, 1, 1, "", "map"], [173, 1, 1, "", "priority"], [173, 1, 1, "", "ref"], [173, 1, 1, "", "save"], [173, 1, 1, "", "size"], [173, 1, 1, "", "unmap"], [303, 5, 1, "", "adjust"], [303, 5, 1, "", "adjuster"], [303, 5, 1, "", "dialog"], [303, 5, 1, "", "dismiss_action"], [303, 5, 1, "", "full_request"], [303, 5, 1, "", "intercept"], [303, 5, 1, "", "ismapped"], [303, 5, 1, "", "map"], [303, 5, 1, "", "priority"], [303, 5, 1, "", "ref"], [303, 5, 1, "", "save"], [303, 5, 1, "", "size"], [303, 5, 1, "", "unmap"]], "ValueFieldEditor": [[181, 1, 1, "", "default"], [311, 5, 1, "", "default"]], "Vector": [[201, 1, 1, "", "abs"], [201, 1, 1, "", "add"], [201, 1, 1, "", "addrand"], [201, 1, 1, "", "append"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "as_numpy"], [201, 1, 1, "", "at"], [201, 1, 1, "", "buffer_size"], [201, 1, 1, "", "c"], [201, 1, 1, "", "cl"], [201, 1, 1, "", "contains"], [201, 1, 1, "", "convlv"], [201, 1, 1, "", "copy"], [201, 1, 1, "", "correl"], [201, 1, 1, "", "deriv"], [201, 1, 1, "", "div"], [201, 1, 1, "", "dot"], [201, 1, 1, "", "eq"], [201, 1, 1, "", "fft"], [201, 1, 1, "", "fill"], [201, 1, 1, "", "filter"], [201, 1, 1, "", "fit"], [201, 1, 1, "", "floor"], [201, 1, 1, "", "fread"], [201, 1, 1, "", "from_double"], [201, 1, 1, "", "from_python"], [201, 1, 1, "", "fwrite"], [201, 1, 1, "", "get"], [201, 1, 1, "", "hist"], [201, 1, 1, "", "histogram"], [201, 1, 1, "", "ind"], [201, 1, 1, "", "index"], [201, 1, 1, "", "indgen"], [201, 1, 1, "", "indvwhere"], [201, 1, 1, "", "indwhere"], [201, 1, 1, "", "inf"], [201, 1, 1, "", "insrt"], [201, 1, 1, "", "integral"], [201, 1, 1, "", "interpolate"], [201, 1, 1, "", "label"], [201, 1, 1, "", "line"], [201, 1, 1, "", "log"], [201, 1, 1, "", "log10"], [201, 1, 1, "", "mag"], [201, 1, 1, "", "mark"], [201, 1, 1, "", "max"], [201, 1, 1, "", "max_ind"], [201, 1, 1, "", "mean"], [201, 1, 1, "", "meansqerr"], [201, 1, 1, "", "medfltr"], [201, 1, 1, "", "median"], [201, 1, 1, "", "min"], [201, 1, 1, "", "min_ind"], [201, 1, 1, "", "mul"], [201, 1, 1, "", "play"], [201, 1, 1, "", "play_remove"], [201, 1, 1, "", "plot"], [201, 1, 1, "", "ploterr"], [201, 1, 1, "", "pow"], [201, 1, 1, "", "printf"], [201, 1, 1, "", "psth"], [201, 1, 1, "", "rebin"], [201, 1, 1, "", "record"], [201, 1, 1, "", "reduce"], [201, 1, 1, "", "remove"], [201, 1, 1, "", "resample"], [201, 1, 1, "", "resize"], [201, 1, 1, "", "reverse"], [201, 1, 1, "", "rotate"], [201, 1, 1, "", "scale"], [201, 1, 1, "", "scanf"], [201, 1, 1, "", "scantil"], [201, 1, 1, "", "set"], [201, 1, 1, "", "setrand"], [201, 1, 1, "", "sin"], [201, 1, 1, "", "size"], [201, 1, 1, "", "smhist"], [201, 1, 1, "", "sort"], [201, 1, 1, "", "sortindex"], [201, 1, 1, "", "spctrm"], [201, 1, 1, "", "spikebin"], [201, 1, 1, "", "sqrt"], [201, 1, 1, "", "stderr"], [201, 1, 1, "", "stdev"], [201, 1, 1, "", "sub"], [201, 1, 1, "", "sum"], [201, 1, 1, "", "sumgauss"], [201, 1, 1, "", "sumsq"], [201, 1, 1, "", "tanh"], [201, 1, 1, "", "to_python"], [201, 1, 1, "", "trigavg"], [201, 1, 1, "", "var"], [201, 1, 1, "", "vread"], [201, 1, 1, "", "vwrite"], [201, 1, 1, "", "where"], [201, 2, 1, "", "x"], [328, 5, 1, "", "abs"], [328, 5, 1, "", "add"], [328, 5, 1, "", "addrand"], [328, 5, 1, "", "append"], [328, 5, 1, "", "apply"], [328, 5, 1, "", "as_numpy"], [328, 5, 1, "", "at"], [328, 5, 1, "", "buffer_size"], [328, 5, 1, "", "c"], [328, 5, 1, "", "cl"], [328, 5, 1, "", "contains"], [328, 5, 1, "", "convlv"], [328, 5, 1, "", "copy"], [328, 5, 1, "", "correl"], [328, 5, 1, "", "deriv"], [328, 5, 1, "", "div"], [328, 5, 1, "", "dot"], [328, 5, 1, "", "eq"], [328, 5, 1, "", "fft"], [328, 5, 1, "", "fill"], [328, 5, 1, "", "filter"], [328, 5, 1, "", "fit"], [328, 5, 1, "", "floor"], [328, 5, 1, "", "fread"], [328, 5, 1, "", "from_double"], [328, 5, 1, "", "from_python"], [328, 5, 1, "", "fwrite"], [328, 5, 1, "", "get"], [328, 5, 1, "", "hist"], [328, 5, 1, "", "histogram"], [328, 5, 1, "", "ind"], [328, 5, 1, "", "index"], [328, 5, 1, "", "indgen"], [328, 5, 1, "", "indvwhere"], [328, 5, 1, "", "indwhere"], [328, 5, 1, "", "inf"], [328, 5, 1, "", "insrt"], [328, 5, 1, "", "integral"], [328, 5, 1, "", "interpolate"], [328, 5, 1, "", "label"], [328, 5, 1, "", "line"], [328, 5, 1, "", "log"], [328, 5, 1, "", "log10"], [328, 5, 1, "", "mag"], [328, 5, 1, "", "mark"], [328, 5, 1, "", "max"], [328, 5, 1, "", "max_ind"], [328, 5, 1, "", "mean"], [328, 5, 1, "", "meansqerr"], [328, 5, 1, "", "medfltr"], [328, 5, 1, "", "median"], [328, 5, 1, "", "min"], [328, 5, 1, "", "min_ind"], [328, 5, 1, "", "mul"], [328, 5, 1, "", "play"], [328, 5, 1, "", "play_remove"], [328, 5, 1, "", "plot"], [328, 5, 1, "", "ploterr"], [328, 5, 1, "", "pow"], [328, 5, 1, "", "printf"], [328, 5, 1, "", "psth"], [328, 5, 1, "", "rebin"], [328, 5, 1, "", "record"], [328, 5, 1, "", "reduce"], [328, 5, 1, "", "remove"], [328, 5, 1, "", "resample"], [328, 5, 1, "", "resize"], [328, 5, 1, "", "reverse"], [328, 5, 1, "", "rotate"], [328, 5, 1, "", "scale"], [328, 5, 1, "", "scanf"], [328, 5, 1, "", "scantil"], [328, 5, 1, "", "set"], [328, 5, 1, "", "setrand"], [328, 5, 1, "", "sin"], [328, 5, 1, "", "size"], [328, 5, 1, "", "smhist"], [328, 5, 1, "", "sort"], [328, 5, 1, "", "sortindex"], [328, 5, 1, "", "spctrm"], [328, 5, 1, "", "spikebin"], [328, 5, 1, "", "sqrt"], [328, 5, 1, "", "stderr"], [328, 5, 1, "", "stdev"], [328, 5, 1, "", "sub"], [328, 5, 1, "", "sum"], [328, 5, 1, "", "sumgauss"], [328, 5, 1, "", "sumsq"], [328, 5, 1, "", "tanh"], [328, 5, 1, "", "to_python"], [328, 5, 1, "", "trigavg"], [328, 5, 1, "", "var"], [328, 5, 1, "", "vread"], [328, 5, 1, "", "vwrite"], [328, 5, 1, "", "where"], [328, 6, 1, "", "x"]], "neuron.h": [[314, 4, 1, "", "Section"], [314, 5, 1, "", "cas"]], "neuron.hoc": [[314, 4, 1, "", "HocObject"], [314, 5, 1, "", "execute"], [314, 5, 1, "", "hoc_ac"]], "pnt": [[153, 1, 1, "", "get_loc"], [153, 1, 1, "", "get_segment"], [153, 1, 1, "", "has_loc"], [153, 1, 1, "", "loc"], [282, 5, 1, "", "get_loc"], [282, 5, 1, "", "get_segment"], [282, 5, 1, "", "has_loc"], [282, 5, 1, "", "loc"]], "rxd": [[163, 0, 1, "", "Extracellular"], [163, 0, 1, "", "MultiCompartmentReaction"], [163, 0, 1, "", "Parameter"], [163, 0, 1, "", "Rate"], [163, 0, 1, "", "Reaction"], [163, 0, 1, "", "Region"], [163, 0, 1, "", "RxDException"], [163, 0, 1, "", "Species"], [163, 0, 1, "", "State"], [163, 3, 1, "", "nthread"], [163, 3, 1, "", "re_init"], [163, 3, 1, "", "set_solve_type"], [292, 4, 1, "", "DistributedBoundary"], [292, 4, 1, "", "Extracellular"], [292, 4, 1, "", "FixedCrossSection"], [292, 4, 1, "", "FixedPerimeter"], [292, 4, 1, "", "FractionalVolume"], [292, 4, 1, "", "MultiCompartmentReaction"], [292, 4, 1, "", "Parameter"], [292, 4, 1, "", "Rate"], [292, 4, 1, "", "Reaction"], [292, 4, 1, "", "Region"], [292, 4, 1, "", "RxDException"], [292, 4, 1, "", "ScalableBorder"], [292, 4, 1, "", "Shell"], [292, 4, 1, "", "Species"], [292, 4, 1, "", "State"], [292, 7, 1, "", "inside"], [292, 7, 1, "", "membrane"], [292, 8, 1, "", "nthread"], [292, 8, 1, "", "re_init"], [292, 8, 1, "", "set_solve_type"], [163, 9, 1, "", "v"]], "rxd.Reaction": [[292, 9, 1, "", "b_rate"], [292, 9, 1, "", "f_rate"]], "rxd.Region": [[163, 9, 1, "", "geometry"], [163, 9, 1, "", "name"], [163, 9, 1, "", "nrn_region"], [163, 9, 1, "", "secs"]], "rxd.Species": [[292, 9, 1, "", "charge"], [292, 5, 1, "", "concentrations"], [292, 5, 1, "", "defined_on_region"], [292, 5, 1, "", "indices"], [292, 9, 1, "", "name"], [292, 9, 1, "", "nodes"], [292, 5, 1, "", "re_init"], [292, 9, 1, "", "regions"], [292, 9, 1, "", "states"]], "rxd.export": [[292, 8, 1, "", "sbml"]], "rxd.node": [[292, 4, 1, "", "Node"], [292, 4, 1, "", "Node1D"], [292, 4, 1, "", "Node3D"], [292, 4, 1, "", "NodeExtracellular"]], "rxd.node.Node": [[292, 9, 1, "", "_ref_concentration"], [292, 9, 1, "", "_ref_molecules"], [292, 9, 1, "", "_ref_value"], [292, 9, 1, "", "concentration"], [292, 9, 1, "", "d"], [292, 5, 1, "", "include_flux"], [292, 9, 1, "", "molecules"], [292, 9, 1, "", "region"], [292, 5, 1, "", "satisfies"], [292, 9, 1, "", "species"], [292, 9, 1, "", "value"], [292, 9, 1, "", "volume"], [292, 9, 1, "", "x3d"], [292, 9, 1, "", "y3d"], [292, 9, 1, "", "z3d"]], "rxd.node.Node1D": [[292, 5, 1, "", "satisfies"], [292, 9, 1, "", "sec"], [292, 9, 1, "", "segment"], [292, 9, 1, "", "surface_area"], [292, 9, 1, "", "x"]], "rxd.node.Node3D": [[292, 5, 1, "", "satisfies"], [292, 9, 1, "", "sec"], [292, 9, 1, "", "segment"], [292, 9, 1, "", "surface_area"]], "rxd.node.NodeExtracellular": [[292, 5, 1, "", "satisfies"]], "rxd.nodelist": [[163, 0, 1, "", "NodeList"], [292, 4, 1, "", "NodeList"]], "rxd.nodelist.NodeList": [[292, 9, 1, "", "_ref_concentration"], [292, 9, 1, "", "_ref_value"], [292, 9, 1, "", "concentration"], [292, 9, 1, "", "diff"], [292, 5, 1, "", "include_flux"], [292, 9, 1, "", "region"], [292, 9, 1, "", "segment"], [292, 9, 1, "", "species"], [292, 9, 1, "", "surface_area"], [292, 9, 1, "", "value"], [292, 5, 1, "", "value_to_grid"], [292, 9, 1, "", "volume"], [292, 9, 1, "", "x"]], "rxdmath": [[293, 8, 1, "", "acos"], [293, 8, 1, "", "acosh"], [293, 8, 1, "", "asin"], [293, 8, 1, "", "asinh"], [293, 8, 1, "", "atan"], [293, 8, 1, "", "atan2"], [293, 8, 1, "", "ceil"], [293, 8, 1, "", "copysign"], [293, 8, 1, "", "cos"], [293, 8, 1, "", "cosh"], [293, 8, 1, "", "degrees"], [293, 8, 1, "", "erf"], [293, 8, 1, "", "erfc"], [293, 8, 1, "", "exp"], [293, 8, 1, "", "expm1"], [293, 8, 1, "", "fabs"], [293, 8, 1, "", "factorial"], [293, 8, 1, "", "floor"], [293, 8, 1, "", "fmod"], [293, 8, 1, "", "gamma"], [293, 8, 1, "", "lgamma"], [293, 8, 1, "", "log"], [293, 8, 1, "", "log10"], [293, 8, 1, "", "log1p"], [293, 8, 1, "", "pow"], [293, 8, 1, "", "radians"], [293, 8, 1, "", "sin"], [293, 8, 1, "", "sinh"], [293, 8, 1, "", "sqrt"], [293, 8, 1, "", "tan"], [293, 8, 1, "", "tanh"], [293, 8, 1, "", "trunc"], [293, 8, 1, "", "vtrap"]]}, "objnames": {"0": ["hoc", "class", "HOC class"], "1": ["hoc", "method", "HOC method"], "2": ["hoc", "data", "HOC data"], "3": ["hoc", "function", "HOC function"], "4": ["py", "class", "Python class"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "function", "Python function"], "9": ["py", "property", "Python property"]}, "objtypes": {"0": "hoc:class", "1": "hoc:method", "2": "hoc:data", "3": "hoc:function", "4": "py:class", "5": "py:method", "6": "py:data", "7": "py:attribute", "8": "py:function", "9": "py:property"}, "terms": {"": [3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 19, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 45, 49, 51, 52, 53, 54, 56, 60, 64, 65, 66, 68, 69, 70, 71, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 94, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 119, 120, 123, 126, 134, 136, 137, 144, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 168, 169, 170, 173, 174, 178, 185, 188, 190, 198, 201, 203, 205, 207, 209, 213, 214, 219, 220, 221, 223, 224, 227, 228, 229, 231, 234, 235, 237, 239, 240, 242, 246, 247, 248, 253, 254, 255, 262, 264, 265, 273, 278, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 303, 304, 312, 314, 315, 316, 317, 318, 322, 325, 328, 330, 331, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 353, 355, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 382, 383, 384, 385, 387, 389, 391, 393], "0": [4, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 63, 64, 66, 67, 68, 69, 70, 72, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 114, 116, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 242, 244, 246, 247, 248, 249, 250, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 347, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 382, 383, 384, 385, 387, 388], "00": [54, 248, 377, 387], "000": [24, 45, 54, 67, 126, 160, 229, 289, 353], "0000": [201, 328], "00000": [201, 328], "000000": [92, 190, 317], "00000000": 54, "0000000000000546": 255, "0000000000000649": 255, "00000000e": 387, "000001": 242, "00000133288267534": 323, "000002": 242, "000003": 242, "00000432481465396": 323, "00001": 255, "00002": [25, 255], "000021": 242, "000022": 242, "00003": 255, "000037": 242, "00004": 255, "00005": 255, "00006": 255, "00007": 255, "00008": 255, "00009": 255, "0001": [25, 96, 134, 151, 250, 262, 280], "00010": 255, "00011": 255, "00012": 255, "00013": 255, "00014": 255, "00015": 255, "00016": 255, "00017": [93, 255], "00018": 255, "00019": [255, 342], "0002": 255, "00020": 255, "00021": 255, "00022": 255, "00023": 255, "000235": 242, "00024": 255, "00028": [254, 255], "00029": 255, "0003": [22, 72, 105, 153, 159, 282, 371, 382, 383, 384, 388], "00030": 255, "00031": 255, "00033": 255, "00034": 255, "00035": 255, "00036": 255, "00037": 255, "00038": 255, "00039": 255, "0004": 254, "00040": 255, "00041": [254, 255], "00042": 255, "00044": 255, "00046": 255, "00047": 255, "00048": 255, "000481905": 255, "0004828": 255, "00049": [254, 255], "0005": [96, 116], "00050": 255, "00052": 255, "00053": 255, "00054": 255, "00056": 255, "00057": 255, "00058": 255, "000592712": 282, "0006": 255, "00060": 255, "00063": 255, "00064": 255, "00065": 255, "0006586": 255, "00066": 255, "00067": 255, "00068": 255, "000685": 242, "0006970": 255, "00070": 255, "00071": 255, "000716": 255, "00072": 255, "00074": 255, "00075": 255, "00076": 255, "00077": 255, "0008": 373, "00080": 255, "0008047": 255, "00082": 255, "00083": 255, "00085": 255, "00087v2": 255, "00088": 255, "00089": 255, "00091": 255, "00092": 255, "00093": 255, "00094": 255, "00099": 255, "001": [22, 37, 78, 96, 119, 120, 136, 151, 154, 220, 223, 231, 250, 254, 255, 264, 280, 283, 344, 347, 355, 368, 371, 382, 383, 384], "00100": 255, "00105": 255, "00109": 255, "00110": 255, "00112": 255, "00118": 255, "00119": 255, "0012": 255, "00122": 255, "00123": 255, "00128": 255, "00129": 255, "00135": 255, "00136": 255, "001370": 242, "00139": 255, "0014": 255, "00141": 255, "00145": 255, "00147": 255, "001479": 242, "00148": 255, "00150": 255, "00152": 255, "00155": 255, "00156": 255, "00157": 255, "00161": 255, "00165": 255, "00166": 255, "00168": 255, "00169": 255, "0017": 255, "00173": 255, "00175": 255, "00176": 255, "00181": 255, "00187": 255, "0019463": 255, "00198": 255, "002": [54, 78, 255, 367], "0020": 254, "00202": 255, "00203": 255, "00204": 255, "00205": 255, "002056": 242, "00209": 255, "00210": 255, "00218": 255, "0021928": 255, "00220": 255, "00226": 255, "00228": 255, "00237": 255, "00239": 255, "0024": 255, "00246": 255, "00249": 255, "00250": 255, "00254": 255, "00255": 255, "00260": 255, "00263": 255, "00269": 255, "00277": 255, "00278": 255, "00282": 255, "00287": 255, "002908": 242, "002913": 242, "0029375": 255, "00296377255506": 382, "002994": 242, "003": [72, 250, 255], "0030169": 255, "00304": 255, "003067": 242, "0030752": 255, "0031": 255, "00310": 255, "003138": 242, "00315": 255, "003172": 242, "00324": 255, "003269": 242, "0032883": 255, "0033": 255, "00337": 255, "00338": 255, "0034": 255, "00350": 255, "00352": 255, "00359": 255, "0036007": 255, "00363": 255, "0036670": 255, "0036867": 255, "00369": 255, "0038": [100, 254], "003804": 242, "00385": 255, "00388": 255, "003941": 242, "00397": 255, "004": 255, "0040011": 255, "0040601": 255, "00407": 255, "0040726": 255, "00413": 255, "0041324": 255, "0041806": 255, "00420": 255, "00424": 255, "0043": 255, "00432": 255, "0043654": 255, "00439": 255, "00440": 255, "0044388": 255, "00446": 255, "00450": 255, "00456": 255, "0045688": 255, "0046": 255, "00463": 255, "0047251": 255, "00477": 255, "00484": 255, "0048517": 255, "00486": 255, "00491": 255, "00492": 255, "00496": 255, "0049732": 255, "005": [78, 255, 384], "0050": 255, "00501": 255, "00506": 255, "0051": 255, "00510": 255, "0051169": 255, "0051901": 255, "0053": 255, "0053357": 255, "00535": 255, "00541": 255, "00543": 255, "00546": 255, "00551": 255, "0055590": 255, "0055673": 255, "0056148": 255, "00562": 255, "00568": 255, "0057": 255, "00570": 255, "0057144": 255, "0057453": 255, "00578": 255, "00583": 255, "0059": 255, "0059839": 255, "006": [254, 255], "00601": 255, "00607": 255, "0060831": 255, "00612": 255, "00625": 255, "00626": 255, "00629": 255, "00639": 255, "00643": 255, "00647": 255, "00648": 255, "0065": 255, "00652": 255, "00657": 255, "0066811": 255, "00671": 255, "0068": 255, "0068131": 255, "0068765": 255, "00693": 255, "0069798": 255, "006980288614539967": 296, "006994": 242, "0069984": 255, "007": [100, 254, 255], "00700": 255, "00703": 255, "00709": 255, "007100": 242, "00713": 255, "007137": 242, "00717": 255, "00724": 255, "00728": 255, "0073": 254, "00731": 255, "00734": 255, "00735": 255, "00743": 255, "0075": 255, "0076285": 255, "00763": 255, "00777": 255, "00789": 255, "0078908": 255, "007921": 242, "00793": 255, "008": [254, 255], "0082": 255, "00829": 255, "00834": 255, "00838": 255, "0084": 255, "00846": 255, "0085": 255, "00850": 255, "00850840017865724": 296, "0085826": 255, "00862": 255, "00867": 255, "0087": [254, 255], "0089": 255, "00891": 255, "00895": 255, "008950650468550592": 250, "0089995": 255, "009": 255, "00906": 255, "00907": 255, "00912": 255, "00913": 255, "00919": 255, "00921": 255, "00936": 255, "00937": 255, "0093779": 255, "0095454": 255, "0096026": 255, "00961": 255, "00976": 255, "01": [1, 16, 22, 31, 54, 78, 80, 96, 102, 116, 153, 166, 173, 182, 200, 201, 216, 220, 235, 246, 247, 248, 254, 255, 282, 289, 292, 296, 303, 312, 328, 334, 340, 344, 353, 359, 370, 371, 373, 384, 385, 387], "010": [100, 213, 220, 254, 255, 337, 344], "0100288": 255, "0100899": 255, "0101": 255, "01027": 255, "01033": 255, "0105": 255, "0105071": 255, "010599288613820293": 296, "0106": 255, "0106567": 255, "0107780": 255, "01090": 255, "011": 255, "01129": 255, "0114938": 255, "0115": 255, "01152": 255, "0116532": 255, "0116979": 282, "0118": 255, "011908": 255, "011911": 255, "011918": 255, "012": 255, "01221": 255, "01224": 255, "012373649": 254, "0123799": 255, "0125": [96, 127], "0128590": 255, "01299": 255, "013": 255, "0130": 255, "01300": [254, 255], "013076": 242, "013147": 96, "0132577": 255, "0133485": 255, "013395": 242, "013567473437425146": 296, "01360": 255, "0138": 255, "0139314": 255, "014": [242, 255], "0140254": 255, "014062": 255, "0141356": 370, "014389": 242, "0145": 255, "0145428": 370, "0146": 255, "014766": 242, "015": [54, 100, 116, 255], "015005": 255, "015013": 255, "015074": 242, "015488688793197206": 296, "015625": [164, 294], "016": [255, 369], "016006": 255, "016007": 255, "016010": 255, "016014": 255, "016016": 255, "016017": 255, "016026": 255, "0161": 255, "01616412": 255, "0164": 255, "01658": 255, "0166": 255, "0168356": 255, "0169928": 370, "017": 255, "01738": 255, "0175362": 255, "0176132": 255, "01798233944968805": 296, "018": 255, "0180839": 255, "018159402051359665": 250, "0182648": 255, "0184542": 255, "0185": 255, "0186": 255, "019": 255, "019107688792477533": 296, "0191106": 255, "0192518": 255, "0199": 255, "02": [1, 16, 17, 54, 216, 231, 255, 353, 355], "020": [255, 369], "0200626": 255, "0200712": 255, "0201630": 255, "02018": 255, "02030": 255, "0207": 255, "0209429": 255, "021": 255, "0213384": 370, "0214": 255, "02141": 255, "0217261": 370, "0218293": 255, "021902": 255, "021906": 255, "022": 255, "0221": 255, "02214076e23": 320, "022169e": [119, 120], "0222": 255, "0222222": 366, "0224": 255, "022408": 255, "0225": 255, "0225100": 255, "0226028": 255, "02298": 255, "0230327": 255, "024": 255, "02416676205124544": 296, "0244": 255, "0245": 255, "0249": 255, "024963033913050933": 296, "025": [24, 28, 72, 94, 96, 164, 255, 294, 342, 360, 366], "0250": 255, "02500000009986": 383, "025005": 255, "025016": 255, "025026": 255, "0253": 255, "025352": 242, "0254": 255, "0258": 282, "026": 255, "026001": 255, "026002": 255, "026003": 255, "026005": 255, "026009": 255, "026011": 255, "026024": 255, "026030": 255, "026033": 255, "0261": 255, "0262": 255, "0269": 255, "027": 255, "02718": 255, "0277": 255, "027832978105936233": 250, "028": 255, "0285": 255, "029": 255, "0291": 255, "0295": 255, "03": [1, 10, 11, 54, 81, 160, 250, 255, 391], "030": 255, "0300": 255, "030262": 255, "0304": 255, "030670": 242, "03080108": 255, "031": 255, "0315498128871132": 296, "0317": 255, "03180": 255, "032": 255, "0322": 255, "0322e": 96, "033": 255, "0331": 342, "0333102411408360": 255, "033393": 255, "0338": 255, "034": 255, "0340": 255, "0343": 255, "0345": 255, "035": [78, 255], "035001": 255, "0352": 282, "0353": 255, "0354": 255, "03547": 255, "036": [22, 72, 105, 153, 159, 254, 255, 282, 371, 382, 383, 384, 388], "036001": 255, "036002": 255, "036005": 255, "036009": 255, "036010": 255, "036019": 255, "036020": 255, "036022": 255, "036023": 255, "036024": 255, "0368": 255, "03696442284032988": 296, "037": 255, "0377": 255, "0378": 255, "037994719804658315": 250, "038": [54, 255], "0382": [255, 282], "0383": 255, "0387": 255, "0388": 255, "039": 255, "0396": 255, "03d": [160, 289], "04": [1, 15, 72, 78, 89, 242, 255, 289, 368, 383, 384, 385], "040": 255, "04072": 255, "0408": 255, "041": [78, 255], "0415": 255, "042": 78, "0420": 255, "0422175": 366, "0423": 255, "042312": 255, "042408": 255, "0426": 255, "042900628456": 296, "042900628458": 296, "04294537336273899": 296, "043": [72, 255], "0430": 255, "0431": 255, "0434": 255, "0435": 255, "0436": 255, "044": [250, 255], "0440": 377, "0446": 255, "0447": 255, "044806": 255, "0449": 255, "045": 255, "045005": 255, "045006": 255, "04505": [201, 328], "04551": 255, "0458": 255, "046": 255, "046001": 255, "046003": 255, "046005": 255, "046007": 255, "046009": 255, "046010": 255, "046012": 255, "046020": 255, "046022": 255, "046025": 255, "046026": 255, "046030": 255, "046045": 255, "046048": 255, "046109": 255, "0463": 255, "0464": 255, "0466": 255, "0467": 255, "047": 255, "048": 255, "04866907889206899": 250, "049": 255, "04d": 63, "05": [10, 17, 19, 72, 99, 127, 231, 250, 255, 282, 289, 296, 355, 366, 368, 383, 387], "0501": 255, "0503": 255, "051": 255, "051458": 242, "0515": 255, "051902": 255, "052": 255, "0523": 255, "0527": 255, "053": 255, "053102": 255, "0532": 255, "0537": 255, "0541": 255, "05493": 255, "055": [242, 255], "055001": 255, "0552": 255, "05527": 255, "0559": 255, "056": 255, "056001": 255, "056007": 255, "056009": 255, "056014": 255, "056015": 255, "056023": 255, "056029": 255, "0562": 255, "0568": 255, "057": 255, "0573": 255, "0578608361212": 327, "058": 255, "0585": 255, "05896": 255, "059": 255, "05907": 255, "0591": 255, "059881657072173765": 250, "06": [16, 17, 18, 19, 105, 153, 255, 282, 387], "060": 255, "06004": 255, "060271694425333144": 296, "0603222": 366, "0604": 255, "0605": 255, "0612": 255, "0614": 255, "0614368": 370, "061910": 255, "061927456753380815": 296, "06250": 255, "0628": 255, "062940": 242, "0638": 255, "0641": 255, "06414": 255, "0649": 255, "065007": 255, "065011": 255, "0651": 255, "0654": 255, "0656": 255, "0657": 255, "0659": 255, "066007": 255, "066008": 255, "066009": 255, "066012": 255, "066016": 255, "066020": 255, "066023": 255, "066024": 255, "0673": 255, "068": 255, "0686": 255, "0689": 255, "069": 255, "06922": 255, "07": [1, 58, 160, 164, 255, 282, 294, 371, 391], "0702041104": 255, "0703": 255, "07105": 96, "0712": 255, "07146": 255, "07165924609736188": 250, "0719": 255, "072": 255, "0732": 255, "074": 255, "0740": 255, "0746": 255, "074873099129000948": 370, "075": [366, 382], "075000000102825": 383, "0768069": 366, "0771": 255, "07791": 255, "0780": 255, "07919": 255, "0793": 255, "0795": 282, "08": [1, 15, 158, 255, 282, 287, 391], "080": [54, 255], "08027": 255, "081": 255, "08190": 255, "081927": 255, "08199": 255, "08257933": 58, "082579389": 58, "0840298714363211": 250, "0853": 282, "0854": 255, "0859": 255, "086": 255, "0860342": 370, "088": 255, "088492": 255, "089334": 255, "08992e": 282, "089976600300015475": 254, "0899766053429453": 254, "09": [1, 18, 100, 153, 216, 254, 255, 282, 340], "0904784106": 255, "091": [160, 289], "0910716107": 255, "0912022106": 255, "0913": 255, "0918917": 366, "093": 255, "09451": 255, "09467": 255, "095": 242, "0953": 255, "09531": 255, "0954": [40, 47], "09546": 255, "0954898x": 255, "09658": 255, "097": 255, "09702284544211288": 250, "0972": 255, "09723611726566303": 296, "09889": 255, "0989": 255, "09890": 255, "099": 54, "0_rc1": 247, "0a": [242, 246, 247, 248, 377, 378], "0a0": 248, "0a1": 248, "0a2": [377, 378], "0b": [377, 378], "0b013e3181fe059": 255, "0b2": [377, 378], "0e": 369, "0or1": [165, 170, 173, 174, 182, 216, 220, 300, 303, 304, 340], "0rc": [377, 378], "0th": [159, 185, 201, 211, 288, 328, 385], "0x000000010038c060": 52, "0x0000000100e7cba0": 52, "0x0000000100ea1a18": 52, "0x0000600000014480": 52, "0x00006000002101c0": 52, "0x00006000017092c0": 52, "0x0000600001709300": 52, "0x0x0": 292, "0x7fc53b31f310": 373, "0x7fc5740ec390": 373, "0x7fd50f838a50": 382, "0xff": [213, 337], "1": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 35, 37, 42, 43, 44, 45, 47, 49, 52, 53, 54, 56, 58, 60, 64, 65, 68, 69, 70, 72, 76, 77, 81, 86, 89, 90, 91, 93, 95, 98, 99, 100, 103, 105, 109, 110, 114, 116, 117, 119, 120, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 139, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 260, 261, 262, 264, 266, 267, 268, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 312, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387], "10": [1, 3, 10, 11, 13, 14, 15, 16, 17, 18, 24, 25, 28, 31, 32, 33, 37, 38, 39, 40, 41, 45, 46, 47, 50, 52, 54, 64, 66, 67, 69, 77, 78, 81, 82, 83, 91, 93, 94, 95, 99, 100, 107, 108, 109, 110, 119, 120, 147, 151, 155, 159, 160, 163, 166, 168, 169, 173, 182, 185, 191, 195, 197, 199, 200, 201, 204, 208, 211, 213, 217, 219, 220, 223, 227, 229, 231, 233, 234, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 276, 280, 282, 283, 284, 288, 289, 292, 293, 296, 303, 312, 314, 316, 322, 324, 326, 327, 328, 334, 337, 340, 341, 342, 343, 344, 347, 349, 351, 353, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 381, 382, 383, 384, 385, 387, 388], "100": [4, 9, 10, 11, 15, 22, 25, 30, 31, 32, 33, 37, 38, 39, 41, 43, 48, 53, 66, 81, 95, 96, 119, 125, 127, 148, 154, 160, 161, 166, 173, 182, 191, 197, 200, 201, 205, 210, 220, 228, 229, 230, 231, 233, 250, 255, 277, 282, 283, 289, 290, 296, 303, 312, 324, 327, 328, 335, 344, 352, 353, 354, 355, 357, 368, 371, 375, 376, 382, 383, 384, 385, 387, 388], "1000": [10, 11, 15, 24, 25, 32, 45, 47, 52, 96, 108, 132, 151, 161, 166, 173, 197, 198, 200, 201, 204, 216, 220, 229, 231, 233, 235, 260, 268, 280, 289, 290, 296, 303, 307, 324, 325, 327, 328, 340, 344, 353, 355, 357, 368, 373, 375, 376], "10000": [25, 96, 173, 198, 250, 268, 303, 325], "100000": [9, 160, 289, 323, 340], "1000000": [196, 216], "1000001": 323, "1000062": 255, "100007": 255, "1000119": 255, "1000290": 255, "1000519": 255, "1000768": 255, "1000781": 255, "1000815": 255, "1000886": 255, "1000932": 255, "1001": [255, 357, 359], "10010": 201, "1001038": 255, "1001102": 255, "1002": [40, 47, 255, 360], "1002022": 255, "1002050": 255, "1002107": 255, "1002149": 255, "1002160": 255, "10022": 255, "1002319": 255, "1002489": 255, "1002521": 255, "1002545": 255, "1002550": 255, "1002580": 255, "1002599": 255, "1002666": 255, "1002867": 255, "1003": 255, "1003014": 255, "1003137": 255, "10034": 255, "1003401": 255, "1003560": 255, "1003590": 255, "1003601": 255, "1003764": 255, "1003775": 255, "1003928": 255, "10040": 255, "1004014": 255, "1004090": 255, "1004112": 255, "1004189": 255, "1004240": 255, "1004275": 255, "1004584": 255, "1004588": 255, "1004641": 255, "1004668": 377, "1004702": 255, "1004768": 255, "1004829107": 255, "1004929": 255, "1005011": 255, "10051": 255, "1005193": 255, "1005206": 255, "1005452": 255, "1005672": 255, "1005737": 255, "1005754": 255, "1005760": 255, "1005930": 255, "1005946": 255, "1005960": 255, "1006": 255, "1006027": 255, "1006124": 255, "1006293": 255, "1006298": 255, "1006392": 255, "10064": 255, "1006423": 255, "1006485": 255, "1006510": 255, "1006535": 255, "1006662": 255, "1006753": 255, "1006871": 255, "1006975": 255, "1007": [100, 254, 255], "1007226": 255, "1007375": 255, "1007462": 255, "1007601": 255, "1007696": 255, "1007725": 255, "1007766": 255, "1007826": 255, "1007932": 255, "1007937": 255, "1008023": 255, "1008057": 255, "1008087": 255, "1008114": 255, "1008386": 255, "1008499": 255, "1008503": 255, "1008573": 255, "1008893": 255, "1009": 255, "1009199": 255, "1009270108": 255, "1009285": 255, "1009371": 255, "1009521": 255, "1009558": 255, "1009609": 255, "1009654": 255, "1009681": 255, "1009754": 255, "100k": [160, 289], "101": [41, 166, 255, 296, 324, 353, 357, 366, 367, 369, 375, 382], "1010": 255, "1011": 255, "1013": 255, "1013798107": 255, "1014": 255, "101477": 242, "1015": 255, "1016": [100, 254, 255], "1017": [254, 255], "1018": 255, "1019": 255, "102": 255, "1020": 255, "1021": 255, "10210": [255, 296], "10229": 255, "1023": 255, "10230": 255, "10233": 255, "10239": 255, "1024": 255, "10242": 255, "1025": 255, "10251": 255, "10256": 255, "1026": 255, "10289": 255, "1029": 255, "103": 255, "1030": 255, "10301": 255, "103085": 255, "1031": 255, "103135": 255, "1032": 255, "1033": 255, "1034": 255, "10349": 255, "1035": 255, "1036": 255, "10362": 255, "1037": 255, "1038": [46, 255], "1039": 255, "104": 255, "10420": 255, "10429": 255, "1043": 255, "104353": 255, "1044": 255, "1045": 255, "104529": 255, "1046": 255, "1047": [255, 342], "1048": [247, 255], "1049": 255, "105": [18, 22, 72, 201, 255, 328], "1050": 255, "1052": 255, "1053": 255, "105507": 98, "1056": 255, "1057": 255, "1058": 255, "10588": 255, "1059": 255, "10599": 255, "106": 255, "1061": [1, 255], "1062": 255, "1063": 255, "106328": 255, "1065": 255, "1067": 255, "106841": 255, "106891": [53, 98], "1069": 255, "107": [72, 255], "1070": 255, "1072": [1, 255], "1073": 255, "107385840100700207": 254, "1074": 255, "1075": 255, "10751": 255, "1076": 255, "107608": 255, "10764": 255, "1077": 255, "1079": 255, "107988": 255, "108": [54, 255, 368], "1080": 255, "108001": 255, "1081": 255, "10814": 255, "10824": 255, "108255": 255, "1085": 255, "108554": 255, "1086": 255, "1088": [40, 47, 255], "108871": 255, "1089": 255, "109": [89, 159, 255], "1090": 255, "109106": 255, "109125": 255, "1093": 255, "1094": 255, "109400": 255, "1094342020912528": 255, "109483": 255, "1095": 255, "10958": 255, "1096": [160, 255, 289], "10966": 255, "1097": 255, "1098": 255, "1099": 255, "10g": [138, 190, 317, 366], "10mv": 33, "10th": [182, 201, 255, 312, 328], "10um": 110, "10\u03bcm": 373, "11": [1, 3, 46, 54, 70, 76, 81, 98, 100, 166, 199, 201, 213, 220, 229, 246, 247, 248, 249, 250, 254, 255, 282, 296, 312, 314, 326, 327, 328, 337, 344, 353, 359, 367, 368, 370, 373, 377, 378, 382, 383, 384, 385, 387, 388], "110": [7, 126, 191, 229, 255, 353, 367, 368], "1100": 255, "1101": 255, "11011": 255, "11019": 255, "11022302463e": [164, 294], "110232": 255, "1103": [1, 255], "1104": 255, "11046": 255, "11056": 255, "1106": [255, 282], "11066884059267537": 250, "1108": 255, "11082": 255, "11085": 255, "1109": [254, 255], "111": [54, 92, 119, 120, 255, 368], "1110": 255, "1110304": 255, "1111": 255, "1112": 255, "111200a": 47, "1113": [46, 255], "11138": 255, "1114": 255, "1117": [254, 255], "1118058109": 255, "111e": [119, 120], "112": [7, 255], "1120": 255, "1121": 255, "1122": [254, 255], "1124": 255, "1125": 255, "1126": 255, "11268": 255, "1127": 255, "11281": 255, "1129": 255, "113": 255, "1130": 255, "113099": 72, "1131": 255, "1133": 255, "113354": 255, "113446": 53, "1136": 255, "1137": 255, "113732": 98, "11376": 255, "1138": 255, "11381": 255, "1139": 255, "113969": 255, "113978": 255, "114": 255, "1140": 255, "1141": 255, "1142": 255, "1143": 255, "114339664628": 327, "1144": [1, 255], "1145": [100, 255], "11453": 255, "11458": 255, "1147": [1, 255], "1148": 95, "1149": [1, 255], "115": 255, "1150": 255, "1152": [25, 95, 254, 255], "11527745991264488": 296, "1153": 255, "11537": 255, "11543": 255, "1155": 255, "11569": 255, "1157": 255, "11573": 255, "1159": [1, 255], "116": 255, "1160": 255, "11603": 255, "11604": 255, "116094": 98, "1161": 255, "11614": 255, "1162": [254, 255], "11620": 255, "1163": 255, "11633": 255, "1164": 255, "1165": 255, "1166": 255, "1168": [95, 255], "116830": 98, "116838": [53, 98], "116862": 98, "117": [255, 371], "1171": 255, "1171958": 255, "1172": [1, 255], "1173": 255, "11733": 255, "1174": 1, "11743": 255, "1174331": 255, "117467": 255, "1177": [254, 255, 370], "1179": 254, "11798": 255, "118": 255, "11810": 255, "11811": 255, "11817": 255, "11824": 255, "1183108": 255, "1184": 255, "11845": 255, "118479": 255, "1186": 255, "11865": 255, "1187": 255, "1188": 255, "11891": 255, "118953": 255, "1189664": 255, "11899": 255, "119": [126, 254, 255], "11903": 255, "1191": 255, "11915": 255, "1193": 255, "1194": 255, "1195": 255, "1196": 255, "1198": 255, "11985": 255, "1199": 255, "11990": 255, "11g": 282, "11th": 255, "12": [1, 11, 22, 28, 36, 54, 68, 72, 100, 105, 119, 120, 154, 159, 160, 201, 213, 216, 220, 229, 231, 242, 244, 246, 247, 250, 254, 255, 282, 283, 288, 289, 292, 314, 318, 319, 322, 328, 337, 340, 342, 344, 353, 355, 360, 367, 368, 370, 371, 373, 377, 378, 382, 383, 384, 387, 388], "120": [18, 72, 119, 120, 153, 159, 191, 200, 210, 255, 282, 327, 335], "1202": 255, "12035": 255, "12040": 369, "1204497": 255, "1206": 255, "120602": 255, "1208": 255, "1209": [254, 255], "121": [254, 255], "12102": 255, "1211": 255, "12119e": 282, "1212": 255, "12123": 255, "1215": 255, "1215101": 255, "1215125110": 255, "12154": 255, "1216867110": 255, "12170": 255, "12172": 255, "1217645111": 255, "12190": 255, "122": [126, 255], "1221": 255, "1222": 255, "1222017": 255, "12228": 255, "12236": 255, "1225": 255, "122548": 255, "122567": 255, "1226": 255, "12267": 255, "1227": [1, 255], "1228": 255, "1229": 255, "123": [89, 100, 125, 126, 254, 255], "1231": 255, "1232": 255, "12325": 255, "12338": 255, "1234": 255, "12342": 255, "1234274": 255, "1236": 255, "1237": 255, "1238": 255, "123815": 98, "1239": 255, "124": 255, "1241": 255, "1242": 255, "1243": 255, "1244": [200, 327], "1244811": 255, "1246": 255, "1248": 255, "125": [250, 255, 292, 366, 371], "1250": 255, "12500000010579": 383, "1251": 255, "1253": 255, "1254": 255, "1255": 255, "125835": 242, "126": 255, "1260": [1, 255], "1261": 255, "1262": 255, "12631": [53, 98], "1264": 255, "12641": 255, "1265": 255, "12652": 255, "12659": 255, "126814": 38, "12688": 255, "127": [54, 92, 254, 255], "1270": 1, "12702": 255, "12706": 255, "1273": 255, "12736": 255, "1274": 255, "12754": 255, "1277": 255, "12787": 255, "128": [161, 201, 255, 290, 328], "12815": 255, "1283": 255, "12848": 255, "1285": 255, "12853": 255, "1286": [255, 363], "12885": 255, "12895": 255, "129": [254, 255], "1290": 255, "1291": 255, "12919": 255, "12929": 255, "1293": 255, "12932": 255, "1294": 1, "12956": 255, "1296": 255, "12965": 255, "12968": 255, "12th": 96, "13": [40, 41, 47, 54, 70, 100, 160, 201, 229, 244, 250, 255, 282, 314, 318, 319, 328, 333, 337, 353, 359, 367, 370, 373, 377, 382, 383, 387, 388], "130": [191, 255], "1300": 255, "13000": [191, 318], "1302": 255, "13023": 255, "13029": 255, "13033": 255, "13037": [255, 296], "1305219110": 255, "1306": 255, "13067": 255, "1307": 255, "1308388110": 255, "1309827110": 255, "131": [89, 255], "1310": 255, "13113": 255, "1312": 255, "1313505110": 255, "13137": 255, "13141": 255, "1314219111": 255, "13146": 255, "1315": 255, "1316599111": 255, "1317": 255, "13172": 255, "1318": 255, "13181": 255, "1319": 255, "132": 255, "1320": 255, "13211": 255, "1321869111": 255, "13222": 255, "13227": 255, "1326": 255, "1327493": 255, "1328": 255, "1329": 255, "133": [54, 255, 368], "1330": [1, 255], "13325": 255, "13326": 255, "1334": 255, "1336": 255, "1337": 255, "134": [89, 255], "13415": 255, "13443e": 282, "1345": 255, "13457": 255, "1346": 255, "13466": 255, "13474": 255, "13484": 255, "1349": 255, "13490": 255, "13495": 255, "135": [89, 125, 126, 229, 254, 255, 353], "1350": 255, "1351": 255, "1353": [164, 294], "13533": 255, "1355": 1, "13551": 255, "13552": 255, "13566": 255, "1357": 255, "13591": 255, "13592": 255, "136": [54, 254, 255], "13601": 255, "136095": [53, 98, 283], "1361": 255, "13613": 96, "1362": 255, "136310": 98, "1364": 255, "13644": 255, "1365": 1, "13660": 255, "1369": 255, "137": [96, 255], "13701": 255, "1371": [1, 255, 377], "13713": 255, "1374": [1, 255], "13747": 255, "1375": 255, "1376": 255, "1378": 255, "137845": 98, "138": [254, 255], "1380": 255, "13802": 255, "13804": 255, "138104": 255, "13812": 255, "1382": 255, "1383": 255, "138379": [53, 98], "1385": 255, "13852": 255, "1387": 255, "139": 255, "1391": 255, "13914": 255, "1392": 255, "13926": 255, "13932": 255, "1394": 255, "139421": 98, "1396": [1, 255], "13962": 255, "1399": [255, 363], "13th": 96, "14": [19, 100, 164, 201, 229, 242, 250, 255, 282, 294, 296, 312, 314, 318, 319, 322, 328, 353, 370, 372, 373, 377, 382, 383, 387, 388], "140": [89, 191, 255, 388], "1400": 52, "14007": 255, "1401": [1, 52, 255, 363], "1402": [52, 255], "1403": [1, 52], "1404": 52, "1405": [52, 255], "1406": [52, 255], "14072": 255, "14077": 255, "1408": [1, 255], "140881": [53, 98], "141": 255, "1410": 255, "14103": 255, "14122": 255, "1413": 255, "14133": 255, "14138": 255, "141478": 377, "1415": 363, "141505": [53, 98], "14159": [119, 120, 154, 283], "14159265": 387, "14159265358979323846": [193, 320], "141592654": [190, 317], "141593": [119, 120], "1416": 255, "1418": 255, "14186": 255, "1419017112": 255, "142": 255, "1421": 255, "14212713e": 387, "1426": 255, "1427": 255, "1428": 255, "142800": 242, "1429": [1, 255], "143": [92, 255], "1430": 255, "14311": 255, "14315": 255, "14354": 255, "14357": 255, "14358": 255, "1437": 255, "1439": [1, 255], "144": 255, "1442": 255, "14434": 255, "1445": 255, "144538": [53, 98], "144549": 98, "144586": 98, "1448": 255, "14481": 96, "145": [255, 372], "1450": 255, "1451": [1, 255], "14519": 255, "1453": [1, 255, 372], "14531": 255, "1454": 255, "145432": 242, "14559": 255, "1456": 282, "14566": 255, "1457": 255, "14570": 255, "1458": 255, "146": 255, "1460": 255, "1461": 255, "1463": 255, "1464": 255, "1467": 255, "1468": 255, "1469": [1, 255], "146949": [53, 98], "147": [254, 255], "1470": 255, "1471": [1, 255], "1472": 255, "1476": 1, "1478": 255, "148": 255, "1481": 255, "14810": 255, "14814": 255, "1482": 255, "1484": 255, "14841": 255, "14846": 255, "14851": 255, "14854": 255, "1487": [1, 255], "1488": 255, "14891": 255, "149": 255, "149000": 98, "1491": 255, "1493316": 255, "1495": 255, "14951076": 387, "1496": [1, 255], "149739": 98, "1498": 1, "14th": 377, "15": [1, 13, 16, 17, 18, 19, 22, 30, 54, 63, 92, 100, 138, 158, 164, 165, 185, 200, 201, 229, 233, 246, 247, 248, 250, 254, 255, 266, 287, 294, 295, 296, 327, 328, 340, 353, 357, 363, 365, 366, 369, 371, 373, 377, 382, 383, 387, 388], "150": [96, 191, 198, 200, 228, 229, 255, 325, 327, 352, 353, 357, 375], "15000": 108, "15001": 255, "1501": 255, "150125": 242, "150151": 255, "15016": 255, "150240": 98, "150245": [53, 98], "1502513112": 255, "1502902112": 255, "1503": 255, "150551": 98, "150556": 98, "1506": 255, "150691": 98, "1507": 255, "15073": 255, "15078": 255, "1508": 1, "151": [250, 255], "151126": 98, "1512": 255, "151282": 98, "1512901113": 255, "1515": 1, "1516": 255, "1517": 255, "1518": [1, 255], "1518773112": 255, "152": [159, 255], "1520": 255, "15208": 255, "1521": 255, "15210": 255, "1522180113": 255, "15222": 255, "1523": 255, "1524": 255, "15244": 255, "1525": 255, "15252": 255, "15255": 52, "1528": 255, "1529": 255, "153": [96, 255], "1530": 255, "1531": 255, "153280": 98, "1533": 255, "1534": 255, "15341": 255, "15350": 255, "1536": 255, "1536e": 96, "1537": [1, 255], "1538": [1, 255], "154": 255, "1540": 55, "154018": 366, "1541": [1, 255], "15412": 255, "15420": 255, "15433": 255, "1545": [1, 255], "1546": 255, "1547": 255, "154732": 98, "1548": 255, "1549": 255, "15490": 255, "15498": 255, "155": [54, 96, 255], "1550": 255, "15505": 255, "1551": 255, "15519e": 282, "1552": 255, "15522": 255, "1555": 1, "155568": 98, "1556": [1, 255], "155601": 98, "155602": 98, "1557": 255, "1559": 255, "156": [96, 255], "1561": 255, "156120": 53, "1564": 255, "1565": 1, "1566": 255, "1567": 1, "156780": 98, "1568": 1, "15682": 255, "1569": 255, "15695": 255, "157": [96, 255], "15713": 255, "157157": 98, "15725": 255, "1574": 1, "15742887": 387, "15773327e": 387, "1579": 255, "158": 255, "1580": 255, "1581": 1, "1583": 1, "15840": 255, "15848": 255, "1586": 1, "15865": 296, "15867": 255, "1587": 255, "159": [92, 255], "1590": 255, "1592": 255, "1594": 255, "1595": 255, "1597": 255, "1598": 255, "15g": 213, "16": [10, 11, 29, 53, 70, 81, 100, 160, 164, 198, 201, 250, 253, 254, 255, 289, 292, 294, 325, 328, 373, 377, 382, 383, 387, 388], "160": [24, 43, 45, 66, 67, 68, 108, 110, 191, 255], "1600": [126, 255], "1601": 255, "1601513113": 255, "1603": 1, "1604": 255, "1606": 255, "1607541114": 255, "1607548113": 255, "1609": 1, "161": [127, 255], "161020": 242, "16116": 255, "1612": 255, "1614": 1, "16142": 255, "16150": 255, "16157": 255, "1616": 255, "16176": 255, "162": 255, "1622": 1, "1624": 255, "1627": 1, "1628": 255, "1629": 255, "163": [127, 254, 255], "1630": 255, "1632": 255, "1633": 1, "1634": 255, "1635": 255, "16353": 255, "16358": 255, "164": 255, "1640": 255, "1644": 255, "1645": 255, "16459456": 58, "16459462": 58, "1646": 255, "1649": [1, 255], "164_2017_63": 255, "165": [255, 387], "1650": 1, "1651": [1, 255], "1652": 255, "16534698": 387, "16553": 255, "1656": 255, "1657": [1, 255], "1659": 1, "166": 255, "1667": 255, "16683": 255, "1669": 255, "167": 255, "1671": 255, "16729": 255, "1673": 255, "1674": 1, "16740": 255, "1675": 255, "1676": [1, 255], "1677": 255, "1679": [254, 255], "168": 255, "1680": [1, 255], "1682": [1, 255], "16829": 255, "1683": 255, "16834": 255, "1684": [1, 255], "1685": 255, "1687": 255, "1688": 255, "168874": 98, "1689": 255, "169": [35, 100, 254, 255, 385], "1691": 255, "1693": 255, "1694": 255, "1696": [254, 255], "1698": 255, "1699": 255, "16x16": 70, "17": [0, 16, 54, 93, 100, 126, 242, 246, 250, 254, 255, 283, 292, 314, 328, 342, 369, 373, 382, 383, 387, 388], "170": [191, 255], "170007": 255, "1704": 255, "1704893114": 255, "1705": [1, 255], "1706": 255, "1707": 255, "170746": 255, "1708700114": 255, "1709": 255, "170k": 64, "171": 255, "1711": 255, "1717": 255, "1718": 255, "1719": [1, 255], "172": 255, "1721": [1, 255], "1722": [1, 255], "1723": [1, 255], "1724": 255, "1725": 1, "1727": 1, "1728": 255, "173": 255, "1731": 255, "1733": 1, "173421": 242, "17344": 255, "1735": [1, 255], "1736": 255, "174": 255, "1740": 255, "1741": 255, "1742": 255, "1744": 255, "1745": 255, "1746": 255, "1747": 255, "1748": 255, "1749": 255, "17493": 255, "175": [54, 92, 254, 255, 366], "17500": 255, "17500000010875": 383, "1750004": 255, "1750011": 255, "1750058": 255, "1751": 255, "1752": 255, "1753": 255, "17530": 255, "17535": 255, "1754": 255, "17546": 255, "1755": [1, 255], "17551": 255, "17554915433797802": 296, "1756": 255, "1758": 255, "1759": 255, "1760": 255, "1761": 255, "176124166826": 296, "1762": [155, 252, 284, 377], "1763": 255, "1764": 255, "1767": 255, "1768": 255, "1769": 255, "177": [40, 47, 255], "1771": 255, "1772": 255, "1773": 255, "178": 255, "1785": 255, "179": 255, "1791": 255, "1798": 255, "179846": [119, 120], "17lf": [196, 323], "18": [1, 15, 18, 28, 119, 120, 154, 201, 246, 250, 254, 255, 283, 328, 371, 373, 382, 383, 387, 388], "180": [81, 229, 255, 293, 353], "18000": 255, "18004": 255, "18005": 255, "18009": 255, "1802": 363, "18030": 255, "1803274115": 255, "18034": 255, "1805": 1, "1807": 255, "18071": 284, "181": 255, "1810": 255, "1811": 1, "1817689116": 255, "1819": 1, "181967": 98, "182": 255, "182129": 98, "1824": 255, "1825": 1, "1828": 255, "18289": 255, "1829": 255, "183": 255, "18302": 255, "183098861837907": 288, "183099": [119, 120], "1831": [10, 11], "183300": 98, "1834": 255, "1835": 255, "18353": 255, "1836": 255, "18363": 255, "1838": 255, "1839": 255, "18399": 255, "184": 255, "184054": 53, "1842": [242, 255], "1845": 255, "1847": 255, "1849": 255, "185": [255, 368], "1852": 255, "185355": 98, "1855": 255, "18566": 255, "1857": 255, "1858": 331, "185858": 98, "186": 255, "1862": 1, "1863": 255, "18638": 255, "18643": 255, "1866": 255, "1867": 1, "186768": 98, "1869": 363, "186916": 255, "18692": 296, "187": [100, 255], "1870": 255, "1871": 255, "1873": 342, "1874": 255, "187604": 98, "1879": [1, 255], "188": 255, "1881": 255, "1883": 255, "188300": 255, "1884": 255, "1889": 255, "189": 255, "189154": 98, "1894": 255, "1895": 1, "1896": [1, 255], "18994": 255, "18999": 255, "19": [53, 100, 119, 120, 127, 154, 160, 201, 242, 255, 283, 289, 314, 328, 373, 382, 383, 387, 388], "190": 255, "1904463116": 255, "1906369117": 255, "1907": [1, 255], "19078": 255, "191": [92, 255], "1910": 255, "1913": 255, "1914": 1, "191439": 255, "1915": 255, "1919": 363, "191973": 255, "192": [160, 255, 289], "1921": 255, "1924": 1, "1925": [1, 255], "192559": 255, "193": [40, 47, 255], "1930": 255, "193037": 255, "1932": [1, 255], "19326": 255, "1933": 1, "19336950": 255, "19340": 255, "1935": 255, "1936": 255, "1936894": 255, "1937": 363, "1938": 1, "19382014": 255, "194": 255, "1941": 1, "1942": 1, "1944": [1, 255], "1945": 255, "1947": 255, "1948": 255, "194897": 98, "195": 255, "1950": 377, "1952": 371, "195615": 98, "196": [21, 255], "1963": 255, "1964": 255, "1966": 255, "1968": 255, "1969": 255, "197": 255, "1970": 255, "197012": 255, "1971": 248, "1975": 255, "1976": [93, 255], "1978": 255, "198": 255, "1981": 255, "1983": 255, "198390": 255, "1984": [52, 81, 126, 160, 164, 242, 254, 255, 289, 294], "1986": 255, "1987": 255, "198719": 366, "1989": [250, 254, 255], "199": [54, 94, 255, 368], "1990": [95, 126, 255], "1991": [1, 255], "1991a": 255, "1991b": 255, "1992": [255, 371], "1992a": 255, "1992b": 255, "1993": [254, 255], "1993a": 255, "1993b": 255, "1994": [81, 254, 255], "1994a": 255, "1994b": 255, "1994c": 255, "1994d": 255, "1995": [25, 126, 255], "1995a": 255, "1995b": 255, "1996": [255, 393], "1996a": 255, "1996b": 255, "1996c": 255, "1996d": 255, "1997": [254, 255, 377], "1997a": 255, "1997b": 255, "1997c": 255, "1998": [41, 254, 255, 370], "1998a": 255, "1998b": 255, "1998c": 255, "1998d": 255, "1999": [25, 126, 255, 370], "1999a": 255, "1999b": 255, "1999c": 255, "19th": 255, "1_19": 255, "1a": [31, 46, 54, 248, 255], "1b": 255, "1d": [1, 163, 255, 292, 366], "1e": [31, 39, 47, 64, 81, 94, 125, 133, 134, 136, 138, 151, 159, 163, 195, 199, 220, 250, 261, 262, 264, 266, 280, 288, 296, 322, 326, 344, 359, 360, 366, 368, 370, 371, 372, 375], "1e10": [28, 223, 282, 347], "1e15": [201, 328], "1e2": 24, "1e20": [166, 296], "1e3": [16, 17, 18, 24], "1e30": [166, 296], "1e300": [203, 330], "1e4": 31, "1e5": [31, 125], "1e6": [129, 134, 257, 262, 372], "1e8": 36, "1e9": [16, 17, 18, 31, 64, 94, 133, 153, 220, 250, 261, 282, 328, 344, 371], "1g": 255, "1ghz": [198, 325], "1h": 255, "1i": 255, "1mm": 41, "1mv": [130, 136, 258, 264], "1n": [161, 290], "1na": [136, 264], "1or0": 288, "1or2": [220, 344], "1point": [201, 328], "1st": [55, 237, 255, 361], "1x5snleax4qplcc4qmamwdvra5qrsuo": 377, "2": [3, 4, 7, 10, 11, 15, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 43, 44, 45, 47, 49, 52, 53, 54, 56, 58, 63, 64, 65, 68, 69, 72, 77, 78, 81, 87, 90, 93, 95, 98, 99, 100, 108, 110, 114, 118, 119, 120, 125, 126, 127, 136, 138, 139, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 173, 174, 176, 177, 178, 182, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 211, 213, 216, 217, 218, 219, 220, 221, 223, 227, 228, 229, 230, 231, 233, 235, 237, 242, 246, 247, 248, 249, 250, 252, 253, 254, 255, 264, 266, 267, 268, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 330, 331, 337, 339, 340, 342, 343, 344, 345, 347, 351, 352, 353, 354, 355, 357, 359, 360, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 384, 385, 386, 387], "20": [1, 3, 22, 24, 28, 36, 37, 43, 44, 45, 63, 66, 68, 70, 100, 104, 138, 160, 161, 163, 166, 185, 190, 191, 197, 198, 200, 201, 204, 205, 213, 219, 229, 230, 231, 234, 242, 255, 266, 282, 283, 289, 290, 296, 314, 317, 324, 325, 327, 328, 330, 337, 342, 343, 353, 354, 355, 358, 368, 371, 373, 382, 383, 387, 388], "200": [4, 18, 22, 33, 37, 41, 43, 52, 63, 66, 68, 72, 92, 93, 96, 101, 154, 159, 166, 200, 201, 229, 231, 233, 235, 250, 255, 268, 283, 296, 327, 328, 353, 355, 357, 359, 368, 371, 382, 383, 384], "2000": [126, 153, 254, 255, 282, 369, 373], "2000185": 255, "2000671117": 255, "2000a": 255, "2000b": 255, "2001": [36, 89, 125, 126, 254, 255], "2001a": 255, "2001b": 255, "2002": [40, 47, 126, 242, 255], "2002a": 255, "2002b": 255, "2003": [81, 254, 255, 372], "2003a": 255, "2003b": 255, "2003c": 255, "2003d": 255, "2004": [40, 41, 47, 89, 216, 248, 254, 255, 340], "2004a": 255, "2004b": 255, "2005": [126, 158, 160, 220, 254, 255, 287, 289, 344, 377], "2005a": 255, "2005b": 255, "2006": [89, 126, 159, 254, 255, 288], "2006422": 255, "20067": [40, 47], "2006a": 255, "2006b": 255, "2006c": 255, "2007": [88, 100, 254, 255, 363], "2007a": 255, "2007b": 255, "2008": [35, 100, 160, 254, 255, 385], "2008a": 255, "2008b": 255, "2008c": 255, "2008d": 255, "2009": [49, 216, 254, 255], "2009a": 255, "2009b": 255, "2009c": 255, "201": [94, 99, 255], "2010": [11, 15, 160, 216, 254, 255, 340, 377], "2010a": 255, "2010b": 255, "2011": [1, 11, 16, 17, 18, 19, 100, 254, 255], "2011a": 255, "2011b": 255, "2011c": 255, "2012": [160, 255, 363], "201210869": 255, "2012a": 255, "2012b": 255, "2013": [160, 254, 255], "20130614": 255, "2013a": 255, "2013b": 255, "2013c": 255, "2014": [5, 160, 255, 289, 377], "2014a": 255, "2014b": 255, "2015": [29, 164, 255, 294, 369], "201511506": 255, "2015a": 255, "2015b": 255, "2016": [93, 254, 255, 289], "2016a": 255, "2016b": 255, "2016c": 255, "2017": [10, 242, 255, 289], "2017339118": 255, "2017a": 255, "2017b": 255, "2017c": 255, "2018": [1, 26, 254, 255, 289, 366, 377], "20180312": 377, "2018a": 255, "2018b": 255, "2018c": 255, "2019": [3, 154, 254, 255, 283, 289], "201912442": 255, "2019a": 255, "2019b": 255, "2019c": 255, "202": 255, "2020": [255, 320, 377], "202000185": 255, "202012585": 255, "2020a": 255, "2020b": 255, "2021": [1, 86, 126, 242, 255, 289, 292, 391], "202100148": 255, "202101": 248, "202110": 255, "2021a": 255, "2021b": 255, "2021c": 255, "2022": [1, 246, 247, 254, 255, 340, 391], "2023": 1, "2024": [1, 368], "2027": 53, "2029": 255, "203": [254, 255], "2031": 255, "2032": 255, "2033": [1, 255], "2034": 242, "2034069": 255, "2035": 255, "203836": 255, "2039": 255, "204": 255, "2040": 255, "2042": 255, "2047": 255, "2047610": 255, "2049": 255, "205": 255, "2050": 255, "2055054": 255, "2057": 255, "2058": 255, "20581": 255, "206": 255, "20602": 255, "20609": 255, "2063": [254, 255], "2063384": 100, "2063405": 100, "20644": 255, "20661": 255, "20667": 255, "2069": 255, "20694": 255, "207": [92, 255], "2070": 255, "20703": 255, "2076": 255, "207614": 370, "208": [72, 159, 255], "20804": 255, "2081": 255, "2081377": 255, "2084": 255, "209": 255, "2090": [254, 255], "2092": 255, "2098": 255, "209841782525": 296, "21": [1, 41, 52, 61, 63, 126, 160, 166, 201, 219, 242, 248, 254, 255, 289, 296, 328, 343, 382, 383, 387, 388], "210": [254, 255], "21008": 255, "2101": 255, "2103198308254167": 375, "2105795118": 255, "2106": 255, "2109": 1, "211": 255, "2110": 255, "2113": 255, "2114": 255, "2115": 255, "2116": 255, "2118": 255, "212": 255, "212032709823": 327, "2124": 255, "21262": 255, "2128": 255, "2129": 255, "213": 255, "2135": 255, "2136": 255, "214": 255, "2143": 255, "2146": 255, "2148": 255, "215": 255, "2151878": 255, "21519": 296, "2153": 255, "21549": [47, 86], "2155": 255, "2156": 255, "2158605": 255, "216": 255, "2160ccb31406": [216, 340], "2163": 255, "2163136": 52, "2165": 255, "21655979": 255, "217": 255, "2174": 255, "2175": 255, "21753": 255, "2178614": 255, "218": 255, "2181": 255, "2182": 255, "2183": 255, "2189": 255, "2189021": 255, "219": 255, "2190": 255, "21906": 255, "2191": 255, "21911": 255, "2193": 255, "21937205675": 327, "2194": 255, "2194146": 255, "2195": 255, "219576": 255, "2197": 255, "2198": 255, "21989": 255, "22": [7, 10, 72, 159, 160, 164, 201, 216, 242, 255, 284, 289, 294, 328, 340, 342, 373, 382, 383, 387, 388], "220": 255, "2202": 255, "22020": 255, "2202403": 255, "22061": 255, "2207": 255, "220913": 255, "221": [254, 255], "2210": 255, "2212": 255, "2214": 255, "2217": 255, "2219": 255, "222": 255, "2220": 255, "22212": 255, "2222": 255, "2226": 342, "223": [92, 255], "223031": 98, "22307": 255, "22324": 255, "22331": 255, "22352": 255, "22358": 255, "2235835": 255, "2236": 254, "22365": 255, "22371": 255, "22373": 255, "2239": 255, "224": [54, 255], "2240": 255, "22413": 255, "22429": 255, "22440": 255, "22464680e": 387, "2247": 255, "2248": 255, "225": [229, 255, 353, 366], "2250": 255, "22500000011172": 383, "225080": 98, "2251": 255, "22522": 255, "22529": 255, "22584": 255, "225x279": [229, 353], "226": [100, 255], "2260": 255, "2268": 255, "227": 255, "2270": 255, "2273": 255, "2274": 255, "2275": 255, "22764": 255, "2278": 255, "22793": 255, "228": 255, "2280": 255, "2281": 255, "2283": 255, "2284": 255, "2287": 255, "2288": 255, "2289": 255, "229": 255, "2291": 255, "2292": 255, "2292025": 255, "2293": 255, "22962": 255, "22983": 255, "23": [63, 88, 89, 100, 119, 120, 158, 159, 160, 254, 255, 287, 289, 296, 382, 383, 387, 388], "230": 255, "2301": 255, "2302": 255, "23035": 255, "2304": 255, "2306": 255, "2307": 255, "231": 255, "2312": 53, "2312671": 255, "2313": 255, "23139": 255, "231427": 98, "2315": 255, "2316": 255, "2318": 255, "23196": 255, "232": 255, "232097": 98, "2322": 255, "23220": 255, "23247": 366, "2328": 255, "233": 255, "2331": 255, "2333": 255, "2334": 255, "23364": 255, "234": 255, "2342": 255, "2345": 255, "2345e": 366, "2347": 255, "235": [72, 255], "23508": 255, "2351": 255, "2352": 255, "2353": 255, "235374": 255, "2355": 255, "2357": 255, "2358": 255, "2359": 255, "236": [248, 255], "2361": 255, "2365": 255, "2368": 255, "237": 255, "2371": 255, "237172": 255, "2372": 255, "2373": 255, "2377": 255, "2378": [7, 255, 363], "238": 255, "2380": 255, "2382": 255, "2383": 255, "2384": 255, "2385": 255, "2386": 255, "238892": 373, "239": [92, 255], "23901": 255, "239177": 98, "2393": 255, "2394": 255, "239418": 255, "2398": 255, "239885": 242, "23998": 255, "24": [160, 175, 201, 254, 255, 289, 305, 328, 382, 383, 387, 388], "240": [63, 201, 255, 328], "2400": 126, "2403": 255, "2404": 255, "2407861": 255, "2409": 255, "241": 255, "241165": 98, "241240": 98, "2415": 255, "24150": 255, "242": 255, "2422": 255, "2425893": 255, "242693": 255, "2429": 255, "243": 255, "2430": 255, "24347": 296, "244": 255, "2440": [200, 255, 327], "24419": 255, "244262": [53, 98], "2443": 255, "24458654944007166": 292, "2446761": 255, "244848": 98, "245": [100, 201, 255, 328], "2454855": 58, "24548566": 58, "2456": 255, "245688": 255, "24576": 52, "246": 255, "2466": 255, "2467": 255, "24699469e": 387, "247": [92, 255], "2471": 255, "247171": 255, "2473": 255, "2476": 255, "2477": 255, "2479": 255, "247968": 98, "248": [93, 255], "248243": 72, "2483": 255, "24838": 255, "2485": 255, "2487": 98, "2488": 393, "249": 255, "2490": 255, "249463": 98, "249706": 255, "24format": 248, "24th": 255, "25": [1, 10, 11, 13, 15, 16, 17, 18, 28, 41, 63, 72, 81, 127, 154, 165, 185, 191, 196, 201, 211, 213, 220, 242, 250, 254, 255, 283, 295, 296, 299, 314, 318, 323, 328, 337, 342, 344, 360, 366, 367, 373, 376, 382, 383, 387, 388, 393], "250": [201, 229, 255, 328, 353], "2500": 255, "2502": 255, "2507": 255, "251": 255, "25105": 255, "2511": 255, "2513006": 255, "2519": 255, "252": 255, "2520": 255, "2522": 282, "2523": 255, "2527": 255, "2528": 255, "253": 255, "2531": [255, 282], "2532": 255, "25382": 255, "254": 255, "2540": 255, "2541": 255, "25437182627374194": 375, "25438": 255, "2544": 255, "2544247": 255, "2545": 255, "2546": 255, "2547": 255, "2548": 255, "2549": 255, "255": [92, 127, 235, 255, 337, 359], "2550": 255, "2552": [255, 282], "25541e": 282, "2556": 255, "2559": 255, "256": [81, 160, 255, 289], "2560": 255, "2561932": 255, "2563": 255, "256388": 98, "257": 255, "257113": 255, "2574": 255, "25740": 255, "2576": 255, "2577": 255, "2578": 255, "2579": 255, "258": [54, 255], "2580": 255, "2581": 255, "2582": 282, "2583": 255, "2584": 255, "2585": [1, 255], "2586": 255, "2587": 255, "2589": 255, "258906": 366, "259": 255, "2593": 255, "259366": 98, "2596": 255, "2598": 255, "26": [36, 41, 89, 201, 247, 255, 328, 382, 383, 387, 388], "2601": 255, "2603": 255, "2607": 255, "2608925": 255, "261": [127, 255], "26106": 255, "2611": 255, "2615": 255, "2618": 255, "262": 255, "2622": 255, "2624": 255, "2627": 255, "263": 255, "2630": 255, "2634": 255, "2635": 255, "2637": 255, "26376087479": 327, "264": 255, "2646": 255, "265": 255, "26517": 255, "2656": 255, "2656758": 255, "266": [54, 255], "2661": 255, "2669": 255, "266b5a0": [10, 289], "267": 255, "267067": 53, "2671": 255, "2672": 255, "267384": 53, "267666": 53, "267872": 255, "268": 255, "2681": 255, "2682": 255, "2687": 255, "269": 255, "2692": 255, "2695": 255, "2698": 255, "26997": 98, "27": [89, 216, 255, 342, 382, 383, 387, 388, 391], "270": 255, "2700": [1, 255], "2703": 255, "2707": 255, "2708": 255, "271": 255, "2710": [1, 255], "2712": 255, "2714": 255, "2715": 255, "2716": 255, "27174": 296, "272": 255, "2723": 255, "2728": 255, "2729": 255, "273": 255, "2730": 98, "2733": 98, "2736": [254, 255], "27382": 255, "2739": 255, "274": [54, 255], "2740": 255, "2741": 255, "2741107": 255, "2743": 255, "2745": 255, "2747": 255, "275": 255, "2752": 255, "2753": 255, "2754": 255, "2755": 255, "2756": 255, "2756930": 255, "2758324": 255, "276": 255, "2760": 255, "276038": 72, "2764": 255, "2765": 255, "277": 255, "2774": 255, "2775": 282, "2778": 255, "278": 255, "2781": 255, "2785": 255, "2786": 255, "279": [229, 255, 353], "2791860": 255, "2794": 255, "2796": 255, "2797": 255, "28": [1, 201, 254, 255, 296, 328, 353, 360, 382, 383, 387, 388, 390], "280": [52, 255], "280215": 366, "2805": 255, "28075206782": 327, "280826": 255, "281": [100, 255], "282": 255, "2820": 255, "2821": 255, "28232": 255, "2824": 255, "2829": 255, "283": [41, 255, 369], "2831": 255, "2832055": 255, "2833": 255, "2834": 255, "2836": 255, "2837": 255, "284": 255, "2843": 255, "2845": 255, "2848": 255, "2849": 255, "285": [161, 255], "2852": 255, "2858": 255, "2859411": 255, "286": 255, "2862": 255, "2865": 255, "2867": 255, "287": 255, "2870": 255, "2879": 255, "288": 255, "2884": 255, "28846": 282, "2887": 255, "289": 255, "2894410": 255, "2896": 255, "2897": 255, "289999999999999": 250, "29": [247, 255, 368, 382, 387, 388, 391], "290": 255, "2901": 255, "2903500": 255, "2906": 255, "2906114": 255, "2909": 255, "291": 255, "29101": [155, 284, 292, 371], "29103": 371, "291156947261": 327, "2913": 255, "2916": 255, "2917": 255, "2922": 255, "2923": 255, "2925": 255, "2927": 255, "293": 255, "2934": 255, "2937": 255, "2938": 255, "29392e": 282, "294": 255, "294001": 54, "2941": 255, "2946": 255, "2949": 255, "294dac40175f": [160, 289], "295": [100, 201, 255, 328], "2955": 255, "29577951308232087680": [193, 320], "2958": 255, "296": [216, 255], "2964": 255, "297": 255, "2972": 255, "2973": 255, "2975": 255, "2975942": 255, "2977": 255, "298": 255, "2980": 255, "2981": 255, "2982271": 255, "2987373": 255, "2989": 255, "299": 255, "2992": 255, "299305": 255, "299544": 282, "2998": 255, "299835": 282, "299966": 282, "299976": 282, "299999": 282, "29th": 255, "2a": [39, 370], "2d": [237, 292, 361], "2e4": 30, "2f90f37": 363, "2m": 376, "2n": [161, 290], "2nd": [55, 201, 250, 255, 328], "2pi": [136, 173, 264], "2th": 211, "3": [3, 10, 11, 13, 19, 21, 22, 25, 27, 28, 29, 32, 33, 35, 40, 43, 44, 45, 47, 52, 53, 54, 58, 60, 64, 65, 68, 69, 72, 77, 78, 81, 92, 93, 100, 109, 117, 118, 119, 120, 125, 136, 138, 139, 148, 149, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 169, 173, 176, 178, 182, 185, 186, 189, 190, 191, 193, 196, 197, 200, 201, 203, 204, 205, 210, 211, 213, 216, 218, 220, 223, 228, 229, 230, 231, 233, 234, 235, 237, 239, 242, 246, 247, 248, 250, 252, 254, 255, 264, 266, 267, 277, 278, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 299, 303, 304, 306, 312, 314, 315, 317, 318, 319, 320, 322, 323, 324, 327, 328, 330, 335, 337, 338, 339, 340, 342, 344, 347, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 385, 386, 387, 393], "30": [1, 10, 16, 17, 25, 28, 36, 67, 158, 160, 166, 180, 191, 197, 200, 201, 205, 213, 228, 235, 242, 255, 282, 283, 287, 296, 310, 324, 327, 328, 337, 349, 352, 359, 368, 382, 383, 387, 388], "300": [18, 33, 43, 66, 68, 72, 159, 201, 229, 233, 255, 328, 353, 357], "3000": 268, "30000001": 213, "300000011921": 337, "30002": 296, "3001008": 255, "3001375": 255, "3001563": 255, "3006": 255, "3008": 255, "3009": 255, "3009293": 255, "301": [46, 255], "3010": 255, "3011": 255, "3013": 255, "302": 255, "3020": 255, "3021": 255, "3023": 255, "3027560": 255, "30279180612013384": 296, "3028": 255, "303": 255, "30333": 255, "3037": 255, "3038406": 255, "304": 255, "3046": 255, "3046720999999994": 250, "3048": 255, "305": 255, "3055": 255, "3056": 255, "3058": 255, "306": 255, "3060": 255, "3063": 255, "3068": 255, "307": 255, "3070": 255, "308": 255, "3083": 255, "309": [54, 255], "30926389122e": [164, 294], "3093477052": 296, "309347705201": 296, "3095": 255, "3098": 255, "30d0aaee7bf": 377, "30m": 282, "30um": 108, "31": [15, 63, 81, 92, 201, 229, 255, 296, 328, 342, 353, 382, 387, 388], "310": [160, 246, 247, 248, 255, 289], "3102129": 255, "3107": 255, "3108": 255, "3108682": 255, "3109": 255, "311": [246, 247, 248, 255], "3110": 255, "3111": 255, "3113": 255, "31247": 255, "3126": 255, "3127": 255, "3128": 255, "3129": 255, "313": [52, 255], "3132": 255, "3137350": 255, "3138": 255, "314": [52, 54, 255], "3140": 255, "3143": 255, "3144": 255, "31441": [193, 250], "3144626181532395": 320, "3145": 255, "31485774": 387, "3149": 255, "315": [52, 255], "3153": 255, "3154": 255, "3159": 255, "316": [52, 255], "3161": 255, "3165": 255, "31696": 255, "317": [52, 255], "3171": 255, "3173": 255, "317349": 255, "3177": 255, "318": [52, 242, 255], "3184": 255, "3187": 255, "319": [52, 255], "3190": 255, "3192": 255, "31925": 242, "3195555": 255, "3195556": 255, "31991": 255, "31st": [201, 255, 328], "32": [1, 18, 54, 72, 149, 159, 198, 200, 201, 246, 255, 278, 282, 283, 284, 296, 325, 327, 328, 382, 387, 388], "320": [201, 242, 255, 328], "3200": 255, "3202": 255, "3203": 255, "321": 255, "3210": 255, "322": 255, "3226": 255, "32277585": 387, "3229": 255, "3229710": 255, "3229752": 255, "323": 255, "3233": 255, "3234": 255, "3235": 255, "324": 255, "3241": 255, "3242": 255, "3244": 255, "3245": 255, "32469946": 58, "32469952": 58, "3248": 255, "325": 255, "3250": 255, "3255": 255, "326": [72, 159, 255], "3263": 255, "3268": [25, 255], "327": 255, "3274": 255, "3274005": 255, "3274011": 255, "3276": 255, "3278": 255, "328": 255, "3283064e": 284, "3284": 255, "3285": [25, 255], "3287": 255, "329": 255, "3293": 255, "32nd": [201, 328], "33": [1, 201, 250, 254, 255, 342, 382, 387, 388], "330": 255, "3305": 255, "33069396": 387, "331": 255, "3310": 255, "3311790": 255, "3315": 255, "332": 255, "3321233100141": 320, "3322": 255, "3323": 255, "3325": 255, "3327": 255, "33281": 255, "333": 255, "3333": [201, 328], "33333": [201, 328], "3333333": [229, 353], "3337": 255, "3339": 255, "333e": 67, "334": 255, "3340": 255, "3343": 255, "335": [1, 255], "3351": 255, "336": [46, 255], "336741": 72, "3368": 255, "337": 255, "3380": 255, "3383": 255, "33835": [201, 328], "3389": [93, 254, 255], "339": 255, "3390": 255, "3393": 255, "3398": 255, "3399": 255, "3399621": 255, "33c": 54, "33rd": [201, 328], "34": [29, 166, 200, 250, 255, 282, 296, 327, 328, 342, 371, 373, 382, 385, 387, 388], "340": 255, "3407": 255, "341": 255, "3410": 255, "3411": 255, "3414": 255, "342": 255, "34233": 255, "34238": 255, "3428": 255, "343": 255, "343065320896": 296, "3435": 255, "344": [242, 255], "34414": 255, "3443": 255, "3447": 255, "345": 255, "3453": 255, "3455": 255, "3457": 255, "346": [54, 255], "3462": 342, "3465": 255, "347": [100, 255], "3471": 255, "34728": 370, "3477": 255, "348": 255, "34836e": 282, "349": [88, 100, 254, 255], "3493": 255, "3495": 255, "34bit": [200, 327], "35": [3, 33, 41, 166, 201, 255, 282, 283, 296, 328, 342, 368, 371, 382, 387, 388], "350": 255, "3501": 255, "3504": 255, "3508": 255, "3509": 255, "351": 255, "3510": 255, "35106": 96, "3516": 255, "352": 255, "3525": 255, "3528": 255, "353": 255, "35358": 98, "3536": 255, "3541": 255, "3549": 255, "355": 255, "3551": 255, "35510": 255, "3553": 255, "3554": 255, "3556": 255, "3559": 342, "3560": 254, "3561": 255, "3563": 255, "3566": 255, "357": [40, 47, 255], "3571": 255, "3572": 255, "35723911e": 387, "3574": 255, "3576": 255, "3588": 255, "359": 255, "359529": 255, "36": [216, 254, 255, 282, 340, 382, 387, 388], "360": [63, 255], "361": 255, "3617": 255, "362": 255, "363": [46, 255], "3630": 255, "3635": 255, "3637": 255, "3638": 255, "364": 255, "3640": 255, "3641": 255, "3642": 255, "3643": 255, "3646": 255, "3647": 255, "365": 255, "3655": 255, "3658": 98, "366": 255, "3662": 255, "3664": 255, "3665": 255, "3668": 255, "367": 255, "3671": 255, "3673": 255, "3676582": 255, "3678": 255, "3680": 255, "3683": 255, "3688": 255, "3689": 255, "369": 255, "3695": 255, "3699": 255, "37": [36, 54, 255, 283, 328, 382, 383, 387, 388], "370": 255, "371": 255, "37102": 255, "3711": [255, 282], "3716": 255, "37166478e": 387, "3719": 255, "372": 255, "3724": 255, "373": 255, "3730": 255, "3731": 255, "37310": 255, "3732": 255, "3735": 255, "3736": 255, "3738": 255, "374": 255, "3742": 255, "3747": 255, "3748": 255, "375": [13, 255], "3754": 255, "3759": 255, "376": 255, "377": [229, 255, 353], "3771": 255, "3777": 255, "377x420": [229, 353], "378": 255, "37819": 98, "3782": 255, "379": 255, "3791": 255, "3792": 255, "3793": 255, "37th": 255, "38": [246, 247, 248, 250, 255, 282, 342, 382, 387, 388], "380": [40, 47, 255], "3808": 255, "3809": 255, "381": 255, "3812": 255, "382": [46, 159, 255], "382363a0": 46, "3825": 255, "3827": 255, "383": 255, "3834": 282, "3836": 255, "384": 255, "3843": 255, "38446": 255, "385": [201, 255, 328], "3854": 255, "386": 255, "3868": 255, "3869": 255, "387": 255, "3871": 255, "3873": 255, "38781": 96, "388": 255, "3882": 255, "3884": 255, "3887": 255, "3888": 255, "389": 255, "3896": 255, "3897": 255, "39": [3, 158, 246, 247, 248, 250, 255, 282, 287, 342, 371, 373, 375, 382, 387, 388], "390": 255, "3901": 255, "391": [54, 160, 255, 289], "3913": 369, "392": 255, "3927": 255, "393": 255, "3938": 255, "394": [54, 255], "395": 255, "39552": 255, "3959": 255, "396": 255, "3961": 255, "3969": 255, "397": 255, "3974": 255, "3976": 255, "397897": 255, "398": [100, 254, 255], "399": 255, "39958": 96, "3996": 255, "3998": 255, "39th": 255, "3_4": 255, "3d": [1, 4, 5, 46, 50, 89, 104, 125, 146, 163, 165, 234, 237, 254, 255, 275, 289, 292, 295, 358, 361, 366, 369, 371, 382], "3e": 191, "3e3": 28, "3e4": [191, 318], "3f": [100, 197, 324], "3fee1d8c2369": 247, "3g": [326, 382], "3i": 70, "3mm": 373, "3nrn_fihexec": 60, "3rd": [55, 233, 255, 357], "4": [3, 10, 11, 21, 22, 27, 28, 35, 36, 49, 52, 53, 54, 58, 65, 68, 72, 81, 93, 100, 108, 119, 120, 125, 126, 133, 134, 138, 149, 153, 154, 159, 160, 161, 163, 164, 166, 169, 173, 174, 177, 182, 185, 186, 191, 196, 197, 200, 201, 204, 211, 213, 216, 220, 223, 228, 229, 230, 233, 235, 242, 248, 250, 253, 254, 255, 261, 262, 266, 278, 282, 283, 285, 289, 290, 292, 294, 295, 296, 299, 303, 304, 307, 312, 314, 315, 322, 323, 324, 327, 328, 330, 337, 340, 342, 344, 347, 352, 353, 354, 357, 359, 360, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 386, 387, 393], "40": [13, 18, 24, 63, 72, 159, 166, 191, 200, 201, 204, 255, 282, 283, 288, 296, 327, 328, 342, 359, 360, 361, 371, 382, 387, 388], "400": [43, 66, 68, 255], "4000": [126, 229, 353], "4001": 255, "401": [254, 255], "4010": [233, 357], "4013": 255, "40169525": 58, "4016954": 58, "4017": 255, "402": 255, "403": 255, "404": 255, "4047": 255, "405": 255, "4051": 255, "4056": 255, "4057": 255, "406": 255, "40612": 255, "4062": 255, "4063": 255, "4066": 255, "4068": 255, "4069": 255, "407": [255, 282], "408": 255, "4086": 255, "409": [72, 255], "4093": 282, "409557452659": 327, "40hz": 255, "40th": 255, "41": [10, 201, 254, 255, 282, 296, 328, 382, 387, 388], "410": 255, "4105": 255, "411": 255, "412": 255, "413": 255, "4131": 255, "41321": 255, "4134": [201, 328], "4139": 255, "414": 255, "4141": 255, "4145": 255, "4148": 255, "415": 255, "4151": 255, "4155": 255, "4157": 255, "416": 255, "4161": 255, "417": 255, "41714": 255, "41728": 255, "4173": 255, "41806926603277866": 296, "41st": 255, "42": [53, 54, 81, 98, 155, 190, 201, 250, 252, 255, 282, 284, 296, 312, 317, 318, 319, 322, 328, 333, 338, 368, 382, 387, 388], "420": [229, 255, 353], "4205": 255, "4206": 255, "421": 255, "4212": 255, "4213": 255, "4217": 255, "422": 255, "4223": 255, "4228": 255, "4229": 255, "423": 255, "4233": 255, "42392": 255, "424": 255, "4246": 255, "4247": 255, "4249": 255, "425": [35, 100, 254, 255, 385], "4255": 255, "426": [11, 255, 342], "4260": 255, "42682": 255, "427": 255, "4273": 255, "427387": 242, "42766": 255, "428": 255, "429": 255, "4295": 255, "42nd": 255, "43": [30, 54, 242, 255, 282, 382, 383, 387, 388], "430": [255, 290], "43000": 96, "43060": 96, "4307": 255, "431": 255, "4314": 255, "432": 255, "43225906488": [164, 294], "4325": 255, "43253": 255, "433": [41, 255, 370], "4334": 255, "434": 255, "4346": 255, "43460": 255, "435": [54, 255], "43560": 255, "4357": 255, "436": 255, "4363": 255, "437": 255, "438": 255, "438593": 255, "4386": 255, "439": [54, 254, 255], "4391": 255, "43957": 366, "4398": 255, "43rd": 255, "44": [54, 229, 255, 353, 382, 387, 388], "440": [255, 378, 379], "441": 255, "44123": 96, "4415": 255, "4417": 255, "442": 255, "4423": 255, "4429": 255, "443": [255, 368], "4431": 255, "444": 255, "4447": 255, "4448": 255, "44494": 255, "445": 255, "445601": 255, "446": [242, 255], "4461": 255, "4464": 282, "447": [41, 255], "448": [52, 254, 255, 370], "4482": 255, "4486": 255, "4489": 255, "449": 255, "4491": 255, "4496": [255, 342], "45": [54, 63, 201, 204, 255, 283, 296, 328, 382, 387, 388], "450": [229, 233, 255, 353, 357], "450000000099543": 383, "4503": 255, "4505": 255, "451": 255, "4517": 255, "452": 255, "453": 255, "4537": 255, "454": [160, 255], "4542": 255, "455": [201, 328, 385], "4553": 255, "4555": 296, "4556": 255, "4557": 255, "456": [100, 255], "4560": 255, "457": 255, "458": 255, "4582": 255, "459": [100, 255], "45c3": 248, "46": [16, 18, 255, 382, 387, 388], "460": [54, 254, 255], "4602": 255, "4609": 255, "461": 255, "4612": 255, "4613": 255, "4614": [254, 255], "46147": 255, "4615": 254, "4618": 255, "462": 255, "4621": 255, "4625": 255, "463": 255, "464": 255, "465": [35, 255], "46550": 255, "466": 255, "467": 255, "468": [254, 255], "4682": 255, "469": 255, "4691": 255, "4695": 282, "47": [22, 92, 158, 255, 287, 292, 366, 368, 382, 387, 388], "470": [54, 255], "4705": 255, "471": 255, "4715": 255, "472": 255, "4725": 282, "473": [40, 47, 255], "4731": 255, "4734": 255, "474": 255, "4741": 255, "47428e": 282, "4743": 255, "4745831": 340, "4747": 255, "475": [197, 324], "4750": 255, "4754": 255, "47594735": 58, "47594741": 58, "476": 255, "47628885927": 296, "47683": 242, "477": 255, "47th": 255, "48": [17, 18, 72, 159, 255, 382, 387, 388], "480": 255, "48020473": 387, "4814": 255, "482": 255, "482188": 366, "483": 255, "4830138": 255, "4839": 255, "4843": 255, "4844": 255, "485": 255, "485175784418": 327, "4853": 255, "4855": 255, "4858": 255, "486": 255, "48624e": 282, "4867844009999995": 250, "4868": 255, "487": 255, "4877": 255, "488": 255, "48812284": 387, "48896": 70, "489": [54, 255], "4899": 255, "49": [18, 36, 201, 254, 255, 328, 342, 387, 388], "490": 255, "491": 255, "4912": 255, "492": [160, 255, 289], "493": [159, 255], "4939": 255, "494": 255, "495": [201, 255, 328], "49604095": 387, "497": [72, 242, 255], "498": 255, "49872": 255, "499": [197, 324], "4_52": 255, "4ac": 39, "4e": 191, "4f": [201, 328], "4f86": 247, "4j": 322, "4th": [182, 218, 220, 312, 342, 344], "4w": 54, "4x4": 70, "4xxx5": 191, "4y": 204, "5": [1, 4, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 28, 31, 36, 37, 41, 44, 45, 47, 49, 52, 53, 54, 58, 63, 64, 65, 68, 70, 72, 78, 80, 81, 87, 88, 93, 95, 105, 108, 110, 119, 120, 125, 126, 127, 129, 133, 134, 136, 137, 138, 148, 151, 153, 154, 156, 158, 159, 160, 161, 163, 164, 166, 169, 180, 182, 185, 186, 191, 197, 198, 200, 201, 204, 206, 208, 210, 213, 216, 218, 220, 227, 229, 230, 233, 235, 242, 247, 250, 253, 254, 255, 257, 261, 262, 264, 265, 266, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 308, 310, 312, 314, 315, 316, 322, 323, 324, 325, 327, 328, 330, 331, 333, 334, 335, 337, 338, 340, 342, 344, 349, 351, 353, 354, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 382, 383, 384, 385, 387], "50": [22, 28, 29, 37, 38, 41, 46, 54, 63, 102, 107, 151, 161, 191, 200, 201, 204, 213, 229, 230, 231, 233, 250, 255, 280, 282, 283, 290, 296, 314, 327, 328, 337, 353, 354, 355, 357, 359, 360, 371, 373, 375, 383, 384, 385, 387, 388], "500": [13, 16, 17, 18, 22, 37, 41, 43, 66, 68, 72, 126, 136, 166, 197, 200, 229, 233, 255, 264, 282, 324, 327, 328, 353, 357, 371, 382, 388], "50000": [25, 52, 201, 328], "50000000000001": 296, "5000000000988": 383, "50004": 254, "50005": 254, "501": [201, 255, 328, 360], "5015": 342, "502": 255, "5020": 255, "5024": 255, "5028": 255, "503": 255, "503178330905": 327, "504": 255, "5040288": 255, "5044": 255, "5049mib": 54, "505": 255, "5053": 255, "506": 255, "5063": 255, "5067": 255, "507": 255, "50748e": 282, "5077": 255, "508": [11, 255], "5089": 282, "509": 255, "5090": 255, "50e": 250, "51": [15, 22, 201, 255, 328, 349, 387], "510": 255, "511": 255, "5110033": 255, "512": [1, 52, 242, 255, 360], "5120": 255, "51214": 255, "5123": 255, "5125": 255, "51288e": 282, "513": 255, "5134765": 255, "5135": 282, "5139": 255, "514": 255, "51402": 255, "5143": 255, "515": 255, "5155": 255, "516": 255, "51691": 255, "517": 255, "51709661466": 327, "5177": 255, "51781": 98, "518": 255, "519": 255, "52": [22, 160, 242, 255, 282, 289, 387], "520": [242, 254, 255], "52034": [53, 98], "521": 255, "522": 255, "523": 255, "5233": 255, "524": 255, "5244": 255, "525": [197, 255, 268, 324], "5250": 255, "5259": 282, "526": 255, "5265": 255, "527": 255, "5274": 255, "528": [100, 255], "5280": 255, "529": 255, "5290": 255, "52949": 255, "53": [54, 81, 255, 368, 387], "5300": 28, "53006e": 282, "5301": 255, "53087": 255, "531": 255, "5311": 255, "53148": 255, "5316": 255, "5318": 255, "532": 255, "5322": 255, "5325": 255, "53281": 255, "533": 255, "5331": 255, "5337": 255, "534": [216, 255, 340], "5343": 255, "535": [197, 255, 324], "535061": 366, "5353": 255, "5359": 255, "536": 255, "5362": 255, "53662": 255, "537": 255, "5372": 255, "5374": 255, "538": 255, "539": 255, "5398": 255, "54": [19, 22, 72, 153, 159, 201, 255, 282, 328, 368, 371, 382, 383, 384, 387, 388], "540": 255, "5403": 255, "5408": 255, "541": [242, 255], "541214": 72, "5414": 255, "542": 255, "543": 255, "5431": 255, "5433": 255, "544": [54, 255, 371], "545": 255, "54566": 255, "5458": 255, "546": [100, 255], "5460": 255, "5469": 255, "54694813": 58, "54694819": 58, "547": 255, "5470407": [254, 255], "5489": 255, "549": 255, "54k": 368, "55": [200, 201, 250, 254, 255, 283, 292, 296, 327, 328, 360, 371, 387], "550": [233, 357], "55000000010134": 383, "55074": 368, "55167": 255, "552": 255, "5523": 255, "553": 255, "5544": 255, "554405": 255, "555": 255, "5558": 255, "556": 54, "5561": 255, "556628": 255, "557": 255, "55714": 255, "5573": 255, "5576": 255, "55761": 255, "558": 255, "5580": 255, "5586": 255, "559": 255, "56": [193, 255, 282, 383, 387], "5604": 255, "5607": 255, "560999999999999": 250, "561": 255, "5615": 255, "562": 255, "5624": 255, "5626631": 255, "5627176": 255, "5629": 255, "563": 255, "563578": 72, "5637": 255, "564": 255, "565": 255, "5652": 255, "566": 255, "56605": 255, "5668": 255, "567": 255, "568": 255, "569": 255, "57": [54, 193, 229, 255, 320, 353, 387], "570": 255, "5707": 255, "571": 255, "572": 255, "5722": 255, "57243": 255, "57284e": 282, "573": 255, "57377185": 63, "574": 255, "575": 255, "576": 255, "577": 255, "57721566490153286060": [193, 320], "578": 255, "57826e": 282, "5787": 255, "579": 255, "58": [160, 254, 255, 282, 289, 387], "581": [54, 255], "583": 255, "5833": 255, "584": 255, "5846": 255, "585": 255, "5850": 255, "58515": 255, "586": 255, "5861": 255, "587": 255, "5870": 255, "5876": 255, "588": 255, "588881": 255, "589": 255, "59": [54, 158, 201, 255, 287, 296, 328, 387], "590": 255, "591": 255, "592": 255, "592332": 72, "593": 255, "5934": 255, "5937": 255, "594": 255, "595": 255, "59548": 255, "59551": 255, "596": 255, "5965": 255, "597": 255, "59745": [254, 255], "598": 255, "5986": 255, "599": 255, "5a67957": 363, "5b": 255, "5c": 213, "5d": 330, "5dt": [223, 227, 347, 351], "5e": [29, 250, 368], "5e5": 191, "5e5ef1bd7687": 248, "5f": [197, 324], "5h16m": 389, "5m": 37, "5p01dc004732": 89, "5th": 255, "5x3": [233, 357], "6": [1, 10, 11, 22, 25, 28, 40, 41, 46, 52, 53, 58, 63, 64, 65, 72, 81, 93, 100, 119, 120, 127, 134, 156, 159, 160, 166, 182, 186, 191, 195, 197, 200, 201, 204, 213, 216, 220, 223, 229, 230, 233, 241, 242, 244, 246, 248, 250, 254, 255, 262, 282, 283, 285, 288, 289, 295, 296, 310, 312, 314, 315, 320, 322, 324, 327, 328, 337, 339, 340, 342, 344, 347, 349, 353, 354, 357, 360, 365, 367, 368, 369, 370, 371, 372, 373, 375, 377, 382, 383, 384, 385, 387], "60": [7, 191, 201, 228, 255, 283, 328, 352, 387], "600": [166, 173, 233, 255, 303, 357], "60000000010431": 383, "601": 255, "6011": 255, "6013": 255, "602": [41, 255], "602192": [119, 120], "6021e": [154, 283], "6023": 255, "6024": 255, "602562": 366, "6029": 255, "603": 100, "6038": 255, "605": 255, "606461": 242, "6065": 255, "60692": 255, "607": 255, "6074": 255, "60753e": 282, "608": 255, "6085": 255, "609": 255, "6090061": 255, "6091795": 255, "60936": 255, "609512397643": 296, "6096": 255, "6099": 255, "61": [255, 328, 387], "610": 255, "6100": 255, "6103": 255, "6108": 255, "6111": 255, "612": 255, "6123": 255, "612937": 255, "61421257": 58, "61421269": 58, "614377": 255, "615": [54, 255], "6157": [22, 382, 383, 384], "616": 255, "6161": 255, "617": 255, "6178980": 255, "6179": 255, "618": 255, "61803398874989484820": [193, 320], "61834": 255, "6184": 255, "619": 255, "619747": 255, "62": [10, 21, 229, 255, 353, 373, 387], "62016a": 255, "62017": 255, "621": 255, "6219": 255, "622": 255, "6220": 255, "62207": 255, "6229": 363, "623": [54, 255], "6233": 255, "623552": 255, "6239": 255, "624": 255, "6249": 255, "625": 255, "62588": 255, "627": 255, "62750": 255, "628": 100, "629": [72, 303, 353], "63": [92, 95, 255, 283, 296, 383, 387], "630": 54, "631": 255, "633": 255, "6335": 255, "634": 255, "6345": 255, "6346690": 255, "6346880": 255, "6347510": 255, "635": 255, "636": 255, "637": 255, "6373": 255, "63819": 255, "639": [242, 255], "6390": 255, "64": [66, 89, 99, 149, 164, 165, 201, 206, 246, 255, 278, 282, 294, 295, 318, 319, 328, 332, 342, 353, 387], "640": [54, 63], "640449": 255, "641": 255, "6419": 250, "64229": 98, "64296": 98, "643": 255, "6434": 255, "643614": 255, "644": 255, "644047": 255, "6442": 255, "64555171": 387, "64594590e": 387, "646": 255, "647": [54, 255], "648498": 242, "649": 255, "6496": 255, "6499": 255, "64bit": [198, 325], "65": [22, 24, 31, 33, 37, 43, 53, 63, 66, 67, 68, 72, 94, 99, 100, 108, 119, 153, 176, 201, 250, 253, 255, 280, 282, 292, 296, 306, 322, 328, 337, 342, 344, 349, 359, 360, 361, 365, 366, 367, 368, 370, 371, 375, 376, 382, 383, 384, 385, 387, 388], "650": 255, "65000000010727": 383, "65001": 255, "651": 255, "652": [119, 120], "65280": 70, "653": 255, "6534218": 96, "65346982": 387, "6539": 255, "6542": 255, "6547": 255, "655": 255, "6550": 255, "6551": 255, "655225": 255, "6553": 255, "65535": 70, "6554": 255, "656": 255, "6560": 255, "6564": 255, "657": 255, "657151": 255, "658": 255, "659": [242, 255], "65954": 255, "65mv": 66, "66": [166, 255, 296, 387], "660": 255, "6606": 255, "6609439": 255, "661": 255, "6610068": 255, "6610560": 255, "6610561": 255, "6610903": 255, "6611053": 255, "6611056": 255, "6612": 255, "66138793": 387, "6615": 255, "662": 255, "663": [100, 255], "665": 255, "6666": [201, 328], "6666666666666667": 387, "6667": [160, 289], "667": 255, "668": 255, "668948": 255, "669": 255, "67": [109, 255, 387], "670": 255, "6703": 255, "6704": 255, "6709": 255, "671": 255, "6714": 255, "673": 255, "675": 255, "676": 255, "6761": 255, "677": 255, "67728156": 58, "67728162": 58, "6777": 255, "678": 255, "68": [254, 255, 283, 296, 359, 387], "680": 255, "681": 255, "682": 255, "683": 255, "684": 255, "684872": 255, "685": 255, "6857": 255, "686": 255, "6867": [201, 328], "6868": 255, "6876": 342, "688": 255, "689": 255, "6897": 255, "69": [25, 254, 255, 383, 387], "690": 195, "6903": 255, "691": 255, "691965": 366, "692": 255, "6920": 255, "693": [242, 255], "6931": 255, "6936": 255, "694": 255, "6940": 255, "69400266e": 387, "6945020": 255, "6945021": 255, "6945023": 255, "696": 255, "697": 255, "699": 255, "6_6": 255, "6_795": 254, "6_9": 255, "6e": 191, "6th": [233, 357], "7": [1, 3, 7, 10, 11, 16, 25, 28, 41, 48, 49, 53, 54, 66, 72, 76, 89, 92, 96, 98, 100, 125, 126, 158, 160, 163, 164, 175, 182, 185, 186, 191, 197, 200, 201, 204, 211, 213, 216, 220, 229, 233, 242, 246, 248, 250, 254, 255, 268, 277, 282, 285, 287, 289, 292, 294, 295, 296, 305, 308, 310, 312, 314, 315, 318, 319, 324, 327, 328, 330, 337, 340, 342, 344, 353, 357, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 382, 383, 384, 385, 387], "70": [7, 24, 31, 54, 66, 94, 96, 154, 191, 223, 250, 255, 282, 283, 328, 347, 360, 377, 387, 388], "700": [166, 171, 173, 195, 242, 301, 303, 322], "70000000011024": 383, "700332": 242, "701": 255, "702": 255, "703": 255, "7033": 255, "704": 255, "7040": 255, "706": 255, "707": 255, "71": [72, 255, 387], "710": [195, 255], "7101": 254, "7103": 255, "7106": 255, "711": 255, "713": 255, "7146752": 255, "715": 255, "7153": 255, "716": 255, "7164": 255, "7165": 255, "717": 255, "7173": 255, "718": 255, "718270": 255, "71828182845904523536": [193, 320], "71847e": 282, "719": 255, "719785": 366, "71mib": 54, "72": [253, 255, 282, 370, 377, 387], "720": 255, "721773": 255, "722": 255, "723": 54, "724": 255, "726": [246, 247, 255], "7260": 255, "7272": 255, "7285": 255, "7286": 255, "729": 255, "7298": 255, "73": [54, 99, 255, 387], "7303": 255, "731": 255, "7319125": 255, "7319602": 255, "7319606": 255, "732": 255, "7320": 254, "7320267": 255, "7321": 255, "733": 255, "733155": 255, "7337": 255, "734": 255, "7344": 255, "7344707": 255, "735": 255, "73572391": 58, "737": 255, "73783": 255, "738": [54, 255], "7382": 296, "739": 255, "7399": [53, 98], "74": [255, 282, 387], "740": 255, "7400": 98, "741": 255, "741094": 366, "742": 255, "7424": 255, "742735936014": 296, "7427359360145": 296, "743": 255, "7432": 255, "744": 255, "746": 255, "747": 255, "748": 255, "7484555e": 58, "74891": 255, "748989": 255, "74d3db9": 363, "75": [213, 255, 283, 296, 337, 387], "750": 255, "7500000001132": 383, "751": 255, "751599": 255, "752": 255, "753": 255, "75382": 255, "754": 39, "7554": 255, "756": 255, "758": 255, "759": 255, "7590973": 255, "7591310": 255, "7591756": 255, "75947393e": 387, "75w": 54, "76": [25, 36, 96, 254, 255, 282, 383, 387], "760": 255, "7600": 248, "7606": 255, "7607": 255, "7615": 255, "762": 255, "7622": 255, "7625": 255, "763": [1, 54], "764": 255, "765": 255, "7657_2011_16": 255, "767": 255, "7674": 255, "76753": 366, "7688": 255, "769": 255, "77": [10, 254, 255, 296, 387, 388], "770": 255, "7715": 255, "771600": 255, "772": 255, "7726": 255, "774": 255, "7750": 255, "7758": 255, "77645355171": 296, "779": 255, "78": [255, 282, 387], "780": [233, 357], "781": 255, "7824861": 255, "7824871": 255, "7826": 255, "782969": 250, "783": 255, "7833": 255, "7835916": 255, "7839": 255, "784": 255, "7845": 255, "785": 255, "7869": 255, "7874": 255, "7886": 255, "789": 255, "7891": 255, "78914052": 58, "78914064": 58, "789776": 72, "78k": 368, "79": [92, 255, 387], "7915104": 255, "7916": 255, "7917": [99, 201, 255, 328], "7922": 255, "792216": 242, "7928": 255, "793": 255, "7949": 254, "795": 255, "7954": 255, "796042": 255, "7961": 255, "7962": 255, "7974": 255, "7_11": 254, "7_17": 255, "7_8": 254, "7b4f020b29e8": 11, "7g": [175, 305], "7th": 255, "8": [3, 7, 11, 18, 22, 28, 29, 37, 49, 52, 53, 54, 70, 72, 73, 81, 98, 100, 119, 120, 149, 154, 155, 158, 159, 160, 161, 164, 165, 166, 182, 185, 186, 191, 193, 197, 200, 201, 204, 213, 216, 220, 225, 229, 237, 242, 246, 247, 248, 250, 252, 255, 278, 282, 283, 284, 287, 288, 289, 290, 292, 294, 295, 296, 312, 315, 320, 324, 327, 328, 337, 340, 342, 344, 349, 353, 359, 360, 361, 365, 367, 368, 369, 370, 371, 373, 377, 378, 382, 383, 384, 385, 387], "80": [7, 18, 22, 28, 37, 63, 72, 88, 96, 159, 191, 201, 248, 250, 255, 283, 288, 292, 328, 359, 371, 387], "800": [43, 66, 68, 240], "8008422": 255, "8008434": 255, "801": 255, "801281": 366, "802": 255, "803": 255, "8036804": 255, "8036988": 255, "8037230": 255, "8037412": 255, "8037701": 255, "805": 255, "806": [54, 160, 255], "8063": 255, "8069": 255, "8071": 255, "808": 255, "809": 242, "81": [255, 387], "810": 255, "81089869": 387, "811": 255, "8110": 255, "8115": 255, "812": 255, "8121": 255, "8125892": 255, "8125898": 255, "8127": 255, "814": 255, "816217": 366, "817": [53, 255], "8177": 255, "818": 255, "8188168": 387, "819": 255, "8192": 255, "82": [25, 255, 383, 387], "820": 255, "8219": 255, "823": 255, "8233": 255, "824": 255, "8250000000000064": 375, "826": 255, "8267": 255, "82673491": 387, "8269": 94, "827": 100, "8277": 255, "828": 255, "8284": 98, "82874e": 282, "829": 255, "8295": 255, "83": [255, 292, 369, 387], "830": 255, "831": 255, "8310": 255, "83209": 255, "83319": [88, 100], "83344": 53, "834": 255, "8345": 255, "8350": 255, "8359": 255, "836": 255, "8366": 255, "837": 255, "8371": 255, "83716649": 58, "8372": 255, "838": 255, "83841": 96, "839": 255, "84": [254, 255], "8402": 255, "841": 99, "8416": 255, "842": 255, "8421": 70, "843": 255, "8430": 255, "8436": 255, "844": [54, 255], "8441": 255, "84437": 255, "845": 255, "84503": 255, "845079": 242, "8452": 255, "845982": 366, "8461": 255, "846386": 366, "847108": 254, "8475": 255, "8489": 255, "849": 255, "8493": 255, "8499": 255, "85": [255, 296], "850": 255, "8501": 255, "8504": 255, "8512498": 255, "8512503": 255, "8512574": 255, "8512748": 255, "8512759": 255, "8512788": 255, "8512975": 255, "8513621": 255, "852": 255, "853": 255, "854": 255, "8541971": 255, "855": 255, "8551": 255, "8559": 255, "8565": 255, "8569": 255, "858": 255, "85852": 96, "859": 255, "8596865": 255, "86": [96, 255, 296], "860": [54, 255], "861": 255, "861661": 72, "863": 255, "8643": 255, "864846": 242, "865": 255, "8653": 255, "867": 255, "8677": 282, "868": 255, "86879e": 282, "869": 255, "8698": 282, "87": [201, 255, 328, 377], "870": 255, "87002": 255, "8703": 282, "8707": 282, "8716883": 255, "8717136": 255, "872": 255, "873": 255, "8742048899999997": 250, "875": 255, "87585": 98, "876": [255, 282], "877": 255, "8776": 255, "878": 255, "8787": 255, "879": 255, "879356": 366, "87947375": 58, "88": [247, 255], "881": 255, "8815": 255, "881784197e": [164, 294], "883": 255, "884": 255, "884046": 254, "8847": 255, "885": 255, "8856799": 255, "8857": 255, "8857153": 255, "887": 255, "8873": 255, "888": 255, "88827e": 282, "8884": 255, "889": 255, "89": [248, 254, 255, 383], "8901": 342, "890198": 242, "891": 255, "8914": 255, "892": 255, "8921": 342, "8926": 255, "894": 255, "895": 255, "897": 255, "8974323": 255, "8975": 255, "8978": 255, "898": 255, "8980": 255, "8988": 255, "898x_13_3_307": [40, 47], "899": 255, "8998": 255, "8a": [377, 378], "8b1290d5c8ab748dd6251be5bd46a4e3794d742f": [368, 373], "8e2c5f1c3688e84ebd3fdc5e5e6bb722db204196": 96, "8fecd77": 363, "8g": [197, 280, 324], "8th": 255, "8x13bold": 70, "8x8": 70, "9": [1, 3, 11, 17, 18, 22, 28, 29, 47, 53, 63, 72, 81, 82, 83, 86, 87, 94, 96, 99, 119, 120, 125, 136, 155, 159, 173, 191, 201, 204, 213, 216, 219, 220, 223, 229, 242, 246, 247, 248, 250, 252, 254, 255, 264, 284, 288, 292, 303, 318, 319, 327, 328, 337, 340, 342, 343, 344, 347, 353, 361, 364, 367, 368, 369, 370, 371, 373, 377, 382, 383, 384, 385, 387], "90": [40, 54, 70, 191, 201, 255, 283, 328, 367], "900": [173, 268, 303], "9000": [201, 328], "90007": 254, "90008": 254, "9008": 342, "901": 255, "903": [54, 254, 255], "903522": 255, "9039": [255, 282], "9049": 250, "906": 255, "907": 255, "9072": 255, "9076814": 96, "908": 255, "9080": 255, "908108": 366, "9082": 255, "90899": 255, "909": 255, "9095": 255, "909585": 72, "909677090083": 296, "9099": 255, "91": [54, 159, 255], "910": 255, "911": 255, "9111": 255, "912": 255, "913": [100, 255], "91365": 255, "9151": 282, "9155": [96, 255], "915565": 366, "9156": 96, "91577333": 58, "91577339": 58, "9164": 255, "9165": 255, "9169": 255, "9173": 255, "9175": 282, "9175250": 255, "9176125": 255, "9176551": 255, "9176570": 255, "918": 255, "9180633": 255, "9181": 282, "9184": 255, "91897e": 282, "919169": 72, "92": 255, "920": 104, "92037": 201, "9208": 255, "921": [254, 255], "9218": 282, "9223448": 255, "9224": 255, "9229": 255, "923193": 366, "9235": 255, "924": 255, "9246": 282, "925": [201, 255, 328, 384], "925000000099914": 383, "9252": 255, "926": 255, "9260": 255, "9265": 255, "92651": 95, "92656e": 282, "9269": 255, "927": 255, "9270": 255, "9274": 255, "9277": 255, "928": 255, "9284": 342, "9286": 255, "9288": 255, "9295": 255, "9297": 255, "93": [72, 160, 255, 289], "9309": 255, "93114": 255, "9315": 255, "9319": 255, "932016": 255, "93321": 98, "9337": 255, "9341": 255, "9346": 255, "935": 255, "9352": 255, "9363": 255, "937": 255, "938": 255, "9382": 255, "9383": 255, "939678": 366, "93d41fafd": 340, "94": [10, 155, 255, 284], "941": 255, "9411": 255, "942": 255, "943": 255, "944": 282, "9441073": 255, "9441104": 255, "9441187": 255, "9441199": 255, "9441219": 255, "9441222": 255, "9441267": 255, "9441309": 255, "9441383": 255, "9441407": 255, "9447": 255, "945": 25, "94581723": 58, "947": 255, "94783e": 282, "95": [92, 99, 166, 248, 255, 296, 383], "950": 255, "9502": 255, "9504": 255, "951": 255, "9515": 255, "9518": 255, "9519": 255, "95302": 246, "9538": 342, "955": 255, "9554": 255, "955556": 366, "956": 255, "9565": 255, "9568": 255, "957783": 366, "958": 255, "9583": 255, "959": 255, "959540": 242, "96": [72, 81, 96, 159, 160, 242, 255, 289], "960": 255, "9600": 189, "9605": 255, "961": 255, "9618": 282, "9624": 255, "9629799": 255, "9629884": 255, "9630642": 255, "96444": 100, "9644995": 255, "96484": 193, "96485": 320, "965113": 255, "96520": [119, 120, 154, 193, 283], "96584493e": 387, "967": 255, "9671": 255, "968": 255, "9681": 255, "9692": 255, "96940023": 58, "96940029": 58, "97": [41, 81, 242, 255], "971": [242, 255], "9710": 255, "9723": 255, "9731": 255, "9733": 255, "973784": 255, "974": 255, "975": 255, "975000000099172": 383, "9756f32df7d0": 11, "9757": 255, "9762": 255, "97624567": 387, "977": 255, "977778": 366, "978": [254, 255], "97868": 98, "97874": 98, "979": 255, "97917": [53, 98], "98": [54, 81, 88, 126, 200, 254, 255, 327], "980": [173, 255, 303], "981": 255, "982": 255, "98215": 377, "984": 255, "98416378": 387, "98636132": 58, "987": 255, "9876537323": 337, "987654321": [213, 337], "988": [242, 255], "9889": 98, "989": [255, 342], "99": [81, 197, 242, 247, 255, 324], "990": [173, 201, 255, 303, 328], "990064": 255, "9905": 255, "991": 242, "9917": 342, "992": 255, "99208189": 387, "9921": 255, "992531": 242, "993": 255, "9932": 255, "9943": 342, "995": [254, 255], "995957": 242, "996": 255, "9964": 255, "99658448": 58, "9968": 255, "997": 255, "9971": [99, 342], "9976": 255, "9977": 255, "998": 255, "9985": 99, "9987": 282, "999": 255, "9999": [151, 280], "99999": 323, "99999613071850035": 323, "9th": [96, 255], "A": [1, 3, 4, 10, 11, 13, 14, 24, 26, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 46, 50, 53, 54, 55, 56, 58, 59, 60, 66, 68, 70, 71, 76, 78, 81, 82, 83, 87, 88, 92, 93, 94, 99, 100, 103, 119, 120, 124, 127, 129, 131, 132, 133, 134, 136, 137, 139, 142, 147, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 173, 174, 177, 185, 186, 188, 191, 192, 197, 198, 201, 203, 204, 205, 208, 209, 210, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 241, 242, 246, 247, 248, 250, 254, 255, 257, 259, 260, 261, 262, 264, 267, 271, 276, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 303, 304, 307, 308, 314, 315, 316, 318, 319, 324, 325, 328, 330, 334, 335, 337, 340, 341, 343, 344, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 368, 370, 371, 373, 376, 378, 379, 382, 384, 385, 386, 387, 388, 390], "AND": [28, 81, 160, 170, 201, 289, 300, 328, 371], "And": [7, 12, 47, 66, 67, 80, 86, 96, 100, 127, 140, 148, 154, 155, 159, 160, 165, 170, 207, 210, 220, 241, 247, 250, 269, 277, 283, 284, 288, 289, 295, 300, 314, 335, 344, 365, 383, 385, 387, 388], "As": [4, 7, 8, 28, 29, 51, 52, 53, 64, 70, 81, 98, 100, 104, 105, 110, 126, 154, 155, 156, 160, 173, 188, 197, 200, 201, 227, 242, 246, 248, 249, 253, 255, 268, 283, 284, 285, 289, 296, 303, 312, 316, 320, 324, 327, 330, 339, 351, 366, 368, 369, 370, 371, 377, 378, 382, 383, 384, 388], "At": [8, 9, 14, 25, 27, 31, 32, 33, 37, 40, 45, 46, 47, 52, 60, 66, 76, 77, 86, 93, 94, 96, 100, 101, 107, 115, 119, 120, 123, 129, 147, 148, 153, 154, 155, 160, 161, 175, 180, 182, 197, 198, 200, 201, 208, 210, 217, 223, 230, 234, 247, 257, 276, 277, 282, 283, 284, 289, 290, 310, 324, 325, 327, 328, 334, 335, 341, 347, 354, 358, 377, 378], "BE": [155, 160, 284], "Be": [31, 38, 41, 42, 76, 103, 105, 124, 125, 134, 153, 249, 262, 314], "But": [4, 10, 11, 13, 25, 27, 30, 33, 45, 46, 47, 66, 76, 80, 86, 94, 95, 96, 100, 104, 119, 120, 134, 136, 159, 160, 161, 164, 166, 197, 201, 241, 246, 262, 264, 279, 284, 288, 289, 290, 294, 296, 324, 328, 377], "By": [3, 7, 52, 53, 64, 66, 76, 90, 94, 100, 104, 154, 158, 160, 161, 173, 197, 233, 236, 253, 282, 283, 287, 289, 290, 295, 303, 324, 357, 360, 369, 373, 387, 388], "For": [0, 1, 3, 4, 7, 8, 10, 11, 14, 25, 28, 31, 32, 37, 39, 41, 42, 47, 48, 49, 51, 53, 54, 56, 64, 66, 67, 68, 70, 76, 80, 81, 82, 83, 86, 88, 89, 92, 94, 96, 98, 99, 100, 103, 107, 108, 110, 111, 114, 116, 119, 120, 124, 126, 133, 136, 148, 149, 153, 154, 155, 156, 159, 160, 161, 165, 166, 170, 171, 173, 174, 180, 182, 185, 188, 194, 197, 198, 200, 201, 203, 211, 216, 219, 220, 221, 223, 225, 227, 228, 229, 230, 236, 240, 242, 246, 247, 248, 249, 261, 264, 269, 277, 278, 279, 282, 283, 284, 285, 288, 289, 290, 293, 295, 296, 297, 299, 300, 301, 303, 304, 310, 312, 314, 316, 317, 321, 324, 325, 327, 328, 330, 331, 340, 343, 344, 345, 347, 349, 351, 352, 353, 354, 359, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 382, 383, 384, 385, 388, 390, 392, 393], "IF": [152, 250, 281], "IT": [160, 255], "If": [1, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 45, 46, 47, 51, 53, 54, 56, 64, 66, 67, 68, 70, 76, 79, 80, 81, 82, 83, 86, 89, 92, 94, 96, 98, 99, 100, 103, 110, 112, 114, 119, 120, 122, 123, 124, 125, 127, 133, 134, 136, 138, 143, 144, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 191, 192, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 236, 237, 238, 239, 242, 246, 247, 248, 249, 261, 262, 264, 266, 268, 272, 273, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 322, 323, 324, 327, 328, 330, 332, 333, 334, 335, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 366, 368, 369, 377, 378, 381, 382, 383, 385, 387, 388], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 24, 25, 27, 28, 31, 32, 33, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 56, 64, 66, 67, 70, 73, 76, 80, 81, 86, 89, 91, 93, 94, 96, 98, 99, 100, 103, 108, 119, 120, 123, 124, 126, 130, 131, 133, 134, 136, 144, 147, 148, 149, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 182, 185, 186, 189, 195, 197, 200, 201, 203, 204, 210, 211, 214, 220, 223, 225, 229, 230, 231, 234, 237, 238, 241, 242, 246, 247, 248, 249, 251, 254, 255, 258, 259, 261, 262, 264, 273, 276, 277, 278, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 299, 304, 314, 315, 317, 318, 322, 324, 327, 328, 330, 333, 334, 335, 338, 343, 344, 347, 349, 351, 353, 354, 355, 358, 359, 360, 361, 362, 366, 367, 368, 369, 373, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389], "It": [0, 3, 5, 12, 13, 14, 25, 27, 29, 32, 36, 37, 42, 44, 45, 47, 52, 53, 54, 55, 59, 60, 64, 65, 66, 67, 76, 81, 82, 83, 86, 88, 89, 94, 96, 98, 99, 103, 105, 107, 119, 120, 123, 124, 126, 133, 136, 144, 150, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 170, 175, 177, 185, 189, 197, 198, 200, 201, 203, 204, 209, 210, 211, 214, 219, 220, 223, 224, 225, 227, 229, 230, 231, 233, 234, 237, 242, 246, 249, 250, 261, 264, 273, 279, 280, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 298, 299, 300, 305, 307, 312, 314, 324, 325, 327, 328, 330, 331, 335, 338, 343, 344, 347, 348, 349, 351, 353, 354, 355, 357, 358, 361, 369, 377, 378, 381, 382, 385, 387, 388], "Its": [13, 46, 50, 66, 114, 126, 154, 166, 210, 231, 255, 283, 296, 335, 355, 366, 377], "NO": [144, 160, 166, 185, 273, 289, 296], "NOT": [28, 92, 119, 120, 127, 153, 155, 159, 160, 161, 164, 168, 174, 177, 182, 201, 220, 237, 282, 284, 288, 289, 290, 294, 300, 304, 307, 312, 328, 344, 361, 387], "Near": [42, 67, 255], "No": [3, 24, 56, 81, 96, 99, 115, 160, 166, 186, 191, 201, 216, 220, 223, 231, 244, 246, 255, 289, 296, 314, 315, 318, 328, 340, 344, 347, 355, 382, 387], "Not": [66, 100, 136, 160, 166, 173, 174, 186, 197, 200, 204, 220, 222, 223, 225, 228, 229, 242, 264, 289, 296, 303, 304, 315, 324, 327, 331, 344, 346, 347, 349, 352, 353], "ON": [0, 7, 14, 24, 48, 54, 66, 67, 80, 96, 101, 102, 111, 241, 242, 246, 247, 249, 255, 340, 385], "ONE": 255, "OR": [28, 81, 220, 344], "Of": [6, 53, 160, 161, 201, 289, 290, 314, 328], "On": [3, 7, 10, 11, 13, 27, 36, 41, 46, 48, 54, 70, 81, 82, 92, 106, 138, 159, 160, 164, 171, 174, 197, 201, 210, 220, 225, 227, 231, 240, 242, 246, 247, 248, 250, 255, 266, 288, 289, 294, 301, 324, 328, 335, 344, 349, 351, 353, 355, 357, 373, 377, 381, 385], "One": [3, 4, 53, 70, 81, 86, 90, 96, 100, 119, 120, 126, 136, 147, 154, 155, 160, 164, 175, 200, 201, 220, 227, 231, 246, 264, 276, 283, 284, 289, 294, 305, 314, 327, 328, 344, 351, 355, 373, 376, 377, 381], "Or": [35, 81, 110, 154, 171, 248, 255, 283, 301, 314], "Such": [29, 40, 81, 154, 165, 166, 201, 220, 253, 283, 284, 295, 296, 328, 331, 334, 344, 377], "THE": [155, 160, 234, 284, 358], "TO": [4, 154, 155, 242, 251, 283, 284, 371, 377, 378], "That": [0, 3, 9, 32, 36, 42, 47, 56, 66, 86, 94, 96, 103, 104, 105, 107, 108, 124, 136, 153, 154, 155, 159, 160, 161, 163, 164, 182, 201, 219, 225, 247, 253, 282, 283, 284, 288, 289, 290, 294, 300, 312, 328, 343, 349, 365, 366, 368, 369, 382, 384, 387, 388], "The": [0, 1, 3, 4, 7, 9, 12, 13, 14, 24, 26, 27, 29, 30, 31, 33, 35, 36, 40, 41, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 60, 63, 64, 66, 67, 68, 70, 71, 73, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 98, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 129, 130, 131, 132, 133, 134, 136, 138, 139, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 182, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 242, 246, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 366, 368, 369, 372, 373, 374, 377, 378, 380, 381, 383, 384, 385, 387, 392, 393], "Their": 126, "Then": [5, 7, 10, 11, 13, 14, 25, 37, 38, 45, 46, 47, 53, 66, 67, 74, 75, 76, 78, 81, 83, 84, 86, 94, 96, 99, 101, 102, 105, 112, 114, 116, 119, 120, 127, 131, 133, 149, 154, 155, 160, 166, 189, 191, 201, 220, 221, 229, 230, 242, 247, 249, 259, 261, 278, 283, 284, 289, 296, 318, 328, 344, 345, 353, 354, 366, 377], "There": [3, 10, 11, 13, 14, 25, 28, 29, 40, 47, 53, 66, 76, 81, 89, 98, 100, 103, 119, 120, 124, 126, 133, 136, 154, 159, 160, 161, 163, 166, 169, 191, 192, 195, 201, 219, 221, 223, 227, 231, 242, 248, 261, 264, 283, 288, 289, 290, 292, 296, 304, 314, 318, 319, 322, 328, 331, 334, 339, 343, 345, 347, 351, 355, 368, 377, 382, 385, 387, 388, 393], "These": [3, 4, 7, 8, 10, 11, 25, 26, 29, 40, 52, 53, 56, 65, 66, 71, 81, 89, 91, 93, 98, 100, 105, 106, 107, 114, 116, 126, 127, 130, 134, 151, 154, 155, 163, 169, 170, 174, 185, 190, 195, 201, 210, 219, 220, 223, 227, 229, 230, 231, 246, 247, 248, 250, 258, 262, 280, 283, 284, 289, 292, 293, 300, 304, 314, 317, 318, 322, 328, 330, 335, 343, 344, 347, 351, 354, 355, 357, 366, 369, 372, 376, 377, 385, 388, 393], "To": [0, 3, 7, 9, 13, 14, 25, 29, 31, 34, 39, 42, 43, 44, 45, 46, 47, 53, 54, 55, 58, 60, 64, 66, 67, 68, 70, 74, 75, 76, 79, 80, 85, 86, 94, 96, 99, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 119, 120, 124, 125, 127, 133, 134, 154, 155, 158, 159, 160, 163, 164, 165, 166, 169, 185, 197, 200, 201, 210, 211, 219, 220, 227, 229, 230, 231, 234, 236, 242, 246, 247, 248, 249, 253, 255, 261, 262, 282, 283, 284, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 300, 314, 315, 324, 327, 328, 335, 343, 344, 351, 353, 354, 355, 358, 359, 360, 363, 366, 369, 370, 372, 373, 377, 382, 383, 385, 387, 388, 392], "WILL": [119, 120, 160, 289], "WITH": [4, 154, 251, 283, 371, 379], "Will": [159, 288, 381], "Wills": 255, "With": [0, 3, 6, 7, 8, 12, 29, 32, 36, 45, 52, 66, 68, 81, 88, 91, 95, 96, 98, 103, 104, 119, 120, 124, 126, 136, 153, 154, 159, 160, 164, 166, 169, 186, 188, 190, 191, 192, 201, 203, 204, 210, 214, 220, 223, 225, 229, 233, 235, 237, 242, 248, 255, 268, 282, 283, 288, 289, 294, 296, 314, 315, 316, 317, 318, 319, 328, 330, 331, 335, 338, 344, 347, 349, 353, 357, 359, 361, 377, 378, 387], "_": [63, 81, 100, 170, 211, 220, 300, 344, 355, 377], "_1": 289, "_2": 289, "__": [76, 153, 282, 382, 388], "___": [76, 153, 282], "____rstim____": [76, 153, 282], "___from": [76, 153, 282], "__abs__": 388, "__add__": [163, 388], "__bool__": 388, "__call__": [326, 388], "__class__": 388, "__contains__": 388, "__delattr__": 388, "__delitem__": 388, "__dict__": 387, "__dir__": 388, "__doc__": 388, "__eq__": 388, "__format__": 388, "__future__": 324, "__ge__": 388, "__get__item": 163, "__getattribute__": 388, "__getitem__": [211, 388], "__getstate__": 388, "__gt__": 388, "__hash__": 388, "__init__": [64, 295, 312, 314, 325, 328, 347, 373, 382, 383, 384, 385, 387, 388], "__init_subclass__": 388, "__iter__": 388, "__le__": 388, "__len__": 388, "__lower_limit": 312, "__lt__": 388, "__main__": [250, 296, 312, 382, 387], "__module__": 388, "__mul__": 388, "__name__": [250, 312], "__ne__": 388, "__neg__": 388, "__new__": 388, "__next__": 388, "__nrnsec_0x563402d00630": 388, "__nrnsec_0x7fa44eb70000": 314, "__pos__": 388, "__radd__": 388, "__reduce__": 388, "__reduce_ex__": 388, "__repr__": [295, 382, 383, 384, 388], "__rmul__": 388, "__rsub__": 388, "__rtruediv__": 388, "__setattr__": 388, "__setitem__": 388, "__setstate__": 388, "__sizeof__": 388, "__str__": [163, 388], "__sub__": 388, "__subclasshook__": 388, "__truediv__": 388, "__upper_limit": 312, "__version__": 388, "__weakref__": 387, "_alloc": 60, "_api": 248, "_bounds_check": 312, "_build": 0, "_cell": 384, "_cntml_pad": 4, "_connect_cel": [384, 385], "_create_cel": [250, 384, 385], "_cur": 60, "_for": 344, "_gener": 0, "_gid": [382, 383, 384, 385], "_hoc_typ": 331, "_id": 295, "_iml": 4, "_in": 330, "_ion_cai": [4, 154, 283], "_jacob": 60, "_milliseconds_": [201, 328], "_n": 385, "_name": [155, 284], "_nc": [384, 385], "_netstim": [384, 385], "_newer_": [201, 328], "_nrnthread": 1, "_nt": 4, "_p": [4, 53], "_p_my_data": [4, 250], "_ppvar": [4, 53], "_pysec": 388, "_ref_": [314, 328, 388], "_ref_a_disc": 250, "_ref_ach_releas": [283, 284], "_ref_ainf_t": 250, "_ref_amp": [64, 282, 327, 328], "_ref_amp1": 282, "_ref_base10expon": 324, "_ref_bufi": 372, "_ref_ca": 250, "_ref_cai": [353, 372], "_ref_concentr": [163, 292, 366, 370], "_ref_dbl": 353, "_ref_g": 330, "_ref_gnabar": 289, "_ref_hocvar": [284, 314], "_ref_i": [64, 282, 296, 314, 328, 353, 383], "_ref_i_pa": 314, "_ref_ina": [328, 371], "_ref_ip3flux": 292, "_ref_ip3i": [375, 376], "_ref_maxacor": 344, "_ref_molecul": 292, "_ref_nai": 371, "_ref_nrecv": 289, "_ref_nrecv_us": 289, "_ref_nsend": 289, "_ref_px": 328, "_ref_rangevar": [229, 344], "_ref_somepoint": 283, "_ref_str": 316, "_ref_t": [151, 164, 250, 253, 280, 284, 294, 314, 328, 333, 338, 342, 365, 370, 371, 372, 373, 375, 376, 382, 383, 384, 385, 388], "_ref_target_vari": 289, "_ref_tau1_rec": 250, "_ref_tau2_rec": 250, "_ref_triggerthresh": 294, "_ref_triggervar": 294, "_ref_trp": 283, "_ref_ui": 365, "_ref_v": [164, 250, 253, 282, 283, 284, 288, 289, 294, 314, 328, 342, 371, 382, 383, 384, 388], "_ref_valu": [292, 373], "_ref_var": [327, 334], "_ref_vari": 353, "_ref_varnam": [283, 359], "_ref_vpr": 283, "_ref_x": [151, 208, 266, 280, 289, 296, 314, 316, 328, 333, 334, 353, 359], "_ref_z": 296, "_reg_": 60, "_rotate_z": [383, 384], "_second_": [201, 328], "_set_posit": [383, 384], "_setup_biophys": [382, 383, 384], "_setup_morphologi": [382, 383, 384], "_spike_detector": [384, 385], "_state": 344, "_suffix": [160, 289], "_syn_delai": [384, 385], "_syn_w": [384, 385], "_thread": 4, "_threadargsproto_": [4, 250], "_v": 4, "_v_node": 53, "_val": 312, "_version": 377, "a0": [53, 250], "a0_disc": 250, "a1": [53, 119, 120, 255], "a11": 255, "a197": 255, "a1b": 255, "a1g": 255, "a2": [119, 120], "a202": 255, "a215": 248, "a5c36e9": 363, "a8": 255, "a914": 248, "a_1": 360, "a_valu": 53, "aa": [28, 366], "aa1fb98d": 248, "aa5238": 255, "aa52d1": 255, "aa6a5f": 255, "aa7805": 255, "aa7960": 255, "aa8b7c": 255, "aa9db5": 255, "aa9e96": 255, "aaa0dd": 255, "aaa14b": 255, "aaa87a": 255, "aabb7d": 255, "aac315": 255, "aacbaa": 255, "aacbff": 255, "aacdb8": 255, "aad8": 247, "aad978": 255, "aadbb1": 255, "aae12f": 255, "aae590": 255, "aaeaad": 255, "aaeb0c": 255, "aaefab": 255, "aaefcf": 255, "aaf308": 255, "aafdd9": 255, "aaj1497": 255, "aan3846": 255, "aaq1438": 255, "aarch64": [1, 248], "aards": 255, "aaron": [220, 344], "aax6239": 255, "aay4313": 255, "ab": [1, 81, 91, 150, 152, 195, 197, 201, 202, 255, 279, 281, 322, 324, 328, 329, 344, 388], "ab03a1": 255, "ab131b": 255, "ab1685": 255, "ab3c95": 255, "ab3d94": 255, "ab8344": 255, "ab85b1": 255, "ab8fc4": 255, "ab970d": 255, "ab_stor": 53, "ab_store_manu": 53, "abacd8": 255, "abadb5": 255, "abandon": [96, 220, 344], "abashin": 255, "abbasi": 255, "abbott": [35, 255], "abbrevi": 328, "abc": 387, "abd1c1": 255, "abdela": 255, "abdellah": 255, "abducen": 255, "abe0abaac": 242, "abeb": 255, "aberr": 255, "aberra": 255, "abf892": 255, "abg4693": 255, "abg9890": 255, "abh0024": 255, "abil": [80, 126, 150, 163, 173, 255, 279, 292, 303, 387], "abl": [0, 3, 4, 7, 36, 38, 45, 53, 76, 86, 89, 94, 96, 98, 161, 166, 210, 219, 226, 246, 247, 249, 290, 292, 335, 343, 350, 359, 370, 371, 377, 378, 383, 388], "abnorm": 255, "abolish": 255, "abort": [160, 171, 210, 289, 301, 335], "abosch": 255, "about": [3, 4, 7, 10, 11, 13, 25, 36, 40, 41, 43, 46, 47, 49, 52, 53, 54, 56, 63, 64, 66, 67, 70, 76, 77, 79, 81, 82, 86, 89, 94, 97, 98, 100, 104, 105, 115, 119, 120, 126, 127, 133, 136, 138, 142, 144, 153, 154, 155, 160, 161, 162, 165, 168, 170, 173, 201, 210, 211, 220, 223, 225, 227, 229, 233, 234, 237, 239, 241, 242, 249, 250, 255, 261, 264, 266, 271, 273, 282, 283, 284, 289, 290, 291, 292, 295, 296, 300, 303, 328, 335, 344, 347, 349, 351, 353, 357, 358, 361, 366, 377, 382, 383, 384, 387, 388, 392, 393], "about_m": 387, "abov": [3, 4, 5, 7, 8, 25, 29, 32, 35, 36, 37, 42, 43, 50, 52, 53, 54, 64, 66, 68, 70, 80, 81, 89, 98, 99, 100, 104, 110, 119, 120, 125, 126, 136, 147, 149, 153, 154, 159, 160, 163, 166, 177, 182, 189, 220, 227, 229, 242, 246, 247, 248, 250, 264, 276, 278, 282, 283, 285, 288, 289, 292, 296, 307, 312, 314, 328, 344, 351, 353, 359, 365, 367, 368, 369, 370, 371, 373, 376, 377, 382, 383, 384, 385, 387, 388], "abraham": 255, "abrahamsson": 255, "abramson": 255, "abrupt": [9, 40, 126, 166, 296], "abruptli": [9, 153, 282], "abscissa": [25, 131, 229, 233, 259, 353, 357], "absenc": [80, 119, 120, 160, 229, 255, 289, 353], "absent": [94, 155, 220, 284, 344], "absolut": [1, 3, 51, 64, 67, 82, 83, 90, 91, 94, 95, 96, 126, 136, 153, 161, 166, 177, 195, 201, 216, 220, 225, 227, 233, 239, 264, 282, 290, 292, 293, 296, 307, 322, 328, 340, 344, 349, 351, 357, 366, 370, 371, 377, 380, 382], "absorpt": 255, "abspath": 55, "abstract": [46, 53, 81, 108, 166, 255, 296], "abz45": [165, 295], "ac": [66, 76, 125, 255, 370], "ac2a54": 255, "ac36e2": 255, "ac3dd8": 255, "ac41db": 255, "ac463b": 255, "ac4baf": 255, "academ": [254, 255], "academi": 255, "acceler": [126, 255], "accept": [3, 7, 31, 56, 66, 80, 83, 94, 96, 99, 103, 107, 108, 123, 124, 129, 134, 160, 172, 173, 174, 178, 179, 188, 191, 201, 210, 220, 231, 246, 247, 257, 262, 289, 292, 302, 303, 308, 309, 316, 318, 328, 335, 344, 355, 368, 377, 381], "accept_act": [174, 178, 183, 304, 308, 313], "access": [4, 8, 15, 21, 22, 25, 28, 29, 56, 57, 60, 64, 69, 77, 79, 81, 88, 89, 98, 100, 126, 130, 136, 137, 140, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 178, 179, 184, 187, 197, 200, 201, 203, 204, 205, 206, 210, 220, 223, 227, 229, 231, 235, 236, 237, 246, 248, 255, 258, 264, 269, 277, 282, 283, 284, 285, 287, 288, 289, 295, 296, 298, 299, 303, 309, 312, 327, 328, 330, 331, 332, 335, 340, 344, 351, 353, 355, 361, 366, 369, 373, 387, 390, 392, 393], "accessor": [53, 160, 289], "accessori": 255, "acciarito": 255, "accident": [3, 53, 110, 144, 273], "accommod": 255, "accomod": 59, "accompani": [41, 76, 255, 377, 378, 382], "accomplish": [29, 46, 93, 160, 204, 223, 239, 289, 314, 347], "accord": [3, 10, 11, 12, 14, 16, 25, 32, 41, 66, 68, 70, 110, 126, 129, 149, 153, 156, 160, 164, 173, 177, 201, 220, 229, 235, 237, 244, 257, 278, 282, 285, 289, 294, 303, 307, 328, 334, 344, 353, 359, 361, 377, 378, 381], "accordingli": [4, 52, 66, 201, 246, 328, 377, 378], "account": [3, 4, 29, 52, 54, 80, 127, 136, 153, 154, 160, 166, 220, 255, 264, 282, 283, 289, 296, 344, 369], "accumben": 255, "accumul": [82, 83, 154, 160, 163, 220, 241, 250, 255, 283, 289, 292, 344, 382], "accur": [25, 40, 134, 153, 154, 159, 160, 165, 166, 189, 196, 201, 220, 227, 255, 262, 282, 283, 288, 293, 295, 296, 323, 328, 344, 351, 387], "accuraci": [4, 66, 96, 126, 136, 154, 160, 161, 213, 220, 255, 264, 283, 289, 290, 337, 344, 391], "accus": 76, "acell_hom": [79, 80], "acell_home_": [9, 21, 22, 32, 37, 80], "acetazolamid": 255, "acetylcholin": 255, "acg": [200, 327], "ach_releas": [154, 155], "acharya": 255, "achiev": [0, 5, 7, 67, 68, 78, 105, 126, 154, 283, 373], "acid": 255, "acidif": 255, "acker": 255, "ackermann": 255, "acknowledg": [201, 328], "acm": 255, "acn3": 255, "aco": [91, 163, 292, 293], "acor": [220, 344], "acosh": [163, 292, 293], "acquaint": 383, "acquir": [40, 248, 255], "acquire_owning_identifi": 60, "acquisit": [40, 255], "acronym": 52, "across": [4, 7, 14, 41, 66, 98, 126, 127, 153, 154, 161, 163, 166, 169, 255, 282, 283, 290, 292, 296, 299, 345, 359, 366, 369, 385, 388], "act": [4, 9, 27, 163, 174, 178, 197, 227, 255, 292, 314, 351, 366], "acta": 255, "action": [1, 14, 25, 30, 32, 38, 41, 44, 46, 48, 52, 60, 73, 79, 80, 126, 127, 133, 146, 153, 156, 163, 166, 173, 174, 182, 203, 210, 220, 221, 222, 223, 227, 229, 231, 234, 237, 242, 246, 247, 253, 255, 261, 275, 282, 285, 292, 296, 303, 304, 312, 320, 330, 335, 342, 344, 345, 346, 347, 351, 353, 355, 358, 361, 366, 369, 370, 371, 377, 382, 383], "action_fn": 312, "activ": [0, 12, 14, 24, 25, 29, 43, 46, 51, 52, 53, 57, 66, 70, 76, 80, 87, 89, 95, 96, 109, 126, 133, 153, 154, 157, 159, 160, 164, 195, 220, 224, 227, 231, 247, 255, 261, 282, 283, 286, 288, 289, 292, 294, 299, 322, 344, 348, 351, 355, 366, 369, 370, 371, 372, 377, 378, 385, 388], "active_region_valu": 367, "actor": 366, "actual": [3, 14, 16, 25, 31, 32, 41, 42, 45, 46, 52, 53, 56, 66, 70, 76, 80, 81, 82, 83, 94, 96, 100, 101, 103, 105, 108, 113, 123, 124, 126, 134, 136, 151, 153, 154, 155, 159, 160, 161, 164, 166, 173, 197, 201, 203, 205, 210, 213, 220, 229, 230, 231, 234, 242, 248, 255, 262, 264, 280, 282, 283, 284, 289, 290, 294, 296, 303, 314, 324, 328, 330, 331, 335, 337, 344, 353, 354, 355, 358, 369, 370, 377, 382, 384, 388], "actuat": 255, "acuiti": 255, "acut": 255, "ad": [1, 12, 32, 39, 53, 55, 64, 70, 76, 81, 103, 124, 126, 129, 133, 149, 151, 154, 155, 160, 161, 163, 174, 177, 182, 197, 200, 201, 204, 210, 214, 220, 229, 231, 233, 242, 247, 248, 257, 261, 278, 280, 283, 284, 285, 289, 290, 292, 296, 304, 307, 308, 312, 314, 324, 327, 328, 330, 335, 338, 344, 353, 355, 357, 359, 365, 368, 377, 378, 382, 387, 388, 391], "adachi": 255, "adair": 255, "adam": [220, 255, 344, 389], "adapt": [1, 3, 4, 8, 26, 53, 63, 82, 87, 96, 126, 201, 233, 249, 255, 292, 328, 357, 377, 378, 382, 391], "adaptor": [233, 357], "adaszewski": 255, "add": [0, 1, 3, 7, 24, 28, 36, 38, 39, 41, 53, 54, 70, 76, 81, 87, 94, 95, 96, 98, 100, 103, 124, 133, 139, 144, 151, 153, 154, 155, 164, 166, 174, 182, 197, 201, 202, 204, 210, 218, 220, 229, 231, 233, 234, 241, 242, 247, 248, 249, 250, 253, 261, 267, 273, 280, 282, 283, 284, 292, 294, 296, 304, 312, 314, 324, 328, 329, 335, 342, 344, 353, 355, 357, 358, 366, 377, 378, 383, 384, 387, 388, 391], "add_hhstat": [150, 152, 279, 281], "add_ksstat": [150, 152, 279, 281], "add_mechan": 60, "add_recurs": 268, "add_sect": 60, "add_subplot": 383, "add_trac": [367, 371], "add_transit": [150, 152, 279, 281], "addexpr": [18, 72, 99, 159, 173, 229, 231, 288, 353, 355], "addict": 255, "addio": 255, "addit": [0, 4, 7, 8, 10, 11, 41, 52, 53, 60, 64, 70, 76, 81, 89, 119, 120, 126, 150, 155, 159, 160, 161, 164, 166, 185, 200, 201, 203, 210, 220, 223, 241, 242, 248, 255, 279, 284, 288, 289, 290, 292, 294, 296, 327, 328, 330, 335, 344, 347, 353, 360, 366, 370, 371, 373, 377, 381, 382, 383, 388], "addition": [4, 7, 29, 163, 242, 246, 248, 253, 292, 359, 377, 378, 381], "addobject": [229, 236, 353, 360], "addrand": [201, 202, 328, 329], "address": [3, 4, 76, 126, 155, 160, 175, 182, 185, 186, 188, 197, 201, 204, 220, 229, 242, 255, 284, 289, 314, 316, 344, 353, 366, 377, 378, 388], "addresssanit": [3, 242], "addvar": [72, 99, 163, 229, 231, 328, 353, 355, 366], "adequ": [155, 160, 284, 289], "adesnik": 255, "adher": [255, 377, 378], "adjac": [25, 94, 96, 154, 166, 201, 220, 231, 283, 289, 296, 328, 344, 355, 366, 388], "adjust": [1, 7, 14, 30, 46, 66, 93, 126, 129, 134, 166, 173, 183, 201, 223, 231, 255, 257, 262, 292, 296, 303, 313, 328, 347, 355, 361, 377, 378, 386, 388], "adjustweightregion": [129, 134, 257, 262], "administr": [10, 11, 77, 150, 160, 223, 227, 249, 279, 289, 347, 351], "admitt": 255, "admittedli": [163, 164, 220, 294], "admt": 255, "adolesc": 255, "adonia": 255, "adopt": [53, 89, 126, 289, 377], "adren": 255, "adrenerg": 255, "adrenoreceptor": 255, "adriani": 255, "adult": 255, "advanc": [2, 4, 25, 51, 57, 88, 93, 126, 151, 204, 220, 224, 225, 227, 230, 248, 254, 255, 280, 315, 344, 348, 349, 351, 354, 367, 377, 386, 388], "advance_a_bit": 366, "advance_count": 367, "advantag": [10, 11, 29, 46, 53, 87, 94, 96, 98, 100, 125, 198, 201, 220, 229, 242, 246, 255, 314, 325, 328, 365, 366, 377, 384], "advantang": 76, "advent": [154, 283], "advers": [40, 255], "advertis": [377, 380], "advis": [53, 246], "advoc": [377, 378], "ae": 388, "aerd": 255, "afer": 284, "affc": 255, "affect": [25, 31, 36, 39, 40, 41, 45, 46, 64, 70, 76, 81, 88, 96, 100, 154, 160, 163, 166, 197, 198, 201, 204, 229, 235, 248, 253, 255, 283, 289, 292, 296, 323, 324, 325, 328, 353, 359, 365, 369, 377, 378, 380], "affer": [75, 100, 117, 255], "affin": [255, 372], "affinnih": 255, "afflict": 47, "aforement": [0, 1, 377, 378], "afraid": 76, "after": [0, 1, 3, 8, 10, 11, 13, 24, 29, 31, 32, 37, 38, 40, 42, 45, 47, 51, 52, 53, 60, 66, 69, 70, 76, 77, 80, 81, 86, 89, 93, 96, 101, 103, 105, 107, 114, 119, 120, 124, 125, 126, 130, 133, 134, 136, 138, 144, 148, 150, 151, 152, 153, 154, 158, 159, 160, 161, 166, 169, 178, 185, 188, 189, 190, 191, 200, 201, 204, 210, 219, 220, 223, 225, 227, 229, 230, 231, 233, 237, 242, 246, 247, 248, 251, 255, 258, 261, 262, 264, 266, 273, 277, 279, 280, 281, 282, 283, 287, 288, 289, 290, 293, 296, 299, 308, 316, 317, 318, 327, 328, 335, 343, 344, 347, 348, 349, 351, 353, 354, 355, 357, 359, 361, 369, 377, 378, 381, 382, 383, 384, 385, 387], "after_cvod": [148, 277], "after_step": [148, 277], "afterdepolar": 255, "afterdischarg": 255, "afterhyperpolar": 255, "afterpotenti": 255, "afterward": [29, 96], "ag": [81, 255, 387], "again": [3, 14, 29, 31, 36, 42, 44, 45, 46, 47, 53, 66, 76, 78, 80, 81, 86, 94, 98, 103, 107, 114, 124, 133, 159, 160, 161, 170, 179, 189, 191, 200, 210, 220, 223, 231, 247, 261, 288, 289, 290, 300, 303, 309, 318, 327, 335, 344, 347, 355, 367, 377, 382, 383, 385, 387, 388], "against": [3, 10, 11, 25, 28, 94, 229, 242, 247, 255, 315, 353, 367, 377, 378], "agarw": 255, "agent": 255, "aggleton": 255, "aggrav": 255, "aghvami": 255, "aglycemia": 255, "ago": 76, "agonist": [95, 255], "agre": [46, 160, 289, 377, 378], "agudelo": 255, "aguiar": 255, "aguirr": 255, "ah": 94, "ahad": 255, "aharoni": 255, "ahead": [67, 94, 96, 115, 255, 382, 383, 384], "ahlfor": 255, "ahm": 255, "ahmad": 255, "ahmadi": 255, "aid": [36, 89, 155, 160, 255, 284, 289, 363], "aihara": 255, "aii": 255, "ailamaki": 255, "aim": [13, 24, 53, 54, 66, 96, 98, 127, 363, 377, 381], "ainf": 250, "ainsworth": 255, "airault": 255, "airlin": 66, "ait": 255, "aitchison": 255, "ajpgi": 255, "ak": 373, "aka": 53, "akbari": 255, "akemann": 255, "akerman": 255, "akin": 255, "akiyama": 255, "akrouh": 255, "al": [5, 25, 35, 36, 41, 49, 88, 92, 126, 242, 250, 255, 338, 366, 369, 370, 372], "alaimo": 255, "alam": 255, "alan": [220, 344], "alarm": 393, "albada": 255, "albeit": [150, 279, 337], "alcohol": 255, "alda": 255, "alder": 255, "aldworth": 255, "alert": 377, "alessandro": 255, "alessi": 255, "alessio": 255, "alevi": 255, "alexand": 255, "alexandrova": 255, "alfonsa": 255, "algebra": [39, 126, 127, 151, 154, 220, 280, 283, 344], "algorithm": [1, 14, 29, 39, 76, 78, 81, 90, 93, 126, 133, 166, 200, 201, 231, 239, 255, 261, 284, 296, 327, 328, 355, 369, 377], "ali": 255, "alia": [52, 214, 215, 255, 292, 338, 339], "alias": [53, 123, 201, 246, 328], "alias_list": [214, 215, 338, 339], "alicea": 255, "align": [1, 52, 70, 73, 127, 229, 255, 353, 387], "aliv": [1, 380], "all": [0, 1, 3, 4, 8, 9, 10, 11, 12, 14, 16, 22, 24, 27, 28, 29, 32, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 51, 52, 53, 55, 56, 58, 59, 60, 64, 65, 66, 67, 68, 70, 73, 76, 77, 78, 80, 81, 86, 87, 89, 91, 93, 94, 95, 96, 99, 100, 104, 106, 108, 110, 114, 116, 119, 120, 123, 125, 126, 127, 129, 133, 134, 136, 139, 144, 145, 148, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 182, 186, 189, 197, 199, 200, 201, 203, 204, 205, 207, 208, 210, 214, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 246, 247, 248, 249, 250, 255, 257, 261, 262, 264, 267, 268, 273, 274, 277, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 303, 304, 305, 306, 307, 308, 309, 314, 315, 324, 326, 327, 328, 330, 331, 334, 335, 338, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 372, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389], "all_data": 385, "all_iclamp": 304, "all_random_stream": 100, "allain": 255, "allam": 255, "allen": 255, "allerton": 255, "allevi": [77, 223, 347], "allgath": [157, 160, 286, 289], "allken": 255, "allobject": [186, 315, 388], "allobjectvar": [81, 186, 315, 388], "allobjext": 81, "alloc": [4, 52, 53, 54, 136, 154, 165, 166, 197, 201, 208, 220, 242, 250, 255, 264, 283, 295, 296, 324, 328, 334, 344], "allocat": 385, "allodynia": 255, "allometr": 255, "alloster": 255, "allow": [1, 3, 7, 12, 13, 16, 17, 18, 24, 25, 27, 33, 38, 39, 42, 45, 47, 52, 53, 55, 56, 58, 64, 67, 70, 76, 77, 80, 81, 86, 94, 95, 96, 99, 103, 114, 116, 119, 120, 124, 126, 130, 133, 134, 136, 138, 145, 147, 150, 151, 154, 155, 156, 159, 160, 161, 163, 164, 166, 168, 169, 170, 173, 174, 177, 179, 180, 185, 188, 190, 197, 199, 200, 201, 204, 205, 211, 214, 216, 219, 220, 223, 227, 229, 230, 231, 233, 242, 246, 247, 249, 255, 258, 261, 262, 264, 266, 268, 274, 276, 279, 280, 283, 284, 285, 288, 289, 290, 292, 294, 296, 297, 299, 300, 303, 304, 307, 309, 310, 312, 314, 315, 316, 317, 324, 326, 327, 328, 338, 340, 343, 344, 347, 351, 353, 354, 355, 357, 359, 365, 366, 369, 370, 371, 377, 378, 382, 383, 384, 385, 387, 388], "allprint": [69, 77, 223, 347], "allreduc": [157, 160, 286, 289], "allroot": [165, 167, 295, 297], "allsec": [46, 47, 63, 64, 66, 163, 289, 292, 295, 296, 314, 317, 330, 344, 347, 349, 359, 360, 361, 366, 368, 369, 375, 382, 388], "allseg": [296, 314, 344, 360, 388], "alltoal": [157, 160, 286, 289], "almog": 255, "almost": [7, 45, 66, 81, 94, 96, 114, 116, 126, 153, 160, 164, 169, 173, 201, 211, 227, 282, 289, 294, 303, 328, 351, 377], "aln": 255, "alon": [66, 94, 134, 233, 255, 262, 357, 366, 369], "along": [3, 25, 31, 32, 33, 41, 48, 53, 59, 60, 66, 68, 70, 77, 81, 89, 94, 96, 105, 109, 110, 112, 126, 130, 131, 134, 139, 153, 154, 155, 159, 160, 166, 169, 171, 176, 182, 186, 210, 213, 220, 223, 227, 229, 231, 233, 236, 238, 255, 258, 259, 262, 267, 282, 283, 284, 288, 289, 296, 299, 301, 306, 312, 315, 335, 337, 344, 347, 351, 353, 355, 357, 360, 362, 368, 369, 383, 388, 389], "alonso": 255, "alp": 95, "alpdogan": 255, "alph": 255, "alpha": [9, 11, 41, 81, 126, 153, 198, 200, 246, 255, 282, 292, 325, 327, 365, 366, 368, 371, 379], "alphabet": [79, 94, 387], "alphanumer": 81, "alphasynaps": [81, 152, 153, 156, 203, 281, 282, 285, 330, 388], "alp\u00e1r": 255, "alreadi": [1, 3, 7, 11, 14, 35, 37, 46, 47, 51, 52, 53, 56, 66, 67, 81, 82, 83, 89, 90, 94, 96, 98, 113, 115, 133, 149, 159, 160, 161, 166, 170, 175, 186, 192, 201, 227, 229, 236, 240, 242, 247, 249, 261, 278, 288, 289, 290, 296, 300, 305, 319, 328, 351, 353, 360, 377, 385, 388], "alredi": 47, "also": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 25, 27, 28, 29, 33, 35, 36, 37, 40, 45, 46, 47, 49, 50, 52, 53, 54, 56, 58, 59, 60, 64, 66, 67, 68, 70, 76, 80, 82, 83, 86, 89, 93, 94, 96, 98, 99, 100, 104, 105, 107, 108, 110, 119, 120, 123, 126, 127, 129, 130, 131, 133, 134, 136, 138, 144, 147, 151, 153, 154, 155, 159, 160, 161, 163, 164, 166, 168, 170, 173, 175, 182, 185, 186, 188, 197, 198, 200, 201, 204, 207, 213, 214, 220, 223, 225, 227, 229, 231, 232, 233, 234, 239, 240, 242, 246, 247, 248, 249, 255, 257, 258, 259, 261, 262, 264, 266, 268, 269, 273, 276, 280, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 300, 303, 305, 312, 314, 315, 316, 324, 325, 327, 328, 330, 331, 337, 338, 344, 345, 347, 349, 351, 353, 355, 356, 357, 358, 359, 360, 363, 366, 368, 370, 371, 372, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388, 390, 392, 393], "alter": [64, 70, 255, 359, 361, 369], "altern": [3, 7, 8, 13, 29, 30, 31, 46, 47, 53, 66, 76, 80, 81, 86, 89, 105, 114, 126, 155, 160, 161, 163, 165, 173, 198, 201, 220, 231, 240, 246, 255, 284, 289, 290, 292, 295, 303, 314, 325, 328, 334, 340, 344, 355, 360, 365, 366, 371, 373, 379, 383, 385], "alternativli": [134, 262], "althof": 255, "although": [28, 29, 39, 53, 71, 81, 94, 96, 119, 120, 126, 127, 144, 151, 155, 156, 159, 166, 175, 201, 210, 220, 246, 273, 280, 284, 285, 296, 305, 328, 335, 344, 366, 377, 382], "altin": 255, "altool": 247, "alturki": 255, "alvarez": 255, "alwai": [1, 3, 25, 37, 47, 51, 53, 56, 65, 70, 76, 81, 86, 94, 96, 133, 150, 153, 154, 156, 159, 160, 161, 163, 165, 166, 169, 171, 173, 185, 188, 200, 201, 204, 210, 213, 214, 225, 227, 229, 231, 253, 261, 279, 282, 283, 285, 288, 289, 290, 292, 295, 296, 299, 301, 303, 316, 320, 327, 328, 334, 335, 337, 338, 349, 351, 353, 355, 366, 367, 370, 371, 381, 382, 388], "alzheim": 255, "alzrt153": 255, "am": [23, 35, 158, 161, 205, 220, 246, 287, 289, 290, 312, 344, 385, 387], "amacrin": 255, "amalr": 255, "amalyan": 255, "aman": 255, "amarillo": 255, "amaro": 255, "amassian": 255, "amatrudo": 255, "amaz": [127, 387], "ambert": 255, "ambigu": [81, 160, 225, 289, 349], "ambro": 255, "ambrosino": 255, "amd": 246, "amelio": 255, "amend": 377, "amendola": 255, "america": 255, "american": 255, "amichai": 255, "amico": 255, "amid": 255, "amiel": 255, "amilhon": 255, "amin": 255, "aminobutyr": 255, "aminopyridin": 255, "amir": 255, "amitai": 255, "amo": 255, "among": [154, 160, 255, 283, 289, 377, 378], "amorim": 255, "amort": [160, 289], "amount": [9, 28, 29, 41, 53, 70, 95, 109, 153, 154, 155, 160, 161, 166, 201, 224, 237, 250, 255, 282, 283, 284, 289, 290, 292, 296, 328, 348, 361, 377, 378, 384, 387], "amp": [13, 16, 17, 18, 28, 31, 33, 60, 63, 64, 72, 76, 96, 136, 146, 147, 148, 153, 155, 159, 160, 175, 200, 250, 253, 255, 264, 275, 276, 277, 282, 284, 288, 289, 305, 328, 342, 359, 360, 361, 382, 388], "amp0": [13, 16, 17, 146, 147, 275, 276], "amp1": [76, 147, 153, 276, 282], "amp2": [147, 153, 276, 282], "amp3": [153, 282], "ampa": [109, 255, 383], "ampakin": 94, "ampar": 255, "amper": 7, "amphibian": 255, "amplfier": [153, 282], "amplif": 255, "amplifi": [29, 33, 96, 153, 255, 282], "amplitud": [10, 11, 13, 16, 17, 18, 25, 31, 38, 46, 64, 71, 80, 136, 147, 201, 230, 255, 264, 276, 328, 354, 388], "amsalem": 255, "amsterdam": 255, "amygdala": 255, "amygdalar": 255, "amyloid": 255, "amyotroph": 255, "an": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 27, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 58, 60, 64, 66, 67, 69, 70, 71, 73, 75, 77, 80, 81, 82, 83, 87, 89, 93, 98, 100, 103, 105, 107, 108, 110, 114, 115, 117, 119, 120, 123, 124, 125, 126, 127, 129, 133, 134, 136, 138, 144, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 185, 186, 188, 189, 191, 192, 194, 195, 197, 198, 200, 201, 203, 204, 205, 207, 208, 210, 211, 214, 216, 218, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 240, 242, 246, 247, 248, 249, 250, 251, 253, 255, 257, 261, 262, 264, 265, 266, 268, 273, 277, 278, 279, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 314, 315, 316, 317, 319, 321, 322, 324, 325, 327, 328, 330, 331, 333, 334, 335, 338, 340, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393], "ana": 255, "anaconda": [82, 246], "anaconda3": 246, "analgesia": 255, "analog": [14, 66, 81, 96, 100, 107, 126, 148, 159, 160, 201, 220, 229, 255, 277, 284, 288, 289, 328, 334, 344, 353, 368], "analogi": [37, 154, 197, 283, 324, 363], "analogu": 255, "analys": [25, 126, 255], "analysi": [13, 16, 17, 18, 26, 86, 87, 89, 100, 126, 154, 202, 242, 254, 255, 283, 329, 388, 391], "analyt": [39, 88, 153, 154, 220, 255, 282, 283, 344, 366], "analyz": [13, 16, 17, 18, 49, 86, 89, 100, 242, 255], "anandamid": 255, "anastassi": 255, "anatom": [14, 25, 34, 40, 43, 47, 66, 67, 74, 76, 86, 96, 100, 110, 117, 126, 255], "anatomi": [24, 25, 45, 46, 65, 76, 87, 89, 126, 255], "anatomist": [40, 47, 108], "anaya": 255, "ancestor": 377, "andersen": 255, "anderson": 255, "andrad": 255, "andre": 255, "andreassen": 255, "andreozzi": 255, "andreu": 255, "andrew": [81, 255], "androuin": 255, "andr\u00e1si": 255, "anesthesia": 255, "anesthesiologi": 255, "anesthet": 255, "ang": 255, "angelo": 255, "angibaud": 255, "angiotensin": 255, "angl": [70, 91, 195, 228, 229, 322, 352, 353], "angular": 255, "angulo": 255, "ani": [1, 3, 4, 8, 12, 13, 14, 25, 28, 29, 32, 34, 36, 40, 43, 45, 46, 47, 53, 54, 56, 58, 60, 66, 67, 68, 69, 70, 71, 77, 78, 81, 82, 83, 86, 87, 93, 94, 96, 98, 100, 103, 104, 107, 108, 109, 114, 119, 120, 123, 124, 126, 127, 129, 133, 134, 136, 144, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 169, 175, 177, 182, 185, 186, 188, 195, 197, 198, 200, 201, 203, 204, 205, 209, 210, 211, 218, 219, 220, 223, 225, 227, 229, 230, 231, 232, 233, 234, 238, 241, 246, 248, 253, 257, 261, 262, 264, 268, 273, 276, 277, 278, 279, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 305, 307, 312, 314, 315, 316, 322, 324, 325, 327, 328, 330, 331, 335, 342, 343, 344, 347, 349, 351, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 369, 370, 371, 372, 377, 380, 382, 383, 385, 387, 388], "anido": 255, "anim": [201, 255, 328, 334, 373], "animplot": 29, "anion": 255, "anirudhan": 255, "anisotrop": 255, "ankl": 255, "ankri": 255, "anl": [158, 160, 287, 289], "annal": 255, "annesi": 255, "anniversari": 31, "annoi": [119, 120], "annot": [127, 155, 242, 284, 292, 377, 378], "announc": [126, 377, 378], "annual": [89, 126, 255], "annulu": 250, "annunziato": 255, "anod": 255, "anonym": [147, 276, 314], "anoth": [4, 5, 10, 11, 13, 24, 28, 32, 36, 37, 38, 42, 47, 49, 51, 52, 53, 59, 70, 76, 80, 81, 86, 90, 92, 94, 96, 98, 99, 100, 101, 103, 106, 110, 119, 120, 124, 126, 127, 136, 144, 149, 154, 155, 156, 159, 160, 161, 163, 164, 166, 173, 174, 176, 182, 185, 188, 189, 191, 197, 201, 203, 204, 209, 220, 223, 229, 231, 233, 234, 242, 246, 250, 264, 273, 278, 282, 283, 284, 285, 288, 289, 290, 292, 294, 296, 303, 304, 306, 312, 314, 316, 318, 328, 330, 338, 344, 347, 353, 355, 357, 358, 360, 377, 378, 383, 385, 387], "anothervariabletofit": [128, 256], "ansari": 255, "ansi": 76, "anstei": 255, "answer": [41, 46, 51, 66, 82, 86, 89, 94, 100, 102, 161, 163, 197, 210, 290, 292, 318, 324, 335, 366], "antagonist": 255, "antal": 255, "antenn": 255, "anterior": 255, "anterolater": 255, "anti": [53, 255], "antic": 255, "anticanc": 255, "anticip": [255, 314], "anticonvuls": 255, "antidepress": 255, "antidrom": 255, "antiepilept": 255, "antil": 255, "antinocicept": 255, "antioquia": 255, "antonel": 255, "antonietti": 255, "antonioni": 255, "antun": 255, "anwar": 255, "anyclass": 314, "anymor": [53, 81, 98, 161, 220, 290, 344, 371], "anyon": [160, 289, 377], "anysourc": 3, "anystr": [94, 227, 351], "anyth": [3, 4, 7, 10, 11, 34, 43, 46, 66, 81, 87, 92, 96, 160, 169, 173, 198, 201, 229, 231, 239, 282, 289, 303, 314, 325, 328, 353, 355, 360, 382, 388], "anywai": [210, 335, 377], "anywher": [47, 70, 86, 98, 119, 120, 153, 155, 185, 197, 214, 244, 250, 282, 284, 324, 338], "ao": 53, "aonishi": 255, "aopen": [28, 187, 188, 316], "ap": [28, 43, 63, 66, 68, 89, 153, 255, 282], "aparicio": 255, "apart": [25, 29, 60, 81, 104, 126, 127, 136, 182, 191, 264, 312, 318, 371, 382], "apc": [153, 282], "apcial": 67, "apcount": [81, 152, 153, 281, 282, 388], "apgar": 255, "api": [0, 1, 4, 5, 8, 54, 56, 58, 60, 87, 154, 219, 242, 248, 253, 283, 343, 363, 377], "apic": [14, 25, 27, 41, 43, 64, 66, 67, 68, 104, 105, 106, 255, 292, 299, 359, 387], "apical1": 366, "apical2": 366, "apical_dendrit": 359, "apicals_x": [104, 105, 106], "aplin": 255, "aplysia": 255, "apnd": 314, "apollo": 255, "apolog": 369, "apostolid": 255, "app": [55, 246, 247, 255, 340], "app_specfic_password": 247, "app_specific_password": 247, "appar": [53, 154, 158, 255, 283, 287, 377], "appdata": 246, "appear": [3, 14, 25, 27, 31, 37, 40, 42, 46, 47, 50, 52, 53, 66, 70, 79, 80, 81, 86, 89, 92, 94, 96, 98, 99, 103, 104, 108, 109, 110, 113, 114, 115, 119, 120, 123, 124, 126, 127, 129, 133, 134, 149, 153, 154, 155, 166, 167, 173, 179, 182, 185, 186, 197, 201, 205, 210, 211, 227, 228, 229, 230, 231, 234, 237, 255, 257, 261, 262, 268, 278, 282, 283, 284, 289, 296, 297, 303, 304, 309, 312, 315, 324, 328, 335, 351, 352, 353, 354, 355, 357, 358, 361, 382, 383, 384, 385, 388], "append": [3, 7, 13, 16, 17, 18, 21, 22, 28, 29, 53, 58, 60, 63, 72, 127, 133, 134, 153, 155, 159, 160, 161, 163, 165, 166, 167, 169, 174, 183, 188, 190, 201, 202, 220, 223, 229, 236, 237, 250, 261, 262, 282, 284, 288, 289, 290, 292, 295, 296, 297, 304, 313, 314, 316, 317, 318, 319, 328, 329, 330, 344, 347, 353, 360, 361, 377, 381, 383, 384, 385, 387], "append_files_dat": 289, "appendix": [52, 81, 126], "apper": 94, "appl": [1, 3, 52, 243, 248], "apple_id": 247, "appleclang": 242, "appli": [10, 11, 16, 25, 40, 47, 53, 66, 67, 70, 76, 81, 94, 96, 100, 104, 126, 127, 154, 163, 169, 201, 202, 214, 220, 255, 283, 292, 293, 295, 299, 328, 329, 334, 338, 342, 344, 368, 369, 373, 377, 378, 381, 393], "applic": [4, 32, 76, 81, 89, 100, 122, 126, 160, 242, 246, 247, 254, 255, 289, 340, 363, 371, 377, 378, 385], "apply_reverse_permut": 53, "appoxim": [153, 282], "appps1": 255, "appreci": [81, 110, 377], "approach": [25, 29, 38, 39, 53, 76, 80, 90, 110, 126, 153, 154, 201, 220, 248, 249, 255, 282, 283, 296, 328, 339, 344, 366, 368, 371, 373, 376, 377, 378, 382, 385, 392, 393], "appropri": [3, 11, 13, 16, 17, 24, 30, 38, 39, 41, 52, 64, 76, 81, 96, 105, 149, 153, 154, 155, 160, 164, 170, 201, 204, 210, 220, 223, 229, 230, 242, 246, 278, 282, 283, 284, 289, 292, 294, 300, 328, 335, 344, 347, 354, 366, 369, 371, 377, 382, 383, 388], "approx": [39, 353], "approxim": [24, 36, 39, 41, 66, 94, 125, 133, 154, 160, 163, 201, 220, 255, 261, 283, 289, 292, 293, 297, 328, 338, 344, 376, 382, 388], "appstoreconnect": 247, "appukuttan": 255, "april": 89, "apriori": [219, 343], "apt": [3, 241, 244, 246], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 56, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 119, 120, 124, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 139, 143, 144, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 182, 185, 186, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 246, 247, 248, 249, 250, 252, 253, 255, 257, 259, 260, 261, 262, 264, 265, 267, 268, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 372, 373, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 393], "ar2_hha_old": 89, "araabi": 255, "arabali": 255, "aradi": 255, "arai": 255, "arakaki": 255, "aranda": 255, "arang": [29, 387], "araujo": 255, "araya": 255, "arayinfo": 52, "arbforc": 76, "arbib": 255, "arbitrari": [33, 39, 53, 87, 134, 155, 160, 170, 198, 201, 210, 231, 234, 262, 284, 289, 300, 315, 325, 328, 335, 344, 355, 358, 372, 383, 387], "arbitrarili": [5, 39, 81, 369, 376], "arbor": [40, 255], "arc": [91, 94, 105, 134, 148, 166, 195, 218, 231, 234, 236, 237, 262, 277, 296, 322, 355, 358, 361], "arc3d": [81, 125, 146, 165, 166, 275, 295, 296, 388], "arcco": 91, "arch": [3, 246, 247], "archi": 255, "architectur": [3, 6, 8, 14, 25, 29, 32, 40, 66, 67, 86, 100, 108, 111, 112, 117, 118, 126, 198, 246, 247, 255, 325, 377, 381, 384], "archiv": [3, 40, 46, 96, 210, 254, 255, 335], "archiveandhardcopi": [210, 335], "archprefer": 246, "archs_cmak": 247, "arcsin": 91, "arctan": 91, "area": [10, 11, 15, 22, 31, 37, 46, 47, 48, 50, 53, 66, 70, 76, 80, 81, 86, 104, 115, 125, 127, 139, 144, 146, 151, 153, 154, 160, 163, 165, 166, 188, 201, 206, 220, 229, 231, 233, 255, 267, 273, 275, 280, 282, 283, 289, 292, 295, 296, 314, 316, 328, 332, 344, 353, 355, 357, 366, 369, 373, 377, 382, 388], "area_per_vol": 292, "aren": [25, 32, 42, 66, 78, 94, 239], "arg": [3, 28, 29, 52, 77, 81, 128, 136, 138, 139, 149, 154, 155, 156, 159, 160, 164, 165, 166, 168, 170, 171, 173, 174, 176, 177, 178, 180, 181, 182, 185, 186, 188, 190, 191, 197, 200, 201, 203, 204, 205, 207, 211, 213, 214, 215, 216, 220, 223, 225, 226, 229, 233, 235, 236, 237, 242, 244, 248, 249, 256, 264, 266, 267, 268, 278, 282, 283, 284, 285, 288, 289, 294, 295, 296, 300, 301, 303, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 324, 327, 328, 330, 333, 334, 337, 338, 339, 340, 344, 347, 349, 350, 353, 359, 360, 361], "arg1": [81, 160, 289, 294, 312, 360], "arg2": [81, 294, 312], "argc": [1, 52], "arglist": 52, "argment": [201, 328], "argn": 52, "argref": 52, "argstr": 289, "argtyp": [184, 185, 388], "argu": 255, "argument": [1, 3, 13, 28, 29, 32, 39, 45, 52, 53, 57, 64, 81, 91, 98, 129, 133, 134, 136, 138, 148, 151, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 179, 180, 182, 184, 186, 188, 189, 190, 191, 192, 195, 196, 197, 200, 201, 203, 204, 205, 206, 208, 211, 214, 216, 217, 218, 219, 220, 223, 226, 228, 229, 233, 235, 236, 237, 242, 246, 247, 248, 257, 261, 262, 264, 266, 268, 277, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 298, 299, 301, 303, 305, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 344, 347, 350, 352, 353, 357, 359, 360, 361, 365, 366, 368, 369, 370, 373, 377, 381, 382, 383, 387, 388], "argv": [1, 52, 381], "argvalu": [128, 256], "aria": 255, "ariav": 255, "aris": [42, 96, 103, 124, 155, 160, 188, 255, 284, 289, 316, 377, 378], "arisi": 255, "arithmet": [39, 81, 119, 120, 253, 255, 292, 293, 328, 366], "arkhipov": 255, "arleo": 255, "arlotti": 255, "arlow": 255, "arm": [1, 255], "arm64": [3, 246, 247, 248], "armano": 255, "armstrong": 255, "arnett": 255, "arnir": 255, "aro": [94, 95], "aroca": 255, "aros": [154, 283], "aroso": 255, "around": [1, 28, 29, 40, 44, 50, 70, 96, 133, 153, 160, 173, 201, 217, 231, 237, 246, 253, 255, 261, 282, 289, 303, 317, 328, 333, 341, 355, 361, 376, 377, 378, 383, 393], "arous": 255, "arrai": [4, 6, 52, 56, 64, 66, 81, 127, 138, 154, 159, 173, 185, 186, 188, 197, 199, 201, 203, 204, 208, 219, 220, 253, 255, 266, 282, 283, 288, 292, 303, 314, 315, 316, 322, 324, 326, 328, 330, 331, 334, 343, 344, 366, 387], "arrang": [12, 33, 42, 66, 99, 110, 127, 144, 226, 231, 236, 255, 273, 289, 350, 355, 360, 383], "array_dimens": 53, "array_s": 60, "array_var_nam": 60, "arrayindex": [203, 330], "arrayinfo": 52, "arrhythmia": 255, "arriv": [9, 29, 71, 107, 153, 154, 160, 220, 282, 283, 284, 289, 344], "arrow": [177, 182, 229, 231, 307, 312, 353, 355], "arrowhead": 70, "arruda": 255, "arsev": 255, "arsiero": 255, "arszovszki": 255, "art": [200, 255, 327, 377], "artcellgui": [32, 37, 107, 108, 111, 112], "artefact": 76, "arteri": 255, "arteriolar": 255, "artherya": 255, "articl": [40, 42, 82, 83, 89, 103, 124, 126, 366, 377], "artif": 88, "artifact": [40, 47, 96, 134, 136, 247, 248, 262, 264], "artifactnam": 248, "artifici": [21, 22, 26, 29, 74, 75, 76, 79, 80, 82, 83, 88, 89, 90, 108, 111, 115, 126, 140, 144, 146, 152, 155, 156, 159, 160, 161, 204, 205, 219, 227, 255, 269, 273, 275, 281, 284, 285, 288, 289, 290, 338, 343, 351, 391, 393], "artificial_cel": [153, 156, 159, 214, 220, 282, 284, 285, 288, 338, 344], "artificialcel": [32, 37, 161, 173, 220, 225, 290, 303, 344, 349], "aruljothi": 255, "arun": 255, "arxiv": 255, "as_numpi": [201, 202, 253, 328, 329, 331, 353], "asamoah": 255, "asan": 242, "asan_opt": 3, "asc": 47, "ascent": 255, "ascertain": [119, 120], "ascii": [42, 76, 92, 94, 127, 177, 190, 201, 219, 229, 289, 307, 317, 328, 337, 343, 353], "ascoli": [40, 47, 255], "asec": 314, "asgn": 52, "ash": 255, "ashhad": 255, "ashpol": 255, "asid": [14, 47, 64, 66, 86, 96, 382], "asin": [91, 163, 292, 293], "asinh": [163, 292, 293], "ask": [10, 11, 40, 51, 53, 66, 82, 86, 87, 89, 94, 100, 108, 154, 160, 161, 210, 222, 231, 233, 247, 283, 289, 290, 335, 346, 355, 357, 382, 383, 387, 388], "asl": 255, "aspart": 255, "aspect": [4, 81, 98, 99, 154, 220, 223, 229, 231, 237, 243, 246, 255, 283, 344, 347, 353, 355, 361, 377], "aspini": 14, "asseldonk": 255, "assembl": [0, 36, 51, 81, 289], "assembli": [126, 255], "assendorp": 255, "assert": [3, 4, 53, 160, 225, 250, 268, 289, 344, 349], "assert_whole_model_charge_conserv": 344, "asses": [40, 47], "assess": [44, 255], "assign": [1, 3, 4, 10, 11, 13, 14, 27, 28, 32, 36, 38, 46, 52, 53, 60, 64, 65, 66, 67, 76, 81, 105, 108, 119, 120, 126, 134, 144, 148, 149, 153, 155, 156, 160, 161, 165, 166, 168, 171, 176, 185, 193, 197, 201, 203, 204, 207, 211, 213, 220, 223, 225, 227, 229, 251, 255, 262, 273, 277, 278, 282, 284, 285, 289, 290, 292, 295, 296, 301, 306, 314, 315, 317, 320, 324, 327, 328, 330, 333, 337, 344, 347, 349, 351, 353, 366, 368, 369, 371, 373, 383, 385, 387], "assing": 368, "assist": [92, 255], "assoc": [219, 343], "associ": [12, 56, 76, 79, 80, 81, 95, 107, 126, 136, 149, 154, 155, 159, 160, 161, 163, 166, 177, 182, 185, 198, 201, 203, 205, 219, 220, 223, 227, 229, 231, 238, 241, 255, 264, 278, 282, 283, 284, 288, 289, 290, 292, 296, 307, 312, 314, 325, 327, 328, 330, 331, 343, 344, 347, 351, 353, 355, 362, 369, 377, 385, 388, 393], "assum": [3, 4, 7, 10, 11, 29, 33, 54, 64, 66, 74, 76, 81, 95, 96, 122, 127, 136, 149, 154, 155, 158, 159, 160, 161, 166, 173, 185, 188, 200, 201, 207, 225, 229, 236, 238, 264, 278, 283, 284, 287, 288, 289, 290, 292, 296, 303, 316, 327, 328, 333, 334, 344, 349, 353, 360, 362, 366, 369, 383, 384, 388], "assumpt": [36, 53, 64, 220, 344, 369], "assur": 377, "assynchron": [160, 289], "astakhov": 255, "asterisk": [29, 89, 388], "astrocyt": [255, 373], "astrogli": 255, "astroglia": 255, "asymmetr": 255, "asymmetri": 255, "asymptot": 255, "asynchron": [160, 255, 289], "asynmetr": 255, "at_tim": [160, 220, 250, 289, 344], "atan": [81, 91, 163, 195, 202, 292, 293, 322, 329, 388], "atan2": [91, 163, 195, 202, 292, 293, 322, 329, 388], "ataxia": 255, "atendofact": [221, 345], "atenekeng": 255, "atherton": 255, "athilingam": 255, "ation": 64, "atlanta": 26, "atol": [151, 220, 227, 280, 344, 351], "atolscal": [64, 136, 220, 227, 264, 292, 344, 351, 366, 368, 369, 370], "atolscale_for_st": [220, 344], "atoltool": [220, 344], "atom": [155, 284], "atop": 50, "atp": 255, "atpas": [255, 369], "atrophi": 255, "atropin": 255, "attach": [13, 25, 29, 37, 54, 71, 81, 96, 108, 110, 113, 115, 117, 127, 153, 154, 160, 166, 182, 229, 231, 247, 282, 283, 289, 295, 296, 298, 312, 353, 355, 382, 383], "attack": 249, "attali": 255, "attempt": [3, 12, 42, 53, 56, 78, 81, 89, 103, 124, 136, 138, 153, 155, 160, 165, 166, 175, 186, 210, 220, 264, 266, 282, 284, 289, 292, 295, 296, 315, 317, 327, 335, 344, 377, 381, 385, 387], "attend": 100, "attent": [40, 53, 54, 86, 242, 255, 377, 383], "attenu": [25, 130, 131, 132, 227, 255, 258, 259, 260, 351], "attest": 80, "attr_praxi": [133, 135, 138, 261, 263, 266, 388], "attractor": 255, "attribut": [66, 74, 89, 94, 96, 98, 108, 133, 138, 175, 255, 261, 266, 304, 305, 314, 365, 382, 387], "attributeerror": 315, "attwel": 255, "atyp": 255, "aubi": 255, "audit": [210, 248, 335], "auditori": 255, "augment": [3, 53, 154, 160, 255, 283, 289], "augustin": 255, "augustinait": 255, "auksztulewicz": 255, "ault": [231, 355], "auricular": 255, "australasian": 255, "autaps": 255, "autapt": 255, "auth": 89, "author": [40, 82, 83, 89, 126, 160, 161, 220, 289, 290, 344, 377], "authorit": [81, 126, 160, 166, 289, 296], "authorized_kei": [160, 289], "autism": 255, "autist": 255, "auto": [7, 52, 53, 253], "autocorrel": [201, 328], "autoexec": 189, "autoinhibit": 255, "autom": [76, 126, 154, 201, 248, 255, 283, 328, 377, 378], "automat": [3, 4, 7, 14, 31, 46, 47, 52, 53, 66, 67, 79, 81, 86, 96, 126, 127, 129, 149, 151, 153, 154, 155, 160, 163, 166, 169, 173, 182, 188, 201, 210, 220, 223, 229, 231, 233, 237, 242, 244, 246, 255, 257, 278, 280, 282, 283, 284, 289, 292, 295, 296, 303, 312, 314, 316, 328, 331, 335, 343, 344, 345, 347, 353, 355, 357, 361, 371, 377, 378, 380, 381, 382, 388], "automaton": 255, "autonom": [255, 377], "autoobj": 52, "autoreceptor": 255, "autorepeatdelai": [231, 355], "autorepeatstart": [231, 355], "autoscal": [130, 258], "autosom": 255, "autotool": [1, 3], "autovectoris": 53, "autuori": 255, "auxiliari": [60, 255], "av": [40, 47], "avaiabl": 388, "avail": [0, 1, 3, 7, 29, 39, 40, 46, 51, 52, 53, 55, 56, 64, 76, 81, 82, 87, 88, 89, 93, 94, 98, 100, 101, 125, 127, 133, 136, 142, 151, 153, 154, 156, 160, 161, 163, 164, 170, 173, 186, 189, 200, 201, 205, 211, 214, 216, 220, 225, 227, 233, 237, 242, 246, 248, 255, 261, 264, 271, 280, 282, 283, 284, 285, 289, 290, 292, 293, 294, 295, 298, 299, 300, 303, 314, 315, 320, 327, 328, 331, 338, 339, 340, 344, 349, 351, 353, 357, 361, 366, 368, 371, 377, 378, 385, 387, 388], "avec": [150, 250, 279], "avella": 255, "averag": [28, 29, 41, 49, 54, 153, 154, 160, 166, 201, 255, 282, 283, 296, 328, 366, 373], "averkin": 255, "avg": 242, "avian": 255, "avin": 255, "aviv": 255, "avogadro_const": [320, 388], "avoid": [1, 3, 4, 8, 37, 40, 51, 53, 76, 79, 80, 81, 96, 98, 100, 107, 119, 120, 126, 127, 153, 154, 155, 159, 160, 163, 164, 165, 166, 168, 169, 195, 197, 200, 201, 207, 220, 227, 241, 242, 246, 247, 248, 253, 255, 282, 283, 284, 288, 289, 292, 293, 294, 295, 296, 298, 300, 314, 320, 322, 327, 328, 344, 353, 357, 359, 370, 373, 377, 383, 385], "avoli": 255, "avossa": 255, "avx": 1, "avx512": [3, 7, 246], "avx512er": 246, "avx512pf": 246, "awab101": 255, "awai": [3, 25, 37, 53, 66, 80, 81, 96, 110, 111, 133, 136, 154, 165, 189, 194, 210, 227, 231, 261, 264, 283, 295, 321, 335, 351, 355, 377], "await": [40, 204, 368], "awak": 255, "awan": 255, "awar": [0, 52, 53, 160, 166, 242, 249, 289, 296], "awatramani": 255, "awil": [254, 255], "awy145": 255, "ax": [18, 19, 28, 39, 70, 92, 127, 134, 229, 231, 233, 235, 237, 255, 262, 282, 314, 353, 355, 357, 359, 361, 365], "ax1": 383, "ax2": 383, "axi": [24, 25, 27, 30, 31, 40, 47, 50, 66, 70, 73, 78, 79, 80, 81, 86, 89, 93, 94, 95, 96, 105, 123, 126, 127, 133, 134, 138, 200, 201, 227, 229, 230, 231, 233, 234, 255, 261, 262, 266, 327, 328, 334, 351, 353, 354, 355, 357, 358, 360, 373, 383, 384, 388], "axial": [25, 136, 166, 255, 264, 296, 344, 382, 383, 384, 388], "axis3dwithneuron": 382, "axo": 255, "axon": [25, 26, 30, 33, 38, 41, 43, 46, 47, 58, 64, 66, 67, 68, 86, 108, 127, 153, 154, 155, 165, 168, 169, 178, 203, 204, 205, 218, 220, 255, 282, 283, 284, 295, 299, 308, 314, 330, 342, 344, 371, 383, 387, 388], "axon2": 204, "axonless": 255, "axosomat": 255, "ayala": 255, "azad": 255, "azouz": 255, "azur": [1, 243, 249, 377], "a\u0107imovi\u0107": 255, "a\u03b2": 255, "b": [3, 25, 29, 37, 39, 53, 63, 69, 70, 77, 81, 94, 95, 98, 126, 151, 153, 154, 159, 161, 166, 169, 173, 197, 201, 204, 208, 211, 223, 231, 242, 248, 255, 280, 282, 283, 288, 290, 292, 296, 303, 312, 314, 315, 324, 328, 334, 347, 355, 360, 366, 377, 378, 381, 387], "b0": [22, 37, 53, 250], "b1": [53, 201, 328], "b64encod": 63, "b978": [254, 255], "b_ballstick": [22, 37], "b_handl": 53, "b_rate": 292, "b_valu": 53, "ba": [43, 66, 68], "ba2": 255, "ba5e547c21f6": 160, "baayen": 255, "babalian": 255, "babic": 255, "babloyantz": 255, "bacar": 255, "baccu": 255, "bace1": 255, "bachor": 255, "bacigalupo": 255, "back": [24, 27, 28, 32, 45, 50, 51, 52, 53, 66, 67, 70, 74, 80, 84, 94, 95, 96, 99, 104, 105, 108, 114, 119, 120, 123, 134, 155, 160, 164, 174, 190, 211, 220, 225, 231, 234, 246, 255, 262, 284, 289, 292, 294, 304, 314, 317, 328, 343, 344, 349, 355, 358, 370, 373, 377, 383, 386], "backbon": [160, 289], "backbone_styl": [160, 289], "backend": [7, 242], "background": [57, 70, 73, 87, 231, 255, 355, 366, 377], "backlash": 40, "backport": [377, 378], "backpropag": 255, "backslash": 81, "backspac": 1, "backtrac": [1, 3, 242], "backu": 255, "backward": [1, 53, 58, 82, 98, 154, 188, 201, 220, 223, 231, 255, 283, 292, 316, 328, 344, 347, 355, 357, 366, 377, 378, 387, 393], "backward_r": [163, 292], "bad": [53, 56, 81, 94, 160, 169, 289], "baden": 255, "badia": 255, "badoual": 255, "bae": 255, "baeta": 255, "bagherimofidi": 255, "bagnal": 255, "bahi": 255, "bahl": 255, "bahmer": 255, "bahner": 255, "bai": 255, "bain": 255, "bajwa": 255, "baka": 255, "baker": 255, "bakhshetyan": 255, "bakhurin": 255, "bakiri": 255, "bakken": 255, "bal": 255, "balagu": 255, "balaji": 255, "balakrishnan": 255, "balanc": [13, 151, 160, 161, 223, 255, 280, 289, 290, 347, 368, 385], "balasingham": 255, "balasubramaniam": 255, "balasubramanian": 255, "balbi": 255, "baldelli": 255, "baldridg": 255, "balena": 255, "balfanz": 255, "ball": [5, 10, 11, 14, 24, 26, 251, 255], "ballandstick": [382, 383, 384, 385], "ballerini": 255, "ballpark": 96, "ballstick": [37, 45], "ballstk": [14, 45], "balmer": 255, "balogh": 255, "bammann": 255, "banana": 315, "band": [66, 113, 115, 197, 255, 324], "bandrowski": 255, "bandwidth": [242, 255, 289], "bandyopadhyai": 255, "banerje": 255, "bang": 255, "banghart": 255, "banitt": 255, "bank": 255, "bannatyn": 255, "banner": [81, 188, 210, 316, 335, 377, 378], "bao": 255, "bar": [4, 25, 66, 80, 81, 104, 123, 130, 177, 180, 201, 229, 231, 255, 258, 284, 307, 310, 314, 328, 353, 355], "barahona": 255, "baram": 255, "baranauska": 255, "barb": 255, "barba": 255, "barbera": 255, "barberi": 255, "barbier": 255, "barbieri": 255, "barbosa": 255, "barcia": 255, "bard": 255, "bare": [3, 81, 160, 161, 289, 290], "barela": 255, "barga": 255, "barik": 255, "barkai": 255, "barlow": 255, "barn": 255, "barnacl": 255, "barnagian": 255, "barnett": 255, "baroca": 255, "baron": 255, "baroreflex": 255, "barra": 255, "barrag": [80, 255], "barraud": 255, "barreda": 255, "barrel": 255, "barrena": 255, "barrera": 255, "barres": 255, "barrett": 255, "barri": 255, "barrier": [157, 160, 220, 255, 286, 289, 344, 366, 385], "barriga": 255, "barrington": 255, "barrionuevo": 255, "barro": 255, "barron": 255, "bartel": 255, "barth": 255, "barthel": 255, "bartholdi": 255, "barth\u00f3": 255, "bartic": 255, "bartlett": 255, "barto": 255, "bartol": [198, 255, 325], "barz\u00f3": 255, "basak": 255, "basal": [58, 255, 292, 299, 387], "basalyga": 255, "base": [3, 7, 13, 14, 25, 29, 32, 39, 40, 45, 47, 52, 53, 60, 67, 81, 87, 89, 91, 92, 95, 98, 107, 109, 146, 149, 152, 154, 155, 160, 163, 166, 190, 195, 201, 219, 220, 241, 242, 246, 248, 250, 255, 275, 278, 281, 283, 284, 289, 292, 293, 295, 296, 297, 305, 314, 317, 322, 328, 340, 343, 344, 363, 366, 368, 369, 370, 377, 378, 381, 382, 383, 385, 388, 389, 393], "base10expon": 197, "base64": 63, "base_typ": [53, 60], "baseattr": [314, 382, 388], "baselin": [3, 10, 11, 96, 241, 371], "basenam": [66, 220, 344], "bash": [31, 35, 36, 46, 59, 158, 171, 219, 246, 247, 248, 249, 268, 287, 301, 343], "bashforth": [220, 344], "bashrc": 246, "basi": [64, 149, 155, 159, 175, 220, 255, 278, 284, 288, 305, 344, 377, 378], "basic": [12, 29, 30, 32, 37, 52, 53, 54, 66, 76, 81, 87, 88, 96, 100, 127, 136, 146, 152, 155, 158, 160, 161, 219, 220, 221, 229, 247, 255, 264, 275, 281, 284, 287, 289, 290, 314, 331, 343, 344, 345, 353, 368, 377, 378, 384, 385, 387, 389, 391], "basic_shap": 22, "basilar": [14, 25, 43, 66, 67, 68], "basket": 255, "basolater": 255, "bass": 255, "basser": 255, "bassi": 255, "bast": 255, "basu": 255, "bat": [66, 189], "batch": [13, 16, 17, 53, 81, 223, 347, 391], "batch_run": [81, 218, 220, 342, 344, 388], "batch_sav": [81, 218, 342, 388], "batchrun": [13, 16, 17], "bath": [153, 282], "bathelli": 255, "batini": 255, "battefeld": 255, "batteri": [12, 33, 255], "baucum": 255, "baud": 189, "baudot": 255, "baudri": 255, "bauer": 255, "baum": 255, "baumann": 255, "baumgardn": 255, "baux": 255, "baxter": 255, "bayliss": 255, "bayon": 255, "bazhenov": 255, "bb": [160, 289, 366], "bb5c4f755f59": 160, "bbcore1": 284, "bbcore_mech": 289, "bbcore_read": 250, "bbcore_writ": 250, "bbcorepoint": [4, 152, 250, 343], "bbp": [1, 53, 244, 377, 378], "bbpcode": 248, "bbpproxi": 248, "bbrc": 255, "bbs_msg_cnt_": [160, 289], "bbs_poll_": [160, 289], "bbs_poll_cnt_": [160, 289], "bbsavest": [1, 52, 140, 223, 225, 269, 347, 388], "bbss": [219, 343], "bbss_in": 343, "bbss_out": 343, "bbsworker": 160, "bc": 81, "bcm": 255, "bcn": 255, "bcopi": [197, 202, 324, 329], "bda82fa9": 247, "bdist_wheel": 59, "bdnf": 255, "bean": 255, "bearden": 255, "beardslei": 255, "beat": 255, "beato": 255, "beaulieu": 255, "beauparl": 255, "becam": 377, "becaus": [8, 9, 14, 25, 29, 31, 35, 42, 45, 52, 53, 54, 63, 66, 67, 70, 76, 80, 81, 88, 94, 98, 100, 103, 104, 107, 124, 126, 133, 136, 147, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 169, 174, 185, 197, 198, 201, 204, 211, 219, 220, 225, 229, 231, 234, 242, 246, 248, 261, 264, 276, 282, 283, 284, 285, 288, 289, 290, 292, 295, 296, 304, 317, 324, 325, 328, 343, 344, 349, 355, 358, 366, 369, 377, 382, 384, 385, 387, 388], "becc": 255, "beck": 255, "becker": 255, "becom": [3, 9, 27, 36, 37, 45, 47, 53, 64, 80, 81, 86, 96, 107, 113, 115, 126, 130, 136, 153, 154, 155, 156, 160, 164, 165, 166, 168, 169, 171, 179, 181, 182, 191, 201, 211, 214, 220, 221, 225, 229, 231, 237, 242, 258, 264, 282, 283, 284, 285, 289, 294, 295, 296, 299, 301, 309, 311, 312, 314, 318, 328, 338, 344, 345, 349, 353, 355, 361, 377, 378, 387], "bedard": 255, "bedez": 255, "beed": 255, "beeman": [88, 100, 254, 255], "been": [1, 3, 4, 7, 10, 11, 13, 16, 19, 29, 37, 40, 42, 46, 47, 51, 52, 53, 56, 58, 59, 60, 66, 67, 70, 76, 80, 81, 82, 86, 89, 98, 100, 103, 105, 110, 119, 124, 126, 134, 136, 139, 149, 153, 154, 155, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 186, 188, 197, 198, 200, 201, 205, 206, 216, 220, 224, 227, 229, 231, 242, 247, 248, 250, 255, 262, 264, 267, 278, 282, 283, 284, 288, 289, 290, 292, 294, 295, 298, 300, 301, 305, 314, 315, 316, 324, 325, 327, 328, 332, 334, 335, 340, 344, 348, 351, 353, 355, 369, 371, 377, 378, 382, 388], "beenhakk": 255, "beeren": 255, "befor": [1, 3, 4, 7, 8, 10, 11, 14, 28, 29, 36, 40, 42, 43, 47, 48, 51, 52, 53, 56, 66, 68, 69, 70, 76, 77, 81, 86, 90, 92, 93, 94, 96, 98, 100, 102, 103, 107, 108, 112, 124, 125, 133, 134, 136, 138, 149, 151, 152, 153, 158, 159, 160, 161, 163, 169, 170, 173, 174, 177, 178, 182, 189, 200, 201, 203, 210, 220, 221, 222, 223, 225, 229, 230, 233, 237, 242, 247, 248, 251, 261, 262, 264, 266, 278, 280, 281, 282, 283, 287, 288, 289, 290, 292, 293, 300, 303, 304, 307, 308, 312, 324, 327, 328, 330, 335, 344, 345, 346, 347, 349, 353, 354, 357, 361, 366, 369, 372, 377, 382, 383, 384, 385, 387, 388], "beforehand": 289, "began": 126, "begin": [1, 4, 13, 42, 45, 46, 52, 66, 72, 77, 81, 96, 126, 127, 129, 131, 134, 138, 139, 151, 153, 159, 160, 164, 165, 166, 170, 173, 174, 177, 185, 188, 189, 190, 191, 192, 197, 200, 201, 204, 217, 218, 219, 220, 221, 223, 225, 226, 228, 229, 230, 231, 236, 242, 247, 253, 257, 259, 262, 266, 267, 280, 282, 283, 289, 292, 294, 295, 296, 300, 303, 304, 307, 316, 317, 318, 319, 324, 327, 328, 342, 343, 344, 345, 347, 349, 350, 352, 353, 354, 355, 360, 366, 367, 370, 373, 377, 378, 382, 383, 384, 387, 392, 393], "beginlin": [28, 201, 229, 231, 235, 237, 328, 353, 355, 359, 361], "begintempl": [21, 22, 69, 77, 81, 88, 148, 170, 174, 178, 184, 214, 223, 277, 300, 388], "begum": 255, "behabadi": 255, "behav": [4, 253, 255, 293, 383], "behavior": [32, 66, 73, 87, 89, 100, 119, 159, 160, 163, 166, 201, 220, 248, 254, 255, 288, 289, 292, 293, 296, 322, 328, 344, 366, 377, 382, 388], "behaviour": [7, 155, 227, 231, 242, 255, 284, 351, 355, 381], "behind": [53, 70, 81, 96, 243, 289], "behrend": 255, "behuret": 255, "beierlein": 255, "bein": 255, "being": [1, 3, 4, 10, 11, 13, 14, 25, 32, 36, 40, 42, 49, 53, 54, 66, 76, 81, 96, 98, 100, 103, 124, 126, 148, 153, 154, 155, 156, 158, 159, 160, 161, 163, 166, 169, 173, 185, 191, 197, 199, 201, 220, 223, 231, 234, 246, 250, 277, 282, 283, 284, 285, 287, 288, 289, 290, 292, 299, 303, 314, 318, 324, 326, 328, 330, 344, 347, 355, 358, 360, 366, 377, 378, 381, 383, 384, 385, 388], "bekker": 255, "bekkouch": 255, "bekolai": 255, "belan": 255, "belardinelli": 255, "belbut": 255, "believ": [153, 154, 282, 283], "bell": 255, "belling": 255, "bellini": 255, "belmont": 255, "belong": [64, 86, 103, 106, 108, 123, 124, 133, 182, 261, 289, 292, 312, 366, 377, 382], "below": [3, 4, 7, 8, 13, 19, 25, 28, 29, 37, 42, 44, 53, 56, 60, 68, 70, 81, 86, 89, 96, 98, 99, 103, 104, 110, 124, 126, 130, 133, 144, 153, 155, 160, 163, 166, 169, 173, 185, 201, 227, 229, 241, 246, 247, 248, 258, 261, 273, 282, 284, 289, 292, 293, 295, 296, 300, 303, 312, 328, 342, 351, 353, 366, 370, 376, 382, 383, 384, 385, 387, 388], "bem": 255, "ben": 255, "benal": 255, "benavid": 255, "benchmark": [1, 5, 53, 54, 243, 255], "bend": 113, "bender": 255, "beneath": [27, 66, 80, 104, 188, 316], "benefici": [53, 201, 220, 328, 344], "benefit": [7, 53, 66, 94, 119, 120, 126, 139, 161, 164, 182, 220, 267, 290, 294, 312, 344], "benfenati": 255, "benign": 255, "benitez": 255, "benk": 255, "benna": 255, "bennequin": 255, "bennett": 255, "benoit": 255, "bensmaia": 255, "bentlei": 255, "bentrop": 255, "benucci": 255, "benuskova": 255, "beowulf": [126, 160, 289], "bequiet": [128, 256], "berc": 255, "berdichevski": 255, "berdondini": 255, "berecki": 255, "beren": 255, "berend": 255, "berg": 255, "bergend": 255, "berger": 255, "bergersen": 255, "bergin": 255, "bergman": 92, "bergmann": 255, "bergstra": 255, "berkov": 255, "berlin": 255, "berman": 255, "bernal": [254, 255, 389], "bernand": 255, "bernard": 255, "bernasconi": 255, "berr": 255, "berri": 255, "berridg": 41, "berrio": 255, "bertelli": 255, "berthet": 255, "berzhanskaya": 255, "besid": [81, 238, 296, 362, 366, 377, 378], "bessaih": 255, "best": [4, 7, 12, 25, 36, 37, 38, 47, 53, 64, 66, 67, 77, 81, 86, 87, 103, 124, 126, 129, 134, 138, 147, 153, 160, 161, 166, 169, 201, 220, 221, 223, 227, 229, 233, 255, 257, 262, 266, 276, 282, 289, 290, 292, 296, 314, 328, 334, 344, 345, 347, 351, 353, 357, 368, 379, 381, 382], "bestmann": 255, "bet": [95, 96], "beta": [200, 255, 292, 327, 371, 378, 379], "betaiv": 255, "bethu": 255, "bethwait": 255, "bettella": 255, "better": [1, 7, 12, 24, 28, 35, 39, 53, 76, 78, 81, 96, 100, 125, 154, 160, 161, 169, 195, 197, 201, 220, 234, 246, 255, 283, 289, 290, 292, 299, 322, 328, 341, 344, 358, 377, 382, 388], "bettler": 255, "between": [4, 5, 7, 9, 10, 11, 16, 17, 25, 27, 28, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 53, 56, 60, 70, 71, 79, 80, 81, 87, 89, 93, 94, 96, 99, 100, 101, 110, 119, 120, 126, 127, 130, 133, 136, 138, 139, 143, 147, 153, 154, 155, 159, 160, 161, 163, 166, 173, 182, 185, 188, 190, 194, 195, 196, 198, 200, 201, 204, 205, 211, 220, 225, 227, 229, 231, 234, 235, 236, 246, 247, 250, 255, 258, 261, 264, 266, 267, 272, 276, 279, 282, 283, 284, 288, 289, 290, 292, 296, 303, 312, 314, 316, 317, 321, 322, 323, 325, 327, 328, 330, 344, 349, 351, 353, 355, 358, 359, 360, 366, 367, 369, 376, 377, 378, 381, 383, 384, 385, 387, 388], "betz": 255, "beutel": 255, "bewar": 300, "beyermann": 255, "beyond": [16, 32, 53, 66, 98, 123, 204, 247, 255, 292, 314, 368], "bezair": 255, "bezard": 255, "bezzi": 255, "be\u0148u\u0161kov\u00e1": 255, "bg": 360, "bgcolor": 70, "bgcolori": 70, "bglcheckpoint": 363, "bglcheckpointinit": 363, "bhaa261": 255, "bhab221": 255, "bhadra": 255, "bhalla": [254, 255], "bhalodia": 255, "bhatia": 255, "bhatnagar": 255, "bhq100": 255, "bhs041": 255, "bhs305": 255, "bhs320": 255, "bht268": 255, "bht336": 255, "bhu200": 255, "bhu334": 255, "bhumbra": 255, "bhv039": 255, "bhv188": 255, "bhv199": 255, "bhv245": 255, "bhw166": 255, "bhw237": 255, "bhx158": 255, "bhx226": 255, "bhy079": 255, "bhy291": 255, "bhz047": 255, "bhz334": 255, "bi": [255, 292], "bia": [9, 40, 153, 231, 282, 355], "bialowa": 255, "bian": 255, "bianchi": 255, "bianciardi": 255, "bias": 255, "bicarbon": 255, "bichat": 255, "bickel": 255, "bickerstaff": 255, "bicknel": 255, "bidaud": 255, "bidirect": 255, "bidirection": 255, "bieda": 255, "biehl": 255, "biella": 255, "bierwirth": 255, "bifurc": 255, "big": [28, 29, 31, 46, 78, 87, 94, 247], "bikson": 255, "bilater": 255, "bilay": [26, 31], "bildl": 255, "bilgili": 255, "bilinear": 255, "bill": [160, 255, 289, 389, 392], "billeh": 255, "billl": [158, 287], "billup": 255, "bilotti": 255, "bin": [0, 7, 54, 122, 158, 160, 200, 201, 210, 216, 219, 220, 241, 242, 244, 246, 247, 248, 249, 287, 289, 327, 328, 335, 340, 343, 344, 385], "binari": [1, 3, 7, 8, 28, 35, 54, 87, 164, 188, 201, 225, 242, 243, 245, 248, 255, 289, 292, 294, 316, 328, 349, 377, 378, 381, 388], "binary_oper": [155, 284], "binaur": 255, "binczak": 255, "bind": [3, 94, 163, 255, 292, 369, 372, 388], "bingham": 255, "binocular": 255, "binomi": [200, 327], "binshtok": 255, "binwidth": [201, 328], "binzegg": 255, "bio": [89, 246, 254, 255], "biocas49922": 255, "biochem": 255, "biocytin": 255, "bioelectromagnet": 255, "bioelectron": 255, "bioengin": 255, "bioengineering7040152": 255, "bioessai": 255, "biofabr": 255, "bioinformat": 255, "bioinspir": 255, "biolog": [41, 66, 74, 89, 100, 108, 126, 255, 366, 370, 388], "biologi": [58, 76, 87, 254, 255, 366], "biologica": 255, "biologist": 41, "biomd0000000298": 370, "biomechan": 255, "biomed": [154, 255, 283], "biomedicin": 255, "biomimet": 255, "biomodel": 370, "bionanosci": 255, "bionet": 255, "biophi": 22, "biophys": [14, 24, 26, 27, 31, 34, 43, 45, 46, 47, 65, 74, 76, 86, 87, 88, 89, 90, 96, 100, 106, 110, 115, 117, 125, 223, 227, 255, 342, 347, 351, 391], "bioport": 292, "biopsych": 255, "biorxiv": 255, "bioscienc": [40, 255], "biosensor": 255, "biosystem": 255, "biotechnologi": 255, "bioystem": 255, "bipolar": 255, "bird": 255, "birdno": 255, "birgiola": 255, "birinyi": 255, "birkhaeus": 255, "birth": 255, "bir\u00f3": 255, "bischofberg": 255, "bischoff": 255, "biscola": 255, "bison": [7, 52, 246, 247, 248], "bisphosph": 255, "bisson": 255, "bista": 255, "bistabl": [255, 365], "bistable_react": 366, "bistratifi": 255, "bit": [67, 70, 71, 76, 78, 86, 88, 96, 100, 153, 155, 160, 165, 193, 198, 200, 201, 206, 220, 229, 237, 239, 247, 282, 284, 289, 295, 325, 327, 328, 332, 344, 353, 361], "bitmap": [70, 76, 127], "bitpack": 53, "bitsnbit": 377, "bittner": 255, "bituft": 255, "bizarr": [160, 289], "bizri": 255, "bizzarri": 255, "bk": 255, "black": [12, 25, 27, 66, 70, 92, 94, 96, 101, 113, 115, 127, 145, 201, 229, 233, 244, 274, 282, 328, 353, 357, 382, 383, 384], "blackman": 255, "blackwel": 255, "bladder": 255, "blaich": 255, "blair": 255, "blanc": 255, "blanch": 255, "blank": [14, 70, 255], "blasi": 255, "bldnrnmacpkgcmak": 247, "ble": 70, "bleckert": 255, "blesneac": 255, "blind": [96, 255], "blink": 255, "blip": 96, "bliss": 255, "blob": [3, 10, 47, 86, 355], "bloch": 255, "block": [0, 1, 3, 4, 9, 36, 52, 53, 56, 60, 69, 71, 76, 77, 80, 81, 82, 88, 89, 98, 136, 148, 153, 154, 155, 156, 159, 160, 172, 220, 223, 225, 227, 242, 251, 252, 254, 255, 264, 277, 282, 283, 284, 285, 288, 289, 302, 315, 343, 344, 347, 349, 351, 377, 387, 388], "blockad": 255, "blockag": 255, "blocker": [96, 255], "blocku": 255, "blog": 377, "bloom": 255, "bloss": 255, "bltin": 52, "blue": [25, 42, 46, 47, 53, 70, 84, 86, 94, 96, 99, 110, 115, 126, 127, 132, 133, 144, 147, 201, 229, 233, 235, 238, 254, 255, 260, 261, 273, 276, 328, 353, 357, 359, 362, 382, 383], "bluebrain": [1, 3, 58, 160, 164, 219, 242, 289, 294, 343, 377, 393], "bluebrain5": 54, "bluegen": [1, 363], "bluepyopt": [93, 255], "blumenfeld": 255, "bmax": 373, "bmc": 255, "bmm221": 254, "bo": 255, "boa": 255, "board": [16, 26, 70, 160, 289, 363], "bob": 387, "boca": 255, "boccaccio": 255, "boccalini": 255, "bock": 255, "bocklisch": 255, "bodda": 255, "boddaert": 255, "bodi": [40, 68, 81, 155, 160, 185, 221, 236, 255, 284, 289, 345, 360], "bodor": 255, "boe": 255, "boer": 255, "bog": 66, "bogaard": 255, "bogu": 40, "boido": 255, "boil": 59, "boilerpl": 382, "bokeh": [360, 366, 367, 370, 371, 382, 387], "bokehj": [382, 387, 388], "bolam": 255, "bold": 70, "bolduan": 255, "bole": 255, "bolei": 255, "bologna": 255, "boltzmann": [27, 105, 320], "bombard": 255, "bonaiuto": 255, "bone": 3, "bonhoeff": 255, "bonmassar": 255, "bonu": [38, 39, 53], "booelan": [220, 344], "book": [52, 81, 82, 83, 126, 254, 255], "booker": 255, "booklet": 35, "bool": [53, 56, 173, 246, 289, 303, 328, 330], "boolean": [156, 159, 160, 165, 168, 171, 173, 177, 180, 188, 196, 198, 201, 210, 220, 229, 285, 288, 289, 295, 298, 301, 303, 307, 310, 323, 325, 328, 335, 344, 353], "boolean_canrun": [182, 312], "boolean_deflt": [182, 312], "boolean_dialog": [81, 172, 183, 302, 313, 388], "boolean_usepoint": [182, 312], "boost": [53, 242, 255], "booster": 255, "booth": 255, "borb\u00e9li": 255, "borda": 255, "border": [163, 231, 255, 292, 355], "borel": 255, "borg": [126, 255], "borgh": 255, "borgognon": 255, "borisyuk": 255, "borla": 255, "borland": 52, "born": [255, 377], "bornat": 255, "bornstein": 255, "borrow": 67, "borst": 255, "boss": 16, "bossana": 255, "bossavit": [40, 47, 255], "boston": [254, 255], "both": [1, 3, 6, 7, 9, 25, 29, 30, 37, 38, 39, 41, 47, 48, 51, 53, 54, 60, 64, 70, 71, 73, 76, 80, 81, 88, 90, 96, 98, 100, 105, 108, 116, 126, 131, 153, 154, 155, 156, 160, 161, 165, 185, 195, 201, 220, 229, 242, 246, 247, 248, 255, 259, 282, 283, 284, 285, 288, 289, 290, 292, 293, 295, 317, 322, 323, 328, 344, 353, 359, 360, 366, 367, 368, 369, 377, 381, 384, 393], "bother": [36, 66, 67], "botta": 255, "bottleneck": 40, "bottom": [25, 29, 42, 47, 67, 86, 96, 99, 104, 114, 130, 144, 174, 177, 180, 196, 229, 231, 247, 258, 273, 304, 307, 310, 323, 353, 355, 373, 382], "bottomcel": [47, 86], "bouchard": 255, "boucsein": 255, "boudewijn": 255, "boumedin": 255, "bounc": [94, 96], "bound": [58, 86, 160, 185, 237, 254, 255, 289, 292, 314, 361, 372, 373, 385], "boundari": [27, 40, 70, 96, 134, 153, 166, 201, 220, 233, 262, 282, 292, 296, 328, 344, 357, 369, 382], "boundingbox": 127, "bour": 255, "bourbeau": 255, "bouret": 255, "bourinet": 255, "boustani": 255, "bouteil": 255, "bouton": 255, "bower": [88, 100, 254, 255], "box": [25, 27, 31, 37, 42, 47, 66, 70, 83, 86, 92, 94, 96, 99, 103, 124, 129, 134, 160, 173, 183, 196, 201, 227, 229, 231, 234, 237, 248, 257, 262, 289, 292, 303, 312, 313, 323, 328, 351, 353, 355, 358, 361, 373], "boyd": 255, "boyden": 255, "boyl": 255, "bozku": 255, "bozku\u015f": 255, "bph": 255, "bpj": 255, "bpsc": 255, "br": [250, 255], "bra": 255, "brace": [53, 153, 154, 185, 204, 283, 387], "bracket": [28, 94, 173, 205, 220, 292, 303, 344, 366, 387, 388], "bradk": 255, "bradlei": 255, "bradykinesia": 255, "braganza": 255, "brager": 255, "brai": 255, "brain": [66, 76, 89, 126, 254, 255, 373], "brainml": 89, "brainr": 255, "brainstem": 255, "brake": 255, "brakspear": 255, "brambilla": 255, "branch": [3, 7, 14, 25, 38, 40, 47, 65, 66, 67, 86, 126, 166, 210, 216, 220, 244, 248, 249, 254, 255, 292, 296, 335, 340, 344, 378, 379, 380, 391], "branchereau": 255, "branco": 255, "brandalis": 255, "brann": 255, "brannon": 255, "brant": 255, "brauer": 255, "braun": 255, "bravo": 255, "brazh": 255, "break": [14, 28, 51, 52, 65, 66, 76, 81, 160, 169, 198, 201, 204, 239, 242, 289, 325, 377, 388], "breakdown": [53, 255], "breakpoint": [4, 38, 52, 69, 77, 119, 120, 136, 148, 153, 155, 160, 201, 220, 223, 251, 264, 277, 282, 284, 289, 328, 344, 347, 371, 373], "brecht": 255, "breen": 255, "breitwies": 255, "brennan": 255, "brenner": 255, "brent": 93, "breton": 255, "brett": [35, 88, 100, 254, 255], "breviti": 377, "brew": [3, 36, 244, 246, 247, 248], "brew_prefix": 248, "brewster": 255, "briair": 255, "briant": 255, "bricklei": 255, "bridg": 255, "brief": [10, 11, 12, 44, 51, 53, 66, 81, 82, 96, 99, 121, 154, 227, 255, 283, 351, 373, 387, 388, 393], "briefli": 107, "brien": 255, "briggman": 255, "bright": [76, 173, 303], "bring": [1, 14, 24, 25, 27, 28, 31, 34, 42, 45, 46, 47, 48, 65, 67, 70, 76, 79, 80, 86, 93, 96, 99, 101, 102, 105, 108, 110, 114, 123, 127, 147, 173, 201, 253, 276, 303, 328, 379], "brink": 255, "brintz": 255, "briska": 255, "british": 255, "brittain": 255, "brittl": 3, "broad": 100, "broadcast": [157, 160, 286, 289], "broaden": 255, "broadli": 86, "brocard": 255, "brocker": 255, "brodi": [26, 36, 255], "broicher": 255, "broken": [10, 11, 100, 160, 289], "bront": 255, "brook": 255, "brophi": 255, "brose": 255, "broser": 255, "brought": [96, 377], "brown": [25, 220, 229, 233, 255, 344, 353, 357, 387], "brownston": 255, "brows": [46, 70, 80, 89, 93, 240], "browsabl": [46, 86, 126], "browser": [3, 10, 11, 12, 14, 42, 47, 76, 80, 86, 89, 96, 123, 129, 134, 144, 174, 178, 183, 188, 227, 234, 238, 241, 257, 262, 273, 304, 308, 313, 316, 351, 358, 362, 373], "broz": 255, "bruce": 255, "brughera": 255, "brukau": 255, "brun": 255, "brunelli": 255, "brunner": 255, "bruno": 255, "brush": [70, 84, 101, 127, 201, 229, 255, 328, 334, 353], "brush2": 70, "brush_index": [229, 353], "brushi": 70, "brushindex": [228, 229, 352, 353], "bryman": 255, "bryson": 255, "br\u00e4uer": 255, "br\u00e9maud": 255, "br\u00f8nnum": 255, "br\u00fcderl": 255, "bt": 242, "btbr": 255, "bu": [3, 54, 171, 301], "buccino": 255, "buchanan": 255, "bucher": 255, "buchin": 255, "buckingham": 255, "bucurenciu": 255, "budak": 255, "budd": 255, "budelli": 255, "budt": 255, "bues": 255, "buesser": 255, "buf": [52, 160, 163, 289, 372], "buf_vec": 372, "buffer": [4, 14, 41, 65, 66, 81, 126, 160, 163, 222, 231, 233, 250, 255, 289, 346, 355, 357, 369, 373, 374], "buffer_s": [201, 202, 328, 329], "buffers": [166, 296], "bug": [3, 126, 153, 160, 161, 164, 199, 234, 255, 282, 289, 290, 294, 326, 358, 366, 377, 378], "bugfix": [1, 377], "buggi": 377, "bugmann": 255, "buhl": 255, "bui": 255, "buic": 255, "build": [1, 3, 4, 5, 6, 7, 14, 31, 32, 35, 36, 37, 45, 48, 52, 54, 55, 59, 66, 70, 76, 81, 89, 98, 107, 108, 112, 126, 127, 153, 160, 163, 175, 182, 201, 231, 240, 241, 242, 245, 247, 255, 282, 289, 292, 305, 312, 328, 340, 355, 377, 378, 381, 382, 384, 385, 386, 387, 388, 391], "build_ext": [59, 246], "build_meta": 59, "build_static_readline_osx": 248, "build_wheel": [1, 59, 248], "buildah_format": 248, "buildcel": 76, "buildcell_1": 76, "buildcell_2": 76, "builder": [9, 14, 26, 30, 37, 38, 42, 66, 79, 80, 83, 87, 88, 101, 102, 107, 108, 110, 113, 114, 115, 116, 117, 126, 150, 160, 161, 173, 254, 277, 279, 289, 290, 303], "buildoptiondefault": 3, "built": [3, 4, 9, 10, 11, 48, 52, 53, 56, 60, 66, 81, 87, 90, 108, 125, 133, 144, 153, 154, 155, 158, 160, 161, 163, 182, 193, 211, 214, 227, 239, 242, 246, 247, 248, 249, 255, 261, 273, 282, 283, 284, 287, 289, 290, 292, 312, 322, 338, 351, 366, 371, 382, 383, 384, 388], "builtin": [8, 52, 81, 201, 328, 387], "buisson": 255, "buitrago": 255, "bulanova": 255, "bulb": [1, 4, 5, 255, 288], "bulk": [103, 124], "bullet": 289, "bulletin": [16, 26, 160, 255, 289, 363], "bulletproof": [160, 289], "bullfrog": [250, 255], "bullock": 255, "bumbarg": 255, "bump": 377, "bunch": [82, 83], "buncic": 255, "bundl": [7, 255], "buno": 255, "buonomano": 255, "bupivacain": 255, "burdick": 255, "bure": 255, "burgess": 255, "burgin": 255, "burgo": 255, "burgui\u00e8r": 255, "burk": 255, "burka": 255, "burkitt": 255, "burron": 255, "burst": [32, 75, 153, 160, 255, 282, 289], "burster": 255, "burton": 255, "buschman": 255, "buse": 255, "bush": 255, "bushi": 255, "bushong": 255, "busi": [13, 46, 81, 154, 160, 216, 283, 289, 340], "businaro": 255, "buss": 255, "buster": 1, "butenko": 255, "butera": 255, "buterman": 255, "butson": 255, "butterman": 255, "butterworth": 254, "button": [12, 14, 25, 28, 29, 31, 32, 34, 36, 37, 42, 45, 46, 47, 48, 50, 66, 67, 70, 76, 79, 80, 84, 85, 86, 94, 96, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 124, 129, 130, 131, 133, 134, 142, 144, 147, 156, 173, 174, 179, 182, 185, 188, 210, 221, 222, 224, 226, 227, 229, 230, 234, 238, 246, 248, 257, 258, 259, 261, 262, 271, 273, 276, 285, 303, 304, 309, 312, 316, 335, 345, 346, 348, 350, 351, 353, 354, 358, 362], "button_id": 312, "button_st": 312, "buxton": 255, "buzsaki": 255, "buzs\u00e1ki": 255, "bu\u00f1o": 255, "bvec": [150, 279], "bx": 39, "bxd": 255, "byczkowicz": 255, "bye": 204, "bypass": [223, 347], "byproduct": 255, "byte": [76, 160, 200, 201, 242, 289, 292, 327, 328], "byteswap": 289, "bytschok": 255, "bywalez": 255, "b\u00e9": 255, "b\u00e9dard": 255, "b\u00e9huret": 255, "b\u00f6rger": 255, "b\u00f6rjesson": 255, "b\u00fa": 255, "b\u00fchrer": 255, "b\u00fcsing": 255, "c": [1, 4, 7, 11, 32, 36, 39, 41, 52, 53, 54, 56, 58, 60, 81, 82, 83, 85, 87, 91, 92, 93, 96, 119, 120, 126, 134, 136, 138, 151, 153, 154, 155, 160, 161, 166, 168, 169, 171, 175, 185, 186, 188, 190, 197, 200, 201, 202, 204, 213, 216, 219, 220, 229, 233, 242, 244, 246, 247, 248, 249, 252, 254, 255, 262, 264, 266, 268, 280, 282, 283, 284, 289, 290, 296, 301, 305, 314, 315, 316, 317, 324, 327, 328, 329, 337, 338, 340, 343, 344, 349, 353, 357, 363, 366, 370, 377, 381, 383, 384, 387], "c1": [21, 32, 101, 112, 113, 114, 153, 214, 250, 282, 338], "c17008": [250, 371], "c17145": [250, 371], "c2": [153, 250, 282, 349, 377], "c23": 98, "c3": [153, 282, 377], "c4": 377, "c46dbc7": 363, "c5": 377, "c6": 377, "c6ib00157b": 255, "c91662": [64, 359, 361, 368, 373], "c_data": 53, "c_int": 296, "c_intfire1": [21, 32], "c_style": [149, 278], "ca": [41, 64, 149, 155, 161, 163, 201, 250, 255, 278, 282, 283, 284, 288, 292, 298, 299, 314, 332, 359, 360, 361, 365, 366, 368, 369, 372, 388], "ca1": [41, 255, 360, 373, 387, 388], "ca2": [255, 369], "ca3": 255, "ca3b": 255, "ca_cadifu": 250, "ca_init": 365, "ca_ion": [149, 165, 250, 278, 295], "ca_plus_buf": 163, "ca_vec": 372, "cab2uf": 372, "caban": 255, "cabestani": 255, "cabl": [25, 33, 38, 42, 66, 81, 103, 124, 126, 136, 154, 156, 166, 255, 264, 283, 284, 285, 296, 388], "cable_prop_assign": 60, "caboni": 255, "cabpump": [154, 220, 283, 344], "cabuf": [163, 372], "cabuff": 250, "cabufi": 163, "cac_init": 369, "cach": [3, 6, 7, 36, 161, 170, 233, 249, 255, 290, 300, 357], "cache_effici": [220, 344], "cacheaux": 255, "cacl2": 366, "cacl2_react": 366, "cacl_2": 366, "cacna1g": 255, "cacna1h": 255, "cacna1i": 255, "cacyt_init": 369, "cad": 36, "cadif": 250, "cadiff": 369, "cadifu": 250, "cadifus_cel": 250, "cadifuscel": 250, "caenorhabd": 255, "caffein": 255, "cagk": [154, 283], "cagnan": 255, "cai": [4, 149, 154, 155, 163, 225, 250, 255, 278, 283, 284, 292, 349, 366, 369], "cai0": [154, 250, 283], "cai0_ca_ion": [133, 149, 155, 261, 278, 284, 368], "cai_vec": 250, "caiati": 255, "cain": 255, "cainf": 250, "cairasco": 255, "cakir": 255, "calamandrei": 255, "calbindin": 369, "calbindin_": 372, "calbindin_0": 372, "calbindin_1": 372, "calc": 242, "calcium": [41, 64, 76, 95, 154, 155, 163, 165, 220, 250, 255, 283, 284, 292, 295, 344, 353, 366, 368, 372, 374], "calciump": 36, "calcul": [4, 13, 16, 17, 18, 25, 29, 30, 41, 52, 53, 81, 86, 87, 89, 93, 94, 96, 130, 131, 132, 133, 134, 136, 137, 138, 139, 149, 154, 155, 159, 160, 166, 196, 201, 220, 227, 229, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 278, 283, 284, 289, 292, 296, 323, 328, 344, 351, 353, 382, 387], "caldwel": 255, "cali": 255, "cali_config": 242, "calib": 255, "calibr": [25, 47], "california": [126, 255], "calin": 255, "calip": [54, 242], "call": [0, 1, 4, 8, 9, 10, 14, 24, 25, 27, 28, 29, 36, 37, 42, 45, 47, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 69, 70, 76, 77, 79, 81, 86, 87, 88, 89, 90, 91, 94, 96, 98, 100, 103, 104, 107, 110, 123, 124, 125, 126, 129, 133, 134, 136, 138, 140, 148, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 166, 168, 169, 171, 173, 174, 177, 179, 182, 185, 186, 188, 189, 195, 197, 198, 200, 201, 205, 208, 209, 210, 217, 219, 220, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 237, 242, 246, 253, 257, 261, 262, 264, 266, 268, 269, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 296, 298, 299, 300, 301, 303, 304, 307, 309, 312, 314, 315, 316, 322, 324, 325, 327, 328, 334, 335, 341, 343, 344, 345, 347, 348, 349, 350, 351, 353, 355, 357, 358, 359, 360, 361, 366, 371, 376, 377, 381, 382, 383, 384, 385, 387, 388], "callabl": [56, 81, 138, 151, 154, 155, 160, 211, 266, 280, 283, 284, 289, 292, 314, 357, 368], "callawai": 255, "callback": [4, 53, 151, 164, 208, 229, 280, 294, 330, 334, 344, 353], "caller": [52, 249], "callier": 255, "callingneuron": 60, "calmodulin": [255, 369], "calyx": 255, "cal\u00ec": 255, "cam": 255, "cambridg": [25, 126, 254, 255], "came": [40, 70, 94, 160, 289], "cameron": 255, "camir\u00e9": 255, "camkii": 255, "camp": 255, "campagnola": 255, "campidelli": 255, "campiglio": 255, "campo": 255, "camu\u00f1a": 255, "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 64, 66, 67, 68, 70, 73, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 110, 114, 117, 119, 120, 123, 125, 126, 127, 129, 130, 131, 133, 134, 136, 144, 147, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 170, 171, 173, 175, 177, 179, 181, 182, 185, 186, 188, 189, 190, 191, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 252, 253, 255, 257, 258, 259, 261, 262, 264, 268, 273, 276, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 301, 303, 305, 307, 309, 311, 312, 314, 315, 316, 317, 318, 320, 322, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389], "canakci": 255, "canavi": 255, "cancel": [172, 173, 179, 188, 195, 210, 230, 231, 302, 303, 309, 316, 322, 335, 354, 355, 388], "cancer": 255, "candela": [119, 120], "candi": 255, "candid": [221, 224, 255, 345, 378, 379], "canedo": 255, "canepari": 255, "canew": 388, "canfield": 255, "canin": 255, "cannabi": 255, "cannabinoid": 255, "cannia": [126, 254, 255], "cannon": [254, 255], "cannot": [3, 4, 8, 36, 39, 53, 56, 60, 81, 98, 100, 119, 120, 136, 150, 154, 160, 161, 165, 169, 177, 182, 185, 186, 197, 201, 204, 219, 220, 221, 223, 229, 231, 242, 246, 250, 255, 264, 266, 279, 282, 283, 284, 285, 289, 290, 295, 307, 312, 314, 315, 320, 324, 328, 343, 344, 345, 347, 353, 355, 377, 378, 380, 387], "cano": 255, "canon": [53, 255, 377], "cantagrel": 255, "cantarelli": 255, "cantrel": 255, "canuto": 255, "canva": [27, 31, 32, 37, 47, 66, 86, 96, 104, 112, 229, 231, 353, 355], "canzoniero": 255, "cao": [149, 155, 255, 278, 284], "cao0_ca_ion": [149, 155, 278, 284, 368], "cap": 54, "capabl": [7, 81, 126, 229, 246, 255, 373], "capac": [53, 81, 255, 344], "capacit": [94, 96, 119, 153, 201, 220, 255, 282, 328, 344, 382, 383, 384, 388], "capacitor": [31, 33, 255], "cape": 255, "capit": [28, 201, 229, 328, 353, 387], "capllonch": 255, "capogrosso": 255, "capsul": 255, "caption": [127, 179, 309], "captur": [25, 40, 51, 76, 96, 100, 201, 210, 241, 242, 250, 255, 328, 335], "capurro": 255, "caputi": 255, "car": [182, 312], "carannant": 255, "carat": 81, "carbachol": 255, "carbamazepin": 255, "carbon": [160, 255, 289, 363], "carbunaru": 255, "card": [127, 133, 147, 173, 255, 261, 276, 303, 363], "carda": 255, "cardaci": 255, "cardamon": 255, "cardarilli": 255, "cardiac": 255, "cardin": 255, "cardiovascular": 255, "care": [27, 41, 53, 60, 126, 153, 154, 160, 166, 188, 197, 201, 220, 242, 248, 282, 283, 289, 296, 316, 328, 344, 377, 385], "career": 40, "carefulli": [47, 50, 153, 282, 382], "cariello": 255, "carlen": 255, "carleton": 255, "carlier": 255, "carlin": 255, "carlsson": 255, "carnei": 255, "carneval": [25, 35, 76, 88, 89, 100, 125, 126, 160, 201, 254, 255, 289, 328, 377, 385], "carol": [220, 344], "carotid": 255, "carp": 255, "carr": 255, "carri": [10, 11, 13, 93, 136, 147, 154, 155, 160, 255, 264, 276, 283, 284, 289, 372], "carriag": [190, 317], "carrillo": 255, "carrol": 255, "cartesian": 366, "cartmel": 255, "carvalho": 255, "casal": 255, "casaleggio": 255, "casali": 255, "cascad": 255, "case": [0, 1, 3, 4, 7, 8, 33, 36, 37, 39, 42, 53, 54, 56, 66, 68, 81, 82, 98, 100, 103, 104, 119, 120, 124, 133, 134, 136, 148, 151, 153, 154, 155, 158, 159, 160, 161, 164, 166, 169, 170, 171, 182, 185, 195, 197, 200, 201, 204, 210, 219, 220, 225, 229, 231, 236, 242, 246, 247, 248, 255, 261, 262, 264, 277, 280, 282, 283, 284, 287, 288, 289, 290, 292, 294, 296, 300, 301, 312, 314, 322, 324, 327, 328, 330, 334, 335, 343, 344, 349, 353, 355, 360, 366, 368, 377, 378, 380, 381, 382, 383, 385, 387], "casellato": 255, "cash": [36, 255], "cask": [246, 248], "caspi": 255, "cassara": 255, "cassar\u00e1": 255, "cassett": 255, "cast": [98, 126, 186, 296, 315, 324], "castelfranco": 255, "castelli": 255, "castonguai": 255, "castro": 255, "castroflorio": 255, "cat": [210, 219, 250, 255, 335, 343], "catacomb": [89, 150, 279], "catalano": 255, "cataldi": 255, "cataldo": 255, "catalina": 247, "catch": [242, 255, 315], "catch2": 3, "catchal": [220, 344], "catchorg": 3, "cateau": 255, "categori": [86, 100, 103, 108, 119, 124], "catfish": 255, "cathala": 255, "catheral": 255, "cathod": 255, "cation": 255, "catoni": 255, "cattaert": 255, "cattaneo": 255, "cattani": 255, "catteral": 255, "cauller": 255, "caus": [1, 9, 33, 36, 42, 46, 50, 53, 80, 81, 95, 96, 98, 103, 124, 133, 134, 138, 144, 153, 154, 155, 159, 160, 161, 163, 166, 171, 174, 190, 198, 201, 220, 221, 229, 231, 232, 234, 242, 248, 253, 255, 261, 262, 266, 268, 273, 279, 282, 283, 284, 288, 289, 290, 292, 296, 301, 304, 317, 325, 328, 344, 345, 353, 355, 356, 358, 366, 368, 370, 377, 382, 387], "causal": 255, "caution": [155, 160, 252, 284, 289, 393], "cauwenbergh": 255, "cav1": 255, "cav2": 255, "cav3": 255, "cavaccini": 255, "cavarretta": 255, "caveat": [40, 154, 155, 234, 283, 284, 358, 381], "cavied": 255, "cavit": 255, "caviti": 255, "cayco": 255, "cazad": 255, "cazenav": 255, "caz\u00e9": 255, "ca\u00f1ada": 255, "cb": [104, 285], "cbo9780511541612": 254, "cbwidget": [231, 355], "cc": [25, 340, 366], "ccach": 1, "cck": 255, "ccmake": 3, "cd": [3, 7, 31, 45, 46, 55, 158, 160, 241, 242, 244, 246, 248, 287, 289], "cd480afb": 289, "cdegrad": 370, "cdot": [366, 376], "ceas": [53, 159, 288], "ceballo": 255, "ceca": 255, "ceec": 255, "ceec47804": 255, "ceil": [91, 163, 292, 293], "cel": 255, "cela": 255, "celbild": 14, "cell": [1, 5, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 40, 41, 43, 47, 50, 58, 64, 68, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 100, 103, 104, 117, 118, 124, 126, 130, 131, 136, 140, 142, 144, 145, 146, 148, 152, 155, 156, 157, 159, 160, 161, 164, 165, 166, 167, 173, 174, 178, 200, 201, 204, 205, 219, 220, 225, 227, 234, 236, 237, 250, 251, 253, 254, 255, 258, 259, 264, 269, 271, 273, 274, 275, 277, 281, 284, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 303, 304, 314, 327, 328, 343, 344, 349, 351, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 385, 386, 387, 391], "cell_append": [21, 22, 32], "cell_build": 58, "cell_part": 387, "cell_permut": 289, "cell_to_plot": 385, "cellbodi": 58, "cellbuid": 27, "cellbuild": [24, 26, 27, 30, 31, 33, 34, 42, 43, 46, 47, 58, 65, 68, 80, 83, 86, 90, 96, 103, 104, 105, 106, 108, 110, 121, 124, 125, 126, 141, 173, 270, 303], "cellml": 89, "cellobj": [159, 288], "cellobject": [161, 290], "cellot": 255, "celltyp": [37, 58], "cellular": [25, 33, 86, 126, 255], "celrep": 255, "celsiu": [4, 36, 38, 81, 119, 120, 137, 154, 160, 223, 265, 283, 347, 371, 388], "cembrowski": 255, "cen": 70, "center": [4, 12, 29, 38, 41, 47, 64, 70, 81, 86, 103, 111, 124, 127, 131, 153, 155, 165, 166, 172, 188, 201, 204, 219, 220, 225, 229, 231, 235, 237, 250, 255, 259, 282, 284, 292, 295, 296, 302, 314, 316, 328, 343, 344, 353, 355, 359, 361, 382, 383, 388, 393], "centigrad": [223, 347], "centimet": [70, 119, 120, 255], "cento": 246, "centos7": 1, "centos8": 1, "centr": 53, "central": [29, 39, 129, 201, 255, 257, 328, 377], "centroid": [68, 166, 234, 237, 296, 358, 361], "cepeda": 255, "cephalalgia": 255, "cer": 247, "cercor": 255, "cerc\u00f3": 255, "cerebellar": 255, "cerebellum": [255, 387], "cerebr": 255, "cerebrospin": 255, "cerina": 255, "cern": 127, "certain": [4, 6, 45, 53, 60, 64, 119, 163, 205, 226, 231, 236, 242, 246, 292, 293, 314, 350, 355, 360, 366, 368, 376, 377, 388], "certainli": [7, 32, 53, 119, 120, 133, 161, 199, 220, 261, 290, 326, 344], "certif": 247, "cerveri": 255, "cervic": 255, "cesana": 255, "cesar": 255, "cesarelli": 255, "cesca": 255, "cesium": 255, "cest\u00e8l": 255, "cf": 197, "cfile": 373, "cflag": 246, "cga": [233, 357], "ch": [127, 197, 248, 324], "ch_p4": [158, 160, 287, 289], "chabrol": 255, "chacko": 255, "chacron": 255, "chadderdon": 255, "chah": 255, "chai": 255, "chaillet": 255, "chain": [81, 197, 201, 224, 227, 255, 324, 328, 348, 351, 388], "chakraborti": 255, "chalimourda": 255, "chalkiadaki": 255, "challeng": [10, 11, 38, 39, 96, 126, 255, 377], "cham": 255, "chamber": 255, "chamberland": 255, "chameau": 255, "chameh": 255, "champnei": 255, "chan": 255, "chanc": [36, 67, 119, 120, 154, 168, 283, 298], "chandeli": 255, "chandler": 255, "chang": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 44, 46, 50, 53, 60, 66, 69, 70, 77, 80, 81, 82, 87, 95, 98, 99, 100, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 119, 120, 124, 126, 127, 129, 130, 131, 133, 134, 136, 144, 145, 147, 150, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 174, 175, 176, 180, 181, 182, 185, 188, 189, 193, 194, 196, 197, 201, 203, 210, 216, 218, 220, 223, 224, 225, 227, 229, 231, 234, 235, 236, 237, 240, 242, 247, 248, 250, 252, 253, 255, 257, 258, 259, 261, 262, 264, 273, 274, 276, 279, 280, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 300, 303, 304, 305, 306, 310, 311, 312, 314, 316, 320, 321, 323, 324, 328, 330, 331, 334, 335, 340, 342, 344, 347, 348, 349, 351, 353, 355, 357, 358, 359, 360, 361, 365, 369, 370, 372, 378, 379, 382, 383, 385, 387, 388], "change_pa": [203, 330], "changeabl": [163, 292], "changecolor": [229, 353], "changenam": [103, 124], "changeparmfromlist": [128, 256], "channel": [1, 4, 24, 26, 27, 29, 30, 31, 33, 37, 38, 45, 48, 65, 66, 68, 76, 82, 83, 87, 89, 94, 96, 100, 126, 136, 142, 146, 150, 153, 154, 155, 163, 223, 227, 250, 254, 255, 264, 271, 275, 277, 279, 282, 283, 284, 292, 293, 342, 347, 351, 366, 368, 369, 374, 382, 391], "channelbuild": [82, 83, 123, 126, 150, 163, 279, 292], "channelopathi": 255, "channelostasi": 255, "channelpedia": 255, "channelrhodopsin": 255, "chao": 255, "chaotic": 255, "chapman": 255, "chapter": [40, 52, 76, 81, 82, 83, 126, 254], "char": [52, 53, 56, 60, 201, 214, 229, 328, 338, 377], "charact": [1, 70, 76, 81, 94, 119, 120, 155, 165, 177, 188, 190, 191, 201, 213, 214, 216, 220, 227, 229, 231, 233, 284, 295, 307, 316, 317, 318, 328, 337, 338, 340, 344, 351, 353, 355, 357, 388], "character": [40, 255, 366], "characterist": 255, "charbonneau": 255, "charg": [1, 25, 31, 52, 64, 96, 126, 137, 149, 155, 201, 248, 255, 265, 278, 284, 292, 320, 328, 344, 359, 360, 366, 368, 369, 371, 372, 373, 376], "charge_if_ion": 289, "charlist": [191, 318], "charneau": 255, "charrier": 255, "chart": 76, "chartrand": 255, "chattarji": 255, "chaturvedi": 255, "chatzikalymni": 255, "chaudhari": 255, "chauvier": 255, "chavan": 255, "chavli": 255, "chdir": [216, 340, 388], "che": 255, "cheap": [154, 283], "chebi": [155, 284, 292, 371], "chebyshev": 255, "check": [0, 1, 3, 13, 25, 27, 28, 29, 31, 34, 35, 36, 38, 45, 46, 47, 52, 53, 54, 60, 66, 67, 76, 81, 86, 94, 96, 98, 119, 120, 127, 129, 133, 134, 154, 155, 160, 161, 164, 175, 182, 185, 192, 197, 201, 205, 210, 213, 220, 221, 223, 224, 225, 231, 232, 242, 246, 247, 257, 261, 262, 283, 284, 289, 290, 292, 294, 304, 312, 314, 315, 319, 324, 328, 335, 337, 340, 344, 345, 347, 348, 349, 355, 356, 377, 382, 384, 387], "check_cal": 253, "check_obj_typ": 56, "checkbox": [14, 27, 47, 66, 86, 94, 96, 106, 125, 127, 129, 133, 134, 182, 220, 231, 257, 261, 262, 312, 344, 355], "checkboxpress": 312, "checker": [119, 120], "checkin": [210, 227, 335, 351], "checkmark": [31, 134, 143, 181, 227, 262, 272, 311, 351], "checkout": [210, 248, 335, 363, 378, 379], "checkpoint": [81, 210, 223, 335, 347, 363, 388], "chekmenev": 255, "chemic": [41, 154, 255, 283, 366, 368, 369], "chemin": 255, "chemistri": 255, "chemla": 255, "chemotherapi": 255, "chen": [254, 255], "cheng": 255, "chepkoech": 255, "chere_invok": 249, "chernetchenko": 255, "chernova": 255, "chernyi": 255, "cherri": [377, 378], "cherubini": 255, "chestek": 255, "chetkovich": 255, "cheung": 255, "chevali": 255, "chevalli": 255, "chevtchenko": 255, "chew": 255, "chgobj": 314, "chgstr": 314, "chgval": 314, "chiang": 255, "chibalina": 255, "chick": 255, "chief": [71, 127], "chiel": 255, "chien": 255, "chikvashvili": 255, "child": [53, 156, 160, 165, 166, 168, 285, 289, 295, 296, 298, 314, 377], "childend": 388, "childhood": 255, "children": [47, 54, 86, 165, 167, 168, 295, 297, 298, 388], "childsec": 314, "childsect": 388, "childx": 314, "chimento": 255, "china": 255, "chindemi": [93, 255], "chintaluri": 255, "chiovini": 255, "chirila": 255, "chitwood": 255, "chiu": 255, "chk_access": 53, "chlorid": [255, 292, 366], "chmykhova": 255, "cho": 255, "chocolatei": 249, "choi": 255, "choic": [14, 25, 27, 38, 39, 64, 66, 78, 94, 99, 126, 127, 154, 179, 244, 255, 283, 309, 312, 365, 377], "choleski": 197, "cholesky_factor": [197, 202], "cholesky_solv": 197, "cholinerg": 255, "chong": 255, "chono": 255, "choo": 255, "choos": [1, 14, 24, 38, 39, 49, 66, 76, 78, 81, 98, 100, 104, 106, 119, 120, 126, 127, 144, 151, 155, 166, 179, 210, 220, 246, 247, 255, 273, 280, 282, 284, 289, 296, 309, 335, 344, 369], "chooser": [99, 133, 134, 179, 187, 188, 227, 231, 261, 262, 309, 316, 351, 355], "chop": 76, "chopp": 255, "chose": 80, "chosen": [28, 29, 70, 74, 103, 116, 124, 133, 136, 149, 154, 160, 170, 179, 210, 221, 227, 229, 231, 234, 261, 264, 278, 283, 289, 300, 309, 335, 345, 351, 353, 355, 358, 376, 382, 385], "chow": 255, "chowdhuri": 255, "chr": 337, "christen": 255, "christensen": 255, "christi": 255, "christianson": 255, "christodoul": 255, "chromaffin": 255, "chronaxi": 255, "chronic": 255, "chu": 255, "chung": 255, "chunk": [76, 198, 201, 239, 325, 328, 369], "churchil": 255, "ch\u00e9reau": 255, "ci": [1, 3, 137, 210, 242, 246, 248, 265, 335, 377, 380], "cicr": 369, "cid": 255, "cifuent": 255, "cilio": 255, "cimal": 70, "cingul": 255, "cinit": [149, 278], "cio": 255, "ciossek": 255, "ciotti": 255, "circa": [3, 320, 363], "circadian": [255, 374], "circl": [12, 29, 66, 70, 108, 110, 201, 228, 229, 237, 328, 352, 353, 361, 383], "circleci": [1, 243], "circresaha": 255, "circuit": [26, 38, 53, 76, 126, 153, 166, 255, 282, 296, 391], "circuitri": 255, "circul": 255, "circular": [81, 166, 296], "circumst": [64, 94, 103, 119, 120, 124, 139, 166, 182, 220, 224, 267, 296, 312, 344, 348], "citat": 25, "cj": 254, "cjd": 255, "ck2": 255, "cl": [201, 202, 229, 255, 292, 328, 329, 353, 366], "claassen": 255, "clai": 255, "claiborn": [25, 255], "claim": 385, "clamann": 255, "clamp": [25, 26, 28, 31, 33, 38, 44, 45, 66, 71, 87, 89, 93, 126, 127, 130, 133, 136, 144, 147, 151, 153, 220, 223, 230, 255, 258, 261, 264, 273, 276, 280, 282, 299, 304, 328, 342, 344, 347, 354, 363, 382, 388], "clamp_prepar": 60, "clamp_resist": [81, 223, 250, 347, 388], "clampex": 76, "clampexdata": 76, "clampobj": [153, 282], "clandinin": 255, "clang": [3, 7, 242, 244, 246, 247], "clangformat": 244, "clariti": [28, 67, 81, 110, 154, 283, 296, 366], "clark": 255, "clarkson": 255, "clash": [98, 377], "class": [1, 4, 9, 13, 28, 33, 35, 38, 40, 45, 47, 52, 53, 57, 64, 66, 68, 76, 77, 79, 81, 88, 96, 100, 109, 111, 112, 117, 123, 126, 131, 132, 136, 147, 148, 150, 151, 153, 155, 156, 159, 160, 161, 163, 164, 166, 167, 168, 169, 173, 174, 177, 178, 179, 180, 181, 185, 186, 188, 195, 196, 197, 198, 201, 202, 203, 204, 205, 208, 211, 212, 215, 217, 219, 220, 223, 225, 227, 228, 229, 235, 236, 237, 238, 240, 250, 255, 259, 260, 264, 269, 276, 277, 279, 280, 282, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 298, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 322, 323, 324, 325, 328, 329, 330, 334, 336, 339, 341, 343, 344, 347, 349, 351, 352, 353, 359, 360, 361, 362, 365, 366, 368, 369, 373, 382, 385, 386, 388, 392, 393], "class2oc": 56, "classic": [25, 74, 76, 163, 166, 246, 255, 292, 296, 368], "classif": 255, "classifi": 255, "classnam": [37, 56, 80, 182, 205, 312], "classreg": 52, "clau": 255, "claus": 385, "claustrum": 255, "clean": [0, 3, 40, 52, 67, 95, 160, 248, 289, 370, 377], "cleaner": [144, 273, 295, 377, 388], "cleanli": [289, 295], "cleanup": [283, 377], "clear": [0, 3, 8, 14, 27, 29, 31, 70, 81, 119, 120, 160, 214, 218, 219, 220, 223, 225, 234, 248, 289, 338, 342, 343, 344, 347, 349, 358, 370, 372, 377, 378, 388], "clearanc": 255, "clearer": [67, 119, 201, 296], "cleari": 255, "clearli": [12, 24, 29, 39, 119, 120, 127, 154, 247, 283, 377, 382, 383], "cleav": 255, "cleft": 255, "cleland": 255, "clemen": 255, "clerc": 255, "clever": [78, 96], "click": [1, 12, 14, 24, 25, 27, 31, 32, 42, 45, 46, 47, 50, 66, 67, 70, 73, 76, 79, 80, 81, 84, 85, 86, 89, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 124, 125, 126, 127, 131, 133, 134, 143, 144, 154, 173, 174, 178, 179, 229, 231, 234, 237, 238, 246, 247, 248, 259, 261, 262, 272, 273, 282, 283, 303, 304, 308, 309, 312, 353, 355, 358, 359, 361, 362, 377, 382], "client": [160, 289, 373], "cliff": [93, 126], "climb": 255, "clinic": 255, "clinph": 255, "clip": [70, 231, 233, 355, 357], "clipboard": [70, 94, 96, 133, 134, 221, 261, 262, 345], "clipboard_get": 19, "clipboard_retriev": 19, "cliqu": 255, "clock": [160, 255, 289], "clock_t": [160, 289], "clockwis": 70, "cloherti": 255, "cloment": 255, "clonazepam": 255, "clone": [3, 7, 144, 153, 201, 229, 241, 244, 248, 249, 273, 282, 328, 353, 377], "clonic": 255, "clopath": 255, "close": [16, 17, 25, 28, 37, 38, 39, 42, 47, 53, 63, 70, 81, 85, 86, 94, 95, 96, 103, 107, 108, 109, 110, 112, 113, 114, 115, 124, 126, 133, 134, 153, 160, 165, 166, 173, 177, 182, 183, 187, 188, 189, 192, 201, 204, 205, 220, 225, 227, 228, 229, 233, 242, 246, 253, 255, 261, 262, 282, 289, 295, 296, 303, 307, 312, 313, 316, 319, 328, 344, 349, 351, 352, 353, 357, 373, 377, 385], "close_path": [228, 352], "closer": [47, 86, 94, 96, 127, 371], "closest": [25, 131, 259, 344, 377, 378, 388], "closeup": 86, "clostridium": 255, "cloud": [93, 240, 255, 389], "clue": [46, 66, 127, 255], "cluster": [3, 7, 10, 11, 47, 54, 86, 126, 160, 161, 242, 246, 255, 289, 290, 385], "cluster49012": 255, "clusteron": 255, "clutter": [80, 107, 161, 290], "cm": [10, 11, 14, 15, 22, 24, 25, 33, 37, 41, 43, 45, 47, 65, 66, 67, 68, 96, 108, 110, 119, 120, 125, 137, 151, 153, 154, 166, 201, 227, 265, 280, 282, 283, 296, 312, 328, 351, 359, 371, 382, 383, 384, 388], "cm1": 92, "cm2": [11, 66, 67, 92, 96, 119, 120, 137, 151, 153, 155, 166, 182, 220, 250, 265, 280, 282, 284, 312, 344, 371, 373, 382, 383, 384, 388], "cm4": [119, 120], "cmake": [0, 1, 3, 7, 54, 59, 241, 242, 244, 245, 247, 248, 249, 340, 377], "cmake_binary_dir": 3, "cmake_build_typ": 340, "cmake_c_compil": 340, "cmake_c_flag": 3, "cmake_cxx_compil": 340, "cmake_cxx_flag": 3, "cmake_instal": 340, "cmake_install_prefix": 340, "cmake_prefix_path": [1, 242], "cmakecach": [3, 7], "cmakefil": 7, "cmakeformat": 244, "cmakelist": [3, 59, 247, 377], "cmap": [359, 361], "cmat": [151, 280], "cmd": [10, 160, 170, 182, 249], "cmdstr": [216, 340], "cmp": [10, 11], "cmpb": 255, "cn": [1, 255, 370, 391, 393], "cndegrad": 370, "cne": [40, 47, 255], "cnexp": [4, 36, 153, 220, 282, 344, 371], "cng": [368, 373], "cnm": 255, "cnrniv": 81, "cnsn": 255, "cnt": [160, 177, 203, 219, 220, 289, 307, 330, 343, 344], "cnvec": 370, "co": [28, 52, 60, 81, 91, 137, 163, 166, 173, 185, 195, 201, 202, 204, 229, 233, 255, 265, 292, 293, 296, 303, 322, 328, 329, 353, 357, 383, 384, 385, 388], "coaster": 255, "cobb": 255, "cocain": 255, "cochlea": 255, "cochlear": 255, "cochran": 255, "codadu": 255, "codata2018": 320, "code": [1, 3, 4, 7, 14, 16, 31, 38, 39, 45, 47, 49, 51, 56, 57, 64, 65, 68, 69, 71, 81, 82, 83, 87, 88, 89, 90, 91, 96, 98, 125, 126, 140, 153, 154, 155, 160, 161, 171, 185, 190, 197, 201, 205, 206, 211, 219, 220, 224, 229, 240, 242, 243, 246, 247, 251, 252, 253, 255, 269, 275, 277, 282, 283, 284, 285, 288, 289, 290, 292, 296, 298, 299, 301, 302, 304, 314, 315, 316, 317, 318, 322, 324, 328, 330, 332, 333, 337, 341, 342, 343, 344, 348, 351, 353, 357, 360, 363, 366, 367, 368, 369, 370, 371, 377, 381, 382, 383, 384, 385, 388, 393], "code_str": 285, "codebas": [1, 53, 242, 363, 377, 378], "codei": 52, "codepath": 53, "codesign": 247, "codesym": 52, "codraw": 189, "coeefici": 223, "coeffici": [41, 154, 160, 166, 283, 289, 292, 296, 347, 366, 369, 373], "coenen": 255, "coggan": 255, "cognit": 255, "cohen": 255, "coher": 255, "coil": 255, "coincid": [166, 255, 296, 366], "coker": 255, "col": [197, 324, 371], "colab": [63, 240, 365, 367, 368, 370, 371, 376, 389, 392], "colado": 255, "colangelo": 255, "colbert": 255, "colburn": 255, "cold": 255, "cole": 255, "colecraft": 255, "colibaba": 255, "collabor": [89, 126, 127, 255, 377], "collaps": 53, "collater": 255, "colleagu": 40, "colleaux": 255, "collect": [10, 11, 40, 47, 54, 59, 64, 81, 82, 83, 90, 93, 96, 100, 134, 136, 144, 155, 160, 161, 169, 173, 197, 201, 227, 231, 242, 254, 255, 262, 264, 273, 284, 289, 290, 303, 324, 328, 351, 355, 366, 383], "collet": 255, "colliculu": 255, "collid": 96, "collier": [220, 344], "collin": 255, "colling": 255, "collingridg": 255, "collis": 255, "collman": 255, "colombo": 255, "colon": [154, 170, 204, 255, 283, 300, 387], "colonel": 255, "color": [28, 47, 53, 58, 70, 73, 80, 87, 89, 101, 127, 131, 145, 166, 201, 228, 229, 231, 233, 234, 235, 236, 237, 238, 255, 259, 274, 282, 296, 328, 334, 352, 353, 355, 357, 358, 359, 360, 361, 362, 366, 382, 383, 384], "color_al": [235, 237, 359, 361], "color_index": [229, 353], "color_list": [235, 237, 359, 361], "colorbar": [234, 358], "colorect": 255, "colorindex": [228, 229, 237, 352, 353, 361], "colormap": [235, 359, 361], "colornam": [229, 353], "colorv": [233, 357], "column": [53, 66, 70, 80, 84, 133, 180, 197, 201, 229, 231, 255, 261, 310, 324, 328, 353, 355, 363, 388], "columnar": 255, "com": [1, 3, 4, 7, 10, 52, 53, 55, 63, 70, 82, 96, 98, 240, 241, 246, 247, 248, 249, 254, 289, 355, 365, 367, 368, 370, 371, 373, 376, 377, 378, 387], "com1": [189, 233, 357], "comb": 255, "combin": [3, 52, 56, 64, 76, 81, 89, 100, 108, 126, 153, 161, 171, 185, 200, 201, 203, 223, 227, 231, 241, 242, 246, 255, 282, 290, 292, 295, 301, 312, 315, 327, 328, 330, 347, 351, 355, 374, 385, 387, 388], "come": [7, 11, 13, 29, 33, 36, 42, 52, 53, 66, 67, 68, 76, 82, 83, 88, 92, 94, 96, 99, 110, 111, 112, 119, 120, 139, 150, 151, 154, 160, 166, 188, 220, 227, 231, 234, 247, 267, 279, 280, 282, 283, 289, 296, 316, 344, 351, 355, 358, 366, 385, 387, 388], "comeri": 255, "comet": 49, "comfort": 81, "comma": [3, 28, 81, 204, 205, 387, 388], "command": [0, 1, 3, 4, 7, 8, 10, 11, 13, 14, 28, 29, 30, 31, 35, 45, 52, 58, 66, 70, 76, 81, 96, 99, 119, 120, 154, 155, 156, 158, 160, 165, 166, 169, 170, 171, 173, 174, 178, 179, 182, 185, 188, 189, 190, 191, 192, 201, 204, 210, 218, 221, 222, 228, 229, 231, 233, 237, 242, 244, 246, 247, 248, 249, 255, 268, 283, 284, 287, 289, 296, 299, 300, 301, 303, 304, 309, 312, 316, 317, 318, 319, 328, 335, 342, 345, 346, 352, 353, 355, 357, 361, 373, 377, 381, 385, 387], "commandlin": 381, "comment": [4, 28, 40, 42, 45, 55, 66, 76, 81, 103, 124, 136, 153, 184, 198, 218, 239, 248, 250, 255, 282, 325, 342, 371, 377], "commissur": 255, "commit": [0, 1, 3, 54, 98, 248, 363, 378, 379], "common": [3, 24, 36, 42, 47, 52, 70, 81, 86, 94, 100, 103, 124, 126, 133, 140, 147, 154, 160, 196, 202, 227, 229, 231, 246, 255, 261, 276, 283, 289, 292, 314, 323, 329, 351, 353, 355, 377, 378, 388], "commonfunctionalform": [128, 256], "commonli": [4, 140, 160, 200, 201, 220, 242, 269, 289, 327, 328, 344], "commun": [13, 52, 89, 126, 158, 160, 161, 209, 255, 284, 287, 289, 290, 363, 366, 369, 383, 386], "commut": [234, 358], "comp": 88, "compact": [87, 149, 155, 169, 204, 220, 255, 278, 284, 292], "compactli": 314, "companion": [133, 197, 255, 261, 324], "compar": [5, 9, 10, 11, 25, 32, 39, 40, 44, 45, 47, 49, 56, 89, 94, 133, 153, 160, 164, 185, 201, 215, 220, 229, 249, 255, 261, 282, 289, 294, 328, 339, 344, 369, 370, 377, 378, 382, 384, 387], "comparis": 242, "comparison": [28, 81, 127, 182, 185, 199, 201, 254, 255, 312, 326, 328], "compart": [26, 29, 33, 38, 41, 48, 60, 110, 119, 120, 126, 127, 134, 136, 143, 159, 163, 165, 166, 227, 250, 255, 262, 264, 272, 288, 292, 295, 296, 314, 342, 351, 366, 373, 382], "compartment": [24, 37, 45, 64, 66, 136, 166, 210, 255, 264, 296, 335], "compat": [1, 3, 6, 7, 8, 19, 46, 52, 57, 58, 81, 82, 98, 119, 120, 155, 160, 161, 188, 201, 220, 231, 233, 246, 247, 248, 252, 253, 284, 289, 290, 316, 328, 344, 355, 357, 360, 377, 378, 388], "compbiom": 255, "compel": [96, 255, 380], "compens": [46, 96, 255], "compensatori": 255, "competit": 255, "compil": [0, 1, 3, 4, 5, 6, 8, 10, 11, 46, 49, 53, 54, 60, 81, 87, 98, 126, 138, 140, 148, 153, 154, 155, 158, 160, 195, 207, 227, 242, 246, 247, 249, 251, 252, 266, 269, 277, 283, 284, 287, 289, 322, 333, 351, 373, 377, 378, 385], "complain": 36, "complaint": [40, 119, 120], "complement": 53, "complementari": [255, 293, 369, 393], "complet": [1, 10, 11, 12, 13, 14, 16, 33, 43, 45, 49, 51, 66, 67, 80, 82, 84, 94, 95, 96, 101, 105, 108, 109, 113, 115, 119, 120, 123, 133, 134, 136, 139, 154, 155, 160, 178, 197, 201, 216, 220, 221, 222, 223, 224, 227, 229, 231, 242, 247, 249, 255, 261, 262, 264, 267, 283, 284, 289, 308, 324, 328, 340, 343, 344, 345, 346, 347, 351, 353, 355, 377, 378], "complex": [3, 4, 10, 11, 14, 29, 36, 42, 46, 56, 65, 76, 81, 86, 87, 89, 94, 95, 100, 126, 133, 136, 160, 201, 210, 255, 261, 264, 289, 328, 335, 369, 382, 385], "compli": 377, "complianc": 377, "complic": [32, 41, 80, 153, 154, 160, 163, 173, 224, 233, 282, 283, 289, 303, 348, 357, 382], "compon": [3, 12, 13, 25, 33, 39, 53, 70, 76, 126, 173, 201, 220, 255, 303, 328, 344, 369, 382, 388], "composit": [99, 255], "compound": [81, 154, 185, 204, 255, 283], "comprehens": [255, 388], "compress": [160, 201, 255, 289, 292, 328], "compresss": 292, "compris": [293, 377], "compromis": 377, "compter": 255, "compuat": 76, "comput": [3, 6, 7, 9, 13, 25, 33, 36, 39, 40, 42, 47, 52, 53, 54, 60, 66, 76, 81, 86, 87, 88, 89, 91, 93, 94, 95, 96, 99, 100, 101, 119, 120, 125, 127, 129, 134, 135, 136, 149, 151, 153, 154, 155, 160, 161, 164, 165, 166, 169, 174, 189, 195, 198, 200, 201, 206, 218, 220, 223, 224, 225, 229, 230, 231, 232, 236, 242, 246, 254, 255, 257, 262, 263, 264, 278, 279, 280, 282, 283, 284, 289, 290, 294, 295, 296, 304, 322, 325, 327, 328, 332, 342, 344, 347, 348, 349, 353, 354, 355, 356, 360, 363, 371, 377, 381, 383, 385], "computation": [9, 54, 88, 126, 154, 155, 255, 283, 284, 377, 385], "comsol": 255, "con": [56, 70], "conant": 255, "concaten": [70, 147, 161, 201, 219, 276, 290, 328, 343], "concent": 373, "concentr": [41, 87, 94, 95, 119, 120, 136, 139, 149, 154, 155, 163, 223, 227, 250, 255, 264, 267, 278, 283, 284, 292, 347, 349, 351, 366, 367, 369, 370, 371, 373, 374, 376, 388, 392, 393], "concept": [81, 126, 154, 200, 283, 327, 373, 387, 388, 391], "conceptu": [9, 32, 81, 86, 89, 103, 110, 124, 126, 140, 146, 154, 155, 160, 163, 165, 169, 275, 283, 284, 289, 292, 295, 314, 363, 384, 385], "concern": [7, 40, 87, 241, 369], "concis": 377, "conclud": 96, "concomit": [220, 344], "concret": [66, 76, 81], "concurr": [160, 255, 289], "concuss": 255, "cond": 255, "conda": [0, 246], "conda_environ": 0, "condctanc": 94, "condduct": [153, 282], "condit": [4, 6, 24, 31, 36, 39, 41, 53, 64, 151, 153, 154, 155, 160, 164, 201, 204, 220, 250, 255, 280, 282, 283, 284, 289, 292, 294, 328, 344, 365, 366, 367, 368, 369, 370, 387], "condition": 4, "condition_ord": [159, 164, 220, 288, 294, 344], "conduct": [9, 10, 11, 25, 31, 37, 43, 46, 68, 76, 82, 83, 94, 95, 104, 105, 109, 119, 126, 127, 136, 150, 152, 153, 155, 159, 160, 201, 220, 223, 255, 264, 279, 281, 282, 284, 288, 289, 328, 344, 347, 371, 377, 378, 382, 384], "conductor": 255, "cone": [166, 255, 296], "conf": [55, 255], "confer": [89, 100, 255, 393], "confid": [160, 289], "config": [248, 289], "configur": [0, 3, 7, 31, 35, 45, 53, 54, 59, 65, 76, 93, 105, 108, 121, 158, 160, 161, 216, 242, 244, 246, 247, 249, 255, 287, 289, 290, 340, 377, 384, 385, 388], "configureonopen": 249, "confin": [32, 255], "confirm": [27, 28, 54, 80, 94, 96, 127, 160, 255, 289, 383], "conflict": [42, 67, 81, 103, 124, 155, 160, 255, 284, 289, 377], "confoc": 255, "conform": [95, 119, 120, 210, 335, 372], "conforto": 255, "confound": [100, 160, 289], "confus": [81, 107, 153, 159, 160, 166, 169, 173, 210, 223, 233, 282, 288, 289, 296, 303, 335, 347, 357, 377], "confusing_list": 387, "congenit": 255, "congenita": 255, "congratul": 31, "congress": 255, "congruenti": [198, 200, 325, 327], "conjunct": [14, 53, 169, 229, 353, 363], "conlin": 255, "connect": [5, 9, 12, 15, 22, 33, 36, 38, 45, 46, 47, 58, 60, 66, 70, 74, 75, 81, 86, 88, 100, 108, 109, 110, 111, 112, 117, 118, 126, 152, 153, 154, 159, 160, 161, 165, 166, 167, 168, 173, 174, 189, 201, 204, 219, 220, 221, 227, 233, 234, 250, 255, 275, 281, 282, 283, 288, 289, 290, 292, 295, 296, 297, 298, 303, 304, 314, 328, 343, 344, 345, 351, 357, 358, 359, 360, 367, 368, 370, 384, 385, 386, 387, 388, 393], "connect2target": [21, 22, 29, 32, 160, 161, 289, 290], "connecticut": 89, "connection_coef": 60, "connectom": 255, "connelli": 255, "connolli": 255, "connor": 255, "conscious": 255, "consecut": 45, "consensu": 255, "consequ": [9, 29, 53, 86, 98, 126, 155, 164, 166, 201, 220, 249, 255, 284, 294, 296, 328, 344, 377], "conserv": [155, 201, 251, 255, 284, 328, 344, 366], "consid": [3, 38, 39, 40, 41, 53, 64, 66, 68, 81, 82, 83, 87, 94, 100, 119, 120, 127, 151, 153, 154, 155, 156, 160, 162, 163, 164, 166, 185, 201, 203, 220, 248, 255, 280, 282, 283, 284, 285, 289, 291, 292, 293, 294, 296, 314, 318, 322, 328, 330, 331, 335, 337, 344, 357, 366, 367, 371, 376, 377, 378, 383, 387, 388], "consider": [81, 96, 133, 160, 161, 220, 224, 255, 261, 289, 290, 344, 348, 377, 378], "consist": [33, 52, 53, 56, 81, 94, 100, 119, 120, 127, 130, 134, 136, 144, 153, 154, 155, 160, 161, 166, 170, 171, 173, 177, 185, 197, 201, 205, 210, 216, 220, 221, 223, 224, 225, 226, 231, 234, 236, 246, 258, 262, 264, 273, 282, 283, 284, 289, 290, 292, 296, 300, 301, 303, 307, 314, 324, 328, 335, 340, 344, 345, 347, 348, 349, 350, 355, 358, 359, 360, 366, 377, 381, 382, 387, 388], "consol": [31, 81, 159, 160, 191, 216, 231, 289, 318, 340, 355], "consolid": [1, 255], "const": [52, 53, 56, 60], "constanc": 255, "constandin": 255, "constant": [9, 12, 24, 25, 31, 32, 37, 41, 52, 53, 64, 66, 76, 81, 89, 95, 96, 100, 107, 109, 119, 120, 123, 125, 126, 129, 133, 134, 145, 153, 155, 160, 163, 164, 165, 176, 197, 201, 202, 223, 227, 229, 231, 238, 251, 255, 257, 261, 262, 274, 282, 284, 292, 294, 295, 306, 324, 328, 329, 330, 347, 351, 353, 355, 362, 365, 366, 368, 369, 371, 373, 383], "constant_product": [163, 292], "constantli": [32, 81, 160, 289], "constexpr": 53, "constitu": 74, "constitut": [45, 164, 177, 255, 294, 307, 363], "constrain": [70, 126, 255, 292], "constraint": [25, 54, 93, 94, 153, 160, 255, 282, 289], "constrict": 255, "construct": [1, 4, 9, 26, 32, 33, 34, 37, 38, 42, 45, 52, 53, 55, 58, 64, 65, 66, 67, 71, 87, 90, 96, 98, 100, 103, 108, 123, 124, 126, 144, 154, 155, 159, 160, 161, 163, 165, 166, 169, 170, 182, 185, 197, 201, 204, 207, 221, 224, 227, 229, 231, 234, 246, 251, 252, 273, 283, 284, 288, 289, 290, 292, 295, 296, 300, 312, 314, 324, 327, 328, 333, 345, 348, 351, 353, 355, 358, 384, 385, 386, 388, 392], "constructor": [53, 56, 60, 155, 159, 160, 163, 164, 165, 200, 201, 214, 251, 284, 285, 288, 289, 292, 294, 327, 328, 333, 338, 359, 360, 361, 383], "consult": [8, 126, 242, 247, 380, 385], "consum": [10, 11, 76, 89], "cont": [221, 254, 255, 345], "contact": [255, 369, 387], "contacts2": 387, "contain": [1, 3, 7, 8, 13, 14, 16, 19, 31, 32, 33, 35, 37, 42, 45, 46, 47, 48, 49, 52, 57, 60, 64, 66, 67, 70, 76, 80, 82, 83, 86, 89, 90, 92, 94, 96, 98, 99, 101, 103, 107, 114, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 133, 134, 138, 139, 144, 145, 153, 154, 155, 159, 160, 163, 165, 166, 169, 170, 173, 174, 176, 182, 185, 190, 196, 197, 201, 202, 203, 204, 206, 207, 209, 210, 214, 216, 219, 220, 225, 227, 228, 229, 231, 233, 234, 237, 242, 246, 248, 255, 257, 258, 261, 262, 266, 267, 273, 274, 282, 283, 284, 288, 289, 292, 295, 300, 303, 306, 312, 314, 317, 323, 324, 327, 328, 329, 330, 332, 333, 335, 338, 340, 343, 344, 349, 351, 352, 353, 355, 357, 358, 361, 366, 368, 369, 373, 377, 387, 388], "contemporari": 254, "content": [0, 3, 24, 42, 45, 46, 49, 66, 76, 81, 93, 94, 103, 124, 127, 140, 154, 160, 173, 174, 188, 192, 201, 204, 210, 246, 247, 283, 285, 289, 303, 316, 319, 322, 328, 335, 340, 369, 377, 387, 388, 392], "context": [9, 52, 56, 77, 81, 136, 143, 148, 154, 157, 160, 165, 168, 169, 170, 173, 174, 178, 182, 185, 186, 200, 219, 220, 223, 229, 230, 231, 237, 242, 246, 255, 264, 272, 277, 283, 286, 289, 295, 298, 300, 303, 308, 312, 315, 327, 328, 343, 344, 347, 353, 354, 355, 361, 377, 384, 385, 387], "conti": 255, "contigu": [53, 182, 220, 312, 344], "continu": [14, 24, 26, 27, 31, 34, 36, 38, 39, 45, 47, 50, 52, 53, 67, 72, 80, 81, 89, 94, 96, 101, 108, 112, 126, 133, 148, 151, 153, 154, 155, 158, 159, 160, 166, 169, 201, 204, 210, 219, 220, 223, 224, 225, 229, 233, 242, 255, 261, 277, 279, 280, 282, 283, 284, 287, 288, 289, 293, 296, 328, 335, 343, 344, 347, 348, 349, 353, 357, 368, 369, 376, 377, 378, 380, 381, 388], "continue_dialog": [81, 172, 183, 302, 313, 388], "continuefor": [220, 344], "continuerun": [63, 72, 100, 119, 220, 224, 225, 227, 253, 282, 328, 344, 348, 349, 351, 359, 360, 361, 365, 366, 367, 370, 371, 373, 375, 376, 382, 383, 384, 385, 388], "continuous_simulations_of_net": 37, "contract": [89, 247, 255], "contrast": [64, 98, 155, 188, 255, 284, 316, 366], "contrera": [254, 255], "contribut": [1, 93, 94, 96, 133, 136, 140, 153, 155, 163, 191, 233, 237, 244, 255, 261, 264, 282, 284, 292, 318, 357, 361, 379], "contributor": [377, 378], "control": [1, 14, 16, 17, 18, 25, 27, 28, 31, 32, 33, 40, 42, 45, 53, 66, 70, 76, 87, 92, 94, 100, 101, 103, 104, 106, 124, 130, 131, 133, 144, 153, 154, 156, 160, 161, 169, 173, 177, 181, 182, 184, 187, 190, 204, 210, 220, 224, 229, 231, 234, 237, 246, 255, 258, 259, 261, 273, 282, 283, 285, 289, 290, 299, 303, 307, 311, 312, 317, 335, 344, 348, 353, 355, 358, 361, 369, 377, 382, 388], "control_point": 228, "conv": 29, "convei": 255, "conveni": [13, 14, 25, 27, 28, 32, 42, 47, 54, 56, 65, 66, 74, 81, 86, 87, 96, 99, 111, 112, 119, 120, 127, 150, 153, 154, 163, 166, 174, 179, 192, 201, 204, 220, 223, 224, 229, 231, 247, 248, 279, 282, 283, 292, 296, 304, 309, 312, 319, 328, 344, 347, 348, 353, 355, 369, 370, 377, 381, 387, 388], "convent": [119, 120, 136, 139, 155, 163, 244, 246, 253, 255, 264, 267, 284, 330, 371, 378, 379, 387], "converg": [1, 29, 39, 47, 86, 94, 96, 126, 136, 255, 264], "convers": [47, 86, 94, 99, 119, 120, 190, 201, 253, 255, 277, 317, 328, 331, 344, 388], "convert": [1, 3, 4, 16, 29, 56, 87, 96, 98, 119, 120, 126, 127, 163, 166, 190, 201, 220, 255, 292, 293, 296, 317, 328, 344, 366, 370], "convex": 255, "convinc": 39, "convlv": [201, 202, 328, 329], "convolut": [201, 328], "convolv": [201, 328], "conwai": 255, "coodin": [229, 353], "cook": [92, 95, 255], "cool": 255, "coomb": 255, "cooper": [255, 369], "coord": [19, 229, 353], "coordin": [3, 28, 32, 53, 86, 99, 131, 154, 166, 173, 175, 177, 180, 197, 209, 227, 228, 229, 231, 233, 236, 237, 255, 259, 283, 292, 296, 303, 305, 307, 310, 324, 351, 352, 353, 355, 357, 360, 361, 363, 368, 373], "cope": [59, 255], "copenhagen": 255, "copi": [1, 3, 10, 11, 28, 36, 37, 42, 43, 45, 46, 49, 53, 59, 67, 70, 87, 96, 99, 103, 108, 114, 124, 127, 133, 134, 144, 151, 154, 155, 160, 163, 177, 188, 189, 197, 201, 202, 203, 208, 209, 216, 219, 220, 221, 226, 229, 231, 236, 242, 247, 249, 253, 261, 262, 273, 280, 282, 283, 284, 289, 292, 307, 316, 324, 328, 329, 330, 334, 340, 343, 344, 345, 349, 350, 353, 355, 360, 365, 367, 368, 370, 371, 376, 382, 385, 387, 388], "copyinc": 249, "copyofarg1": 160, "copyright": [81, 160, 164, 242, 289, 294], "copysign": [163, 292, 293], "coral": 255, "corbalan": 255, "cord": 255, "cordella": 255, "core": [10, 11, 13, 36, 53, 54, 160, 163, 223, 242, 246, 250, 255, 289, 347, 377, 378, 385, 387], "coredump": [171, 210, 301, 335], "coredump_on_error": [81, 171, 301, 388], "coreldraw": [76, 127], "coreneuron": [1, 2, 5, 53, 54, 98, 155, 242, 247, 248, 255, 284, 289, 371], "coreneuron_handl": 388, "coreneuron_modtest": 54, "corenrn_enable_gpu": 3, "corenrn_enable_nmodl": 3, "coreutil": [246, 247], "corfa": 255, "corinn": 40, "cork": 255, "corkin": 255, "corn": 254, "corneal": 255, "corner": [10, 11, 25, 31, 42, 66, 70, 86, 99, 105, 175, 177, 229, 231, 233, 237, 255, 305, 307, 353, 355, 357, 361, 373], "cornford": 255, "cornu": 254, "corpuscl": 255, "corradi": 255, "correct": [10, 11, 14, 40, 42, 43, 47, 49, 86, 94, 98, 103, 108, 119, 120, 124, 139, 151, 153, 154, 155, 159, 160, 164, 166, 182, 201, 220, 223, 227, 241, 246, 247, 248, 250, 255, 267, 280, 282, 283, 284, 289, 293, 294, 296, 312, 328, 344, 347, 351, 360, 366, 377, 385], "correctli": [7, 53, 81, 153, 154, 155, 158, 160, 164, 201, 219, 220, 242, 253, 282, 283, 284, 287, 289, 294, 328, 343, 344, 377, 383, 384], "correl": [100, 198, 201, 202, 255, 325, 328, 329], "correspeond": 45, "correspond": [3, 16, 17, 25, 27, 29, 42, 52, 60, 64, 66, 70, 81, 86, 93, 96, 98, 99, 104, 131, 144, 145, 151, 153, 154, 155, 159, 160, 161, 163, 164, 166, 169, 197, 201, 206, 220, 223, 227, 231, 238, 242, 246, 248, 249, 259, 273, 274, 280, 282, 283, 284, 288, 289, 290, 292, 294, 296, 299, 324, 328, 332, 334, 344, 347, 351, 355, 357, 359, 362, 366, 368, 371, 377, 378, 381, 382, 388], "corrupt": [169, 242, 299], "corsi": 255, "cort_sec": 344, "cortex": [36, 255], "corti": 255, "cortic": [40, 68, 255], "corticalcel": 344, "cortico": 255, "corticohippocamp": 255, "corticospin": 255, "corticosteron": 255, "corticostriat": 255, "corticothalam": 255, "cosgrov": 255, "cosh": [91, 163, 292, 293], "cosin": [91, 201, 204, 255, 293, 328], "coskren": 255, "cost": [33, 53, 67, 78, 126, 139, 242, 255, 267, 344, 380, 388, 389], "costa": 255, "coul": [119, 120, 154, 250, 283], "could": [0, 4, 10, 11, 13, 14, 29, 30, 31, 40, 42, 45, 46, 47, 53, 56, 66, 76, 81, 94, 96, 103, 119, 120, 124, 133, 136, 160, 163, 174, 201, 234, 242, 246, 255, 261, 264, 289, 292, 299, 304, 314, 328, 344, 358, 366, 367, 368, 370, 371, 377, 382, 384, 385, 388], "coulomb": [81, 119, 120, 154, 193, 250, 283], "coulon": 255, "count": [1, 13, 16, 17, 18, 21, 22, 28, 29, 36, 56, 63, 94, 146, 153, 156, 161, 166, 173, 174, 177, 183, 185, 186, 188, 201, 203, 204, 205, 220, 227, 250, 275, 282, 285, 290, 292, 295, 296, 304, 307, 313, 314, 315, 316, 328, 330, 337, 344, 351, 385, 387], "count_to_1": 326, "countabl": 126, "countdown": [201, 328], "counter": [13, 52, 160, 200, 242, 289, 327], "counterclockwis": 70, "countercw": 70, "counterpart": [73, 81, 160, 190, 317], "countup": [201, 328], "coupl": [4, 11, 25, 46, 51, 58, 66, 80, 92, 107, 108, 136, 151, 153, 154, 155, 160, 246, 255, 264, 280, 282, 283, 284, 289, 387], "courcol": [93, 255], "courier": 70, "cours": [1, 13, 20, 24, 31, 38, 45, 53, 76, 80, 81, 82, 83, 86, 94, 95, 96, 100, 102, 126, 127, 154, 160, 161, 166, 173, 201, 229, 231, 255, 283, 289, 290, 292, 296, 303, 314, 328, 353, 355, 366, 370, 382, 383, 391], "courtesi": [188, 316], "courtin": 255, "cousin": 255, "couto": 255, "covari": 255, "covarrubia": 255, "coventri": 255, "cover": [6, 45, 66, 241, 246, 255], "cover_begin": [3, 241], "cover_html": [3, 241], "coverag": [1, 3, 243, 255], "coverage_flag": 241, "covolan": 255, "cow": 339, "cox": 255, "cp": 247, "cp310": 248, "cp38": 248, "cp38m": 248, "cp_dll": 249, "cpa": 255, "cplusplu": 249, "cpp": [1, 3, 52, 56, 153, 219, 241, 244, 246, 247, 343, 373], "cpt": [228, 255, 352], "cpu": [4, 6, 7, 54, 155, 158, 160, 161, 201, 242, 248, 255, 282, 284, 287, 289, 290, 328, 385], "cpublic": 52, "cpython": 56, "cr": [60, 250], "cracco": 255, "craft": 32, "cragg": 255, "crai": [1, 3, 7, 126, 139, 218, 246, 267, 342], "crane": 255, "crank": [44, 126, 166, 220, 223, 296, 344, 347, 393], "crash": [1, 7, 42, 45, 94, 103, 124, 155, 243, 284], "crasto": 254, "crawl": 377, "crayfish": 255, "craypat": 242, "crc": 255, "creat": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 27, 30, 31, 32, 33, 34, 37, 38, 42, 44, 45, 46, 47, 48, 52, 53, 55, 58, 60, 64, 65, 69, 70, 74, 75, 77, 79, 81, 86, 87, 88, 89, 93, 94, 100, 101, 102, 103, 104, 107, 108, 110, 117, 118, 123, 124, 126, 127, 130, 133, 142, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 181, 182, 185, 186, 188, 197, 200, 201, 203, 204, 205, 208, 209, 210, 216, 218, 220, 223, 225, 227, 229, 230, 231, 234, 235, 238, 241, 243, 246, 247, 248, 249, 250, 253, 255, 258, 261, 271, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 306, 307, 309, 311, 312, 314, 315, 316, 318, 319, 324, 327, 328, 330, 331, 333, 334, 335, 339, 340, 342, 343, 344, 349, 351, 353, 354, 355, 358, 359, 362, 366, 373, 378, 379, 380, 383, 384, 385, 387], "create_cel": [157, 161, 286, 290], "create_n_ballandstick": [383, 384], "creation": [14, 42, 103, 124, 151, 159, 161, 163, 166, 173, 182, 205, 208, 220, 225, 231, 280, 288, 290, 296, 303, 314, 334, 349, 355, 387], "creationcircuit": 60, "creator": [160, 289], "creb": 255, "credit": [46, 160, 164, 242, 289, 294], "cremonesi": 255, "crest": 255, "crete": 255, "crf": 63, "crh": 255, "criado": 255, "crimin": 255, "cristini": 255, "criteria": [14, 40, 93, 126], "criterion": [24, 25, 126, 133, 160, 201, 261, 289, 328], "critic": [36, 53, 94, 134, 242, 255, 262, 377, 378], "critical_region": 242, "crneur": 255, "croft": 255, "cromer": 255, "cron": 248, "crook": 255, "crop": 53, "crosheck": 255, "cross": [1, 127, 153, 154, 159, 164, 201, 231, 246, 255, 282, 283, 288, 289, 292, 294, 328, 355, 366, 369, 375], "cross_area": 292, "crossact": 353, "crossact_vflag1": 353, "crosshair": [79, 80, 84, 94, 123, 209, 221, 229, 345, 353], "crosshair_act": [229, 231, 353, 355], "crotti": 255, "crtp": 53, "crucial": [255, 377], "crude": [53, 66, 67], "crunch": [160, 289], "crunelli": 255, "crustacean": 255, "cruz": 255, "crxd": 292, "cry": 96, "crypotgraph": [200, 327], "cryptograph": [198, 200, 325, 327], "csd": 255, "csernai": 255, "cserp\u00e1n": 255, "csh": [158, 160, 287], "cstr": 52, "csv": [38, 393], "ct": [160, 255, 289], "ctemplat": [52, 56], "ctest": [1, 3, 54, 241, 242, 246], "ctocn": 370, "ctrl": [50, 103, 124], "ctype": 296, "cube": 81, "cubic": [41, 201, 255, 328, 369, 373], "cuda": [7, 8, 54, 242], "cudmor": 255, "cue": 255, "cuff": 255, "cui": 255, "culaunchkernel": 54, "cull": [255, 292], "culmon": 255, "culotta": 255, "cultur": [66, 76, 255], "cum": [254, 255], "cumbersom": [98, 163, 169, 220], "cummin": 255, "cumul": 255, "cuneat": 255, "cuneothalam": 255, "cunningham": 255, "cuntz": 255, "cuomo": 255, "cur": 242, "curat": 255, "curbi": 255, "curi": [155, 284, 292], "curia": 255, "curiou": 76, "curl": [246, 247], "curli": 387, "curor": 84, "current": [1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 28, 29, 30, 31, 32, 33, 37, 38, 44, 45, 46, 47, 52, 53, 56, 63, 66, 67, 70, 71, 79, 81, 87, 88, 89, 93, 94, 100, 103, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 176, 178, 181, 182, 186, 188, 189, 190, 191, 197, 200, 201, 203, 204, 206, 210, 216, 217, 220, 221, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 261, 262, 264, 265, 266, 267, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 295, 296, 298, 299, 300, 311, 312, 314, 315, 316, 317, 318, 324, 327, 328, 332, 334, 335, 340, 341, 342, 344, 345, 347, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 368, 371, 373, 377, 383, 384, 388], "current_method": [220, 344], "current_unit": [182, 312], "currentgraph": [147, 276], "currenthighindex": [200, 327], "currentlyaccessedsect": 79, "currentvaluesasdefault": [128, 256], "curri": 255, "curriculum": 255, "currin": 255, "cursor": [1, 27, 31, 47, 50, 66, 79, 80, 81, 85, 86, 94, 96, 99, 105, 109, 110, 112, 113, 115, 177, 231, 233, 307, 355, 357], "curstr": 334, "curti": 255, "curv": [10, 11, 13, 16, 17, 94, 96, 133, 134, 201, 227, 228, 229, 255, 261, 262, 328, 351, 352, 365, 382], "curvatur": [166, 296], "curve_to": [228, 352], "custom": [3, 7, 19, 26, 31, 45, 66, 70, 94, 96, 100, 103, 124, 126, 163, 246, 283, 381], "custom_dynam": [163, 292, 366, 370], "custom_initi": 24, "customiz": [76, 87, 255], "cut": [31, 47, 70, 76, 96], "cutan": 255, "cutsuridi": 255, "cvec": 370, "cvode": [1, 4, 24, 29, 33, 36, 44, 46, 53, 60, 64, 96, 126, 136, 140, 148, 151, 153, 159, 160, 164, 195, 201, 223, 224, 225, 227, 229, 264, 269, 277, 280, 282, 284, 288, 289, 294, 322, 328, 347, 348, 349, 351, 353, 366, 369, 370, 388], "cvode_act": [20, 28, 38, 151, 159, 164, 280, 282, 288, 294, 344], "cxx": 7, "cy": [136, 264], "cyan": [233, 357], "cybernet": 255, "cycl": [29, 76, 129, 173, 201, 229, 255, 257, 328, 353, 370, 378, 379], "cyclic": 255, "cygcheck": 249, "cygwin": [216, 340, 363], "cylind": [24, 66, 108, 166, 296, 369, 382, 388], "cylindr": [25, 41, 66, 154, 250, 255, 283, 382], "cymbalyuk": 255, "cypher": 255, "cyt": [64, 163, 292, 349, 359, 365, 366, 368, 369, 371, 372, 375, 376], "cyt1": 360, "cyt2": 359, "cyt_er_membran": [366, 369], "cython": [3, 59, 246, 247], "cytoplasm": [25, 96, 119, 126, 255], "cytosol": [41, 87, 163, 255, 292, 367, 369, 371], "c\u00e9spede": 255, "c\u00f4t\u00e9": 255, "d": [4, 13, 16, 17, 23, 25, 32, 41, 46, 52, 53, 54, 55, 60, 64, 65, 66, 80, 81, 86, 87, 88, 92, 96, 100, 125, 126, 136, 138, 151, 160, 161, 164, 165, 169, 173, 174, 182, 188, 190, 196, 197, 201, 203, 211, 213, 219, 220, 231, 234, 237, 242, 246, 250, 254, 255, 264, 280, 283, 289, 290, 292, 295, 303, 314, 316, 317, 323, 324, 328, 330, 337, 339, 343, 344, 349, 353, 355, 358, 359, 361, 366, 367, 369, 370, 373, 375, 377, 382, 383, 387], "d1": [72, 125, 159, 250, 255], "d2": [125, 250, 255], "d20230717": 248, "d2line": [196, 202, 323, 329], "d2line_seg": [196, 202, 323, 329], "d2v": [136, 264], "d5f6139": 363, "d9k": 372, "d_amp": [13, 16, 17], "d_lambda": [11, 24, 30, 37, 43, 66, 67, 76, 96, 108, 110, 126], "d_offset": [4, 250], "d_x": 66, "da": 255, "dae": [160, 220, 289, 344], "dae_init_dtep": [220, 344], "dag": 377, "dagda": 255, "dahlhau": 255, "dahmen": 255, "dai": [76, 81, 126, 255, 377, 378], "dalbi": 255, "dale": 255, "dalrympl": 255, "dalvi": 255, "dal\u00fcgg": 255, "damag": 255, "damp": [223, 347], "dampen": 255, "dan": [220, 255, 344], "dando": 255, "daneshi": 255, "danger": [155, 242, 284, 377], "danglot": 255, "daniel": 255, "danielson": 255, "daolio": 255, "daq": 363, "darghouth": 255, "daria": 255, "dark": [10, 11], "dart": 255, "darwin": [216, 340], "dasgupta": 255, "dash": [70, 229, 353, 377, 382, 388], "daspk": [136, 220, 264, 344], "dat": [1, 10, 11, 16, 17, 28, 49, 76, 94, 96, 188, 192, 289, 316, 318, 319, 342, 343], "data": [3, 4, 10, 11, 13, 14, 16, 17, 18, 19, 26, 38, 49, 52, 54, 57, 63, 67, 68, 78, 81, 82, 87, 89, 93, 95, 99, 126, 127, 129, 133, 134, 138, 146, 153, 154, 155, 160, 161, 163, 165, 188, 201, 205, 220, 225, 227, 229, 231, 241, 242, 253, 254, 255, 257, 261, 262, 266, 275, 282, 283, 284, 289, 290, 292, 295, 316, 318, 319, 328, 335, 344, 349, 351, 353, 355, 360, 369, 374, 377, 382, 383, 385, 387, 388, 391, 393], "data_handl": 53, "data_handle_double_manu": 53, "data_vec": [201, 328], "databas": [70, 119, 120, 154, 193, 255, 283, 377, 387, 393], "datafil": 335, "datafromclipboard": [134, 262], "dataset": 54, "datastructur": 53, "datatyp": 56, "dataweight": [128, 256], "date": [1, 47, 53, 60, 66, 81, 139, 154, 267, 283, 314, 379], "datpath": 242, "datta": 255, "datum": [4, 52, 53, 220, 344], "datumarraypool": [220, 344], "datunashvili": 255, "dauntless": 96, "daur": 255, "dave": 255, "davei": 255, "davi": 255, "david": [25, 255], "davidson": 255, "davison": [89, 254, 255], "davoin": 255, "daza": 255, "db": 255, "dbl": [229, 353], "dc": [25, 96, 255], "dc2": 255, "dca": 250, "dcmake_build_typ": [3, 7, 242, 246], "dcmake_c_compil": [3, 7, 247], "dcmake_c_flag": [7, 241], "dcmake_cuda_architectur": 7, "dcmake_cuda_compil": 7, "dcmake_cuda_flag": 7, "dcmake_cxx_compil": [3, 7, 247], "dcmake_cxx_flag": [3, 7, 241, 246], "dcmake_install_prefix": [3, 7, 241, 246, 247, 249], "dcmake_osx_architectur": 247, "dcmake_prefix_path": [3, 242, 246, 247, 249], "dcorenrn_enable_caliper_profil": 242, "dcorenrn_enable_gpu": [7, 242], "dcorenrn_enable_openmp_offload": 7, "dcorenrn_enable_unit_test": 242, "dddd": [190, 317], "ddddd": [190, 317], "dddddde": [190, 317], "ddmod": 255, "ddr": 255, "de": [96, 100, 254, 255], "deactiv": [164, 255, 294], "dead": 111, "deadlock": [1, 289], "deal": [1, 36, 42, 47, 66, 67, 76, 81, 94, 96, 103, 124, 126, 136, 153, 154, 155, 166, 188, 197, 210, 213, 226, 232, 264, 282, 283, 284, 296, 316, 335, 337, 350, 356, 369, 377, 385], "dealloc": [53, 283], "dealt": [160, 172, 289, 302], "dean": 255, "deb": [246, 377], "debai": 255, "debann": 255, "debat": 255, "debian": [1, 3, 246], "debt": 380, "debug": [3, 45, 52, 81, 140, 160, 163, 204, 220, 223, 243, 249, 269, 289, 292, 344, 347, 382, 388], "debug_ev": [220, 344], "decad": [231, 355, 385], "decai": [9, 25, 29, 32, 96, 107, 109, 153, 255, 282, 383, 384], "decent": [234, 358], "decid": [39, 40, 42, 47, 51, 55, 86, 98, 99, 100, 126, 160, 161, 216, 220, 289, 290, 340, 344, 385], "decim": [70, 96, 175, 190, 191, 201, 231, 233, 305, 317, 318, 328, 355, 357, 387], "deciph": [66, 255], "decis": [126, 155, 255, 284, 377], "deck": [81, 133, 140, 173, 183, 261, 269, 303, 313, 331, 388], "declar": [1, 3, 4, 37, 41, 42, 53, 81, 96, 100, 103, 119, 120, 124, 136, 150, 154, 155, 159, 160, 161, 163, 164, 165, 169, 173, 182, 185, 186, 188, 201, 204, 205, 214, 219, 220, 229, 242, 255, 264, 277, 279, 283, 284, 288, 289, 290, 292, 294, 303, 312, 315, 328, 338, 343, 344, 353, 371, 377, 378, 383], "declare_paramet": 370, "declare_speci": 370, "declin": 25, "deco": [177, 183, 307, 313], "decod": [63, 255], "decompos": 292, "decomposit": [197, 324], "decompress": [201, 328], "deconstruct": 255, "deconvolut": [201, 255, 328], "decor": [177, 307], "decorrel": 255, "decoupl": [166, 255, 296], "decreas": [3, 43, 68, 96, 165, 182, 197, 201, 231, 237, 255, 295, 312, 324, 328, 355, 361], "decrement": [174, 177, 205, 304, 307], "dedic": [1, 377], "deduc": 255, "deem": [195, 322], "deep": [255, 377], "deeper": 52, "deepest": 52, "deepli": [29, 52, 81], "def": [13, 24, 29, 44, 55, 63, 64, 92, 100, 138, 151, 160, 164, 219, 231, 250, 266, 280, 282, 285, 288, 289, 294, 295, 296, 303, 304, 308, 312, 317, 318, 319, 323, 324, 325, 326, 327, 328, 330, 334, 341, 343, 344, 347, 348, 349, 351, 353, 355, 357, 359, 360, 361, 365, 366, 367, 368, 370, 373, 375, 382, 383, 384, 385, 387], "default": [1, 3, 4, 7, 8, 12, 24, 25, 27, 31, 33, 36, 38, 42, 43, 52, 54, 64, 66, 67, 70, 76, 77, 79, 80, 81, 82, 83, 92, 94, 96, 99, 100, 104, 105, 107, 108, 114, 119, 120, 126, 129, 130, 132, 133, 134, 136, 137, 143, 144, 146, 151, 153, 154, 155, 158, 159, 160, 163, 164, 165, 166, 173, 175, 176, 180, 181, 182, 183, 189, 191, 196, 197, 198, 199, 200, 201, 203, 220, 221, 223, 224, 227, 229, 230, 233, 234, 235, 236, 237, 238, 242, 246, 247, 248, 249, 253, 257, 258, 260, 261, 262, 264, 265, 268, 272, 273, 275, 280, 282, 283, 284, 287, 288, 289, 292, 294, 295, 296, 298, 302, 303, 305, 306, 310, 311, 312, 313, 314, 318, 320, 323, 324, 325, 326, 327, 328, 330, 334, 340, 344, 345, 347, 348, 351, 353, 354, 357, 358, 359, 360, 361, 362, 366, 369, 370, 373, 374, 375, 377, 378, 382, 385, 387, 388, 393], "default_brush": [229, 353], "default_button": [182, 312], "default_dll_loaded_": 388, "default_max_step": [160, 289], "default_valu": 53, "defaultchar": [191, 318], "defaultfieldeditor": [134, 262], "defect": [255, 377], "defelip": 255, "defend": 246, "defer": [53, 126, 160, 289], "deferen": 255, "defici": [10, 11, 255], "deficit": 255, "defin": [4, 13, 14, 25, 27, 29, 33, 37, 39, 42, 52, 53, 54, 56, 60, 65, 66, 67, 70, 74, 75, 76, 81, 86, 88, 98, 103, 109, 110, 117, 118, 119, 120, 124, 126, 130, 134, 136, 139, 144, 146, 148, 150, 151, 153, 155, 159, 160, 161, 164, 165, 169, 170, 173, 174, 175, 176, 182, 185, 186, 192, 194, 196, 200, 201, 204, 205, 210, 217, 220, 225, 227, 229, 230, 231, 233, 237, 251, 252, 255, 258, 262, 264, 267, 273, 275, 277, 279, 280, 282, 284, 288, 289, 290, 293, 294, 295, 300, 303, 304, 305, 306, 312, 314, 315, 319, 321, 323, 327, 328, 335, 341, 342, 344, 345, 349, 351, 353, 354, 355, 357, 360, 361, 365, 366, 367, 368, 369, 371, 373, 377, 378, 385, 386, 387, 388, 393], "define_shap": [81, 146, 165, 166, 234, 275, 295, 296, 344, 358, 382, 383, 384, 388], "defined_on_region": 292, "defined_on_the_fli": 52, "definit": [3, 25, 52, 66, 70, 81, 86, 92, 94, 96, 107, 109, 133, 136, 139, 154, 155, 170, 182, 185, 197, 223, 233, 242, 255, 261, 264, 267, 283, 284, 300, 314, 347, 357, 367, 369, 371, 378, 379, 382, 383, 387, 388], "deflect": 255, "defn": 52, "deg": [81, 193, 228, 320, 352, 388], "degani": 255, "degc": [119, 120, 154, 283, 371], "degen": 255, "degener": [166, 255, 296], "degeneraci": 255, "degrad": [255, 292, 293, 366, 374, 376], "degradation_switch": [292, 293, 376], "degre": [25, 40, 70, 81, 107, 126, 163, 223, 229, 234, 255, 292, 293, 347, 353, 358], "degro": 255, "deiconifi": [177, 183, 307, 313], "deisseroth": 255, "deister": 255, "deitcher": 255, "dekker": 255, "del": [16, 17, 18, 29, 31, 72, 96, 146, 147, 153, 159, 220, 250, 255, 275, 276, 282, 344, 373, 382, 383], "delai": [21, 22, 29, 32, 35, 36, 38, 47, 63, 64, 74, 75, 76, 86, 94, 100, 108, 113, 114, 115, 116, 153, 157, 159, 160, 161, 182, 201, 220, 231, 250, 253, 255, 282, 286, 288, 289, 290, 312, 328, 342, 344, 355, 359, 360, 361, 382, 383, 384, 385, 388], "delalondr": 255, "delanei": 255, "delatour": 255, "delattr": 255, "delcanto": 255, "delet": [1, 3, 4, 7, 14, 53, 60, 66, 70, 76, 80, 81, 98, 133, 147, 156, 165, 168, 173, 201, 204, 205, 220, 225, 227, 255, 261, 276, 285, 295, 298, 303, 344, 349, 351, 377, 383, 388], "delete_sect": [146, 165, 166, 168, 203, 250, 275, 295, 298, 388], "deleuz": 255, "delgado": 255, "delgutt": 255, "deliber": 80, "delic": 377, "delicata": 255, "delimit": [188, 316], "deliv": [9, 25, 31, 71, 87, 123, 127, 154, 159, 160, 161, 220, 223, 242, 282, 283, 288, 289, 290, 344, 347, 383, 385], "deliver": 380, "deliveri": [71, 76, 126, 148, 154, 159, 201, 220, 225, 255, 277, 283, 288, 328, 344, 349], "deller": 255, "delma": 255, "delord": 255, "delorm": 255, "delpi": 255, "delsei": 255, "delsym": 52, "delta": [9, 39, 136, 255, 264, 377], "deltafac": [135, 136, 263, 264], "delv": 29, "delvendahl": 255, "dem": 255, "demaegd": 255, "demand": [76, 134, 204, 247, 255, 262, 377], "demarc": [70, 387], "dembitskaya": 255, "dementia": 255, "demesmaek": 255, "demianenko": 255, "demo": [67, 76, 81, 82, 154, 166, 217, 220, 237, 283, 296, 312, 344, 361, 374, 393], "democraci": 255, "democrat": 255, "demonstr": [5, 24, 25, 28, 49, 52, 53, 67, 81, 83, 89, 96, 126, 166, 201, 219, 253, 255, 292, 296, 328, 343, 377, 383, 387, 388, 389], "demosthen": 255, "demothi": 205, "demyelin": 255, "demystifi": 377, "den": 255, "denable_dtrac": 246, "dend": [10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 37, 38, 45, 58, 63, 66, 108, 110, 165, 169, 178, 203, 218, 292, 295, 296, 308, 314, 330, 342, 360, 366, 375, 382, 383, 384], "dend1": [295, 359, 360], "dend2": [295, 359, 360], "dend3": 295, "dend4": 295, "dend5": 295, "dend7": 295, "dend_plot": 383, "dend_v": [382, 383], "dendrit": [10, 11, 14, 24, 25, 29, 37, 41, 43, 45, 46, 47, 58, 66, 67, 68, 74, 86, 108, 110, 115, 160, 165, 166, 169, 237, 255, 289, 292, 296, 299, 361, 383, 384, 387], "dendrite_1": [166, 237, 296, 361], "dendrite_5": 67, "dendro": [160, 255, 289], "dendrodendrit": 255, "dendrotomi": 255, "deneck": 255, "denerv": 255, "deng": 255, "denham": 255, "denison": 255, "denk": 255, "denman": 255, "denomin": [119, 120, 289, 371], "denot": [81, 131, 132, 154, 155, 165, 185, 201, 236, 259, 260, 283, 284, 292, 295, 328, 369, 377, 387], "dens": [47, 86, 220, 255, 344], "densiti": [29, 30, 37, 40, 43, 46, 66, 68, 81, 88, 89, 104, 105, 119, 120, 134, 136, 148, 150, 153, 155, 156, 165, 166, 201, 203, 204, 219, 220, 227, 255, 262, 264, 277, 279, 282, 283, 284, 285, 295, 296, 314, 328, 330, 344, 351, 388, 393], "density_mech": [382, 388], "dentat": [1, 255], "dentategranulevideo": 63, "denton": 255, "depart": [81, 89], "departur": 66, "depauli": 255, "depend": [0, 3, 4, 7, 9, 10, 11, 13, 24, 25, 27, 29, 40, 42, 47, 52, 53, 54, 56, 68, 76, 81, 86, 94, 100, 103, 123, 124, 126, 133, 136, 151, 153, 154, 155, 156, 160, 164, 166, 173, 194, 196, 197, 201, 204, 207, 210, 215, 217, 220, 223, 225, 229, 230, 231, 235, 242, 243, 245, 248, 251, 252, 255, 261, 264, 280, 282, 283, 284, 285, 289, 292, 294, 296, 303, 321, 323, 324, 328, 333, 335, 339, 341, 344, 347, 349, 353, 354, 355, 359, 360, 366, 368, 371, 377, 378, 380, 383, 387, 388], "depict": [173, 303], "deplet": 255, "deploi": 249, "deploy": [255, 377, 378], "depolar": [10, 11, 80, 121, 153, 155, 250, 255, 282, 284, 382], "depolaris": 255, "deposit": [82, 83], "deprec": [59, 87, 161, 163, 165, 220, 282, 290, 292, 295, 328, 344, 363, 379], "depress": 255, "depriv": 255, "depth": [52, 68, 250, 268, 289, 373], "depvar": [81, 204, 388], "der": 255, "derail": 255, "derefer": [28, 314], "dereferenc": [53, 160, 289, 334], "deriv": [4, 28, 39, 53, 81, 93, 107, 136, 151, 153, 163, 201, 202, 216, 220, 251, 255, 264, 280, 282, 292, 320, 328, 329, 340, 344, 366, 371], "derivimplicit": [4, 36, 154, 283], "derkach": 255, "derosenrol": 255, "desai": 255, "descend": [160, 166, 296], "describ": [0, 1, 4, 7, 8, 37, 39, 41, 43, 47, 53, 60, 64, 70, 76, 81, 82, 83, 86, 88, 89, 93, 95, 96, 98, 100, 107, 109, 126, 130, 142, 148, 153, 154, 155, 160, 161, 163, 164, 165, 166, 169, 200, 211, 231, 242, 246, 247, 248, 253, 255, 258, 271, 277, 282, 283, 284, 289, 290, 292, 294, 295, 296, 314, 327, 333, 355, 365, 366, 373, 377, 378, 380, 381, 382, 387, 388, 392], "descript": [4, 11, 53, 66, 70, 81, 89, 107, 119, 120, 126, 136, 137, 138, 146, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 250, 252, 255, 264, 265, 266, 275, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 356, 357, 359, 360, 361, 363, 371, 377], "descriptor": [170, 300, 387], "deselect": [42, 229, 353], "deseri": 4, "deserv": 90, "desguerr": 255, "design": [29, 52, 61, 66, 81, 126, 140, 220, 234, 246, 255, 269, 344, 358, 363, 377, 382, 383, 392, 393], "desir": [0, 3, 7, 12, 14, 42, 48, 53, 66, 67, 70, 76, 78, 99, 103, 105, 124, 134, 151, 153, 154, 159, 163, 169, 173, 197, 201, 220, 221, 224, 228, 229, 231, 238, 241, 246, 248, 262, 280, 283, 284, 288, 292, 299, 303, 324, 328, 343, 344, 345, 348, 352, 353, 355, 362, 377, 378, 382, 388], "desjardin": 255, "desktop": [10, 11, 76, 83], "desmaison": 255, "despenza": 255, "despit": [255, 314, 317, 377], "dest": [201, 289, 328], "dest_buffer_s": [160, 289], "dest_inc": [201, 328], "dest_start": [201, 328], "dest_str": [220, 344], "dest_vector": [220, 344], "destexh": [100, 126, 254, 255], "destin": [53, 66, 160, 161, 164, 197, 201, 208, 220, 289, 290, 294, 324, 328, 334, 344, 377], "destitem": 289, "destitem_from_root": 289, "destlist": [160, 289], "destlist_on_root": 289, "destroi": [28, 29, 32, 42, 53, 70, 81, 95, 103, 124, 133, 144, 147, 150, 156, 159, 160, 161, 164, 165, 166, 173, 174, 177, 188, 192, 200, 201, 205, 208, 221, 231, 235, 237, 261, 273, 276, 279, 285, 288, 289, 290, 294, 295, 296, 303, 304, 307, 316, 319, 327, 328, 334, 345, 355, 359, 361], "destruct": [3, 42, 56, 103, 124, 201, 220, 328], "destructor": [53, 56, 155, 200, 251, 284, 327], "destvec": [208, 334], "desynchron": 255, "det": [197, 202, 324, 329], "detach": 37, "detail": [1, 5, 8, 10, 11, 14, 28, 29, 32, 43, 45, 46, 51, 52, 53, 54, 60, 67, 76, 77, 80, 82, 83, 86, 89, 94, 96, 100, 102, 103, 124, 126, 127, 144, 153, 154, 155, 160, 165, 201, 210, 223, 227, 240, 242, 246, 252, 255, 273, 282, 283, 284, 289, 295, 328, 335, 347, 351, 377, 378, 381, 388, 392, 393], "detect": [7, 10, 11, 25, 47, 53, 56, 159, 160, 201, 220, 242, 255, 288, 289, 328, 344, 383], "detect_leak": 3, "detector": [159, 160, 242, 255, 288, 289, 383, 385], "determin": [3, 4, 13, 28, 36, 42, 43, 49, 56, 66, 95, 96, 99, 119, 120, 131, 144, 149, 154, 155, 159, 160, 161, 166, 177, 182, 196, 197, 201, 205, 210, 220, 229, 231, 233, 254, 255, 259, 273, 278, 283, 284, 288, 289, 290, 292, 296, 307, 312, 323, 324, 328, 335, 344, 353, 355, 357, 387, 393], "determinist": [126, 153, 225, 255, 282, 292, 349], "detrusor": 255, "detwil": 255, "dev": [53, 82, 87, 216, 246, 248, 255, 340, 364, 377, 378, 380], "dev0": 248, "dev1": [377, 378], "devaux": 255, "devblog": 377, "develoop": [201, 328], "develop": [0, 1, 3, 7, 41, 45, 52, 66, 76, 81, 87, 88, 89, 98, 154, 160, 163, 166, 210, 219, 233, 246, 247, 249, 251, 254, 255, 283, 289, 292, 296, 335, 340, 343, 357, 363, 370, 373, 377, 378, 386], "developerid_appl": 247, "developerid_instal": 247, "development": 255, "devguid": 380, "deviat": [200, 201, 327, 328], "devic": [7, 12, 81, 88, 158, 160, 165, 189, 204, 233, 255, 287, 289, 295, 357], "devis": [377, 378], "devn": 377, "devop": 377, "devor": 255, "devot": 81, "devress": 255, "dewel": 255, "dewolf": 255, "deyo": 255, "df": [136, 264], "dfree": 250, "dg": 211, "dh": 53, "dharmar": 255, "dhupia": 255, "di": [136, 250, 255, 264], "diag": [197, 324], "diagnos": [160, 289], "diagnosi": [3, 243], "diagnost": [191, 192, 195, 233, 318, 319, 322, 357], "diago": 70, "diagon": [47, 86, 160, 197, 220, 289, 324, 344], "diagram": [57, 377, 384], "dialog": [1, 12, 37, 70, 94, 96, 103, 124, 129, 134, 173, 179, 183, 188, 210, 227, 230, 231, 234, 238, 257, 262, 303, 309, 312, 313, 316, 335, 345, 351, 354, 355, 358, 362], "dialogu": [231, 355], "dialysi": 255, "diam": [10, 11, 14, 15, 22, 28, 30, 37, 38, 43, 45, 47, 60, 66, 67, 68, 108, 110, 119, 120, 125, 134, 146, 148, 153, 165, 166, 168, 169, 175, 182, 204, 210, 234, 250, 253, 262, 275, 277, 282, 288, 295, 296, 305, 312, 335, 342, 358, 359, 360, 369, 370, 371, 382, 383, 384, 387, 388], "diam3d": [22, 47, 81, 125, 139, 146, 165, 166, 267, 275, 295, 296, 382, 383, 384, 388], "diam_chang": [60, 81, 146, 165, 166, 275, 295, 296, 344, 388], "diam_change_cnt": [296, 344], "diam_change_count": 344, "diam_shap": 166, "diamantaki": 255, "diamanti": 255, "diambra": 255, "diamer": 292, "diamet": [24, 33, 38, 40, 41, 45, 46, 47, 53, 60, 65, 66, 67, 86, 110, 125, 134, 136, 139, 165, 166, 168, 201, 234, 237, 255, 262, 264, 267, 292, 295, 296, 328, 358, 359, 361, 369, 371, 382, 383, 388], "diamlist": [139, 267], "diamond": 255, "diamter": 382, "diana": 255, "diaz": 255, "dib": 255, "diba": 255, "dic": 377, "dichotom": 255, "dichotomi": 255, "dichter": 255, "dickhof": 255, "dickson": 255, "dickstein": 255, "dict": [294, 387], "dictionari": [66, 295, 314, 330, 370, 388, 393], "did": [36, 40, 46, 49, 66, 94, 96, 98, 111, 153, 160, 210, 225, 246, 282, 289, 333, 335, 349, 370, 371, 377, 383], "didact": [31, 32], "didn": [40, 66, 76, 96, 153, 282, 382, 388], "diego": [126, 255], "dielectr": 255, "diesmann": [88, 255], "dietrich": 255, "dietz": 255, "dieudonn\u00e9": 255, "diff": [3, 160, 244, 248, 289, 292, 366, 377], "differ": [0, 1, 3, 4, 5, 7, 10, 11, 13, 14, 24, 25, 28, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 52, 53, 64, 66, 70, 71, 80, 81, 86, 87, 89, 92, 93, 94, 96, 99, 100, 101, 107, 119, 120, 126, 127, 133, 138, 144, 153, 154, 155, 156, 159, 160, 161, 163, 164, 166, 175, 182, 188, 193, 194, 197, 198, 200, 201, 204, 210, 211, 219, 220, 223, 225, 227, 229, 231, 234, 243, 244, 246, 248, 255, 261, 266, 273, 282, 283, 284, 285, 288, 289, 290, 292, 294, 296, 305, 312, 314, 316, 321, 322, 324, 325, 327, 328, 330, 335, 337, 340, 343, 344, 345, 347, 349, 351, 353, 355, 358, 359, 361, 366, 369, 373, 377, 381, 382, 384, 385, 387, 388, 392], "differenti": [39, 126, 136, 151, 154, 163, 201, 220, 255, 264, 280, 283, 292, 328, 344, 366, 369], "difficult": [29, 36, 76, 81, 89, 112, 160, 163, 211, 234, 289, 358], "difficulti": [133, 201, 220, 242, 261, 328, 344, 369, 393], "diffus": [1, 26, 60, 87, 126, 140, 146, 154, 160, 225, 250, 254, 255, 269, 275, 283, 289, 295, 314, 349, 368, 369, 371, 382, 388, 391, 392], "digiovanna": 255, "digit": [45, 188, 191, 201, 231, 233, 255, 316, 318, 328, 355, 357], "digregorio": 255, "dijk": 255, "dik_dv_": 388, "dilig": 4, "dimarco": 255, "dimens": [14, 47, 53, 66, 70, 81, 86, 119, 120, 151, 154, 163, 165, 166, 186, 197, 204, 220, 231, 255, 280, 283, 292, 295, 296, 315, 324, 344, 355], "dimension": [185, 197, 201, 204, 229, 255, 324, 328, 353, 366], "dimensionless": [95, 119, 120], "dimer": 292, "dimitrova": 255, "dimorph": 255, "dina_dv_": 388, "diname_dv": [149, 278], "ding": 255, "dingledin": 255, "dipeptidyl": 255, "dipol": 255, "dipolar": 255, "dir": [4, 59, 153, 187, 188, 246, 248, 282, 314, 315, 316, 338, 382], "direct": [25, 40, 50, 53, 104, 114, 130, 150, 153, 159, 160, 163, 189, 210, 216, 229, 231, 234, 237, 253, 254, 255, 258, 277, 279, 282, 288, 289, 292, 294, 314, 328, 331, 335, 337, 340, 344, 353, 355, 358, 361, 373, 377], "direct_hoc_gpu": 54, "direct_py_gpu": 54, "direction": 255, "directli": [1, 35, 53, 56, 64, 81, 99, 126, 129, 150, 154, 161, 163, 185, 186, 201, 219, 220, 231, 242, 249, 250, 253, 255, 257, 266, 277, 279, 283, 289, 290, 292, 295, 296, 299, 314, 315, 328, 333, 335, 341, 343, 344, 355, 368, 369, 377, 378, 381, 385, 388], "directori": [0, 1, 3, 7, 8, 14, 24, 30, 31, 34, 35, 36, 45, 46, 47, 48, 54, 76, 81, 86, 94, 96, 122, 127, 154, 160, 166, 170, 188, 210, 216, 227, 241, 242, 246, 247, 248, 283, 289, 296, 300, 316, 335, 340, 351, 373, 381, 385], "dirichlet": 373, "dirnam": 316, "dirti": [76, 248], "disabl": [1, 3, 96, 220, 242, 246, 247, 249, 344], "disadvantag": 377, "disallow": 1, "disambigu": [119, 120, 377], "disappear": [47, 76, 79, 86, 96, 151, 231, 280, 355, 383], "disappointing_foo": 53, "disast": [103, 124], "disastr": 377, "disc": 250, "disc_cel": 250, "discard": [3, 52, 67, 153, 160, 165, 221, 231, 282, 289, 328, 345, 355, 377], "disccel": 250, "discharg": 255, "disclaim": 74, "disconnect": [1, 60, 81, 146, 153, 165, 200, 221, 275, 282, 295, 327, 345, 388], "discontinu": [1, 26, 59, 148, 153, 201, 220, 277, 282, 293, 328, 344], "discoordin": 255, "discourag": [98, 154, 283], "discours": [81, 154, 283], "discov": [7, 25, 47, 49, 96, 100, 123, 126], "discover": 283, "discoveri": [25, 255], "discrep": [94, 201, 255, 328], "discret": [9, 26, 32, 38, 41, 47, 64, 65, 66, 82, 83, 86, 88, 96, 101, 105, 155, 160, 163, 165, 166, 200, 201, 220, 251, 254, 255, 284, 289, 292, 295, 296, 327, 328, 344, 369, 374, 382, 384], "discreteev": 3, "discretis": 255, "discrimin": 255, "discunif": [29, 197, 200, 324, 327], "discuss": [7, 13, 29, 32, 40, 42, 47, 52, 53, 76, 94, 96, 99, 103, 124, 126, 133, 136, 154, 155, 160, 161, 163, 169, 220, 255, 261, 283, 284, 289, 290, 292, 299, 344, 377, 378, 392], "diseas": 255, "disentangl": 255, "disinhibit": 255, "disinhibitori": 255, "disjoint": 53, "disk": [210, 335, 377], "disloc": 255, "dismiss": [144, 147, 173, 176, 210, 221, 229, 231, 237, 273, 276, 303, 306, 335, 345, 353, 355, 361], "dismiss_act": [173, 183, 303, 313], "dismissbutton": [231, 355], "dismutas": 255, "disord": 255, "disorgan": 242, "disp": 54, "dispar": 255, "dispers": 255, "displac": 255, "displai": [4, 10, 11, 13, 14, 18, 25, 28, 38, 42, 56, 60, 63, 67, 70, 76, 80, 86, 87, 94, 96, 99, 100, 105, 107, 119, 123, 130, 133, 134, 144, 145, 147, 154, 174, 179, 180, 182, 201, 204, 210, 224, 229, 231, 235, 237, 238, 246, 250, 253, 255, 258, 261, 262, 273, 274, 276, 283, 295, 304, 309, 310, 312, 315, 328, 330, 334, 335, 344, 345, 348, 353, 355, 359, 361, 362, 365, 370, 373, 382, 383, 385, 388, 393], "displaystyl": [39, 376], "dispos": 316, "disregard": [58, 249], "disrupt": 255, "dissanayak": 255, "dissert": 40, "dissoci": 255, "dissolv": [70, 231, 355], "distal": [10, 11, 16, 17, 18, 25, 27, 37, 66, 104, 154, 155, 255, 283, 284, 360, 382, 388], "distanc": [25, 27, 36, 41, 43, 45, 68, 81, 89, 105, 110, 126, 130, 131, 138, 146, 160, 165, 166, 196, 227, 229, 236, 237, 250, 255, 258, 259, 266, 275, 289, 295, 296, 323, 351, 353, 360, 361, 367, 369, 388], "distant": [43, 68, 255], "distibut": 3, "distil": 185, "distinct": [66, 89, 100, 127, 159, 160, 198, 201, 220, 255, 284, 288, 289, 294, 325, 328, 344, 377, 378, 388], "distinguish": [42, 52, 56, 70, 84, 103, 119, 120, 124, 127, 155, 159, 160, 163, 186, 255, 284, 288, 289, 292, 315], "distort": 255, "distract": [29, 115, 126, 127], "distress": [42, 103, 124], "distribut": [1, 3, 4, 7, 25, 26, 27, 30, 36, 41, 46, 48, 76, 89, 98, 100, 107, 119, 126, 127, 153, 155, 156, 160, 161, 163, 179, 198, 200, 201, 219, 243, 245, 247, 254, 255, 282, 284, 285, 289, 290, 292, 309, 325, 327, 328, 343, 369, 371, 377, 387, 388], "distributedboundari": [163, 292, 369], "distro": [246, 248], "disturb": [201, 225, 250, 328, 349], "distutil": [1, 59], "disynapt": 255, "ditto": 28, "dittrich": 255, "dityatev": 255, "dityateva": 255, "div": [28, 29, 201, 202, 328, 329], "div_dir": 3, "div_enable_x11_dynam": 247, "divbyzero": 242, "diverg": [29, 160, 255, 366], "divers": [255, 369, 377], "divid": [31, 36, 78, 89, 154, 160, 166, 171, 201, 250, 283, 289, 296, 301, 328, 382, 387, 388], "divis": [81, 160, 185, 201, 255, 289, 293, 328, 387], "diwakar": 255, "diwan": 255, "djurfeldt": 255, "djuris": 255, "djurov": 255, "dlgn": 255, "dlink_against_python": 247, "dll": [36, 48, 52, 81, 156, 216, 227, 249, 285, 340, 351], "dll_file_nam": [216, 340], "dlopen": [3, 246], "dma": 1, "dmacosx": 246, "dmat": [197, 324], "dmpi_c_compil": 7, "dmpi_c_lib_nam": 249, "dmpi_cxx_compil": 7, "dmpi_cxx_lib_nam": 249, "dmpi_msmpi_librari": 249, "dmusic_root": 3, "dndebug": [3, 246], "dneu": 255, "dnmodl_enable_python_bind": [3, 247], "dnmodl_sanit": 242, "dnrn_coverage_fil": [3, 241], "dnrn_enable_coreneuron": [3, 7, 247], "dnrn_enable_coverag": 241, "dnrn_enable_doc": 0, "dnrn_enable_docs_with_external_instal": 3, "dnrn_enable_interview": [3, 7, 246, 249], "dnrn_enable_mpi": [3, 246, 249, 385], "dnrn_enable_mpi_dynam": [3, 247, 249], "dnrn_enable_mus": 3, "dnrn_enable_profil": 242, "dnrn_enable_python": [3, 249], "dnrn_enable_python_dynam": [3, 246, 247, 249], "dnrn_enable_rx3d": [3, 7, 246, 249], "dnrn_enable_test": [3, 54, 241, 242, 246], "dnrn_mpi_dynam": 3, "dnrn_nmodl_cxx_flag": [3, 246], "dnrn_profil": 242, "dnrn_python_dynam": [3, 247, 249], "dnrn_rx3d_opt_level": [3, 247, 249], "dnrn_sanit": [3, 242], "do": [0, 1, 3, 4, 7, 13, 14, 16, 25, 27, 29, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 65, 66, 67, 68, 71, 73, 78, 79, 80, 81, 83, 86, 87, 88, 94, 98, 99, 100, 102, 103, 105, 108, 110, 111, 119, 120, 123, 124, 127, 133, 134, 136, 138, 147, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 182, 185, 186, 188, 197, 200, 201, 219, 220, 221, 223, 225, 227, 229, 230, 231, 234, 239, 242, 246, 248, 249, 250, 253, 255, 261, 262, 264, 266, 268, 276, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 299, 300, 302, 303, 312, 314, 315, 316, 322, 324, 327, 328, 330, 343, 344, 345, 347, 349, 351, 353, 354, 355, 358, 361, 365, 366, 368, 369, 370, 376, 377, 378, 380, 382, 383, 385, 387, 388], "do_run": [328, 334], "doc": [0, 1, 3, 55, 160, 246, 247, 289, 373, 377, 378, 387], "docker": 1, "dockerfil": 248, "docs_requir": 0, "docstr": [387, 388], "document": [1, 3, 4, 7, 28, 35, 51, 53, 54, 55, 60, 81, 82, 83, 87, 100, 109, 127, 142, 153, 154, 163, 165, 201, 211, 240, 242, 243, 247, 250, 271, 282, 283, 292, 295, 328, 365, 378, 379, 380, 381, 382], "dodson": 255, "doe": [3, 8, 9, 10, 11, 13, 25, 28, 29, 32, 33, 36, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 53, 56, 58, 60, 70, 79, 81, 86, 87, 94, 96, 98, 100, 103, 124, 127, 133, 134, 136, 137, 145, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 173, 176, 182, 185, 186, 188, 191, 194, 197, 201, 204, 210, 211, 216, 220, 221, 224, 225, 229, 231, 232, 234, 236, 237, 242, 247, 250, 255, 261, 262, 264, 265, 274, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301, 303, 305, 306, 312, 314, 315, 316, 317, 321, 324, 328, 335, 337, 338, 340, 343, 344, 345, 348, 349, 351, 353, 355, 356, 357, 358, 360, 361, 366, 367, 369, 370, 373, 377, 378, 380, 381, 382, 385, 387, 388], "doengi": 255, "doesn": [25, 27, 28, 29, 31, 46, 53, 80, 81, 87, 92, 96, 101, 110, 127, 153, 154, 160, 165, 197, 231, 239, 248, 282, 283, 289, 295, 324, 355, 377, 382], "doevent": [81, 229, 232, 353, 356, 388], "dofit": [128, 256], "dogma": 255, "doherti": 255, "doi": [25, 40, 46, 47, 93, 95, 100, 254, 255, 370], "doiron": 255, "doischer": 255, "doit": [198, 200, 327], "doko": 255, "dolezalova": 255, "dolli": 255, "domain": [1, 27, 39, 41, 57, 81, 94, 96, 104, 106, 126, 133, 146, 182, 183, 189, 195, 201, 255, 261, 275, 313, 322, 328, 366], "domainpanel": [133, 261], "domanski": 255, "domin": [96, 160, 255], "don": [0, 3, 4, 7, 8, 14, 16, 17, 18, 25, 32, 33, 35, 36, 42, 46, 50, 53, 66, 67, 70, 76, 80, 81, 83, 94, 95, 96, 99, 100, 103, 104, 107, 108, 109, 110, 115, 119, 120, 123, 124, 125, 127, 139, 154, 160, 161, 165, 166, 182, 200, 210, 227, 229, 231, 242, 248, 267, 283, 289, 290, 295, 296, 312, 327, 335, 351, 353, 355, 370, 377, 385, 388], "donato": 255, "done": [7, 10, 11, 12, 13, 14, 16, 23, 25, 31, 35, 36, 37, 40, 47, 52, 53, 56, 60, 66, 80, 82, 83, 84, 87, 90, 96, 98, 99, 109, 110, 111, 113, 115, 123, 126, 154, 155, 157, 158, 160, 161, 169, 171, 175, 182, 185, 197, 200, 201, 213, 216, 219, 220, 223, 225, 233, 239, 247, 248, 283, 284, 286, 287, 289, 290, 292, 295, 299, 301, 305, 312, 314, 324, 327, 328, 337, 340, 343, 344, 347, 349, 353, 357, 363, 373, 377, 378, 382, 385, 388, 389], "donega": 255, "dong": 255, "donlei": 255, "donnel": 255, "donnelli": 255, "donotifi": [72, 81, 159, 166, 182, 200, 201, 217, 229, 232, 235, 296, 312, 327, 328, 334, 353, 356, 359, 388], "dont": [377, 378], "doohan": 255, "dopamin": 255, "dopaminerg": 255, "dopico": 255, "dopson": 255, "dor": 255, "doreswami": 255, "dorkenwald": 255, "dormann": 255, "doron": 255, "doronin": 255, "dorp": 255, "dorr": 255, "dorsal": 255, "dorsoventr": 255, "dorst": 255, "dorval": 255, "doshai": 255, "dostrovski": 255, "dot": [25, 46, 110, 115, 131, 132, 144, 146, 147, 165, 201, 202, 238, 255, 259, 260, 273, 275, 276, 295, 314, 328, 329, 362, 377, 378], "dou": 255, "doubl": [4, 25, 28, 31, 33, 52, 53, 56, 60, 67, 76, 80, 81, 91, 94, 96, 98, 123, 133, 134, 138, 144, 154, 155, 160, 165, 173, 174, 178, 185, 186, 188, 189, 195, 196, 197, 201, 204, 206, 211, 213, 219, 220, 229, 231, 238, 246, 250, 255, 261, 262, 266, 273, 283, 284, 289, 295, 304, 308, 314, 315, 316, 322, 323, 328, 332, 343, 344, 355, 362, 377, 387, 388], "double_valu": 314, "doublearraypool": [220, 344], "doubli": 154, "dougali": 255, "dougherti": 255, "dougla": 255, "dover": 255, "dovgan": 255, "dowl": 255, "down": [28, 29, 46, 47, 50, 52, 53, 59, 66, 70, 76, 79, 80, 84, 85, 86, 99, 103, 105, 107, 109, 110, 111, 112, 113, 115, 124, 160, 204, 224, 229, 231, 237, 255, 289, 293, 348, 353, 355, 361, 369, 383, 385], "download": [3, 7, 38, 46, 49, 83, 93, 100, 140, 158, 160, 240, 246, 247, 248, 249, 287, 289, 374, 377, 388], "downregul": 255, "downsid": [182, 220, 249, 312, 344], "downstat": 4, "downstream": [25, 113, 377], "downward": 91, "doxygen": [0, 3, 53, 62], "doya": 255, "doyon": 255, "dozen": [76, 136, 241, 264], "dparam": 53, "dparam_info": 60, "dparam_s": 289, "dpp6": 255, "dppx": 255, "dprotein": [163, 292], "dpython_execut": [3, 7, 241, 247, 249], "dr2": 250, "dra": 189, "drag": [12, 27, 32, 37, 42, 47, 50, 66, 67, 70, 73, 76, 80, 85, 86, 96, 99, 104, 105, 109, 110, 111, 112, 113, 115, 122, 123, 133, 134, 173, 177, 178, 221, 229, 231, 234, 238, 246, 261, 262, 303, 304, 307, 308, 345, 353, 355, 358, 362, 382], "dragicev": 255, "dragonfli": 255, "draguhn": 255, "dragulji\u0107": 255, "draheim": 255, "drake": 255, "dramat": [227, 242, 351], "drangmeist": 255, "drastic": 24, "draw": [28, 37, 66, 70, 76, 100, 104, 127, 166, 173, 177, 189, 228, 229, 231, 233, 234, 235, 237, 296, 303, 307, 352, 353, 355, 357, 358, 359, 361, 388], "drawback": 42, "drawn": [37, 70, 166, 200, 201, 227, 228, 229, 231, 234, 235, 237, 296, 327, 328, 351, 352, 353, 355, 358, 359, 361, 377], "dreadline_librari": 3, "dreesbach": 255, "drg": 255, "driesslein": 255, "drift": [24, 29, 40], "drink": 255, "drion": 255, "drive": [74, 87, 97, 255, 328, 366, 383, 388], "drive_channel": 250, "driven": [9, 53, 75, 76, 80, 94, 110, 153, 255, 282, 391], "driver": [7, 54, 233, 357], "drn": 255, "drom": 255, "dromaretski": 255, "drop": [1, 52, 76, 248, 363, 377, 380], "dropdown": 76, "dror": 100, "drose": 255, "drosophila": [255, 370], "droulez": 255, "druckmann": 255, "drug": 255, "dsp": 255, "dsq": 250, "dsqvol": 250, "dstate": [220, 344], "dt": [9, 24, 28, 31, 32, 36, 37, 39, 41, 45, 47, 52, 72, 81, 96, 101, 119, 120, 126, 136, 148, 151, 153, 154, 155, 157, 160, 163, 164, 175, 195, 201, 218, 220, 223, 227, 250, 264, 277, 280, 282, 283, 284, 286, 289, 292, 294, 305, 312, 322, 328, 342, 344, 347, 351, 353, 360, 373, 388], "dtep": [220, 344], "dthat": 81, "dthi": 81, "du": 255, "dual": [11, 126, 160, 255, 289], "dualli": 255, "duan": 255, "duart": 255, "dube": 255, "duboi": 255, "duch": 255, "duchin": 255, "duda": 255, "dudai": 255, "dudman": 255, "due": [3, 4, 7, 29, 39, 41, 42, 60, 64, 81, 103, 119, 120, 124, 153, 154, 160, 161, 163, 166, 199, 201, 220, 221, 229, 242, 246, 247, 248, 253, 255, 282, 283, 289, 290, 292, 294, 296, 320, 326, 328, 330, 337, 344, 345, 353, 366, 368, 373, 377, 378, 384, 393], "duff": 255, "duffau": 255, "duffi": 255, "duffin": 255, "dufflei": 255, "dufour": 255, "dugladz": 255, "duijnhouw": 255, "duke": [81, 126, 160, 164, 242, 289, 294], "dukelow": 255, "duker": 255, "dukkipati": 255, "dumb": 105, "dummi": [9, 32, 80, 151, 208, 280, 334], "dumont": [40, 47, 255], "dump": [76, 223, 229, 347, 353, 387, 388], "dumusc": 255, "dunn": 255, "duplic": [37, 70, 76, 89, 167, 297], "dupui": 255, "duqu": 255, "dur": [16, 17, 18, 24, 28, 31, 63, 64, 71, 72, 96, 146, 147, 148, 153, 159, 200, 220, 250, 253, 275, 276, 277, 282, 288, 328, 342, 344, 359, 360, 361, 382, 388], "dur0": [146, 147, 275, 276], "dur1": [147, 153, 276, 282], "dur2": [147, 153, 276, 282], "dur3": [153, 282], "dura": [254, 255, 389], "durand": 255, "durat": [31, 46, 47, 64, 71, 107, 147, 153, 201, 255, 276, 282, 328, 382], "dure": [1, 3, 4, 9, 14, 29, 32, 33, 42, 44, 51, 52, 53, 60, 66, 71, 76, 77, 81, 93, 94, 96, 98, 103, 124, 126, 129, 130, 133, 134, 136, 138, 148, 151, 153, 154, 155, 156, 159, 160, 164, 169, 170, 173, 177, 182, 186, 201, 210, 216, 220, 223, 224, 229, 230, 233, 234, 241, 242, 247, 248, 249, 255, 257, 258, 261, 262, 264, 266, 277, 280, 282, 283, 284, 285, 288, 289, 292, 294, 300, 303, 307, 312, 314, 315, 328, 335, 340, 344, 347, 348, 353, 354, 357, 358, 369, 373, 377, 382, 383, 385], "durner": 255, "durstewitz": 255, "dutar": 255, "duveau": 255, "duyckaert": 255, "dv": [136, 201, 264, 328], "dvec": [197, 201, 296, 324, 328], "dx": [39, 160, 163, 166, 201, 255, 289, 292, 296, 328, 368, 373], "dx2": [136, 264], "dy": [39, 136, 151, 166, 220, 264, 280, 296, 344, 373], "dye": 255, "dyhrfjeld": 255, "dyld_library_path": 246, "dylib": [52, 246], "dynam": [1, 3, 8, 38, 41, 53, 81, 88, 126, 140, 146, 160, 161, 163, 174, 182, 227, 229, 231, 246, 250, 254, 255, 269, 275, 290, 292, 304, 312, 331, 351, 353, 355, 363, 365, 366, 371, 373, 381, 382, 383, 388, 393], "dyne": 255, "dysfunct": 255, "dysmyelin": 255, "dystonia": 255, "dyt2": 255, "dz": 373, "dzakpasu": 255, "dzubai": 255, "d\u00edaz": 255, "d\u0142otko": 255, "e": [0, 3, 4, 6, 8, 10, 11, 13, 14, 22, 25, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 52, 53, 56, 64, 65, 66, 67, 68, 70, 71, 78, 80, 81, 82, 83, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 103, 104, 107, 109, 110, 113, 114, 119, 120, 124, 126, 127, 133, 136, 138, 147, 151, 153, 154, 155, 156, 159, 160, 163, 165, 166, 167, 169, 173, 177, 180, 185, 189, 190, 193, 195, 197, 200, 201, 210, 211, 216, 219, 220, 223, 225, 227, 229, 231, 233, 237, 241, 242, 246, 247, 248, 249, 250, 253, 254, 255, 261, 264, 266, 268, 276, 280, 282, 283, 284, 285, 288, 289, 292, 293, 295, 296, 297, 299, 303, 304, 305, 307, 310, 314, 316, 317, 320, 322, 324, 327, 328, 330, 331, 335, 338, 339, 340, 343, 344, 347, 348, 349, 351, 353, 355, 357, 360, 361, 366, 367, 368, 369, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 393], "e0": [22, 37, 115, 116, 154, 283], "e00067": 255, "e0116532": 255, "e0123799": 255, "e0128590": 255, "e0132577": 255, "e0133485": 255, "e0139314": 255, "e0140254": 255, "e0168356": 255, "e0175362": 255, "e0176132": 255, "e0180839": 255, "e0182648": 255, "e0184542": 255, "e0191106": 255, "e0192518": 255, "e0200712": 255, "e0201630": 255, "e0209429": 255, "e0218293": 255, "e0225100": 255, "e0226028": 255, "e0230327": 255, "e04551": 255, "e06250": 255, "e06414": 255, "e07919": 255, "e0ab": 247, "e1": 255, "e10": 255, "e1000062": 255, "e1000119": 255, "e1000519": 255, "e1000768": 255, "e1000815": 255, "e1000886": 255, "e1000932": 255, "e1001038": 255, "e1001102": 255, "e1002022": 255, "e1002050": 255, "e1002107": 255, "e1002149": 255, "e1002160": 255, "e1002319": 255, "e1002489": 255, "e1002521": 255, "e1002545": 255, "e1002550": 255, "e1002580": 255, "e1002599": 255, "e1002666": 255, "e1002867": 255, "e100288": 255, "e1003014": 255, "e1003137": 255, "e1003401": 255, "e1003560": 255, "e1003590": 255, "e1003601": 255, "e1003764": 255, "e1003775": 255, "e1003928": 255, "e1004014": 255, "e1004090": 255, "e1004112": 255, "e1004189": 255, "e1004240": 255, "e1004275": 255, "e1004584": 255, "e1004588": 255, "e1004641": 255, "e1004702": 255, "e1004768": 255, "e1004929": 255, "e1005011": 255, "e1005193": 255, "e1005206": 255, "e1005452": 255, "e1005672": 255, "e1005737": 255, "e1005754": 255, "e1005760": 255, "e1005930": 255, "e1005946": 255, "e1005960": 255, "e1006027": 255, "e1006124": 255, "e1006298": 255, "e1006392": 255, "e1006423": 255, "e1006485": 255, "e1006510": 255, "e1006535": 255, "e1006662": 255, "e1006753": 255, "e1006871": 255, "e1006975": 255, "e1007226": 255, "e1007375": 255, "e1007462": 255, "e1007601": 255, "e1007696": 255, "e1007725": 255, "e1007766": 255, "e1007826": 255, "e1007932": 255, "e1007937": 255, "e1008023": 255, "e1008057": 255, "e1008087": 255, "e1008114": 255, "e1008386": 255, "e1008499": 255, "e1008503": 255, "e1008573": 255, "e1008893": 255, "e100899": 255, "e1009199": 255, "e1009285": 255, "e1009371": 255, "e1009521": 255, "e1009558": 255, "e1009609": 255, "e1009654": 255, "e1009681": 255, "e1009754": 255, "e10234": 255, "e10243": 255, "e105071": 255, "e106567": 255, "e107780": 255, "e11": 255, "e111": 255, "e114938": 255, "e12190": 255, "e13747": 255, "e13852": 255, "e14": 255, "e14007": 255, "e14186": 255, "e14315": 255, "e15": 255, "e16553": 255, "e169": 255, "e1787": 255, "e1796": 255, "e18": 255, "e18566": 255, "e19463": 255, "e2": 255, "e2006422": 255, "e2100148": 255, "e21928": 255, "e21989": 255, "e2207": 255, "e2216": 255, "e22331": 255, "e22352": 255, "e22962": 255, "e23508": 255, "e24838": 255, "e25382": 255, "e26106": 255, "e26517": 255, "e2895": 255, "e2904": 255, "e29375": 255, "e2992": 255, "e3": 255, "e3001008": 255, "e3001375": 255, "e30752": 255, "e3280": 255, "e32883": 255, "e3289": 255, "e33281": 255, "e34238": 255, "e36007": 255, "e36670": 255, "e36867": 255, "e37102": 255, "e38446": 255, "e4": 255, "e40601": 255, "e40726": 255, "e41324": 255, "e41714": 255, "e41728": 255, "e41806": 255, "e42392": 255, "e42766": 255, "e43654": 255, "e44388": 255, "e44494": 255, "e45688": 255, "e47251": 255, "e4828": 255, "e48517": 255, "e49732": 255, "e49872": 255, "e5": 255, "e51169": 255, "e51402": 255, "e51901": 255, "e53357": 255, "e546": 255, "e55590": 255, "e55673": 255, "e56148": 255, "e57144": 255, "e57453": 255, "e59839": 255, "e6": 255, "e60831": 255, "e6586": 255, "e66811": 255, "e68131": 255, "e6871": 255, "e68765": 255, "e6879": 255, "e6970": 255, "e69798": 255, "e69984": 255, "e7": 255, "e7612": 255, "e7621": 255, "e76285": 255, "e78908": 255, "e8": 255, "e8047": 255, "e85826": 255, "e89995": 255, "e93779": 255, "e95454": 255, "e96026": 255, "e9ef741": 363, "e_": 38, "e_extracellular": [153, 282, 388], "e_fastpa": 388, "e_pa": [22, 37, 43, 66, 67, 68, 89, 96, 108, 153, 282, 388], "e_stim": 282, "e_styl": [149, 278], "e_syn": 38, "eaaq1438": 255, "eaay4313": 255, "eabh0024": 255, "each": [3, 5, 9, 10, 11, 12, 13, 25, 27, 28, 29, 32, 33, 36, 37, 38, 39, 42, 43, 46, 47, 49, 51, 52, 53, 56, 60, 64, 66, 70, 73, 74, 75, 76, 78, 80, 81, 84, 86, 88, 93, 95, 96, 99, 100, 103, 105, 107, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 138, 139, 142, 144, 147, 148, 149, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 174, 176, 177, 188, 190, 191, 194, 198, 200, 201, 204, 205, 217, 218, 219, 220, 223, 224, 225, 227, 229, 230, 231, 233, 234, 236, 237, 243, 249, 250, 255, 257, 258, 259, 261, 262, 266, 267, 271, 273, 276, 277, 278, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 300, 303, 304, 306, 307, 316, 317, 318, 321, 325, 327, 328, 330, 335, 339, 341, 342, 343, 344, 347, 348, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 368, 371, 373, 377, 382, 383, 384, 385, 387, 388], "eadvanc": [149, 278], "earli": [4, 82, 83, 103, 124, 126, 160, 242, 255, 289, 377, 378], "earlier": [42, 52, 53, 66, 70, 76, 103, 124, 156, 159, 160, 210, 229, 246, 284, 285, 288, 289, 335, 353], "earliest": [164, 220, 242, 294, 344], "earnshaw": 255, "eas": [7, 29, 81], "easi": [25, 28, 42, 45, 80, 81, 84, 88, 94, 96, 100, 103, 105, 123, 124, 126, 136, 155, 164, 231, 252, 264, 284, 289, 294, 355, 363, 382], "easier": [29, 45, 47, 53, 66, 76, 81, 82, 83, 154, 155, 165, 201, 231, 241, 252, 283, 284, 289, 295, 328, 353, 355, 370, 377, 382], "easiest": [76, 94, 105, 127, 154, 201, 229, 246, 283, 328, 353, 387], "easili": [37, 39, 40, 42, 64, 68, 70, 78, 103, 124, 126, 154, 160, 161, 171, 197, 227, 231, 242, 283, 289, 290, 301, 324, 351, 355, 367, 370, 371, 377, 378, 383, 387], "easybuild": 1, "eauclair": 255, "eb": 93, "eberl": 255, "ebi": 370, "ebiom": 255, "ebiomedicin": 255, "ebner": 255, "ebrain": 240, "ec": [368, 373], "eca": [89, 149, 155, 278, 284], "ecc": 54, "echegoyen": 255, "echo": [3, 66, 219, 246, 247, 248, 343], "ecj": 255, "ecker": 255, "ecog": 255, "ecosystem": 388, "ecs_boundary_condit": [292, 373], "ectop": 255, "ed": [145, 154, 170, 201, 236, 254, 274, 283, 300, 328, 360], "edelmann": 255, "edema": 373, "edg": [1, 47, 53, 66, 70, 86, 96, 104, 109, 110, 112, 113, 114, 166, 200, 235, 250, 289, 292, 296, 327, 344, 359, 367, 373], "edit": [1, 10, 11, 14, 25, 31, 36, 42, 47, 66, 70, 80, 86, 87, 92, 96, 103, 123, 124, 180, 210, 222, 231, 233, 247, 255, 310, 335, 346, 355, 357, 377], "editor": [25, 31, 32, 42, 46, 70, 76, 81, 92, 103, 107, 108, 124, 127, 129, 131, 133, 134, 144, 154, 175, 176, 180, 181, 182, 201, 210, 224, 230, 232, 234, 238, 257, 259, 261, 262, 273, 283, 305, 306, 310, 311, 312, 328, 335, 348, 354, 356, 358, 362, 393], "edu": [1, 38, 100, 126, 160, 164, 188, 198, 201, 237, 242, 255, 289, 294, 316, 325, 361, 393], "educ": [126, 255], "edward": 255, "ee": [377, 378], "eeckman": [254, 255], "eeg": 255, "ef": 372, "efel": 393, "effect": [25, 34, 40, 41, 45, 46, 52, 64, 68, 70, 78, 86, 87, 96, 100, 114, 126, 127, 136, 149, 154, 155, 160, 161, 163, 166, 169, 175, 176, 177, 182, 201, 210, 220, 221, 223, 229, 232, 238, 241, 242, 246, 255, 264, 268, 278, 283, 284, 289, 290, 292, 296, 300, 305, 306, 307, 314, 326, 331, 335, 344, 345, 347, 356, 362, 366, 368, 369, 377, 378, 381, 382, 383, 386, 388], "effector": 255, "effer": 255, "efficaci": [25, 255], "effici": [4, 6, 9, 36, 53, 56, 66, 76, 81, 88, 94, 133, 136, 151, 153, 154, 155, 159, 160, 164, 167, 169, 170, 182, 197, 198, 200, 201, 218, 219, 220, 227, 231, 235, 236, 237, 240, 254, 255, 261, 264, 280, 282, 283, 284, 288, 289, 292, 294, 296, 300, 312, 314, 324, 325, 327, 328, 342, 343, 344, 351, 355, 359, 360, 361, 382, 385, 387, 388], "efflux": 255, "effort": [10, 11, 14, 32, 46, 53, 55, 59, 66, 96, 103, 124, 133, 161, 231, 261, 290, 355, 377], "eftekhar": 255, "efun": [138, 154, 266, 283], "efun_as_python_cal": [138, 266], "eg": [28, 81, 119, 120, 134, 136, 138, 149, 153, 154, 155, 156, 158, 160, 161, 166, 169, 176, 185, 186, 188, 197, 199, 201, 204, 210, 214, 218, 220, 223, 227, 229, 230, 231, 236, 246, 262, 264, 266, 278, 282, 283, 284, 285, 287, 289, 290, 299, 306, 314, 315, 316, 324, 326, 328, 335, 338, 343, 344, 347, 351, 353, 354, 355, 360, 377, 378], "ega": [233, 357], "egan": 255, "egert": 255, "egfp": 255, "egg": [41, 221, 345], "egger": 255, "eggleston": 254, "eghbal": 255, "egorov": 255, "eguchi": 255, "ehl": 255, "ehning": 255, "ehrlich": 255, "eiber": 255, "eiching": 255, "eichner": [254, 255], "eigen": [197, 324], "eigen3": [197, 324], "eigenanalysi": 255, "eigenmannia": 255, "eigenvalu": [133, 197, 261, 324], "eigenvector": [133, 197, 261, 324], "eight": [70, 182, 201, 255, 312, 328], "eilemann": 255, "eiler": 255, "einevol": 255, "einit": [149, 278], "eion": [155, 284], "eisenman": 255, "either": [3, 10, 13, 14, 44, 52, 53, 64, 70, 81, 90, 94, 95, 119, 120, 126, 134, 136, 138, 144, 153, 154, 155, 156, 160, 161, 163, 170, 186, 188, 190, 197, 200, 201, 220, 227, 231, 246, 248, 253, 255, 262, 264, 266, 273, 282, 283, 284, 285, 289, 290, 292, 298, 299, 300, 312, 314, 315, 316, 317, 324, 327, 328, 334, 344, 351, 355, 366, 367, 369, 371, 377, 382, 384, 385, 387, 388], "ejn": 255, "ek": [153, 250, 282, 371, 388], "el": [41, 201, 255, 282, 328, 371, 382, 383, 384, 388], "el_hh": [22, 66, 72, 153, 159, 223, 347, 388], "el_hha2": 89, "elaagoubi": 255, "elabor": [201, 284, 369, 377], "elaps": [36, 133, 160, 261, 289], "elbasiouni": 255, "elbaz": 255, "elburg": 255, "eldawlatli": 255, "elec1": 284, "elect": [160, 289], "electr": [25, 33, 41, 93, 126, 153, 160, 166, 255, 282, 289, 296, 369], "electro": 255, "electroceut": 255, "electrochem": 255, "electrod": [25, 26, 30, 33, 76, 89, 96, 126, 133, 136, 141, 146, 153, 155, 173, 250, 255, 261, 264, 270, 275, 282, 284, 303, 383], "electrode_curr": [38, 152, 153, 251, 282, 344], "electrodiffus": 255, "electroencephalogram": 255, "electroencephalographi": 255, "electrogenesi": 255, "electrolyt": 31, "electromagnet": 255, "electromyograph": 255, "electron": [255, 320], "electrophi": 393, "electrophysiolog": [255, 369], "electrophysiologi": [41, 255, 366, 370, 371, 382, 388], "electrorespons": 255, "electrosensori": 255, "electrostimul": 255, "electroton": [26, 87, 96, 126, 255], "elegan": 255, "elem": 387, "element": [28, 53, 60, 73, 76, 81, 99, 100, 126, 127, 134, 136, 138, 151, 154, 159, 160, 173, 185, 188, 194, 197, 201, 204, 208, 211, 219, 220, 223, 235, 255, 262, 264, 266, 280, 283, 288, 289, 303, 312, 314, 316, 321, 324, 328, 334, 343, 344, 347, 359, 387, 388], "element_format": [197, 324], "elementari": [255, 366], "elev": 255, "eleven": [201, 328], "elfenn": 255, "elgamm": 255, "elgueta": 255, "elia": 255, "eliasmith": 255, "elicit": [10, 11, 32, 96, 153, 255, 282], "elif": [255, 340], "elimin": [3, 29, 33, 65, 79, 126, 127, 151, 154, 155, 160, 201, 218, 220, 242, 255, 280, 283, 284, 289, 328, 342, 344], "elind": 255, "ell": 382, "ellenberg": 255, "ellend": 255, "elli": 255, "elliott": 255, "ellips": [70, 228, 352], "ellisman": 255, "elmin": 289, "els": [3, 10, 11, 17, 21, 22, 24, 28, 29, 44, 47, 52, 56, 63, 66, 70, 77, 81, 82, 83, 96, 127, 136, 152, 153, 155, 159, 160, 169, 185, 191, 197, 198, 201, 204, 206, 210, 219, 220, 223, 224, 225, 229, 231, 234, 250, 252, 264, 281, 282, 284, 288, 289, 292, 296, 299, 302, 314, 318, 324, 325, 328, 335, 343, 344, 348, 349, 351, 353, 355, 358, 360, 366, 367, 371, 373, 375, 382, 385, 388], "elsevi": 255, "elsewher": [25, 41, 47, 86, 96, 103, 124, 155, 284, 367], "elstrott": 255, "elucid": 255, "elvs\u00e5shagen": 255, "em": 81, "emac": [70, 81, 180, 231, 310, 355], "email": [126, 387], "emb": [0, 255], "embarrassingli": [26, 126, 160, 289], "embc": 255, "embc44109": 255, "embc46164": 255, "embec": 255, "embed": [81, 255], "embo": 255, "embodi": 32, "embryologi": 255, "embryon": 255, "emerg": 255, "emiss": 255, "emit": [98, 126, 154, 220, 283, 344], "emkanjoo": 255, "emnett": 255, "emot": 255, "emphas": [96, 160, 289], "emphazis": 96, "empir": [94, 126, 369], "emploi": [43, 96, 100, 126, 201, 210, 328, 335, 377], "empti": [3, 14, 37, 48, 53, 76, 94, 107, 133, 160, 164, 166, 169, 173, 174, 182, 188, 201, 204, 210, 220, 227, 228, 229, 231, 233, 248, 261, 288, 289, 294, 296, 303, 304, 312, 316, 328, 334, 335, 344, 351, 352, 353, 355, 357, 377, 381], "emri": 255, "emrich": 255, "emul": [100, 248, 328], "en": [0, 52, 133, 246, 250, 255, 261, 377, 384], "ena": [72, 97, 136, 137, 153, 225, 250, 264, 265, 282, 349, 371, 388], "enabl": [1, 3, 6, 7, 25, 53, 54, 80, 96, 100, 103, 124, 126, 160, 201, 204, 231, 242, 246, 247, 248, 249, 254, 255, 289, 328, 331, 355, 359, 370, 371, 372, 373, 377, 382, 387], "enacadem": 377, "enam": [149, 278], "encapsul": [76, 81, 88, 127, 161, 201, 229, 237, 290, 312, 328, 330, 353, 361, 384, 387], "encephalographi": 255, "encephalopathi": 255, "enclos": [29, 81, 119, 120, 155, 161, 170, 173, 185, 189, 229, 284, 290, 300, 303, 353], "encod": [76, 160, 255, 289, 388], "encount": [7, 53, 246], "encourag": [100, 160, 289, 377], "encyclopedia": [254, 255], "end": [0, 1, 4, 8, 9, 10, 11, 12, 13, 16, 17, 18, 25, 27, 28, 30, 31, 33, 43, 47, 51, 52, 54, 55, 58, 59, 66, 67, 70, 72, 76, 78, 80, 81, 86, 94, 96, 104, 107, 108, 113, 119, 120, 123, 126, 127, 129, 130, 131, 134, 138, 139, 151, 153, 154, 155, 159, 160, 161, 164, 165, 166, 168, 169, 173, 188, 189, 190, 197, 201, 204, 214, 217, 220, 221, 223, 224, 227, 230, 231, 234, 236, 242, 247, 248, 252, 255, 257, 258, 259, 262, 266, 267, 280, 282, 283, 284, 289, 290, 294, 295, 296, 303, 316, 317, 324, 328, 338, 341, 344, 345, 347, 348, 351, 354, 355, 358, 360, 361, 363, 366, 368, 377, 379, 382, 385, 387, 388, 393], "endbox": [72, 159], "endcom": [154, 250, 283, 371], "endesfeld": 255, "endian": 289, "endif": [4, 139, 153, 155, 252, 267, 282, 284], "endocrinologi": 255, "endoflineblog": 377, "endogen": 255, "endoplasm": [255, 366, 369], "endovascular": 255, "endow": [14, 126, 255], "endpoint": [70, 96, 129, 257], "endt": 255, "endtempl": [21, 22, 69, 77, 81, 88, 148, 174, 178, 184, 214, 223, 277, 388], "endur": 255, "endverbatim": [4, 36, 98, 154, 155, 219, 250, 252, 283, 284, 343], "energi": [81, 220, 255, 344, 366], "eneuro": 255, "enforc": [154, 283], "engag": [70, 255], "engel": 255, "engelhardt": 255, "engin": [6, 101, 126, 255, 382, 388], "engl": 255, "englewood": [93, 126], "englitz": 255, "engram": 255, "enhanc": [87, 173, 255, 303, 377], "enjieu": 255, "enlarg": 99, "enoki": 255, "enough": [13, 16, 17, 18, 32, 37, 45, 47, 51, 53, 66, 86, 92, 100, 105, 127, 154, 155, 160, 161, 197, 201, 223, 246, 255, 283, 284, 289, 290, 324, 328, 347, 369, 385], "enrich": 255, "enrico": 255, "enriquez": 255, "ensembl": 255, "enslav": 29, "ensur": [3, 7, 24, 25, 38, 43, 53, 66, 68, 96, 116, 153, 154, 155, 166, 167, 189, 233, 241, 244, 246, 248, 255, 282, 283, 284, 296, 297, 316, 345, 357, 377, 378, 382, 388], "entail": 113, "enter": [9, 10, 11, 13, 14, 27, 30, 31, 32, 36, 37, 41, 45, 66, 67, 70, 80, 87, 89, 94, 96, 108, 126, 127, 129, 133, 134, 144, 160, 164, 175, 182, 186, 191, 201, 204, 210, 224, 227, 230, 231, 234, 246, 253, 257, 261, 262, 273, 289, 294, 302, 312, 315, 318, 328, 335, 348, 351, 354, 355, 358, 369, 377], "entir": [7, 25, 29, 33, 41, 42, 64, 66, 70, 94, 96, 103, 123, 124, 129, 133, 153, 154, 155, 159, 160, 163, 166, 170, 176, 185, 201, 210, 227, 229, 231, 233, 237, 257, 261, 282, 283, 284, 288, 289, 292, 296, 300, 306, 314, 328, 335, 343, 351, 355, 357, 361, 367, 388], "entiti": [53, 331], "entitl": [154, 247, 283], "entopeduncular": 255, "entorhin": 255, "entrain": 255, "entri": [3, 35, 46, 47, 52, 53, 70, 76, 81, 86, 103, 107, 114, 124, 129, 134, 138, 149, 154, 163, 180, 188, 201, 231, 239, 255, 257, 262, 266, 278, 283, 293, 299, 304, 310, 316, 328, 337, 355, 377, 381, 382, 388], "enumer": [63, 100, 282, 295, 330, 383, 384, 387], "env": [0, 1, 52, 219, 242, 246, 249, 253, 343], "envelop": [255, 366], "environ": [1, 3, 7, 52, 76, 81, 82, 83, 99, 126, 154, 158, 160, 170, 210, 216, 231, 242, 243, 246, 247, 248, 253, 254, 255, 269, 283, 287, 289, 300, 335, 340, 355, 363, 369, 377, 381, 385, 387, 388, 391], "environment": [3, 158, 246, 287], "envis": [210, 335], "enwiki": 377, "enzym": [255, 366], "enzymat": 366, "enzymatic_react": 366, "eof": [81, 187, 188, 191, 201, 316, 318, 328], "eol": 379, "eom": 255, "eor": 255, "ep": [127, 160, 220, 229, 344], "epfl": [248, 377], "ephapt": [126, 255], "epi": 255, "epidur": 255, "epilepsi": [254, 255], "epilepsia": 255, "epilept": 255, "epilepticu": 255, "epileptiform": 255, "epileptogen": 255, "epileptogenesi": 255, "epiretin": 255, "episod": [126, 255], "epithelium": 255, "epj": 255, "eplepsyr": 255, "epoch": 377, "eppler": 255, "eps_intfire4": 388, "epsc": 255, "epsilon": [39, 220, 344], "epsp": [80, 255], "epstein": 255, "eq": [28, 29, 155, 201, 202, 252, 284, 328, 329], "eqinit": [194, 202, 204, 321, 329, 388], "eqn": [81, 194, 204, 321, 371, 388], "equal": [10, 11, 13, 24, 25, 28, 29, 33, 39, 52, 70, 80, 91, 96, 107, 109, 129, 134, 136, 151, 154, 160, 161, 164, 166, 168, 170, 182, 185, 191, 197, 200, 201, 204, 219, 220, 226, 227, 229, 250, 255, 257, 262, 264, 280, 283, 289, 290, 294, 296, 298, 300, 312, 315, 318, 324, 327, 328, 343, 344, 350, 351, 353, 360, 366, 372, 382, 387, 388], "equat": [4, 12, 36, 39, 81, 94, 119, 120, 126, 136, 149, 151, 153, 154, 155, 160, 163, 194, 201, 204, 220, 223, 254, 255, 264, 278, 280, 282, 283, 284, 289, 292, 321, 328, 344, 347, 366, 369], "equilibr": [9, 153, 282], "equilibrium": [66, 250, 255], "equival": [7, 47, 56, 64, 66, 70, 76, 81, 93, 96, 98, 100, 147, 149, 153, 154, 156, 160, 161, 163, 166, 169, 176, 185, 200, 201, 204, 211, 220, 226, 229, 236, 242, 250, 253, 255, 276, 277, 278, 282, 283, 285, 289, 290, 292, 293, 295, 296, 297, 298, 306, 312, 314, 317, 318, 327, 328, 337, 338, 344, 350, 353, 360, 366, 368, 377, 378, 382, 385, 387, 388], "er": [163, 255, 292, 366, 369], "er_calcium": 292, "eras": [3, 29, 53, 151, 160, 189, 198, 200, 201, 228, 229, 233, 235, 237, 280, 289, 325, 327, 328, 352, 353, 357, 359, 361], "erase_al": [229, 235, 237, 353, 359, 361], "erchova": 255, "erdi": 255, "erev": [150, 152, 250, 279, 281], "erf": [81, 163, 195, 202, 292, 293, 322, 329, 388], "erfc": [81, 163, 195, 202, 292, 293, 322, 329, 388], "erg": 255, "ergic": 255, "erichsen": 255, "eriksson": 255, "erkaymaz": 255, "erlang": [200, 327], "ermentrout": 255, "ermolyuk": 255, "ero": 255, "err": [170, 300], "err_vec": [201, 328], "errat": 255, "errico": 255, "errington": 255, "errno": 52, "erron": [201, 328], "error": [1, 3, 7, 8, 10, 11, 28, 36, 39, 40, 42, 46, 47, 52, 53, 64, 65, 86, 87, 93, 94, 96, 98, 103, 119, 120, 124, 126, 129, 133, 134, 136, 137, 140, 146, 149, 150, 154, 155, 159, 160, 164, 165, 166, 168, 169, 170, 173, 182, 188, 191, 195, 196, 197, 201, 203, 204, 207, 211, 213, 220, 223, 227, 242, 246, 247, 255, 257, 261, 262, 264, 265, 269, 275, 278, 279, 283, 284, 289, 293, 294, 295, 296, 298, 300, 303, 314, 316, 317, 318, 320, 322, 323, 324, 327, 328, 330, 333, 337, 344, 347, 351, 370, 377, 381, 382, 385, 387, 388], "error_weight": [220, 344], "errorvalu": [133, 261], "errvec": [201, 328], "ersoi": 255, "erythromelalgia": 255, "esc": 70, "escap": [1, 220, 231, 255, 314, 344, 355], "escayg": 255, "esclapez": 255, "escobar": 255, "esculenta": 255, "eshra": 255, "eskandar": 255, "eskola": 255, "esler": 255, "especi": [1, 42, 43, 47, 53, 66, 96, 99, 103, 124, 126, 166, 169, 179, 227, 242, 296, 309, 351, 366, 369, 373, 377, 387, 388], "especiali": 35, "essenc": [53, 100], "essenti": [32, 42, 51, 53, 60, 67, 100, 103, 124, 126, 154, 155, 160, 166, 210, 255, 283, 284, 289, 296, 335, 387, 388], "establish": [45, 89, 115, 139, 160, 161, 166, 255, 267, 289, 290, 296, 331, 377], "estabrook": 255, "estevez": 255, "estim": [1, 39, 53, 96, 255, 377], "et": [5, 25, 35, 36, 41, 49, 88, 92, 126, 242, 250, 366, 369, 370, 372], "etc": [3, 4, 8, 14, 16, 29, 32, 41, 42, 45, 46, 53, 60, 64, 65, 66, 81, 82, 83, 85, 87, 94, 96, 103, 112, 114, 119, 120, 124, 126, 134, 146, 149, 150, 154, 155, 160, 164, 169, 182, 197, 198, 201, 211, 214, 220, 223, 227, 229, 231, 233, 235, 236, 242, 246, 250, 262, 275, 278, 279, 283, 284, 289, 294, 299, 312, 324, 325, 328, 338, 344, 347, 351, 353, 355, 357, 359, 360, 366, 367, 368, 369, 371, 377, 378, 380, 382, 383, 385, 387, 388, 393], "etceveri": 60, "etern": 31, "ethanol": 255, "ether": 255, "ethosuximid": 255, "etzion": 255, "etzioni": 255, "eu": 377, "euclidian": 27, "euler": [4, 36, 39, 81, 126, 154, 160, 166, 193, 201, 223, 250, 255, 283, 289, 296, 320, 328, 347, 393], "european": [126, 255], "eutect": [47, 126], "ev": 211, "eval": [211, 246, 247, 300, 315], "evalu": [10, 11, 13, 81, 94, 104, 119, 120, 138, 155, 159, 160, 185, 197, 204, 220, 229, 255, 266, 284, 288, 289, 292, 300, 314, 324, 344, 353, 377, 387], "evan": 255, "even": [7, 8, 9, 25, 28, 29, 32, 36, 40, 47, 52, 53, 56, 58, 64, 66, 76, 78, 80, 81, 96, 119, 133, 151, 154, 159, 160, 161, 165, 166, 170, 171, 173, 180, 186, 198, 201, 210, 220, 221, 241, 246, 261, 280, 283, 288, 289, 290, 292, 295, 296, 300, 301, 303, 310, 315, 325, 327, 328, 331, 335, 344, 345, 366, 369, 370, 377, 378, 382, 387, 388], "evenli": [29, 201, 328, 369, 387], "event": [9, 26, 29, 32, 37, 44, 54, 71, 82, 83, 87, 88, 100, 101, 103, 107, 109, 124, 126, 134, 148, 153, 154, 157, 159, 160, 161, 164, 200, 201, 219, 221, 223, 225, 229, 232, 242, 247, 250, 254, 255, 262, 277, 282, 283, 284, 286, 288, 289, 290, 294, 327, 328, 343, 345, 347, 349, 351, 353, 356, 371, 377, 378, 383, 385, 391], "event_queue_info": [220, 344], "event_tim": [157, 160, 286, 289], "event_typ": 353, "eventu": [45, 52, 76, 96, 160, 164, 200, 227, 289, 294, 327, 351, 371, 373, 377, 380], "ever": [3, 39, 155, 201, 255, 284, 377], "everi": [14, 25, 32, 33, 39, 46, 56, 60, 63, 66, 68, 70, 76, 93, 94, 119, 120, 123, 130, 131, 133, 134, 136, 148, 149, 151, 153, 154, 155, 158, 159, 160, 161, 164, 182, 189, 197, 199, 200, 201, 210, 220, 227, 229, 231, 233, 242, 248, 258, 259, 261, 262, 264, 277, 278, 280, 282, 283, 284, 287, 288, 289, 290, 292, 294, 296, 312, 326, 327, 328, 335, 344, 351, 353, 355, 357, 368, 369, 377, 378, 382, 387, 388], "everydai": 377, "everyon": [49, 139, 160, 267, 289], "everyth": [0, 13, 14, 19, 24, 45, 51, 52, 53, 66, 69, 70, 77, 94, 96, 100, 122, 123, 126, 163, 172, 220, 223, 225, 229, 235, 237, 248, 302, 344, 347, 349, 353, 359, 361, 368, 377, 378, 383, 384, 385, 387], "everytim": [154, 155, 283, 284], "everywher": [53, 96, 220, 367, 371, 382], "evid": [68, 255], "evok": 255, "evolut": [30, 255, 377], "evolutionari": [45, 255], "evolv": [89, 377, 383, 384, 385], "ewart": 255, "ex": [1, 81, 127, 197, 216, 242, 246, 248, 249, 324, 340], "exacerb": 255, "exact": [39, 70, 80, 119, 120, 123, 154, 155, 160, 163, 164, 166, 169, 185, 201, 220, 250, 283, 284, 289, 292, 293, 294, 296, 328, 344, 366, 377, 378, 383], "exactli": [3, 4, 39, 46, 66, 94, 96, 100, 148, 154, 155, 160, 161, 164, 166, 181, 201, 204, 216, 220, 223, 227, 237, 252, 277, 283, 284, 289, 290, 294, 296, 311, 314, 328, 340, 344, 347, 351, 361, 365, 366, 370], "exam": 70, "examin": [3, 10, 11, 14, 25, 40, 45, 47, 49, 50, 76, 82, 83, 86, 93, 94, 96, 109, 114, 119, 127, 144, 160, 161, 227, 239, 273, 289, 290, 351, 369, 393], "exampl": [0, 3, 4, 6, 7, 8, 10, 11, 13, 14, 25, 31, 33, 36, 39, 42, 47, 51, 53, 54, 56, 57, 58, 64, 66, 68, 69, 70, 78, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 96, 98, 99, 100, 103, 112, 114, 117, 118, 119, 120, 123, 124, 126, 133, 136, 138, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 174, 175, 178, 179, 182, 185, 188, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 205, 208, 211, 213, 214, 216, 217, 218, 219, 220, 223, 228, 229, 230, 231, 233, 235, 236, 237, 242, 246, 247, 248, 251, 255, 261, 264, 266, 268, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 351, 352, 353, 354, 355, 357, 359, 360, 361, 365, 367, 368, 373, 376, 377, 378, 381, 382, 384, 386, 387, 388], "exascal": 255, "exce": [9, 29, 107], "exceed": 51, "exceedingli": [153, 282], "excel": [38, 42, 53, 103, 124, 231, 355, 377, 388, 393], "except": [1, 3, 39, 53, 56, 66, 67, 81, 91, 96, 136, 153, 155, 159, 160, 161, 163, 165, 166, 168, 169, 170, 171, 182, 185, 188, 195, 197, 201, 210, 211, 216, 220, 223, 227, 234, 239, 242, 255, 264, 268, 282, 284, 288, 289, 290, 292, 295, 296, 298, 299, 300, 301, 312, 314, 315, 316, 322, 324, 328, 335, 337, 338, 340, 344, 347, 351, 358, 365, 367, 369, 377, 378, 387], "exception": [377, 378], "excess": [47, 201, 229, 328, 353, 388], "exchang": [13, 89, 154, 160, 161, 242, 254, 255, 283, 289, 290, 388], "excit": [9, 10, 11, 30, 37, 43, 74, 80, 107, 136, 153, 255, 264, 282, 371], "excitatori": [29, 37, 38, 74, 80, 95, 109, 110, 115, 153, 255, 282, 371, 383, 384, 385], "exclud": [4, 53, 246, 377, 378, 387], "exclus": [155, 182, 231, 246, 252, 255, 284, 312, 355, 377, 378], "excruci": [210, 335], "exec": 300, "exec_menu": [151, 229, 235, 237, 280, 353, 359, 360, 361], "execcommand": [227, 351], "execerror": [52, 171, 301, 388], "execut": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 24, 28, 29, 30, 32, 36, 37, 45, 46, 49, 51, 53, 54, 56, 57, 58, 60, 70, 76, 77, 81, 82, 83, 88, 96, 98, 100, 125, 126, 127, 129, 133, 134, 138, 140, 148, 154, 155, 156, 159, 160, 161, 164, 165, 166, 168, 169, 173, 174, 178, 179, 182, 185, 188, 191, 192, 201, 203, 204, 205, 207, 208, 210, 211, 217, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 233, 236, 237, 242, 244, 246, 247, 248, 253, 257, 261, 262, 266, 269, 277, 283, 284, 285, 288, 289, 290, 294, 295, 296, 298, 303, 304, 308, 309, 312, 314, 315, 316, 318, 319, 320, 328, 330, 333, 334, 335, 341, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 360, 361, 373, 377, 381, 385, 388], "execute1": [81, 170, 171, 205, 213, 289, 300, 301, 388], "executionset": 60, "exer": 255, "exercis": [1, 10, 11, 14, 34, 44, 46, 49, 64, 67, 76, 83, 86, 90, 96, 102, 105, 107, 110, 126, 292, 366, 383, 386, 391], "exerti": 255, "exhaust": 387, "exhibit": [164, 255, 294], "exist": [1, 3, 4, 8, 12, 14, 16, 28, 32, 42, 45, 46, 63, 66, 67, 70, 76, 79, 81, 92, 96, 98, 103, 107, 108, 110, 115, 119, 120, 123, 124, 126, 127, 133, 134, 137, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 159, 160, 161, 165, 166, 168, 170, 171, 173, 174, 176, 177, 179, 180, 182, 185, 186, 188, 192, 197, 201, 204, 205, 208, 211, 214, 216, 218, 219, 220, 225, 226, 227, 229, 230, 231, 234, 235, 236, 242, 247, 248, 255, 261, 262, 265, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 290, 295, 296, 298, 300, 301, 303, 304, 306, 307, 309, 310, 312, 315, 316, 319, 324, 328, 334, 338, 340, 342, 343, 344, 349, 350, 351, 353, 354, 355, 358, 359, 360, 366, 368, 369, 378, 379, 381, 382, 383, 384, 385, 387, 388, 393], "exit": [1, 3, 10, 11, 13, 14, 24, 31, 42, 45, 46, 66, 67, 81, 85, 87, 96, 103, 124, 133, 138, 153, 154, 155, 160, 164, 197, 201, 204, 210, 216, 222, 223, 227, 231, 233, 242, 246, 261, 266, 282, 283, 284, 289, 294, 312, 324, 328, 335, 340, 346, 347, 351, 355, 357, 381, 385], "exitcod": [216, 340], "exocytosi": 255, "exon": 255, "exp": [15, 16, 17, 18, 19, 28, 81, 91, 94, 119, 120, 136, 137, 153, 154, 158, 163, 171, 195, 197, 201, 202, 220, 229, 242, 250, 264, 265, 282, 283, 287, 292, 293, 301, 322, 324, 328, 329, 344, 353, 371, 373, 388], "exp1": [201, 328], "exp2": [201, 328], "exp2syn": [109, 152, 153, 281, 282, 388], "expand": [1, 46, 49, 70, 82, 83, 89, 201, 254, 255, 328, 373, 383, 384], "expect": [4, 13, 25, 41, 45, 53, 86, 91, 98, 127, 133, 136, 160, 161, 163, 201, 231, 242, 246, 247, 255, 261, 264, 289, 290, 292, 296, 328, 355, 369, 377, 381], "expedi": 67, "expens": [136, 154, 160, 225, 264, 283, 349, 369], "exper": [220, 344], "experi": [40, 45, 66, 76, 87, 93, 94, 103, 124, 147, 160, 161, 166, 242, 255, 276, 289, 290, 292, 296], "experiment": [7, 16, 17, 18, 25, 40, 41, 43, 66, 68, 71, 76, 89, 93, 100, 126, 225, 255, 349, 363], "experimentalist": [66, 126], "expert": 255, "expertis": 126, "explain": [3, 8, 25, 32, 42, 53, 54, 76, 103, 124, 127, 247, 255, 377], "explan": [8, 80, 370, 382], "explanatori": [32, 377], "explicit": [6, 28, 39, 76, 98, 119, 120, 126, 134, 138, 154, 155, 160, 166, 169, 201, 213, 218, 220, 229, 231, 241, 250, 262, 266, 283, 284, 289, 292, 296, 337, 344, 355, 377, 378, 388], "explicitli": [3, 4, 53, 64, 98, 119, 153, 154, 155, 159, 160, 161, 163, 165, 170, 182, 188, 201, 210, 220, 227, 242, 246, 247, 252, 253, 282, 283, 284, 288, 289, 290, 300, 312, 314, 316, 327, 328, 335, 344, 351, 365, 366, 370, 381, 382, 383, 387, 388], "explictli": 7, "exploit": [76, 126, 255], "explor": [10, 11, 29, 34, 40, 46, 49, 53, 64, 76, 87, 89, 126, 127, 129, 227, 240, 255, 257, 292, 351, 366, 369, 382, 386, 391], "exploratori": 126, "expm1": [163, 292, 293], "expneurol": 255, "exponenti": [9, 27, 29, 32, 53, 81, 91, 94, 109, 129, 153, 185, 195, 200, 220, 229, 255, 257, 282, 322, 327, 344, 376, 383], "export": [3, 7, 38, 65, 83, 89, 99, 127, 158, 160, 241, 242, 246, 248, 268, 275, 287, 289], "expos": [53, 327, 331], "exposur": 255, "expr": [52, 81, 154, 197, 201, 204, 207, 229, 230, 283, 328, 333, 353, 354], "expr1": [81, 204], "expr2": [81, 204], "expr3": 81, "expr_to_get_sign": 293, "expr_with_sign": 293, "exprand": [198, 325], "express": [52, 53, 66, 89, 91, 94, 119, 120, 126, 127, 129, 133, 146, 154, 155, 165, 169, 173, 184, 197, 201, 204, 211, 220, 227, 229, 230, 231, 233, 236, 237, 255, 257, 261, 262, 275, 283, 284, 295, 298, 300, 314, 324, 328, 337, 344, 351, 353, 354, 355, 357, 360, 361, 366, 369, 370, 381], "exprn": 204, "expsyn": [22, 37, 38, 82, 83, 88, 109, 152, 153, 182, 220, 227, 242, 250, 281, 282, 312, 338, 344, 351, 371, 383, 384, 388], "exptl": 24, "ext": 292, "extcab": [153, 282], "extcel": [81, 153], "extcelln": 282, "extend": [1, 29, 70, 87, 123, 134, 136, 154, 160, 163, 227, 242, 246, 255, 262, 264, 283, 289, 292, 351, 366, 381, 382, 383], "extens": [3, 25, 31, 47, 55, 59, 76, 81, 93, 100, 126, 127, 136, 140, 146, 150, 152, 154, 189, 227, 233, 237, 246, 255, 264, 269, 275, 279, 281, 283, 293, 328, 351, 357, 361, 381, 386, 387], "extensio": 59, "extent": [25, 96, 160, 255, 377], "exterior": 250, "extern": [1, 21, 22, 29, 52, 54, 71, 81, 98, 152, 153, 154, 169, 184, 220, 225, 241, 244, 250, 252, 255, 268, 282, 283, 344, 349, 377, 383, 388], "external1": 284, "extra": [0, 3, 33, 46, 52, 53, 54, 55, 76, 81, 98, 128, 130, 136, 139, 154, 159, 160, 166, 201, 219, 220, 225, 231, 233, 242, 243, 246, 247, 248, 250, 255, 256, 258, 264, 267, 279, 283, 288, 289, 296, 328, 343, 344, 349, 355, 357, 359, 377], "extra_scatter_gath": 344, "extra_scatter_gather_remov": 344, "extracellular": [1, 4, 33, 136, 139, 146, 151, 153, 155, 156, 160, 220, 250, 254, 255, 264, 267, 275, 280, 282, 284, 285, 289, 344, 366, 368, 371, 374, 388, 393], "extracellularli": [153, 255, 282], "extract": [127, 160, 255, 289, 378, 382, 387, 388, 393], "extraeqn": [139, 267], "extrapol": [195, 201, 322, 328], "extrapyramid": 255, "extrasynapt": 255, "extrem": [54, 66, 76, 82, 83, 88, 95, 133, 154, 160, 197, 220, 242, 261, 283, 289, 324, 344, 377, 378, 383], "extrema": 373, "extrins": 100, "extrus": 255, "ey": 255, "eyal": 255, "eye_color": 387, "ezra": 255, "f": [10, 11, 13, 16, 17, 27, 28, 36, 39, 44, 53, 63, 68, 81, 93, 100, 105, 119, 120, 136, 138, 150, 151, 152, 154, 160, 188, 190, 197, 201, 213, 219, 220, 227, 231, 236, 246, 248, 249, 254, 255, 264, 266, 279, 280, 281, 282, 283, 285, 289, 294, 295, 296, 299, 300, 302, 303, 304, 308, 309, 312, 316, 317, 319, 324, 327, 328, 330, 337, 338, 339, 340, 343, 344, 347, 348, 351, 355, 360, 365, 366, 367, 368, 376, 377, 382, 387, 388], "f1": [188, 231, 250, 316, 355], "f1000research": 255, "f1449v": 255, "f1486": 255, "f2": [188, 316], "f2p": 189, "f3": [188, 316], "f_mean": [201, 328], "f_rate": [292, 366], "fa": 357, "fa0eeb93b0fb": [164, 294], "fab": [91, 163, 292, 293, 371], "fabian": 255, "fac": [81, 136, 264], "face": [255, 382], "facil": [81, 160, 223, 289, 347], "facilit": [1, 25, 64, 114, 126, 255, 392], "facilitatori": 255, "fact": [12, 37, 39, 40, 60, 64, 76, 81, 94, 96, 108, 153, 155, 160, 161, 165, 166, 169, 197, 201, 220, 223, 230, 231, 282, 284, 289, 290, 295, 296, 324, 344, 347, 354, 355, 366, 377, 378, 382, 383], "faction": 373, "factor": [70, 94, 96, 119, 120, 130, 133, 136, 153, 154, 155, 160, 165, 166, 177, 197, 201, 220, 227, 231, 233, 235, 237, 250, 255, 258, 261, 264, 282, 283, 284, 289, 292, 295, 296, 307, 324, 328, 344, 351, 355, 357, 359, 361, 369, 377], "factori": [81, 163, 292, 293, 314], "factors_cadifu": 250, "factors_don": [155, 250, 284], "facultad": 255, "fadda": 255, "fadvanc": [24, 81, 134, 136, 148, 149, 151, 153, 154, 155, 160, 165, 200, 201, 218, 220, 223, 224, 225, 227, 230, 262, 264, 277, 278, 280, 282, 283, 284, 289, 295, 327, 328, 342, 344, 347, 348, 349, 351, 354, 366, 373, 375, 388], "fail": [1, 3, 4, 7, 42, 53, 56, 81, 98, 103, 124, 160, 231, 242, 244, 246, 247, 248, 289, 355, 381], "failsaf": [210, 335], "failur": [54, 81, 171, 188, 192, 246, 247, 255, 301, 316, 319, 377], "fainman": 255, "fairhal": 255, "fairli": [12, 29, 32, 53, 96, 284], "faisal": 255, "faithfulli": 255, "faivr": 255, "fake_fir": 282, "fake_output": 282, "fakler": 255, "falck": 255, "fall": [43, 53, 68, 81, 86, 94, 96, 100, 153, 160, 201, 250, 255, 282, 289, 328, 382], "fallahrad": 255, "fallback": 3, "fallegg": 255, "fallon": 255, "fals": [24, 28, 36, 38, 39, 56, 63, 64, 81, 185, 195, 201, 204, 210, 211, 219, 248, 249, 288, 289, 292, 296, 298, 303, 310, 312, 322, 323, 328, 331, 335, 338, 343, 344, 359, 361, 366, 368, 369, 382, 387], "famili": [133, 144, 147, 201, 220, 223, 229, 231, 255, 261, 273, 276, 328, 344, 347, 353, 355], "familiar": [28, 32, 51, 53, 154, 210, 283, 314, 335, 385, 388], "famular": 255, "fan": [54, 255], "fancier": 29, "fang": 255, "faq": [58, 66, 87, 103, 124, 126, 245], "far": [24, 25, 29, 36, 37, 53, 96, 133, 134, 138, 160, 161, 166, 241, 242, 261, 262, 266, 289, 290, 296, 314, 373, 377, 378, 384, 385], "farad": [382, 383, 384], "faradai": [28, 52, 81, 119, 120, 154, 193, 250, 283, 320, 388], "farah": 255, "farahani": 255, "faramarzi": 255, "fard": 255, "fardet": 255, "faria": 255, "farina": 255, "farinella": 255, "farisello": 255, "farm": 96, "farokhniae": 255, "farrant": 255, "farri": 255, "farrow": 255, "farther": [25, 231, 355], "farzad": 255, "fascicul": 255, "fasciculu": 255, "fashion": [13, 81], "fassi": 255, "fassio": 255, "fast": [3, 9, 32, 36, 53, 63, 109, 160, 166, 169, 198, 201, 208, 220, 229, 233, 236, 255, 289, 296, 325, 328, 334, 344, 353, 357, 360, 379], "fast_imem": 53, "faster": [1, 3, 9, 36, 82, 83, 88, 94, 95, 126, 129, 134, 153, 154, 159, 169, 198, 201, 207, 220, 232, 233, 235, 257, 262, 277, 282, 283, 288, 289, 325, 328, 333, 344, 356, 357, 359, 366, 377, 378], "fastest": [198, 227, 234, 325, 351, 358], "fastflush": [229, 235, 353, 359], "fastpa": [153, 204, 282, 388], "fatal": 7, "fatti": 255, "fault": [242, 246], "faur": 255, "fauser": 255, "favor": [160, 165, 255, 289, 295, 328], "favorit": [40, 47, 388], "favour": 377, "fazzolari": 255, "fb17127": 363, "fbioe": 255, "fc": [10, 11, 369], "fclamp": [146, 162, 223, 275, 291, 347, 388], "fclampi": [146, 162, 275, 291, 388], "fclampv": [146, 162, 275, 291, 388], "fcn": [201, 328], "fconn": 29, "fcurrent": [24, 96, 136, 223, 224, 264, 347, 348, 351, 388], "fd1": [133, 261], "fe": 369, "fe_downward": [196, 323], "fe_tonearest": [196, 323], "fe_towardzero": [196, 323], "fe_upward": [196, 323], "fear": [198, 255, 325], "feasibl": 255, "featur": [1, 6, 7, 25, 42, 57, 66, 73, 86, 90, 96, 98, 99, 119, 120, 126, 153, 154, 155, 160, 181, 227, 231, 246, 248, 249, 252, 255, 282, 283, 284, 289, 292, 311, 351, 355, 366, 377, 378, 393], "febril": 255, "februari": [126, 255], "fedora": [1, 246], "fedorov": 255, "feed": [190, 255, 317], "feedback": [4, 126, 255, 377], "feedforward": 255, "feel": [3, 4, 140, 269, 370], "feenableexcept": [171, 301], "feerick": 255, "feet": [119, 120], "feetham": 255, "fehl": 255, "feket": 255, "feldman": 255, "feldmey": 255, "fell": 96, "feller": 255, "fellin": 255, "fellner": 255, "fellou": 255, "felt": [232, 356], "femtosecond": 255, "fenc": 94, "feng": 255, "fenton": 255, "ferdou": 255, "ferecsko": 255, "ferguson": 255, "fernandez": 255, "fernando": 377, "fern\u00e1ndez": 255, "feround": [196, 202, 323, 329], "ferraguti": 255, "ferrant": 255, "ferrares": 255, "ferrari": 255, "ferrario": 255, "ferreira": 255, "ferret": 255, "ferretti": 255, "ferri": 255, "fertil": 41, "fetal": 255, "fetter": 255, "few": [1, 3, 10, 11, 13, 14, 31, 32, 36, 53, 66, 76, 96, 103, 124, 160, 161, 175, 229, 247, 289, 290, 305, 314, 365, 366, 377, 385, 388], "fewer": [16, 17, 18, 134, 160, 201, 262, 289, 328, 385], "fewest": [166, 296], "feysot": 255, "ff": 213, "ff4976021aae": 216, "ffff": 70, "ffffff": 92, "fflush": 52, "ffmpeg": 63, "fft": [201, 202, 328, 329], "fgcolor": 70, "fgcolor8": 70, "fgcolori": 70, "fhf": 255, "fhf2": 255, "fi": [10, 11, 13, 16, 17, 219, 249, 343], "fi0": [69, 77, 223, 347], "fi1": [69, 77, 223, 347], "fi2": [69, 77, 223, 347], "fib": 387, "fiber": 255, "fibonacci": [200, 327, 387], "fibr": 255, "fibroblast": 255, "fick": 366, "fictiv": 255, "fidel": 255, "fiduci": 40, "fidzinski": 255, "field": [14, 25, 31, 32, 33, 36, 56, 57, 64, 66, 80, 81, 86, 87, 94, 96, 107, 108, 111, 112, 113, 114, 115, 123, 127, 129, 131, 133, 134, 144, 153, 154, 159, 160, 161, 163, 176, 181, 182, 183, 190, 201, 210, 220, 224, 230, 231, 232, 234, 238, 255, 257, 259, 261, 262, 273, 282, 283, 288, 289, 290, 292, 306, 311, 312, 313, 314, 317, 328, 335, 344, 348, 354, 355, 356, 358, 362, 387], "field_act": 53, "field_data": 60, "fieldeditor": [227, 351], "fieldimplement": 60, "fiengo": 255, "fier": 255, "fietkiewicz": 255, "fiftieth": [201, 328], "fig": [17, 19, 25, 99, 189, 282, 367, 371, 373, 383], "figl": 255, "figsiz": [63, 100, 282, 370, 383], "figur": [14, 25, 37, 38, 42, 46, 47, 49, 53, 63, 65, 73, 81, 86, 87, 89, 100, 101, 121, 153, 160, 161, 227, 229, 247, 255, 282, 289, 290, 335, 351, 353, 359, 360, 367, 370, 373, 377, 378, 382, 383, 384, 385, 387, 388], "fih": [24, 44, 69, 76, 77, 164, 223, 294, 347], "fiinitializehandl": 76, "file": [1, 3, 5, 6, 7, 10, 11, 13, 16, 17, 19, 24, 26, 27, 30, 31, 32, 36, 37, 38, 40, 45, 46, 49, 51, 52, 54, 55, 57, 58, 60, 64, 65, 67, 70, 79, 81, 82, 83, 87, 89, 90, 92, 94, 96, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 125, 129, 133, 134, 136, 140, 144, 147, 153, 154, 155, 160, 161, 170, 171, 173, 175, 177, 182, 184, 187, 189, 190, 197, 201, 203, 204, 210, 214, 216, 218, 219, 220, 223, 225, 226, 228, 229, 230, 237, 241, 242, 244, 246, 247, 248, 251, 252, 257, 261, 262, 264, 269, 273, 275, 276, 277, 282, 283, 284, 285, 289, 290, 292, 300, 301, 303, 305, 307, 312, 314, 317, 324, 327, 328, 330, 335, 338, 340, 342, 343, 344, 347, 349, 350, 352, 353, 354, 359, 361, 366, 369, 374, 377, 381, 383, 385, 387, 388, 393], "file1": [81, 154, 188, 283, 316, 377], "file2": [81, 154, 188, 283, 316, 377], "file3": [154, 188, 283, 316], "file_nam": 285, "file_obj": 349, "file_object": [197, 324], "filebrows": [177, 307], "filechoos": [70, 134, 262], "fileio": 52, "filenam": [81, 134, 139, 154, 170, 177, 188, 190, 197, 216, 218, 219, 223, 226, 228, 229, 231, 237, 246, 248, 262, 267, 283, 292, 300, 307, 316, 317, 324, 340, 342, 343, 347, 350, 352, 353, 355, 361, 373], "fileobj": [197, 201, 324, 328], "filepath": 249, "filesystem": [246, 377], "filipi": 255, "filipovi\u0107": 255, "fill": [4, 28, 40, 53, 64, 70, 73, 76, 138, 160, 166, 197, 201, 202, 208, 220, 228, 229, 235, 237, 266, 289, 296, 314, 324, 328, 329, 344, 352, 353, 359, 361, 373, 377, 382, 387, 388], "film": 255, "filter": [54, 163, 188, 189, 197, 201, 202, 219, 226, 227, 255, 292, 316, 324, 328, 329, 343, 350, 351, 387], "filterwarn": 320, "fimpi4": [10, 11], "final": [8, 10, 11, 27, 45, 53, 60, 66, 70, 81, 86, 89, 94, 96, 98, 108, 115, 138, 154, 155, 166, 185, 188, 221, 222, 230, 231, 246, 266, 283, 284, 289, 296, 314, 316, 345, 346, 354, 355, 369, 370, 375, 379, 382, 385, 387], "finalis": 52, "find": [3, 4, 7, 10, 11, 13, 25, 26, 28, 35, 39, 40, 46, 47, 52, 53, 59, 81, 82, 83, 86, 87, 89, 94, 96, 98, 99, 100, 126, 133, 155, 160, 169, 171, 201, 231, 242, 246, 247, 248, 261, 283, 284, 289, 292, 299, 301, 314, 328, 355, 360, 370, 381, 382, 387], "fine": [4, 30, 40, 47, 66, 67, 86, 96, 109, 201, 248, 255, 328, 387], "fineberg": 255, "finelli": 255, "finer": [163, 292], "finest": 40, "finish": [13, 27, 52, 104, 105, 108, 110, 114, 129, 134, 138, 148, 154, 159, 160, 221, 224, 247, 257, 262, 266, 277, 283, 288, 289, 345, 348, 377, 378], "finit": [94, 164, 255, 294], "finiti": [24, 52, 60, 63, 69, 77, 81, 96, 100, 119, 134, 148, 149, 151, 153, 154, 155, 159, 160, 166, 200, 201, 219, 220, 223, 224, 225, 242, 253, 262, 277, 278, 280, 282, 283, 284, 288, 289, 292, 296, 327, 328, 342, 343, 344, 347, 348, 349, 351, 359, 360, 361, 365, 366, 367, 368, 370, 371, 373, 375, 376, 382, 383, 384, 385, 388], "finitializehandl": [24, 44, 69, 76, 77, 140, 160, 164, 224, 225, 269, 284, 289, 294, 348, 349, 368, 388], "finitializenrn_finiti": 60, "fink": 255, "finkel": 255, "finn": 255, "finompi": [10, 11], "fiorillo": 255, "fire": [13, 16, 32, 38, 46, 75, 80, 90, 100, 107, 116, 153, 161, 201, 255, 282, 290, 294, 328, 371, 383, 393], "fire_tim": 63, "firetim": 29, "firewal": 246, "first": [0, 1, 3, 4, 5, 7, 8, 13, 16, 17, 18, 25, 28, 32, 33, 35, 36, 37, 41, 42, 46, 47, 50, 51, 52, 53, 56, 63, 66, 67, 70, 73, 76, 78, 80, 81, 82, 83, 86, 88, 89, 94, 96, 98, 99, 103, 104, 105, 107, 108, 109, 110, 119, 120, 124, 126, 127, 129, 131, 132, 133, 134, 136, 138, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 173, 177, 182, 185, 186, 188, 189, 191, 197, 200, 201, 203, 204, 205, 206, 207, 210, 214, 219, 220, 223, 227, 228, 229, 231, 233, 234, 235, 236, 237, 242, 247, 248, 249, 250, 253, 255, 257, 259, 260, 261, 262, 264, 266, 268, 278, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 303, 307, 312, 314, 315, 316, 318, 324, 327, 328, 330, 331, 332, 334, 335, 338, 343, 344, 347, 351, 352, 353, 355, 357, 358, 359, 360, 361, 365, 366, 367, 369, 370, 373, 377, 381, 382, 384, 385, 386, 387, 388, 392, 393], "first_nam": 387, "firstli": 283, "fischer": 255, "fischl": 255, "fiser": [10, 11], "fish": 255, "fisher": 255, "fishman": 255, "fit": [47, 51, 70, 86, 93, 126, 128, 129, 134, 138, 160, 201, 202, 226, 229, 231, 237, 250, 255, 256, 257, 262, 266, 289, 328, 329, 350, 353, 355, 361], "fit_praxi": [81, 129, 133, 134, 135, 138, 201, 223, 257, 261, 262, 263, 266, 328, 347, 388], "fit_vec": [201, 328], "fitcriterion": [128, 256], "fitter": [42, 87, 126, 129, 133, 134, 160, 170, 224, 257, 261, 262, 289, 300, 348], "fittodata": [128, 256], "fitzgerald": 255, "fitzhugh": 255, "fitzpatrick": 255, "five": [1, 3, 46, 53, 126, 182, 204, 218, 312, 316, 342, 377], "fix": [4, 24, 32, 33, 36, 38, 39, 44, 46, 53, 64, 70, 81, 87, 96, 98, 107, 108, 126, 131, 136, 153, 159, 160, 163, 164, 173, 182, 201, 208, 220, 223, 229, 231, 234, 242, 246, 249, 255, 259, 264, 282, 284, 288, 289, 292, 294, 303, 312, 327, 328, 334, 344, 347, 353, 355, 358, 359, 365, 369, 377, 378, 380, 382, 393], "fixed_step": [220, 344], "fixedcrosssect": [163, 292, 366], "fixedperimet": [163, 292, 366], "fixnseg": 125, "fixtyp": [228, 229, 352, 353], "fl": 255, "flag": [3, 7, 8, 52, 53, 76, 86, 133, 138, 154, 158, 159, 171, 190, 220, 223, 242, 246, 250, 261, 266, 283, 287, 288, 289, 292, 301, 317, 344, 347, 359, 363, 380, 385, 388], "flagvec": [220, 344], "flander": 255, "flash": [94, 96], "flat": 255, "flatten": 53, "flavour": 53, "fleck": 255, "fleckenstein": 255, "fledg": 55, "fleidervish": 255, "fleme": 255, "fletcher": 255, "flex": [7, 246, 247, 248], "flexibl": [25, 32, 53, 76, 81, 87, 127, 161, 166, 219, 225, 255, 290, 343, 377, 383, 384], "flicker": 255, "flight": [66, 255], "flip": [70, 173, 303], "flip_funct": 303, "flip_to": [72, 159, 173, 183, 303, 313], "float": [3, 28, 52, 53, 56, 70, 81, 91, 171, 185, 196, 198, 199, 201, 213, 231, 242, 289, 292, 296, 298, 301, 323, 324, 325, 326, 327, 328, 337, 355, 359, 387, 388], "float64": 253, "float_epsilon": [81, 185, 199, 201, 202, 204, 294, 326, 328, 329, 388], "floating_point_field": 60, "floatingpoint": [53, 60], "floor": [91, 163, 201, 202, 255, 283, 292, 293, 328, 329], "flore": 255, "flow": [10, 11, 25, 45, 87, 130, 153, 163, 166, 169, 255, 258, 282, 292, 296, 344, 378, 379], "flucher": 255, "fluctuat": [25, 100, 255], "flufenam": 255, "fluid": 255, "fluoresc": 255, "fluoxetin": 255, "flush": [28, 134, 160, 173, 187, 188, 198, 200, 201, 224, 227, 229, 231, 232, 233, 235, 236, 237, 262, 289, 303, 316, 325, 327, 328, 334, 348, 351, 353, 355, 356, 357, 359, 360, 361], "flush_list": [229, 237, 353, 361], "flux": [119, 120, 255, 292, 369, 373], "flux_expr": [154, 283], "fly": [45, 46, 227, 255, 351], "fmatrix": [223, 347, 388], "fmod": [91, 163, 292, 293], "fmr1": 255, "fnagi": 255, "fname": 282, "fname_othermodelsuffix": [155, 284], "fnana": 255, "fnbot": 255, "fncel": 255, "fncir": 255, "fncom": [254, 255], "fneur": 255, "fnhum": 255, "fnin": 255, "fninf": [93, 254, 255], "fnint": 255, "fnmol": 255, "fno": [241, 246], "fnpost": 250, "fnpre": 250, "fnsy": 255, "fnsyn": 255, "fobj": [188, 316], "focal": 255, "focu": [10, 11, 126, 161, 231, 255, 290, 355, 377, 382, 383], "focus": [50, 99, 242, 255, 377, 378], "focuss": [42, 66, 105], "fodor": 255, "fohlmeist": 255, "fol": 70, "fold": [25, 201, 220, 255, 328, 344], "folder": [0, 3, 45, 48, 52, 56, 59, 76, 94, 122, 216, 219, 241, 244, 246, 247, 248, 249, 340, 343, 377], "foldi": 255, "folei": 255, "follow": [0, 1, 3, 4, 7, 8, 10, 11, 13, 14, 25, 28, 29, 32, 34, 36, 37, 39, 44, 46, 52, 53, 55, 58, 60, 64, 65, 66, 68, 70, 73, 76, 77, 80, 81, 88, 92, 94, 96, 98, 100, 103, 105, 107, 111, 119, 120, 124, 129, 134, 139, 148, 149, 151, 153, 154, 155, 158, 159, 160, 161, 165, 166, 170, 173, 174, 182, 185, 188, 189, 191, 193, 197, 201, 203, 204, 205, 207, 210, 213, 214, 216, 219, 220, 225, 229, 231, 233, 234, 237, 242, 246, 247, 248, 249, 250, 252, 253, 255, 257, 262, 267, 277, 278, 280, 282, 283, 284, 287, 288, 289, 290, 292, 293, 295, 296, 299, 300, 303, 304, 314, 316, 318, 320, 324, 328, 330, 335, 337, 338, 340, 342, 343, 344, 348, 349, 351, 353, 355, 357, 358, 361, 363, 366, 369, 373, 376, 377, 378, 381, 383, 385, 387, 388, 389, 393], "font": [37, 70, 99, 175, 177, 229, 305, 307, 353], "font3": 70, "fontain": 255, "fontana": 255, "fonteh": 255, "fonti": 70, "foo": [28, 53, 87, 98, 155, 164, 205, 250, 252, 284, 294, 314, 315, 341, 387], "fooba": 87, "food": 255, "foolish": [161, 290], "foot": [119, 120, 154, 255, 283], "foot2inch": [119, 120, 154, 283], "footnot": 379, "for_all_vector": 60, "for_netcon": [152, 251, 281], "foral": [15, 47, 58, 66, 69, 77, 81, 96, 125, 133, 134, 145, 153, 160, 165, 166, 169, 190, 201, 203, 204, 205, 223, 227, 261, 262, 274, 351, 388], "forbid": 53, "forbidden": [53, 98], "forc": [7, 14, 36, 44, 53, 71, 80, 96, 97, 126, 130, 149, 154, 160, 161, 171, 173, 246, 255, 258, 278, 283, 289, 290, 301, 303, 381], "ford": 255, "fore": [70, 255], "foreground": [70, 73], "forev": [28, 39, 160, 289], "forger": 255, "forget": [7, 25, 76, 81, 83, 123, 231, 242, 355, 382], "forgiv": [201, 328], "forgot": [94, 96], "fork": 377, "form": [25, 38, 39, 41, 49, 65, 70, 81, 95, 96, 119, 120, 126, 129, 133, 134, 138, 151, 153, 154, 155, 159, 160, 163, 165, 166, 169, 173, 177, 180, 182, 185, 186, 188, 190, 192, 194, 197, 201, 203, 204, 207, 220, 221, 223, 229, 230, 231, 233, 236, 246, 247, 255, 257, 261, 262, 266, 280, 282, 283, 284, 288, 289, 292, 295, 296, 303, 305, 307, 310, 312, 314, 315, 316, 317, 319, 321, 324, 328, 330, 333, 344, 345, 347, 353, 354, 355, 357, 360, 361, 366, 369, 370, 376, 377, 385, 388], "formal": [81, 119, 120, 136, 255, 264], "format": [12, 13, 28, 47, 52, 64, 70, 76, 81, 86, 94, 99, 119, 120, 126, 127, 129, 140, 150, 160, 161, 165, 184, 186, 187, 188, 189, 197, 201, 213, 215, 216, 219, 225, 227, 231, 243, 246, 255, 257, 269, 279, 289, 290, 295, 314, 316, 324, 328, 337, 339, 340, 343, 349, 351, 355, 366, 375, 377, 382, 383, 384, 385, 387, 388, 393], "format_str": [201, 328], "formento": 255, "former": [56, 96, 160, 185, 197, 220, 233, 279, 289, 292, 324, 344, 357], "formerli": [7, 70], "formul": [126, 377, 378], "formula": [39, 43, 68, 136, 264, 292, 366, 382], "fornetcon": [60, 155, 250, 284], "fornetcontest": 250, "forrest": 255, "forse": 327, "forsec": [22, 58, 66, 68, 81, 165, 167, 169, 203, 204, 236, 388], "forstner": 255, "forsyth": 255, "fort": 255, "forth": [27, 52, 99, 104, 105, 211, 314], "forthcom": [160, 289], "forti": 255, "fortier": 255, "fortran": 81, "fortun": [36, 100, 247, 289, 370], "forum": [1, 76, 83, 87, 126, 240, 246], "forward": [39, 53, 100, 201, 231, 255, 292, 328, 355, 366, 379, 393], "forward_r": [163, 292], "fossati": 255, "fossum": 255, "foubert": 255, "foucart": 255, "foul": 53, "found": [3, 13, 35, 39, 46, 47, 52, 60, 81, 98, 119, 120, 133, 134, 138, 139, 154, 161, 201, 204, 214, 220, 227, 231, 246, 247, 250, 261, 262, 266, 267, 283, 290, 328, 338, 344, 351, 355, 371, 377], "foundat": [126, 255], "four": [7, 9, 25, 46, 70, 81, 126, 136, 173, 182, 201, 229, 235, 237, 255, 264, 303, 312, 328, 353, 359, 361, 366, 372, 385], "fourag": 255, "fouriaux": 255, "fourier": [202, 329], "fournier": 255, "fourth": [10, 11, 119, 120, 127, 138, 149, 220, 266, 278, 344, 366], "foust": 255, "foutri": 255, "foutz": 255, "fowerak": 255, "fox": 255, "fp": 52, "fphar": 255, "fphy": 255, "fprint": [81, 184, 187, 190, 192, 197, 202, 317, 319, 324, 329, 388], "fprintf": 81, "fpsyg": 255, "frac": [39, 150, 151, 152, 195, 279, 280, 281, 322, 366, 376, 382], "fraction": [1, 25, 66, 68, 76, 100, 107, 153, 164, 229, 255, 282, 292, 294, 353, 369, 373], "fractionalvolum": [163, 292, 366, 369], "fragil": [7, 53, 155, 252, 255, 284], "fragment": [1, 81, 96, 119, 120, 161, 219, 255, 290, 314, 343, 344, 381], "frahm": 255, "frame": [52, 81, 123, 173, 255, 303, 373], "framelast": 52, "frameobj_clean": 52, "frames": 52, "framework": [3, 86, 161, 246, 255, 290], "franc": 255, "francavilla": 255, "franceschetti": 255, "franci": 255, "franco": 255, "frank": 255, "frankenhaeus": [154, 283, 366], "frankenhaus": [146, 275], "franklin": 255, "frans\u00e9n": 255, "fraser": 255, "frat": 250, "frate": 255, "fread": [188, 201, 202, 225, 316, 328, 329, 349], "frecord": 219, "frecord_init": [24, 96, 223, 224, 343, 347, 348, 351, 388], "free": [3, 4, 52, 53, 60, 76, 81, 94, 98, 126, 127, 160, 201, 220, 242, 255, 282, 289, 292, 328, 344, 369, 370, 372, 373, 390, 393], "free_event_queu": [220, 344], "freed": [53, 153, 155, 159, 164, 165, 197, 201, 207, 208, 229, 237, 282, 284, 289, 294, 295, 328, 333, 334, 353, 361], "freedom": 53, "freeli": [231, 255, 355], "freeman": 255, "freez": 377, "freg": 264, "fregnac": 255, "frei": 255, "french": 255, "freq": [13, 16, 17, 18, 125, 136, 201, 264, 328], "freqenc": [201, 328], "frequenc": [10, 11, 13, 16, 17, 18, 28, 29, 76, 80, 96, 100, 125, 130, 131, 132, 136, 201, 255, 258, 259, 260, 264, 328, 377, 378, 385], "frequenli": 40, "frequent": [87, 160, 289, 377, 385], "fresh": [3, 30, 96], "freund": 255, "fri": 255, "fridman": 255, "friedman": 255, "friedrich": 255, "friend": [54, 127, 387], "friendli": [53, 255, 369, 382], "friendlier": 382, "friesen": 255, "frijn": 255, "friston": 255, "frog": [41, 255], "from": [0, 1, 3, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 64, 66, 68, 69, 70, 73, 74, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 107, 108, 111, 112, 113, 114, 115, 119, 120, 123, 124, 127, 129, 131, 132, 133, 134, 136, 137, 138, 144, 146, 147, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 169, 170, 173, 174, 179, 182, 184, 186, 187, 188, 190, 194, 197, 198, 200, 201, 203, 204, 205, 208, 210, 211, 214, 216, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 237, 238, 240, 242, 244, 246, 247, 248, 249, 251, 253, 254, 255, 257, 259, 260, 261, 262, 264, 265, 266, 268, 269, 273, 275, 276, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393], "from_doubl": [201, 202, 328, 329], "from_python": [201, 202, 314, 328, 329], "from_vector": [197, 202, 236, 324, 329, 360], "fromcellbuild": 37, "front": [41, 45, 70, 93, 94, 96, 133, 173, 174, 255, 261, 303, 304, 366, 373, 387], "frontal": 255, "frontier": [254, 255], "frontostriat": 255, "fronzaroli": 255, "frosch": 255, "frost": 255, "frotscher": 255, "froudaraki": 255, "frozen": 53, "fruscion": 255, "frusta": 1, "fry": 255, "fr\u00e9gnac": 255, "fr\u00f6be": 255, "fr\u00f6hlich": 255, "fsanit": 242, "fscan": [81, 184, 187, 188, 191, 192, 197, 204, 316, 318, 319, 324, 388], "fssl": [246, 247], "fstim": [81, 146, 162, 275, 291, 388], "fstimamp": [16, 17], "fstimi": [81, 146, 162, 275, 291, 388], "fsyn": [162, 291, 388], "fsyng": 388, "fsyni": 388, "ft1": [133, 261], "fteinit": [164, 294], "ftpost": 250, "ftpre": 250, "ftype": [150, 152, 279, 281], "fuch": 255, "fuehrer": 255, "fuel": 255, "fuenzalida": 255, "fuhrmann": 255, "fujii": 255, "fujita": 255, "fujiyama": 255, "fukai": 255, "fulfil": [377, 378], "fuli": 121, "full": [0, 1, 3, 10, 11, 35, 53, 55, 66, 68, 98, 136, 154, 160, 163, 197, 201, 216, 241, 242, 247, 255, 264, 283, 289, 292, 293, 324, 328, 340, 366, 368, 377, 388], "full_request": [173, 183, 303, 313], "fulli": [1, 3, 82, 163, 166, 216, 220, 223, 254, 255, 292, 296, 340, 344, 347, 370, 377], "fulmer": 255, "fun": [201, 230, 328, 354], "fun_bltin": 52, "funayama": 255, "func": [10, 11, 16, 17, 21, 22, 28, 52, 76, 81, 96, 125, 138, 160, 170, 184, 201, 204, 205, 206, 268, 300, 328, 388], "func_cal": 56, "funcanim": 373, "funciton": [56, 304], "function": [1, 3, 4, 9, 10, 11, 13, 25, 27, 32, 36, 38, 39, 40, 41, 44, 45, 46, 52, 53, 56, 57, 60, 66, 68, 77, 84, 86, 87, 89, 93, 96, 100, 106, 108, 123, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 146, 148, 149, 150, 151, 153, 155, 156, 159, 160, 161, 165, 166, 169, 170, 173, 175, 180, 182, 185, 186, 188, 190, 191, 192, 196, 197, 198, 201, 202, 204, 205, 209, 211, 212, 213, 214, 216, 219, 220, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 246, 247, 251, 253, 255, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 275, 277, 278, 279, 280, 282, 284, 285, 288, 289, 290, 295, 296, 298, 300, 303, 304, 305, 308, 310, 312, 314, 315, 316, 317, 318, 319, 323, 324, 325, 328, 329, 330, 331, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 353, 354, 355, 357, 358, 359, 360, 361, 363, 365, 366, 367, 369, 371, 373, 374, 376, 377, 378, 382, 383, 384, 393], "function_nam": [160, 289], "function_t": [152, 251, 281], "functionfitt": [128, 140, 173, 227, 256, 269, 303, 351], "fundament": [119, 120, 154, 160, 161, 224, 283, 289, 290, 344, 348, 377], "funfit": [201, 328], "funnam": [138, 266], "funsaf": 3, "further": [9, 29, 39, 81, 89, 94, 96, 103, 107, 112, 124, 126, 154, 159, 160, 201, 255, 283, 288, 289, 292, 293, 328, 334, 366, 377, 378, 383], "furtheremor": 4, "furthermor": [59, 126, 148, 201, 220, 246, 277, 344, 376, 377], "furuta": 255, "fusiform": 255, "fusion": 255, "futia": 255, "futur": [47, 57, 66, 86, 96, 126, 133, 154, 155, 164, 190, 229, 254, 261, 283, 284, 292, 294, 317, 353, 363, 366, 370, 377, 378], "fvec": [16, 17, 201, 328], "fwrapv": 246, "fwrite": [188, 201, 202, 225, 316, 328, 329, 349], "fyhn": 255, "f\u00e9k\u00e9t\u00e9": 255, "f\u00f6ldy": 255, "f\u00fcr": 255, "g": [0, 3, 4, 6, 7, 8, 14, 16, 17, 18, 25, 28, 29, 31, 32, 37, 38, 40, 42, 45, 46, 47, 53, 56, 64, 66, 68, 69, 70, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 103, 107, 113, 119, 120, 124, 126, 127, 133, 136, 138, 151, 153, 154, 155, 156, 160, 161, 163, 165, 169, 173, 182, 190, 192, 197, 200, 201, 205, 210, 211, 216, 219, 220, 223, 225, 227, 228, 229, 231, 233, 236, 237, 241, 242, 246, 247, 248, 249, 250, 253, 254, 255, 261, 264, 266, 268, 277, 280, 282, 283, 284, 285, 288, 289, 290, 292, 295, 297, 299, 303, 304, 312, 314, 316, 317, 319, 324, 326, 327, 328, 330, 331, 334, 335, 340, 343, 344, 347, 348, 349, 351, 352, 353, 355, 357, 360, 361, 366, 367, 368, 369, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 393], "g1": [198, 200, 201, 307, 325, 327, 328], "g2": [198, 200, 201, 307, 325, 327, 328], "g3": [201, 328], "g4": [201, 328], "g5": [160, 289], "g517": 255, "g532": 255, "g9a96a3a4d": 248, "g_fastpa": 388, "g_pa": [22, 25, 37, 47, 67, 89, 96, 108, 134, 153, 201, 203, 262, 282, 388], "ga": [81, 119, 120, 154, 193, 283], "gaba": 255, "gabaa": 255, "gabaar": 255, "gabab": 255, "gabaerg": 255, "gabbiani": 255, "gabe0abaac": 242, "gabriel": 255, "gad": 255, "gafarov": 255, "gafurov": 255, "gag": 76, "gage": 255, "gailu": 255, "gain": [7, 33, 40, 76, 153, 154, 160, 170, 242, 255, 282, 283, 289, 300, 382, 393], "gainer": 255, "gait": 255, "gajat": 255, "gajic": 255, "gal": 255, "galani": 255, "galarraga": 255, "galati": 255, "gale": 255, "galijasev": 254, "gallego": 255, "gallo": 255, "galloni": 255, "galor": 255, "gamal": 255, "gambardella": 255, "gambazzi": 255, "gambino": 255, "game": 96, "gamma": [52, 81, 163, 193, 255, 292, 293, 320, 388], "gamper": 255, "gandar": 255, "gandin": 255, "gandolfi": 255, "ganglia": 255, "ganglion": [250, 255], "ganguli": 255, "ganjkhani": 255, "ganter": 255, "gao": 255, "gap": [4, 33, 38, 70, 126, 136, 160, 166, 242, 246, 255, 264, 289, 296], "gapjunct": 246, "garad": 255, "garbag": [64, 383], "garbei": 255, "garci": 255, "garcia": 255, "garc\u00eda": 255, "garden": 255, "gardner": 255, "garg": 255, "gargstr": 56, "garion": 255, "garrett": 255, "garrido": 255, "gartland": 255, "garwicz": 255, "gasca": 255, "gasparini": 255, "gastrointestin": 255, "gasulla": 255, "gate": [82, 83, 100, 126, 136, 150, 152, 163, 255, 264, 279, 281, 292, 366, 368, 382], "gatewai": [26, 240, 255, 331], "gather": [0, 10, 11, 25, 35, 86, 126, 160, 208, 220, 289, 334, 344, 345, 380, 386], "gatherspik": [157, 161, 286, 290], "gatherv": 345, "gathervalu": [221, 345], "gathervec": [227, 351], "gaug": [10, 11], "gaunt": 255, "gausian": [160, 289], "gauss": 293, "gaussian": [33, 151, 160, 200, 201, 255, 280, 289, 327, 328], "gautier": 255, "gavazzo": 255, "gave": 387, "gavrili": 255, "gazina": 255, "gb9a811a32": [246, 247], "gbar": 250, "gbyte": [219, 343], "gc6d8b9af6": 247, "gca": [63, 360, 365], "gcc": [3, 7, 52, 81, 242, 246, 249], "gcc2": [160, 289], "gcc9": 248, "gcclib": 249, "gccver": 249, "gcd480afb": 289, "gcda": 3, "gdb": [3, 171, 243, 301], "gdca": 241, "ge": 255, "gebhart": 255, "geert": 255, "geffen": 255, "geiger": 255, "geinisman": 255, "geisler": 255, "geit": [93, 255], "gelatinosa": 255, "gemb": 255, "gemert": 255, "gemin": 255, "gene": [126, 254, 255, 369], "gener": [0, 1, 2, 6, 8, 9, 10, 11, 13, 17, 19, 25, 28, 29, 33, 36, 38, 40, 41, 42, 46, 47, 49, 52, 55, 64, 66, 67, 68, 70, 78, 80, 81, 86, 87, 89, 90, 93, 99, 103, 119, 120, 121, 124, 128, 130, 134, 136, 138, 144, 146, 147, 151, 152, 155, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 173, 179, 186, 189, 198, 201, 202, 203, 210, 214, 220, 221, 223, 225, 227, 229, 231, 233, 241, 242, 243, 246, 247, 248, 252, 255, 256, 258, 262, 264, 266, 273, 275, 276, 280, 281, 284, 288, 289, 290, 292, 293, 294, 295, 296, 298, 300, 303, 309, 314, 315, 317, 320, 325, 328, 329, 330, 335, 338, 344, 345, 347, 349, 351, 353, 355, 357, 366, 369, 371, 377, 378, 382, 386, 387, 391, 393], "generalizedreact": [163, 292], "generate_hocdomain": 55, "generic_data_handl": 53, "genericallli": 126, "genesi": [89, 154, 255, 283], "genet": [255, 369], "genhtml": 241, "genicul": 255, "genotyp": 255, "gentiletti": 255, "geom": 22, "geom_nseg": [22, 125], "geom_path": 388, "geometr": [65, 200, 255, 327], "geometri": [14, 31, 43, 46, 47, 60, 65, 67, 68, 86, 125, 146, 165, 210, 254, 255, 269, 275, 295, 328, 335, 342, 366, 369, 373, 384], "geometry3d": 246, "georg": 255, "georgia": 26, "georgiadi": 255, "gephyrin": 255, "gerber": 255, "gerbil": 255, "gerg": 255, "gerkau": 255, "gerken": 255, "gerkin": 255, "gerlei": 255, "gerrit": 377, "gersdorff": 255, "gerstner": 255, "gertler": 255, "ger\u00f3": 255, "get": [0, 3, 6, 10, 11, 13, 14, 16, 17, 18, 28, 29, 31, 36, 37, 39, 41, 46, 49, 51, 52, 53, 54, 64, 65, 66, 70, 86, 87, 90, 94, 95, 96, 99, 100, 112, 123, 125, 127, 129, 133, 136, 153, 154, 155, 160, 161, 163, 165, 166, 169, 173, 176, 182, 187, 188, 200, 201, 202, 203, 205, 211, 214, 220, 225, 227, 229, 231, 238, 241, 242, 246, 248, 249, 250, 253, 255, 257, 261, 264, 282, 283, 284, 289, 290, 292, 295, 296, 297, 298, 299, 303, 306, 312, 314, 316, 327, 328, 329, 330, 338, 344, 349, 351, 353, 355, 359, 362, 366, 368, 369, 371, 374, 377, 378, 382, 383, 385, 387, 393], "get_frequ": 13, "get_id": 327, "get_loc": [152, 153, 155, 156, 169, 281, 282, 284, 299, 382, 388], "get_mech_glob": 330, "get_partit": [286, 289], "get_platform": [246, 247], "get_recordvec": [157, 159, 286, 288], "get_seg": [152, 153, 281, 282, 285, 299, 382, 388], "get_seq": 327, "get_stat": 349, "get_tag": 53, "get_valu": 53, "getarg": 56, "getcol": [197, 202, 324, 329], "getcwd": [216, 340, 388], "getdiag": [197, 202, 324, 329], "getlin": [229, 353], "getloc": [169, 299], "getnam": [187, 188, 231, 316, 355], "getrow": [197, 202, 324, 329], "getspinearea": [81, 146, 165, 166, 275, 295, 296, 388], "getstr": [81, 184, 187, 191, 192, 204, 318, 319, 388], "getval": [197, 202, 208, 324, 329, 334], "gevaert": [93, 255], "gewaltig": [254, 255], "ggplot": 388, "gh": 249, "gha": 0, "ghaderi": 255, "ghaleb": 255, "gharibzadeh": 255, "ghayoomi": 255, "ghazawi": 255, "gherardi": 255, "ghezzi": 255, "ghk": [81, 135, 137, 263, 265, 388], "ghobril": 255, "ghosh": 255, "ghostscript": [99, 127], "ghostview": 127, "ghovanloo": 255, "ghrelin": 255, "giaa091": 255, "giacalon": 255, "giambattistelli": 255, "giansant": 255, "giant": [30, 76, 255, 371, 388], "gibbon": 255, "gibson": 255, "gid": [51, 54, 159, 160, 161, 219, 242, 282, 288, 289, 290, 343, 382, 383, 384, 385], "gid2cel": [157, 160, 286, 289, 314, 385], "gid2obj": [157, 160, 161, 286, 289, 290], "gid2presyn": 1, "gid_clear": [157, 160, 286, 289], "gid_compress": [160, 289], "gid_connect": [157, 159, 160, 161, 282, 286, 288, 289, 290, 385], "gid_exist": [157, 160, 161, 286, 289, 290, 385], "gidgroup": 289, "gidlist": 385, "gidon": 255, "gidvec": [161, 282, 290], "gidvector": [160, 289], "gielen": 255, "gies": 255, "gieselmann": 255, "gif": [228, 229, 352, 353], "gigasci": 255, "gigg": 255, "gigout": 255, "gil": 255, "gilbert": 255, "gillessen": 255, "gillet": 255, "gilli": 255, "ginebaugh": 255, "gingel": 255, "giniatullin": 255, "ginti": 255, "giocomo": 255, "gioi": 255, "giovanni": 255, "gip3r": 369, "girard": 255, "girardi": 255, "girardin": 255, "giraud": 255, "gire": 255, "girli": 76, "girolamo": 255, "git": [3, 7, 241, 244, 246, 247, 248, 249, 335, 378, 379], "gitcommitmessag": 377, "github": [0, 1, 3, 4, 7, 10, 49, 53, 55, 82, 96, 98, 240, 241, 242, 247, 248, 289, 355, 366, 378, 379, 380], "githubpag": 0, "githubusercont": [63, 246, 247, 368, 373], "gitlab": [248, 378, 379], "gitlab_flow": [377, 378], "gitlabflow": 377, "giudic": 255, "giugliano": 255, "give": [3, 7, 12, 28, 29, 35, 36, 53, 60, 67, 70, 76, 79, 99, 100, 119, 120, 127, 153, 154, 160, 161, 164, 166, 169, 175, 177, 179, 195, 200, 201, 211, 220, 223, 225, 229, 231, 234, 242, 248, 255, 282, 283, 289, 290, 292, 294, 296, 305, 307, 309, 314, 322, 327, 328, 331, 344, 347, 349, 353, 355, 358, 373, 377, 382, 387, 388], "given": [1, 8, 26, 28, 31, 37, 38, 40, 41, 42, 51, 52, 53, 55, 58, 60, 70, 94, 96, 98, 103, 107, 119, 120, 124, 126, 127, 129, 136, 138, 144, 147, 154, 156, 160, 161, 163, 164, 165, 166, 169, 173, 177, 182, 185, 189, 190, 198, 200, 201, 204, 210, 218, 220, 224, 225, 226, 227, 229, 230, 231, 233, 235, 237, 242, 246, 257, 264, 273, 276, 283, 285, 289, 290, 292, 293, 294, 295, 296, 303, 307, 312, 314, 317, 325, 327, 328, 330, 331, 335, 342, 344, 348, 349, 350, 351, 353, 354, 355, 357, 359, 361, 366, 367, 368, 369, 371, 373, 377, 378, 382, 387, 388], "giza": 255, "gjorgjieva": 255, "gk": [36, 80, 127, 250, 371, 388], "gk_hh": [43, 72, 388], "gkbar": [36, 46, 282, 371, 382, 383, 384, 388], "gkbar_hh": [15, 22, 28, 43, 66, 67, 68, 72, 105, 106, 119, 153, 159, 388], "gl": [46, 201, 228, 282, 328, 352, 371, 382, 383, 384, 388], "gl_hh": [15, 22, 43, 67, 68, 72, 105, 106, 153, 159, 223, 347, 388], "glait": 255, "glanc": [66, 382], "glasauer": 255, "glauser": 255, "gleak": [366, 369], "glean": [154, 283], "gleeson": [254, 255], "gleiser": 255, "glenn": 255, "glia": 255, "glial": 255, "glielmo": 255, "glioma": 255, "gliotransmiss": 255, "glisk": 255, "gli\u00e8r": 255, "global": [1, 3, 4, 36, 52, 53, 81, 98, 126, 134, 136, 144, 148, 149, 152, 153, 154, 159, 160, 161, 164, 166, 176, 200, 201, 203, 204, 214, 220, 223, 224, 231, 235, 250, 255, 262, 264, 273, 277, 278, 282, 283, 288, 289, 290, 294, 296, 306, 314, 315, 327, 328, 330, 331, 338, 344, 347, 348, 355, 359, 368, 370, 371, 377, 385], "global1": 284, "global_ra": 205, "global_var": 250, "globalspec": [144, 273], "globu": 255, "globular": 255, "gloeckner": 255, "glomerular": 255, "glomeruli": 255, "glomerulu": 255, "gloss": 53, "glove": 255, "glowatzki": 255, "glp": 255, "glpa": 255, "glucagon": 255, "gluckman": 255, "glucos": 41, "glueckert": 255, "glun2b": 255, "glutam": 255, "glutamaterg": 255, "glycin": 255, "glycinerg": 255, "glycogenolysi": 255, "glycolysi": 255, "glycyrrhiza": 255, "glyph": [140, 229, 269, 353, 388], "glyphobject": [228, 229, 352, 353], "gm": [89, 196, 323], "gmat": [151, 280], "gmax": [95, 150, 152, 153, 203, 279, 281, 282, 330], "gna": [80, 127, 250, 371, 388], "gna_hh": [72, 312, 388], "gnabar": [44, 46, 136, 169, 264, 299, 330, 371, 382, 383, 384, 388], "gnabar_hh": [15, 22, 28, 43, 44, 66, 67, 68, 72, 105, 106, 153, 159, 160, 204, 210, 289, 330, 335, 382, 388], "gnabar_max": 43, "gnabarh": 282, "gnatkovski": 255, "gnu": [3, 81, 127, 200, 216, 242, 327, 340], "go": [0, 1, 29, 31, 36, 37, 38, 47, 51, 52, 66, 67, 76, 84, 86, 87, 94, 95, 96, 100, 106, 115, 123, 133, 159, 160, 161, 163, 170, 173, 185, 201, 204, 220, 229, 231, 239, 240, 242, 247, 248, 255, 261, 282, 288, 289, 290, 292, 300, 303, 328, 344, 349, 353, 355, 367, 369, 371, 377, 380, 382, 383, 384, 385], "go_to": 169, "goaillard": 255, "goal": [6, 10, 11, 58, 66, 86, 94, 126, 219, 255, 343, 377], "gobbi": 255, "godin": 255, "goe": [33, 42, 52, 53, 80, 81, 133, 153, 154, 160, 188, 201, 210, 229, 231, 237, 255, 261, 282, 283, 289, 316, 328, 335, 353, 355, 361, 366, 382, 388], "goeritz": 255, "goethal": 255, "goetz": 255, "goff": 255, "goffredo": 255, "gogan": [40, 47, 255], "gola": 255, "gold": 255, "goldbet": 370, "golden": [81, 193, 320], "goldfarb": 255, "goldfish": 255, "goldin": 255, "goldman": [137, 265], "goldstein": 255, "goldsworthi": 255, "golestanirad": 255, "golgi": 255, "golowasch": 255, "golshani": 255, "gome": 255, "gomez": 255, "gonadotropin": 255, "gone": [28, 32], "gong": 255, "gonz": 370, "gonzalez": 255, "gonz\u00e1lez": 255, "good": [1, 3, 14, 29, 32, 33, 35, 36, 45, 47, 53, 64, 69, 71, 77, 80, 81, 86, 87, 88, 93, 94, 96, 105, 107, 108, 111, 113, 115, 127, 133, 153, 154, 160, 161, 166, 201, 203, 204, 221, 223, 224, 231, 242, 246, 255, 261, 282, 283, 289, 290, 296, 328, 330, 345, 347, 355, 377, 382, 383, 384, 388], "goodby": 314, "goodliff": 255, "goodman": 255, "googl": [63, 240, 255, 365, 367, 368, 370, 371, 376, 377, 389, 392], "gootj": 255, "gordon": 255, "gorin": 255, "goriounova": 255, "gorman": 255, "gorodetski": 255, "goswami": 255, "got": [3, 14, 47, 49, 86, 160, 289, 383], "gotcha": [163, 382], "gotman": 255, "gotten": [199, 201, 326, 328], "gottesman": 255, "goudar": 255, "goudi": 255, "goutagni": 255, "gouwen": 255, "gov": [89, 126, 158, 160, 287, 289], "govern": [27, 43, 66, 68, 71, 98, 106, 123, 126, 154, 155, 255, 283, 284, 292, 370, 381], "gow": 255, "goyer": 255, "gpa": 250, "gpl": 242, "gpu": [1, 3, 5, 6, 7, 8, 57, 155, 243, 248, 255, 284, 363, 381], "gr": [89, 228, 352], "grab": [173, 249, 303, 385], "grabuschnig": 255, "grace": [108, 255], "gracefulli": [223, 347], "grade": [255, 377], "gradient": [255, 359, 368], "gradual": [126, 249], "gradwohl": 255, "graf": [103, 124], "grafe": 255, "grafex": 127, "graft": 46, "graham": [126, 255], "grai": [66, 70, 173, 229, 233, 235, 255, 303, 353, 357, 359], "grajal": 255, "grammar": [57, 388], "granata": 255, "granato": 255, "grand": 255, "grant": [54, 76, 89, 220, 255, 344, 377, 378], "granul": 255, "granular": [161, 201, 255, 290, 328], "graph": [1, 10, 11, 12, 13, 14, 17, 18, 19, 24, 25, 27, 30, 31, 32, 37, 39, 42, 45, 46, 47, 49, 50, 60, 66, 72, 78, 80, 81, 84, 85, 86, 87, 89, 96, 99, 100, 101, 103, 105, 112, 123, 124, 126, 129, 131, 133, 134, 140, 147, 151, 159, 163, 173, 177, 179, 185, 189, 197, 198, 200, 201, 205, 209, 210, 220, 224, 228, 230, 233, 234, 235, 236, 237, 255, 257, 259, 261, 262, 269, 276, 280, 288, 289, 303, 307, 309, 324, 325, 327, 328, 334, 335, 344, 348, 352, 354, 357, 358, 359, 360, 361, 366, 376, 383, 385, 388], "graph_object": [360, 367, 371], "grapher": [140, 229, 269, 353], "graphic": [3, 14, 29, 32, 33, 39, 45, 58, 65, 66, 70, 76, 81, 86, 92, 96, 99, 103, 112, 124, 127, 147, 154, 155, 189, 196, 203, 209, 220, 227, 229, 233, 240, 242, 253, 255, 276, 283, 284, 323, 330, 344, 351, 353, 357, 359, 366, 367, 370, 371, 373, 382, 383, 384, 385, 387, 388], "graphics_object": 359, "graphicsprimit": 246, "graphlin": [229, 353], "graphlist": [18, 72, 159, 163, 229, 237, 328, 353, 361], "graphmod": [81, 233, 357, 388], "graphobj": [201, 328, 334], "grasman": 255, "grasp": 126, "grate": 89, "gratii": 255, "grau": 255, "graviti": [70, 73], "grayden": 255, "graydon": 255, "grayscal": 70, "great": [42, 76, 103, 124, 133, 153, 154, 210, 213, 261, 282, 283, 335, 337, 369, 377, 382], "greater": [32, 35, 36, 53, 81, 91, 96, 109, 126, 153, 160, 164, 185, 198, 200, 201, 208, 214, 219, 220, 227, 229, 231, 282, 289, 294, 325, 327, 328, 334, 338, 343, 344, 351, 353, 355], "greatest": [154, 283, 316], "greatli": [76, 126, 154, 283], "green": [25, 47, 70, 86, 173, 229, 233, 235, 255, 303, 353, 357, 359, 382], "greenberg": 255, "greensid": 255, "greet": 387, "greger": 255, "greget": 255, "grein": 255, "greiner": 255, "grenier": 255, "grep": [3, 46, 165, 295], "greppabl": 363, "grid": [1, 12, 14, 30, 65, 66, 70, 73, 96, 255, 292, 373, 376], "grienberg": 255, "grif": 127, "griffin": 255, "griffith": 255, "grill": 255, "grillner": 255, "grillo": 255, "grime": 255, "grind": [10, 11, 100], "grisham": 255, "grissom": 255, "grobler": 255, "groen": 255, "groot": 255, "grosch": 255, "grosh": 255, "grosmark": 255, "gross": 255, "grosser": 255, "grossman": 255, "grotesqu": [164, 294], "groth": 255, "ground": [33, 52, 70, 151, 153, 166, 220, 255, 280, 282, 296, 344], "group": [14, 31, 37, 42, 46, 48, 65, 66, 70, 76, 81, 83, 87, 89, 94, 96, 99, 127, 133, 160, 177, 182, 183, 185, 220, 227, 231, 255, 261, 289, 307, 312, 313, 344, 351, 355, 377], "group_obj": [177, 307], "group_object": [177, 307], "groupmanag": [103, 124], "grover": 255, "grow": [76, 81, 126, 160, 201, 255, 289, 328, 377], "grown": [255, 377], "growth": [53, 201, 255, 328], "grubb": 255, "gruebl": 255, "gruen": 255, "grueneberg": 255, "grunditz": 255, "gruntman": 255, "gr\u00f6hn": 255, "gr\u00fcbl": 255, "gr\u00fcn": 255, "gr\u00fcndemann": 255, "gs967": 255, "gserca": 369, "gsview": 127, "gsyn": 94, "gt": [60, 155, 250, 252, 284, 368, 371, 373, 382, 388], "gteq": [155, 252, 284], "gu": 255, "guadagna": 255, "guan": 255, "guarante": [13, 40, 53, 154, 160, 161, 165, 169, 173, 283, 289, 290, 295, 299, 303, 377, 378, 385], "guard": 197, "guazzi": 255, "gude": 255, "guen": 255, "guerini": 255, "gueritaud": 255, "guess": [49, 96, 138, 161, 242, 266, 290], "guest": [255, 392], "guet": 255, "guglielmelli": 255, "gui": [3, 4, 8, 14, 24, 26, 30, 32, 34, 36, 38, 43, 44, 45, 46, 48, 52, 53, 58, 64, 66, 71, 81, 82, 83, 87, 99, 108, 122, 123, 125, 126, 127, 133, 140, 150, 155, 160, 161, 177, 201, 220, 223, 246, 261, 268, 269, 277, 279, 280, 282, 284, 285, 288, 289, 295, 296, 302, 303, 304, 307, 308, 309, 316, 325, 327, 328, 330, 334, 340, 344, 345, 347, 351, 352, 353, 357, 359, 360, 361, 368, 369, 377, 382, 383, 384, 388, 389, 391], "gui2": [382, 388], "guid": [1, 10, 11, 57, 93, 126, 127, 246, 255, 378, 379], "guidanc": [47, 255, 377], "guidelin": [53, 379], "guignon": 255, "guigon": 255, "guillemaud": 255, "guilti": 53, "guimath": [140, 202, 269, 329, 388], "guinea": 255, "gulledg": 255, "guly\u00e1": 255, "gumu": 255, "gunalan": 255, "guntu": 255, "guo": 255, "gupta": 255, "gurgenidz": 255, "gurkiewicz": 255, "gurnei": 255, "guru99": 377, "gutierrez": 255, "guti\u00e9rrez": 255, "gutkin": 255, "gutnick": 255, "guzman": 255, "gu\u00e9rin": 255, "gwak": 255, "gwinn": 255, "gwynn": 255, "gyru": 255, "gz": [3, 49, 158, 160, 287, 289], "gzip": [292, 385], "gzipfil": 385, "g\u00e4rtner": 255, "g\u00f3mez": 255, "g\u00f6bel": 255, "g\u00fcnai": 255, "g\u0142\u0105bska": 255, "h": [1, 3, 4, 7, 8, 13, 14, 24, 25, 29, 30, 31, 36, 38, 44, 45, 46, 47, 48, 52, 53, 56, 63, 64, 66, 76, 81, 93, 94, 98, 100, 119, 126, 136, 138, 139, 151, 153, 154, 160, 163, 164, 186, 201, 205, 208, 211, 216, 219, 223, 231, 242, 244, 246, 250, 253, 254, 255, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 381, 382, 383, 384, 385], "h2o": 292, "h_hh": [80, 153, 388], "ha": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 16, 19, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 56, 58, 59, 60, 64, 66, 67, 73, 76, 80, 81, 86, 89, 94, 95, 96, 98, 99, 100, 103, 105, 107, 110, 119, 120, 123, 124, 126, 127, 130, 133, 134, 136, 144, 149, 150, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 185, 188, 195, 197, 198, 201, 204, 205, 206, 210, 216, 219, 220, 221, 227, 229, 231, 234, 237, 242, 243, 246, 247, 255, 258, 261, 262, 264, 273, 278, 279, 282, 283, 284, 285, 288, 289, 290, 292, 295, 296, 297, 298, 300, 301, 303, 304, 307, 314, 316, 322, 324, 325, 326, 328, 332, 334, 335, 340, 343, 344, 345, 351, 353, 355, 358, 361, 366, 368, 369, 371, 372, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388], "haa": 255, "haag": 255, "haan": 255, "haberli": 255, "habit": 3, "hachimi": 255, "hack": [57, 67, 126], "hacki": [53, 248], "had": [28, 37, 41, 53, 66, 78, 94, 126, 133, 153, 155, 159, 160, 169, 200, 210, 216, 219, 223, 261, 282, 284, 288, 289, 295, 327, 330, 335, 340, 343, 347, 387, 388], "hadaeghi": 255, "haddjeri": 255, "hadjinicola": 255, "haemodynam": 255, "haenel": 255, "haer": 255, "haeusser": 255, "hafizov": 255, "haflig": 255, "haft": 255, "hagberg": 255, "hagen": 255, "hager": 255, "hagler": 255, "hahn": 255, "hai": 255, "haider": 255, "hair": [231, 255, 355], "hair_color": 387, "hajihasani": 255, "hajj": 255, "hale": 255, "half": [29, 47, 76, 78, 86, 166, 201, 219, 247, 250, 296, 328, 343, 384, 392, 393], "halfton": 70, "halfwai": [66, 393], "halgren": 255, "hall": [81, 93, 126, 255], "hallermann": 255, "halloran": 255, "haln": 255, "halothan": 255, "halpern": 255, "halt": [81, 168, 298], "halterman": 255, "halv": [25, 31], "halvorsrud": 255, "hamada": 255, "hamalainen": 255, "hamani": 255, "hamburyan": 255, "hamidi": 255, "hamilton": 255, "hammer": 255, "hamster": 255, "han": 255, "hananeia": 255, "hancock": 255, "hand": [3, 27, 37, 42, 47, 76, 104, 126, 153, 154, 155, 179, 185, 189, 194, 197, 201, 204, 207, 210, 223, 247, 255, 282, 283, 284, 292, 309, 321, 324, 333, 335, 347, 366, 372, 382, 387, 388, 391], "handbook": [254, 255], "handi": 123, "handl": [4, 7, 9, 13, 29, 52, 56, 70, 73, 76, 86, 136, 140, 146, 149, 153, 154, 155, 159, 161, 164, 210, 220, 221, 229, 246, 249, 253, 255, 264, 269, 275, 278, 282, 283, 284, 288, 290, 294, 304, 312, 314, 315, 327, 328, 335, 344, 345, 353, 377, 383, 387, 388], "handle_interfac": 53, "handler": [60, 77, 223, 347], "handout": 35, "handshak": 255, "hanei": 255, "hanein": 255, "hanemaaij": 255, "hang": [136, 264, 289], "hanganu": 255, "hann": 255, "hansen": 255, "hanson": 255, "hant": 255, "hanuschkin": 255, "hao": 255, "happen": [10, 11, 14, 24, 25, 28, 30, 31, 32, 36, 41, 42, 44, 46, 53, 66, 89, 94, 96, 99, 100, 101, 102, 103, 104, 115, 116, 119, 120, 124, 134, 154, 155, 160, 161, 166, 189, 191, 201, 203, 220, 237, 248, 262, 283, 284, 289, 290, 296, 318, 328, 330, 344, 348, 351, 361, 367, 368, 377, 378, 383, 385, 387, 388], "happi": [248, 384], "haptic": 255, "haq": 255, "har": 369, "hara": 255, "harada": 255, "harczo": 255, "hard": [3, 42, 87, 89, 99, 103, 124, 127, 242, 363, 377, 384], "hardcod": 377, "hardcopi": [127, 210, 335], "harden": 247, "hardi": 255, "hardingham": 255, "hardli": [96, 233, 357], "hardt": 255, "hardwar": [6, 35, 49, 100, 126, 160, 246, 254, 255, 289, 385], "hardware_concurr": [160, 289], "hare": 255, "harel": 255, "harlei": 255, "harm": 94, "harmless": 98, "harnett": 255, "harper": 255, "harri": 255, "harrington": 255, "hart": 255, "harti": 255, "hartlin": 255, "hartman": 255, "hartmann": 255, "hartveit": 255, "harvei": 255, "has_loc": [152, 153, 155, 281, 282, 284, 382, 388], "has_membran": [330, 388], "has_net_ev": [146, 156, 275, 285], "has_par": [160, 165, 168, 289, 295, 298], "has_truepar": [165, 168, 295, 298], "hasani": 255, "hash": [1, 200, 315, 327, 377, 387], "hashemi": 255, "hashimoto": 255, "hasn": [10, 11, 377], "haspa": 67, "hasselmo": 255, "hat": 246, "hatada": 255, "hatch": [70, 221, 255, 345], "hatori": 255, "haug": 255, "have": [0, 1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 24, 25, 27, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 51, 52, 54, 55, 56, 59, 60, 64, 65, 66, 67, 68, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 108, 109, 110, 111, 112, 114, 119, 120, 122, 124, 126, 127, 133, 134, 136, 139, 145, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 182, 185, 186, 197, 199, 201, 204, 208, 211, 218, 219, 220, 224, 227, 229, 231, 233, 234, 236, 241, 242, 246, 247, 248, 249, 250, 251, 255, 261, 262, 264, 267, 274, 277, 278, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 312, 314, 315, 324, 326, 327, 328, 334, 335, 337, 343, 344, 348, 351, 353, 355, 357, 358, 360, 363, 365, 366, 368, 369, 370, 371, 372, 373, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 391], "havela": 255, "haven": [47, 82, 89, 90, 94, 98, 107, 113, 115, 199, 326, 377, 378, 382], "havton": 255, "haw": 255, "hawk": 255, "hawrylycz": 255, "hayakawa": 255, "hayashida": 255, "hbm": 255, "hbox": [81, 173, 183, 201, 214, 303, 312, 313, 328, 338, 388], "hclass": 314, "hcn": 255, "hcn1": 255, "hcn2": 255, "hcn4": 255, "he": [126, 198, 210, 255, 325, 335, 377, 378], "head": [0, 35, 103, 124, 214, 215, 246, 247, 248, 255, 338, 339, 340, 366, 377], "headach": 255, "header": [4, 52, 98, 99, 177, 226, 231, 242, 248, 307, 350, 355, 368, 377, 388], "headlei": 255, "heali": 254, "health": 255, "healthcar": 255, "healthi": 255, "heap": 242, "hear": 255, "heart": 255, "heartbeat": 255, "heat": 255, "heavi": [54, 136, 177, 255, 264, 307, 377], "heavili": [4, 134, 160, 170, 262, 289, 300, 372], "hebbian": 255, "heckman": 255, "heckmann": 255, "hed": 255, "heer": 255, "heggelund": 255, "hei": 255, "heiberg": 255, "heida": 255, "heidari": 255, "heidelberg": [254, 255], "height": [173, 180, 195, 229, 303, 310, 322, 353, 387], "heijden": 255, "heilman": 255, "heimgartn": 255, "heinemann": [254, 255], "heini": 255, "heinzl": 255, "held": [133, 134, 147, 154, 255, 261, 262, 276, 283, 353], "hell": 377, "hellgren": 255, "hellman": 255, "hello": [28, 32, 35, 37, 81, 158, 160, 185, 201, 204, 205, 211, 287, 289, 312, 314, 318, 328, 338, 341, 344, 353, 387], "hello1": 344, "hello2": 344, "helloworld": 211, "helm": 255, "helmchen": 255, "helmer": 255, "helmholtz": [188, 316], "helmstaedt": 255, "help": [3, 4, 7, 10, 11, 25, 32, 42, 44, 45, 46, 51, 52, 54, 65, 66, 67, 68, 77, 78, 79, 81, 83, 86, 87, 89, 94, 99, 103, 107, 109, 111, 112, 124, 126, 127, 144, 154, 160, 161, 163, 171, 174, 201, 204, 210, 223, 233, 242, 247, 255, 273, 283, 289, 290, 292, 301, 304, 328, 335, 347, 357, 370, 377, 382, 387, 393], "helpdict": 204, "helper": [53, 150, 242, 279], "helvetica": [175, 305], "hemipleg": 255, "hemmert": 255, "hemond": 255, "hen": 255, "henao": 255, "henc": [4, 155, 160, 198, 213, 236, 241, 284, 289, 325, 337], "henderson": 255, "hendrickson": 255, "henneberg": 255, "henni": 255, "hennig": 255, "henri": 255, "henriquez": 255, "henz": 255, "henzi": 255, "hepatocyt": 255, "hepburn": 255, "herbst": 255, "hercul": [233, 357], "here": [1, 3, 4, 5, 8, 10, 11, 13, 14, 16, 25, 28, 29, 36, 37, 38, 41, 43, 44, 45, 46, 47, 51, 52, 53, 56, 64, 66, 67, 76, 80, 81, 82, 86, 89, 92, 94, 95, 96, 98, 100, 102, 104, 107, 108, 109, 110, 112, 113, 115, 119, 120, 121, 126, 127, 133, 153, 154, 155, 160, 161, 163, 170, 185, 201, 204, 210, 224, 231, 240, 242, 246, 248, 250, 253, 261, 282, 283, 284, 289, 290, 292, 293, 300, 305, 314, 328, 335, 338, 348, 351, 355, 365, 366, 367, 368, 369, 370, 372, 373, 376, 377, 378, 382, 383, 384, 385, 387, 388], "hereaft": 248, "hereditari": 255, "herg": 255, "herman": 255, "hernandez": 255, "hernando": 255, "hero": 53, "herrera": 255, "herrmann": 255, "hershei": 255, "hertel": 255, "herti": 255, "herz": 255, "herzog": 255, "hesam": 255, "heschel": 255, "heshmat": 255, "hesprich": 255, "hess": 255, "heteroassoci": 255, "heterogen": [46, 89, 255], "heteromer": 255, "heterosynapt": 255, "heterotyp": 255, "heuermann": 255, "heurist": [220, 242, 344, 381], "heutink": 255, "hewlett": 189, "hex": 186, "hexad": 70, "hexadecim": [70, 190, 317], "hexagon": 255, "heyboer": 255, "heyer": 255, "hg": [229, 335, 353], "hh": [1, 3, 4, 11, 14, 15, 22, 25, 28, 30, 33, 36, 37, 43, 44, 45, 46, 48, 63, 66, 67, 68, 69, 72, 77, 80, 81, 82, 83, 88, 104, 108, 110, 126, 127, 136, 148, 150, 151, 153, 154, 155, 156, 159, 165, 179, 203, 204, 210, 220, 223, 242, 250, 253, 264, 277, 279, 280, 282, 283, 284, 285, 288, 289, 293, 295, 309, 314, 330, 335, 342, 344, 347, 349, 359, 361, 371, 382, 383, 384, 388], "hh2": [154, 283], "hh_iclamp_cel": 250, "hh_patch": 44, "hhaxon": 30, "hhcelliclamp": 250, "hhk": [26, 48], "hhkchan": 48, "hhsim": 342, "hhwatch": 250, "hi": [81, 119, 120, 198, 292, 325, 344], "hidden": [42, 66, 67, 73, 96, 99, 103, 121, 123, 124, 155, 175, 177, 227, 255, 284, 305, 307, 351], "hide": [4, 46, 47, 86, 98, 107, 108, 110, 177, 183, 216, 227, 255, 307, 313, 340, 351, 377], "hieber": 255, "hierarch": [89, 255], "hierarchi": [70, 231, 255, 355], "hierlemann": 255, "hiester": 255, "higashijima": 255, "higest": [201, 328], "higgin": 255, "high": [28, 29, 33, 52, 53, 76, 78, 80, 81, 89, 96, 100, 126, 133, 154, 160, 161, 173, 182, 200, 201, 210, 220, 234, 235, 255, 261, 283, 289, 290, 303, 312, 327, 328, 335, 344, 358, 359, 366, 369, 377, 382, 385], "higher": [52, 53, 80, 151, 161, 165, 173, 229, 255, 280, 290, 294, 295, 303, 353, 377, 388], "highest": [29, 76, 154, 160, 169, 201, 283, 289, 328], "highindex": [198, 200, 325, 327], "highindex_ptr": 325, "highli": [154, 242, 249, 255, 283, 377], "highlight": [13, 25, 42, 86, 89, 99, 104, 105, 144, 160, 174, 178, 182, 188, 231, 234, 238, 273, 289, 304, 308, 312, 316, 355, 358, 362], "higlei": 255, "higuchi": 255, "hilbert": 255, "hildebrand": 255, "hilgemann": 255, "hilgetag": 255, "hill": [255, 366], "hilliard": 255, "hillock": 255, "hilscher": 255, "hindbrain": 255, "hindlimb": 255, "hindmarsh": [126, 220, 344], "hine": [3, 35, 60, 76, 81, 88, 89, 100, 125, 126, 158, 160, 201, 216, 242, 244, 246, 254, 255, 287, 289, 328, 377, 385], "hineshf": 160, "hinf": [4, 136, 264, 371], "hinf_hh": 388, "hint": [3, 12, 25, 28, 29, 33, 38, 39, 41, 43, 45, 46, 64, 66, 67, 81, 113, 115, 127, 142, 154, 160, 164, 242, 271, 283, 289, 294, 382], "hinton": [235, 359], "hioki": 255, "hipo": 255, "hippocalcin": 255, "hippocamp": [40, 47, 255], "hippocampu": [255, 387], "hippounit": 255, "hirakawa": 255, "hirano": 255, "hiratani": 255, "hird": 255, "hirrling": 255, "hist": [198, 200, 201, 202, 255, 325, 327, 328, 329], "histogram": [47, 160, 185, 198, 200, 201, 202, 255, 289, 325, 327, 328, 329], "histolog": 255, "histologi": 255, "histor": [33, 126, 220, 344], "histori": [70, 197, 255, 324, 379], "hit": [29, 160, 249, 289], "hitomi": 255, "hitti": 255, "hjorth": 255, "hlp": 81, "hmax": [220, 344], "hmin": [220, 344], "hname": [275, 295, 303, 382, 388], "hnn": 255, "ho": 255, "hoak": 81, "hoberg": 255, "hoc": [0, 1, 4, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 26, 31, 33, 35, 36, 38, 42, 45, 46, 47, 53, 54, 56, 57, 59, 60, 63, 64, 65, 68, 69, 71, 72, 77, 79, 82, 83, 86, 87, 88, 90, 94, 96, 100, 103, 119, 121, 122, 123, 124, 125, 126, 129, 134, 137, 138, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 170, 173, 177, 182, 186, 188, 191, 197, 201, 202, 203, 205, 206, 210, 214, 216, 217, 219, 220, 221, 223, 225, 227, 229, 230, 231, 233, 237, 240, 242, 246, 250, 253, 255, 257, 262, 266, 269, 275, 276, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 295, 296, 298, 300, 302, 303, 304, 305, 307, 309, 312, 315, 316, 317, 318, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 338, 340, 341, 343, 344, 345, 347, 348, 349, 351, 353, 354, 355, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 382, 383, 384, 388, 391], "hoc6": 52, "hoc_": [1, 52], "hoc_ac": 314, "hoc_ac_": [72, 81, 159, 160, 174, 184, 203, 207, 209, 237, 289, 304, 314, 330, 333, 361, 388], "hoc_built_in_symlist": [52, 56], "hoc_cal": 52, "hoc_channel": 220, "hoc_class_registr": 52, "hoc_code_1": 381, "hoc_code_2": 381, "hoc_cross_x_": [184, 209, 231, 355, 388], "hoc_cross_y_": [184, 209, 231, 355, 388], "hoc_errno_check": 52, "hoc_ev": 220, "hoc_execerror": 56, "hoc_execut": 52, "hoc_init": [52, 81], "hoc_init_spac": 52, "hoc_instal": 52, "hoc_install_var": 52, "hoc_internal_nam": 388, "hoc_is_double_arg": 56, "hoc_is_object_arg": 56, "hoc_is_pdouble_arg": 56, "hoc_is_str_arg": 56, "hoc_last_init": 52, "hoc_library_path": [170, 300], "hoc_look_inside_stack": 52, "hoc_lookup": 56, "hoc_main1": 52, "hoc_main1_init": 52, "hoc_nopop": 52, "hoc_obj_": [19, 94, 184, 209, 227, 231, 315, 351, 355, 388], "hoc_obj_getarg": 56, "hoc_obj_ref": 56, "hoc_obj_unref": [52, 56], "hoc_objgetarg": 56, "hoc_oop": [52, 56], "hoc_paramet": 159, "hoc_pc": 52, "hoc_pgetarg": [56, 219, 343], "hoc_pointer_": [81, 186, 315, 388], "hoc_printf": 52, "hoc_push_object": 56, "hoc_push_str": 56, "hoc_pushpx": 56, "hoc_python": 140, "hoc_ret": 52, "hoc_return": 52, "hoc_return_type_cod": 56, "hoc_run1": 52, "hoc_spinit": 52, "hoc_sprint1": 52, "hoc_stat": [208, 334, 381], "hoc_stdio": [184, 187, 190], "hoc_stdout": [190, 317, 388], "hoc_table_lookup": 56, "hoc_top_level_symlist": 52, "hoc_typ": 331, "hoc_vector": 138, "hoc_warn": 52, "hoc_yypars": 52, "hocbaseobject": 331, "hoccod": [147, 276], "hoccommand": 57, "hocdec": 52, "hocdomain": 55, "hoceqn": 81, "hocfil": [192, 319], "hoch": 255, "hocmech": [146, 148, 152], "hocobject": [211, 314, 331], "hocobject_typ": 56, "hocobjptr": [382, 388], "hocref": 164, "hocstruct": 52, "hocsymextens": 52, "hoctoplevelinterpret": 289, "hocunion": 52, "hocusr": [52, 81], "hodeib": 255, "hodg": 255, "hodgkin": [10, 24, 38, 39, 45, 119, 120, 137, 146, 153, 154, 165, 253, 255, 265, 275, 282, 283, 293, 295, 342, 366, 371, 382, 388, 392, 393], "hodn": 255, "hoebeek": 255, "hof": 255, "hoffman": 255, "hoffmann": 255, "hoffset": 127, "hofmann": 255, "hofstett": 255, "hogan": 255, "hokanson": 255, "holbro": 255, "hold": [4, 16, 47, 50, 52, 53, 60, 66, 70, 76, 79, 84, 86, 110, 111, 112, 113, 115, 136, 146, 147, 161, 165, 168, 173, 197, 200, 201, 207, 209, 229, 231, 264, 275, 276, 289, 290, 295, 314, 327, 328, 333, 353, 355, 363, 377], "holen": 255, "holland": 255, "holm": [95, 255], "holt": 255, "holtkamp": 255, "home": [3, 7, 36, 46, 96, 158, 160, 216, 233, 242, 244, 246, 247, 287, 289, 357, 373], "homebrew": [246, 247, 248], "homeostasi": [255, 369, 392], "homeostat": [64, 255, 369], "homer": 255, "homework": [29, 393], "homogen": [25, 89, 238, 255, 362], "homolog": 255, "homotyp": 255, "hong": 255, "honnuraiah": 255, "hooft": 255, "hook": [29, 177, 307], "hool": 255, "hoon": 255, "hope": [139, 255, 267, 377], "hopefulli": [96, 133, 210, 247, 261, 335, 377], "hopfield": [26, 36], "hopkin": 255, "hopp": 255, "hor": 70, "horchol": [40, 47, 255], "hordacr": 255, "horizont": [25, 50, 70, 94, 95, 104, 127, 144, 173, 182, 231, 255, 273, 303, 312, 355], "horn": 255, "horner": 255, "hornig": 255, "horstmann": 255, "hort": 255, "hosp": 255, "hossain": 255, "hosseini": 255, "host": [10, 11, 13, 49, 64, 80, 160, 161, 216, 225, 246, 248, 289, 290, 340, 349, 385], "host_split_at": 290, "host_with_other_subtre": [160, 289], "hostca": [161, 290], "hostedtoolcach": 385, "hostfil": 385, "hostnam": [216, 340, 385], "hostpar": [161, 290], "hot": [76, 377, 378], "hotek": 255, "hotfix": [377, 378], "hou": 255, "hour": [9, 40, 247, 370, 393], "hous": 255, "houslei": 255, "houston": 255, "houwel": 255, "hovhannisyan": 255, "how": [0, 1, 4, 7, 8, 10, 11, 13, 24, 25, 27, 28, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 49, 51, 52, 54, 57, 58, 63, 65, 66, 67, 68, 71, 78, 81, 86, 87, 89, 90, 93, 94, 95, 96, 97, 102, 104, 105, 107, 109, 119, 120, 126, 127, 139, 147, 149, 153, 154, 155, 160, 161, 163, 165, 166, 173, 201, 204, 210, 211, 215, 219, 220, 230, 231, 240, 242, 243, 246, 247, 251, 253, 255, 267, 269, 276, 278, 282, 283, 284, 289, 290, 295, 296, 303, 314, 328, 335, 339, 341, 343, 344, 354, 355, 365, 367, 368, 369, 370, 377, 378, 381, 382, 383, 385, 386, 387, 388, 393], "howard": 255, "howel": 255, "howev": [0, 3, 4, 12, 14, 25, 29, 32, 35, 36, 37, 39, 45, 53, 56, 64, 65, 66, 70, 73, 80, 81, 88, 89, 93, 94, 96, 98, 101, 104, 105, 109, 126, 127, 134, 138, 148, 151, 153, 154, 155, 159, 160, 163, 164, 165, 166, 182, 185, 201, 204, 210, 220, 223, 225, 227, 229, 231, 234, 247, 262, 266, 277, 279, 280, 282, 283, 284, 288, 289, 292, 293, 294, 295, 296, 298, 312, 314, 320, 328, 330, 331, 335, 344, 347, 349, 351, 355, 358, 366, 368, 370, 376, 377, 378, 380, 382, 385, 387, 388, 392], "hoyo": 255, "hp": [189, 233, 357], "hp7475": [233, 357], "hpc": [1, 7, 240, 246], "hpe": [1, 248], "hsu": 255, "ht": 255, "ht1a": 255, "ht2c": 255, "ht3a": 255, "htau": [4, 136, 264, 371], "htau_hh": 388, "htb": 127, "htl": 255, "html": [0, 3, 63, 70, 76, 90, 127, 151, 160, 241, 242, 250, 280, 289, 373, 377, 378], "htsort": 255, "http": [0, 1, 3, 4, 7, 10, 25, 38, 46, 49, 52, 53, 55, 63, 70, 89, 93, 96, 98, 100, 126, 127, 151, 158, 160, 164, 200, 241, 242, 246, 247, 248, 249, 250, 255, 280, 287, 289, 294, 327, 355, 365, 367, 368, 370, 371, 373, 376, 377, 378, 380, 393], "http_proxi": 248, "httpmessag": 373, "https_proxi": 248, "hu": 255, "huan": 255, "huang": 255, "hub": [248, 255], "hubbard": 255, "hubert": 255, "huck": 255, "hudmon": 255, "hudson": 255, "huerta": 255, "huge": [220, 344], "hugh": 255, "hugosdottir": 255, "huguenard": 255, "huh": 255, "hui": 255, "hull": 255, "hullig": 255, "human": [41, 53, 54, 89, 254, 255, 388], "humana": [254, 255], "humanbrainproject": 4, "humayun": 255, "hume": 255, "hummo": 255, "humphri": 255, "hundeheg": 255, "hundr": [9, 47], "hungarica": 255, "hunsberg": 255, "hunt": 255, "hunter": 255, "huntington": 255, "huntsman": 255, "hurwitz": 255, "hutchison": 255, "huth": 255, "huw": 255, "huxlei": [10, 24, 38, 39, 45, 119, 120, 153, 154, 165, 253, 255, 282, 283, 292, 293, 295, 342, 371, 382, 388, 392, 393], "huylebroeck": 255, "huynh": 255, "hva": 255, "hvc": 255, "hwang": 255, "hwthread": 385, "hybrid": [29, 90, 163, 255, 292], "hyperact": 255, "hyperbol": [91, 163, 195, 201, 292, 293, 322, 328], "hyperdirect": 255, "hyperexcit": 255, "hypergeo": [200, 327], "hypergeometr": [200, 327], "hyperoxia": 255, "hyperpolar": [29, 80, 109, 153, 155, 255, 282, 284], "hypersynchroni": 255, "hypertens": 255, "hyperthread": [160, 289], "hyphen": 377, "hypogloss": 255, "hypotenus": [195, 322], "hypothalam": 255, "hypotherm": 255, "hypothermia": 255, "hypothes": 255, "hypothesi": [127, 242], "hypox": 255, "hyppocamp": 255, "hysteresi": 255, "hyttinen": 255, "hyun": 255, "hz": [11, 13, 25, 66, 125, 131, 132, 136, 201, 255, 259, 260, 264, 328], "h\u00e1jo": 255, "h\u00e4fliger": 255, "h\u00e4m\u00e4l\u00e4inen": 255, "h\u00e4usser": 255, "h\u00e4ussler": 255, "h\u00f4": 255, "h\u00f4pital": 293, "h\u00f6nigsperg": 255, "h\u00fcbel": 255, "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 125, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 389, 391, 393], "i0": [136, 197, 264, 324], "i1": [22, 37, 80, 102, 115, 116, 153, 197, 282, 324], "i1656m": 255, "i2": [153, 282], "i3d": [64, 368, 373], "i686": [158, 160, 287, 289], "i_cap": [153, 282, 388], "i_membran": [4, 153, 220, 282, 344, 388], "i_membrane_": [4, 52, 153, 220, 282, 344, 388], "i_pa": 388, "i_stim": 64, "ia": 255, "iancu": 255, "iannella": 255, "iarg": 185, "iascon": 255, "iavaron": 255, "ib": [153, 191, 282], "ib_intfire4": 388, "ibbotson": 255, "ibm": [126, 255, 377], "ic": [25, 64, 250, 253, 282, 288, 344, 359, 360, 361], "ica": 250, "icacci": 255, "icann": 255, "icc": [7, 255], "iccab": 255, "ichikawa": 255, "iclamp": [13, 16, 17, 18, 28, 31, 33, 42, 43, 45, 63, 64, 66, 72, 81, 87, 89, 93, 103, 123, 124, 146, 147, 148, 152, 153, 155, 156, 159, 169, 175, 200, 242, 250, 253, 275, 276, 277, 279, 281, 282, 284, 285, 288, 299, 304, 305, 314, 327, 328, 342, 344, 359, 360, 361, 382, 388], "iclamp1": [154, 155, 283, 284], "iclamp_": 123, "iclamp_rig": 96, "iclampfit": 96, "iclamprig": [66, 121], "icob": 255, "icol": [197, 324], "icon": [1, 36, 48, 67, 70, 76, 122, 127, 134, 177, 226, 231, 249, 262, 307, 350, 355], "iconifi": [177, 183, 231, 307, 313, 355], "icpc": 7, "icpx": 7, "icsd": 255, "icsmb": 255, "icur": [220, 344], "id": [10, 11, 13, 15, 16, 17, 18, 19, 23, 42, 53, 54, 100, 103, 124, 127, 157, 158, 159, 160, 161, 220, 225, 231, 246, 247, 249, 282, 284, 286, 287, 288, 289, 290, 295, 344, 349, 355, 359, 377, 378, 385], "id1": [200, 327], "id1_uint32": 284, "id2": [200, 327], "id2_uint32": 284, "id3": [200, 327], "id3_uint32": 284, "id_": 100, "id_bb": [157, 160, 286, 289], "id_rsa": [160, 289], "id_world": [157, 160, 286, 289], "ida": [4, 126, 151, 160, 220, 280, 289, 344], "idea": [1, 32, 36, 42, 47, 53, 81, 86, 88, 93, 94, 103, 105, 111, 124, 133, 153, 154, 155, 201, 203, 210, 246, 261, 282, 283, 284, 328, 330, 335, 385, 387], "ideal": [33, 53, 55, 76, 147, 151, 153, 276, 280, 282, 369], "idema": 255, "iden": 70, "ident": [10, 11, 13, 25, 28, 29, 66, 94, 115, 126, 151, 153, 154, 160, 163, 165, 168, 170, 185, 197, 201, 202, 215, 220, 229, 231, 236, 255, 280, 282, 283, 289, 295, 298, 300, 317, 324, 328, 329, 339, 344, 353, 355, 360, 388], "identif": [160, 255, 289], "identifi": [25, 28, 32, 39, 42, 47, 53, 60, 64, 70, 86, 89, 103, 124, 131, 134, 149, 160, 169, 200, 255, 259, 262, 278, 284, 289, 292, 299, 327, 335, 359, 366, 369, 377, 380, 381, 382, 385, 388], "idestst": [164, 294], "idili": 255, "idiom": [35, 36, 153, 154, 159, 160, 161, 170, 185, 211, 216, 231, 282, 283, 288, 289, 290, 300, 314, 340, 344, 355, 388], "idiosyncrat": 66, "idl": [160, 289], "idraw": [70, 76, 177, 229, 307, 353], "idum": [200, 327], "idvec": [159, 161, 288, 290], "ie": [28, 119, 120, 134, 136, 138, 153, 158, 159, 160, 164, 166, 173, 174, 181, 197, 201, 204, 210, 211, 216, 220, 227, 229, 231, 237, 248, 262, 264, 266, 282, 287, 288, 289, 294, 296, 303, 304, 311, 314, 324, 328, 335, 340, 344, 351, 353, 355, 361], "ieee": [39, 254, 255], "iemb": 255, "ienna": 255, "ifarg": 56, "ifndef": [4, 155, 252, 284], "ifsec": [81, 165, 169, 204, 388], "igarashi": 255, "ignor": [3, 9, 13, 16, 17, 18, 25, 36, 53, 71, 96, 134, 149, 151, 153, 154, 155, 173, 197, 201, 219, 220, 221, 229, 247, 248, 262, 278, 280, 282, 283, 284, 292, 303, 320, 324, 328, 343, 344, 345, 353, 366, 370, 381, 382, 383, 385, 388], "ignore_return": 324, "igra": 255, "ih": 255, "ihost": [160, 289], "ii": [16, 17, 28, 29, 76, 201, 255, 328, 377, 391], "iii": [200, 255, 327], "iion": [155, 284], "ijms20061416": 255, "ijms21124420": 255, "ik": [36, 72, 119, 127, 153, 223, 250, 282, 347, 371, 373, 388], "ik_hh": 153, "ikd": 255, "ikegaya": 255, "ikeno": 255, "ikir": 255, "il": [371, 388], "il_hh": [72, 223, 347, 388], "ilan": 255, "ild": 255, "ileak": 127, "ilie\u015f": 255, "ilij": 255, "ilin": 255, "ill": [53, 382], "illeg": 7, "illumin": [10, 11], "illustr": [5, 37, 38, 44, 51, 53, 66, 67, 74, 76, 80, 81, 89, 121, 153, 166, 210, 219, 282, 296, 335, 343, 366, 385], "ilschner": 255, "im": [255, 373], "imag": [1, 40, 47, 50, 52, 70, 73, 76, 86, 89, 90, 228, 229, 231, 249, 255, 352, 353, 355, 382, 385], "imagin": [53, 66, 119, 120, 130, 155, 195, 258, 284, 322], "imaginari": [201, 328], "imanaga": 255, "imbal": [36, 160, 255, 289], "imbalanc": 255, "imit": [74, 76], "immagin": 255, "immatur": 255, "immedi": [14, 34, 45, 53, 66, 81, 86, 94, 134, 138, 153, 160, 164, 177, 201, 204, 223, 229, 231, 253, 262, 266, 282, 289, 294, 304, 307, 328, 344, 347, 353, 355, 366, 369, 377], "immin": 380, "immun": 255, "immunolog": 255, "immut": [312, 339, 344, 377, 387], "imoto": 255, "imp": [136, 236, 264, 360], "impact": [220, 255, 344, 377], "impair": 255, "imped": [25, 81, 96, 126, 128, 131, 132, 135, 140, 236, 255, 256, 259, 260, 263, 269, 360, 388], "impedanceratio": [128, 130, 227, 256, 258, 351], "impend": 255, "imperfect": 255, "implant": 255, "implement": [1, 4, 13, 16, 17, 27, 32, 35, 36, 39, 43, 52, 53, 54, 56, 58, 66, 74, 75, 79, 81, 87, 88, 89, 90, 94, 100, 105, 126, 127, 129, 136, 139, 144, 146, 147, 150, 151, 153, 154, 155, 156, 157, 159, 161, 163, 169, 173, 177, 179, 182, 186, 188, 197, 201, 207, 217, 220, 222, 223, 225, 227, 228, 229, 239, 242, 252, 255, 257, 264, 267, 273, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 288, 290, 292, 299, 303, 307, 309, 312, 315, 316, 324, 328, 341, 344, 346, 347, 349, 351, 352, 353, 363, 366, 370, 377, 378, 382, 385, 388, 393], "impli": [3, 12, 119, 120, 136, 160, 201, 220, 248, 255, 264, 289, 328, 344, 366], "implic": [201, 255, 328, 366, 369, 393], "implicit": [4, 12, 33, 39, 53, 126, 154, 155, 165, 166, 220, 223, 230, 254, 283, 284, 295, 296, 344, 347, 354, 369], "implicitli": [1, 53, 98, 154, 220, 230, 283, 344, 354], "import": [0, 1, 3, 4, 7, 8, 12, 13, 14, 24, 25, 28, 30, 31, 36, 38, 41, 43, 45, 46, 48, 52, 53, 55, 60, 63, 64, 66, 67, 70, 76, 86, 89, 96, 98, 100, 108, 119, 120, 126, 127, 138, 151, 153, 154, 155, 160, 161, 163, 164, 167, 169, 175, 201, 208, 211, 216, 225, 237, 242, 246, 247, 250, 253, 255, 266, 268, 277, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 334, 337, 338, 339, 340, 341, 342, 344, 345, 347, 349, 351, 352, 353, 355, 357, 359, 360, 361, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 391], "import3d": [14, 26, 40, 58, 64, 87, 96, 126, 254, 368, 373], "import3d_eutectic_read": 64, "import3d_gui": [1, 57, 64, 368, 373], "import3d_morphml": 64, "import3d_neurolucida3": 64, "import3d_swc_read": [64, 368, 373], "importantli": 368, "importerror": 7, "impos": [29, 201, 234, 328, 358], "imposs": [119, 120, 160, 210, 289, 335], "impract": [242, 366], "improv": [4, 7, 53, 94, 96, 133, 154, 161, 201, 231, 246, 255, 261, 283, 289, 290, 328, 355, 377, 378], "impshap": [128, 227, 256, 351], "impuls": [46, 255], "impx": [128, 130, 227, 256, 258, 351], "imshow": 373, "in_region": 367, "ina": [72, 97, 119, 127, 136, 153, 223, 264, 282, 292, 328, 347, 371, 388], "ina_hh": 153, "inaccess": [64, 173, 303], "inaccur": [96, 125, 136, 264], "inact": [24, 159, 288, 289, 344], "inactiv": [80, 153, 255, 282, 371], "inadvert": [50, 119, 120, 154, 165, 170, 283, 295, 300], "inam": [149, 278], "inappropri": [246, 388], "inc": [154, 191, 254, 255, 283], "incept": 126, "incerta": 255, "incf": [1, 3, 391], "incflag": 246, "inch": [70, 119, 120, 154, 233, 283, 357], "inci": 255, "incident": 81, "includ": [1, 3, 4, 7, 42, 43, 46, 47, 52, 53, 54, 56, 60, 64, 67, 74, 75, 76, 79, 81, 82, 88, 89, 96, 98, 100, 103, 107, 108, 123, 124, 126, 127, 133, 148, 153, 155, 160, 163, 165, 167, 177, 188, 191, 195, 197, 199, 201, 204, 214, 221, 223, 225, 229, 235, 237, 242, 246, 247, 248, 251, 255, 261, 277, 282, 284, 289, 292, 293, 295, 297, 307, 314, 316, 318, 322, 324, 326, 328, 338, 340, 344, 345, 347, 349, 353, 359, 360, 361, 366, 368, 369, 371, 372, 377, 378, 380, 381, 382, 387, 388, 389, 392, 393], "include_flux": [292, 359, 360], "inclus": [154, 201, 242, 283, 328, 387], "incognito": 255, "incom": 282, "incompat": [4, 8, 87, 127, 153, 155, 225, 252, 282, 284, 349, 377], "incomplet": [3, 36, 40, 76, 153, 242, 255, 282, 369], "inconsequenti": 96, "inconsist": [46, 119, 120, 160, 223, 255, 289, 292, 347, 370, 377], "inconveni": [136, 160, 169, 231, 264, 289, 355], "incorpor": [3, 52, 76, 81, 89, 126, 163, 165, 255, 292, 295, 377, 382], "incorrect": [1, 53, 153, 160, 176, 227, 282, 289, 306, 351], "incorrectli": 47, "increas": [3, 10, 11, 13, 16, 25, 31, 33, 41, 47, 52, 56, 94, 95, 96, 126, 127, 136, 154, 160, 165, 166, 182, 201, 220, 224, 231, 242, 255, 264, 283, 289, 292, 295, 296, 312, 328, 344, 348, 355, 366, 368, 369, 373, 377, 382, 384], "increasingli": 126, "increment": [13, 16, 17, 47, 50, 52, 53, 56, 76, 81, 107, 154, 160, 174, 185, 198, 200, 201, 204, 210, 223, 229, 231, 237, 283, 289, 296, 304, 325, 327, 328, 334, 335, 344, 347, 355, 361, 377, 378], "incur": 58, "ind": [29, 201, 202, 328, 329], "inde": [4, 40, 54, 155, 284, 327, 377], "indent": [66, 81, 104, 289, 382, 387, 388], "indep": [52, 230, 354], "indep_vec": [201, 328], "independ": [3, 9, 25, 36, 53, 70, 73, 87, 89, 94, 119, 120, 129, 131, 134, 153, 155, 160, 173, 198, 200, 201, 203, 227, 231, 254, 255, 257, 259, 262, 282, 284, 289, 303, 312, 325, 327, 328, 330, 351, 355, 377, 382, 388], "independent_netstim": 100, "independentvar": [128, 256], "indetermin": [160, 289], "index": [0, 10, 11, 13, 16, 32, 37, 52, 53, 67, 79, 80, 123, 138, 140, 149, 150, 151, 152, 154, 156, 159, 160, 161, 163, 164, 165, 173, 174, 177, 183, 185, 186, 191, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 214, 220, 223, 229, 231, 235, 236, 237, 240, 241, 253, 266, 269, 278, 279, 280, 281, 283, 285, 288, 289, 290, 292, 294, 295, 303, 304, 307, 313, 314, 315, 318, 324, 325, 327, 328, 329, 330, 332, 338, 344, 347, 353, 355, 359, 360, 361, 373, 377, 378, 387], "indgen": [28, 197, 200, 201, 202, 204, 208, 314, 324, 327, 328, 329, 334, 353], "indic": [1, 3, 10, 11, 12, 13, 16, 17, 25, 29, 32, 37, 40, 54, 55, 56, 64, 68, 70, 73, 76, 81, 89, 119, 120, 129, 132, 133, 144, 148, 149, 153, 154, 160, 161, 163, 165, 169, 175, 180, 182, 186, 197, 199, 201, 204, 211, 216, 220, 227, 228, 229, 231, 234, 237, 246, 247, 255, 257, 260, 261, 268, 273, 277, 278, 282, 283, 289, 290, 292, 295, 305, 310, 314, 315, 324, 326, 328, 330, 334, 337, 340, 344, 351, 352, 353, 355, 358, 361, 365, 366, 367, 369, 382, 383, 385, 387, 388], "indices_of_discontinuities_vector": [201, 328], "indices_to_cach": 53, "indigo": 70, "indirect": 255, "indirectli": [53, 160, 242, 289], "indistinguish": [96, 255], "individu": [3, 14, 29, 40, 45, 47, 53, 65, 66, 80, 86, 94, 126, 133, 144, 148, 154, 158, 160, 163, 166, 197, 200, 201, 229, 254, 255, 261, 273, 277, 283, 287, 289, 292, 296, 324, 327, 353, 366, 377, 378, 387, 388], "induc": [255, 369, 383, 388], "induct": 255, "industri": 377, "indvwher": [201, 202, 328, 329], "indwher": [201, 202, 328, 329], "ineffect": 255, "ineffici": [136, 160, 197, 220, 227, 264, 289, 344, 385], "inf": [171, 191, 201, 202, 243, 301, 328, 329, 371], "inf_hh": [153, 282], "infantil": 255, "infer": 255, "inferior": 255, "infi": 191, "infil": [192, 319], "infin": [154, 191, 201, 220, 229, 283, 328, 344, 353], "infinit": [25, 81, 153, 160, 166, 182, 196, 282, 289, 296, 312, 323], "infinitesim": [153, 220, 282, 344], "inflammatori": 255, "influenc": [25, 46, 255], "influx": [95, 255, 369], "info": [37, 54, 108, 139, 160, 162, 165, 166, 168, 172, 220, 225, 229, 234, 241, 242, 267, 268, 282, 289, 291, 295, 296, 344, 349, 353, 358, 373, 377, 378, 387], "inform": [0, 3, 4, 7, 10, 11, 12, 14, 25, 36, 39, 40, 42, 46, 49, 52, 53, 54, 60, 66, 67, 70, 76, 79, 81, 82, 86, 89, 96, 98, 103, 108, 124, 126, 127, 133, 142, 154, 155, 156, 159, 160, 163, 165, 166, 170, 189, 200, 201, 205, 210, 211, 216, 220, 225, 227, 229, 231, 234, 241, 242, 246, 247, 255, 261, 271, 282, 283, 284, 285, 288, 289, 292, 293, 295, 296, 300, 302, 314, 327, 328, 330, 335, 340, 344, 349, 351, 353, 355, 358, 380, 382, 387, 388], "informat": 255, "inforn": 3, "infra": 255, "infrar": 255, "infraslow": 255, "infrastructur": [1, 54, 93, 255, 371], "inftau": [150, 152, 279, 281], "infti": [39, 41, 376], "infvec": [150, 279], "ing": [70, 153, 282], "ingenier\u00eda": 255, "ingerson": 255, "inglebert": 255, "ingredi": 255, "inher": [53, 81, 255, 377], "inherit": [81, 119, 120, 255, 314, 331], "inhibit": [9, 37, 38, 53, 74, 80, 116, 255], "inhibiton": 80, "inhibitor": 255, "inhibitori": [29, 37, 38, 74, 80, 100, 109, 110, 115, 153, 255, 282], "inhomogen": [26, 46, 66, 255], "init": [1, 21, 22, 24, 28, 31, 32, 37, 42, 45, 46, 66, 69, 72, 76, 77, 81, 88, 96, 101, 102, 103, 121, 124, 160, 174, 184, 200, 201, 205, 210, 214, 223, 227, 230, 250, 328, 335, 347, 351, 354, 373, 377, 387], "init_func": 373, "init_glob": 60, "init_iclampopt": 96, "init_iclamprawmodel": 96, "init_makedata": 96, "init_ss": 24, "init_v": [312, 366], "initbatpar": 16, "initbats": 17, "initcod": 52, "inithoc": 3, "initi": [1, 4, 8, 26, 29, 31, 37, 38, 39, 41, 46, 53, 57, 69, 76, 77, 81, 87, 92, 94, 96, 114, 115, 134, 138, 147, 148, 149, 151, 153, 155, 156, 159, 160, 161, 163, 164, 166, 169, 185, 189, 200, 201, 204, 210, 216, 220, 223, 224, 229, 230, 233, 235, 238, 241, 242, 246, 251, 255, 262, 266, 276, 277, 278, 280, 282, 284, 285, 288, 289, 290, 292, 294, 296, 299, 302, 304, 314, 327, 328, 335, 338, 340, 342, 344, 347, 348, 349, 351, 353, 354, 357, 359, 360, 362, 366, 367, 369, 370, 372, 374, 375, 376, 377, 378, 382, 385, 387, 388, 391], "initial_protein": 367, "initialbgcolor": 70, "initialbrush": 70, "initialfgcolor": 70, "initialfont": 70, "initialis": [1, 52, 53], "initializationinitializa": 60, "initializaton": 24, "initialpattern": 70, "initiclamp": 66, "initn": 100, "initnrn": [81, 223, 347, 388], "initonerun": 18, "initplotfi": [10, 11, 19], "initrun": [130, 134, 227, 258, 262, 351], "initvclamp": 66, "inject": [10, 11, 25, 31, 33, 38, 45, 47, 64, 96, 130, 131, 132, 136, 147, 151, 153, 227, 250, 255, 258, 259, 260, 264, 276, 280, 282, 327, 351, 382], "injur": 255, "injuri": 255, "inlin": [241, 277, 365, 366, 375, 382, 383, 384, 388], "inner": [53, 201, 328, 369], "innermost": [160, 289], "innerv": 255, "innocu": 45, "inositol": [255, 369], "inou": 255, "inp": 328, "input": [1, 4, 7, 9, 12, 25, 29, 32, 33, 37, 38, 52, 54, 56, 64, 71, 74, 75, 76, 86, 100, 103, 110, 117, 118, 124, 126, 130, 132, 135, 136, 153, 154, 160, 173, 184, 191, 197, 201, 204, 210, 220, 226, 242, 248, 255, 258, 260, 263, 264, 282, 283, 288, 289, 300, 303, 318, 324, 328, 335, 344, 350, 368, 373, 381, 382, 384, 386, 387], "input_phas": [135, 136, 263, 264], "inputrc": 1, "inquir": 388, "inrang": [233, 357], "insect": 255, "insert": [10, 11, 13, 14, 15, 22, 28, 30, 31, 46, 47, 48, 55, 63, 66, 67, 69, 70, 72, 77, 81, 88, 89, 96, 127, 141, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 163, 165, 166, 173, 174, 201, 203, 204, 210, 220, 223, 224, 225, 229, 231, 236, 250, 253, 270, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 292, 295, 296, 303, 304, 309, 314, 328, 330, 335, 342, 344, 347, 349, 353, 355, 359, 360, 361, 371, 373, 382, 383, 384, 393], "insertfrom": 60, "insertprop_alloc": 60, "inset": [173, 303], "insid": [42, 46, 52, 53, 56, 66, 69, 76, 77, 81, 86, 96, 98, 99, 154, 160, 163, 170, 182, 196, 201, 202, 204, 205, 223, 229, 246, 248, 250, 253, 277, 283, 288, 289, 292, 300, 312, 323, 329, 347, 353, 366, 368, 369, 371, 387, 388], "insight": [95, 255, 377, 393], "insofar": 53, "insp": 255, "inspect": [3, 52, 242, 383], "inspir": [242, 255], "inspiratori": 255, "insrt": [174, 183, 201, 202, 304, 313, 328, 329], "inst": 52, "instabl": [154, 155, 255, 283, 284], "instal": [0, 1, 6, 10, 11, 35, 52, 54, 59, 77, 81, 83, 87, 93, 143, 144, 148, 158, 160, 161, 216, 223, 229, 231, 241, 242, 243, 244, 247, 253, 268, 272, 273, 277, 287, 289, 290, 340, 347, 353, 355, 363, 377, 378, 380, 381, 385, 387, 388, 389], "install_vector_fit": 388, "instanc": [4, 13, 16, 28, 32, 33, 36, 37, 38, 42, 53, 54, 56, 66, 100, 103, 117, 119, 120, 123, 124, 128, 134, 136, 144, 148, 153, 154, 155, 159, 160, 164, 165, 166, 173, 174, 175, 182, 186, 200, 201, 203, 204, 205, 219, 220, 221, 227, 229, 231, 235, 237, 256, 262, 264, 273, 277, 279, 282, 283, 284, 288, 289, 292, 294, 295, 296, 303, 304, 305, 312, 314, 315, 316, 327, 328, 330, 331, 343, 344, 345, 351, 353, 355, 359, 361, 366, 377, 378, 384, 387, 388], "instant": [136, 264], "instantan": [81, 94, 95, 107, 109, 164, 294], "instanti": [9, 21, 22, 29, 58, 64, 80, 108, 136, 150, 156, 163, 168, 205, 264, 279, 284, 285, 289, 292, 298, 368, 373], "instantli": 80, "instead": [1, 3, 8, 10, 11, 25, 29, 30, 31, 32, 39, 45, 47, 53, 64, 66, 67, 70, 73, 76, 81, 82, 83, 86, 96, 98, 103, 104, 108, 115, 119, 120, 124, 126, 127, 129, 153, 154, 155, 159, 160, 161, 163, 165, 166, 176, 182, 186, 188, 197, 200, 201, 210, 220, 223, 229, 231, 238, 242, 246, 247, 253, 257, 282, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 304, 306, 310, 312, 314, 316, 322, 324, 327, 328, 334, 335, 337, 338, 343, 344, 347, 351, 353, 355, 357, 359, 360, 362, 365, 366, 368, 369, 370, 372, 377, 382, 383, 384, 385, 387, 388], "institut": [201, 255], "instruct": [3, 4, 5, 6, 10, 11, 32, 37, 42, 52, 66, 80, 82, 103, 105, 111, 112, 124, 126, 134, 201, 223, 240, 243, 246, 248, 255, 262, 328, 347, 385], "instrument": [16, 17, 18, 45, 46, 66, 76, 100, 126, 243, 363, 386], "instrumentor": 242, "insuffici": [19, 41, 139, 267, 337], "insul": 255, "insur": 81, "int": [4, 22, 52, 53, 56, 60, 81, 98, 125, 160, 164, 186, 195, 199, 200, 201, 202, 206, 250, 255, 282, 289, 294, 296, 298, 299, 315, 322, 324, 326, 327, 328, 329, 337, 342, 353, 359, 361, 368, 373, 387, 388], "int2tarlist": 1, "int_": [195, 322], "intact": 255, "intcnt": 344, "integ": [4, 28, 52, 53, 56, 70, 81, 100, 119, 120, 154, 159, 160, 161, 165, 168, 173, 186, 189, 190, 195, 197, 198, 199, 200, 201, 204, 208, 211, 220, 223, 229, 235, 268, 283, 288, 289, 290, 293, 295, 296, 303, 315, 317, 322, 324, 325, 326, 327, 328, 334, 344, 347, 353, 359, 366, 377, 385, 387], "integ_tim": [157, 160, 286, 289], "integer_valu": [154, 283], "integr": [1, 6, 7, 9, 25, 29, 32, 36, 39, 44, 54, 57, 59, 75, 76, 88, 90, 91, 96, 142, 148, 151, 153, 154, 155, 160, 161, 163, 164, 166, 195, 201, 202, 220, 223, 224, 225, 227, 249, 254, 255, 271, 277, 280, 282, 283, 284, 289, 290, 292, 294, 296, 322, 328, 329, 344, 347, 348, 349, 351, 366, 369, 377, 378, 391], "integratefir": [88, 107], "intel": [1, 3, 7, 198, 201, 246, 255, 325, 328], "intellig": 255, "intend": [3, 29, 53, 66, 94, 114, 119, 120, 160, 163, 175, 197, 228, 229, 289, 292, 305, 324, 352, 353, 366, 377, 388], "intens": [70, 89, 126, 235, 255, 359], "intent": [53, 60, 161, 165, 225, 290, 295, 349, 377, 381], "inter": [160, 255, 289], "interact": [3, 26, 29, 45, 58, 76, 81, 86, 126, 133, 136, 154, 160, 163, 185, 211, 248, 253, 254, 255, 261, 264, 282, 283, 289, 292, 314, 328, 333, 345, 357, 359, 366, 368, 369, 370, 377, 382, 388, 392, 393], "interaur": 255, "intercellular": 255, "intercept": [105, 173, 183, 201, 303, 312, 313, 328], "interchang": [163, 292, 328, 388], "interconnect": [66, 255], "interdepend": 255, "interdisciplinari": 255, "interest": [0, 3, 4, 25, 29, 32, 34, 35, 46, 47, 52, 82, 83, 86, 93, 94, 100, 126, 127, 220, 242, 249, 250, 292, 344, 366, 370, 377, 382, 388], "interfac": [1, 3, 4, 21, 22, 31, 32, 33, 36, 37, 42, 45, 56, 66, 76, 81, 87, 96, 103, 124, 127, 153, 154, 155, 160, 161, 163, 175, 188, 197, 200, 203, 209, 211, 220, 227, 229, 231, 240, 242, 246, 252, 255, 282, 283, 284, 289, 290, 305, 314, 316, 324, 327, 330, 344, 351, 353, 355, 360, 363, 370, 371, 373, 388, 391], "interfer": [42, 94, 96, 100, 103, 124, 133, 160, 255, 261, 289, 330], "interferenti": 255, "interferon": 255, "interglomerular": 255, "interhemispher": 255, "interict": 255, "interior": [81, 166, 177, 228, 231, 234, 250, 292, 296, 307, 352, 355, 358, 366, 369], "interleav": 289, "intermedi": [27, 39, 76, 134, 227, 234, 262, 331, 351, 358, 377], "intermezzo": 27, "intermingl": [160, 289], "intern": [1, 3, 4, 5, 8, 12, 36, 39, 53, 59, 81, 98, 100, 126, 133, 134, 140, 149, 150, 151, 153, 154, 155, 156, 160, 163, 164, 165, 166, 173, 200, 208, 219, 220, 223, 229, 247, 250, 252, 254, 255, 261, 262, 269, 278, 279, 280, 282, 283, 284, 285, 289, 292, 294, 295, 296, 303, 327, 331, 334, 343, 344, 347, 353, 377, 381], "internal_id3": 284, "internal_typ": [146, 156, 160, 275, 285, 289], "internalsectionnam": 52, "internet": [76, 160, 289, 292, 377, 388], "interneuron": [74, 255], "internod": 255, "interoper": [126, 254, 255, 298, 371], "interp": 296, "interplai": 255, "interpol": [64, 154, 164, 165, 166, 201, 202, 220, 255, 283, 294, 295, 296, 328, 329, 344], "interpret": [1, 3, 4, 32, 34, 47, 57, 58, 66, 67, 76, 77, 86, 87, 89, 100, 138, 140, 148, 154, 155, 159, 160, 164, 165, 170, 171, 173, 175, 179, 182, 186, 188, 191, 193, 195, 197, 199, 200, 201, 204, 207, 209, 210, 211, 218, 220, 223, 227, 229, 231, 236, 246, 252, 253, 255, 266, 269, 277, 283, 284, 288, 289, 294, 295, 300, 301, 303, 305, 309, 314, 315, 316, 318, 320, 322, 324, 326, 327, 328, 331, 335, 342, 344, 347, 351, 353, 355, 360, 369, 370, 381, 387], "interprocessor": [159, 160, 220, 288, 289, 344], "interpuls": [71, 255], "interregion": 255, "interrupt": 81, "interspers": 289, "interspik": [13, 32, 80, 107, 255], "interstiti": 255, "intersymbol": 255, "interv": [9, 13, 22, 29, 32, 37, 44, 71, 78, 80, 87, 94, 96, 100, 107, 108, 126, 129, 134, 153, 154, 160, 161, 200, 201, 216, 217, 220, 223, 255, 257, 262, 282, 283, 289, 290, 327, 328, 340, 341, 344, 347, 371, 373, 387], "interval3": [129, 257], "interven": [250, 255], "intervent": [255, 377], "interview": [1, 2, 160, 231, 246, 268, 289, 355, 359, 360, 388], "interweav": 255, "intestin": 255, "intfire1": [9, 21, 32, 152, 153, 161, 227, 281, 282, 290, 338, 351, 388, 393], "intfire2": [9, 152, 153, 281, 282, 388, 393], "intfire4": [9, 152, 153, 281, 282, 388, 393], "intial": [284, 289], "intra": [33, 160, 163, 255, 289, 292, 368, 393], "intrabodi": 255, "intracellular": [64, 76, 95, 146, 155, 255, 275, 284, 289, 366, 368, 369, 371, 373], "intracolumnar": 255, "intracort": 255, "intradendrit": 255, "intradur": 255, "intrafascicular": 255, "intraglomerular": 255, "intramembran": 255, "intraneur": 255, "intraneuron": 255, "intraspin": 255, "intrathalam": 255, "intric": 3, "intrins": [29, 255, 369], "intro": [250, 377], "intro_to_gui": 31, "introduc": [1, 4, 53, 56, 86, 90, 100, 151, 155, 156, 160, 163, 185, 190, 204, 216, 252, 254, 255, 280, 284, 285, 289, 292, 317, 320, 340, 365, 377, 378, 382, 383, 387, 389, 392], "introduct": [2, 26, 90, 93, 126, 152, 201, 251, 269, 281, 284, 314, 328, 374, 378, 379, 386, 391], "introductori": 53, "intuit": [25, 39, 89, 96, 126, 153, 201, 255, 282, 328, 370, 383], "invalid": [42, 53, 81, 87, 103, 119, 120, 124, 153, 155, 163, 165, 171, 182, 197, 201, 220, 242, 282, 284, 292, 295, 301, 312, 324, 328, 337, 338, 344], "invari": [160, 255, 289], "invas": 255, "invent": [160, 255, 289], "invers": [70, 197, 201, 202, 255, 293, 324, 328, 329], "invert": [70, 229, 353], "invertebr": 255, "invest": [66, 154, 283], "investig": [32, 40, 89, 126, 220, 255, 344], "invis": [70, 201, 328, 377], "invl": [29, 217], "invoc": [3, 81, 169, 197, 299], "invok": [3, 32, 37, 56, 70, 81, 127, 134, 136, 154, 155, 156, 160, 168, 173, 174, 175, 204, 220, 229, 231, 234, 247, 253, 262, 264, 283, 284, 285, 289, 298, 303, 305, 344, 353, 355, 358, 387], "involv": [1, 7, 10, 11, 13, 27, 32, 53, 81, 88, 93, 96, 100, 108, 115, 119, 120, 126, 129, 133, 134, 136, 151, 154, 160, 163, 164, 166, 167, 173, 201, 220, 231, 236, 239, 247, 255, 257, 261, 262, 264, 280, 283, 289, 292, 294, 296, 303, 314, 343, 344, 355, 366, 385], "inward": [230, 250, 255, 354], "inwardli": 255, "inzirillo": 255, "io": [0, 1, 3, 49, 248, 249, 250, 316, 317, 382, 387, 388], "ion": [6, 31, 53, 65, 66, 76, 81, 82, 83, 87, 89, 126, 136, 146, 150, 152, 153, 154, 155, 165, 223, 225, 250, 255, 264, 275, 279, 281, 282, 283, 284, 293, 295, 328, 347, 349, 366, 368, 369, 372, 374, 382, 391], "ion_charg": [146, 149, 275, 278, 388], "ion_regist": [146, 149, 275, 278, 388], "ion_styl": [81, 146, 149, 155, 275, 278, 284, 388], "ioni": [155, 284], "ionic": [14, 82, 83, 126, 136, 137, 139, 154, 155, 223, 227, 255, 264, 265, 267, 283, 284, 344, 347, 351, 388], "iono": [155, 284], "ionotrop": 255, "iontyp": 53, "ip": [41, 158, 255, 287, 314], "ip3": [41, 255, 292, 293, 366, 369, 374, 376], "ip3_conc": 376, "ip3_degrad": 366, "ip3_init": 369, "ip3_vec": 375, "ip3diff": 369, "ip3flux": 292, "ip3i": 375, "ip3r": [163, 292, 369], "ip3rtau": 369, "ip_3": 366, "ipdp": [254, 255], "ipsc": 255, "ipsilater": 255, "ipsp": 80, "ipulse1": [71, 76], "ipulse2": [71, 76], "ipulse3": [71, 76], "ipulse3rig": 76, "ipynb": 63, "ipython": [61, 63, 373, 381, 385], "ir": 255, "irkl": 255, "irow": [197, 324], "irrecover": 377, "irregular": [47, 86, 255], "irrelev": [9, 108, 166, 296, 377, 387], "irrevers": 366, "irwin": 255, "is3": 255, "is_arrai": 330, "is_art": [21, 22], "is_artifici": [146, 156, 214, 215, 275, 285, 338, 339], "is_ca": [165, 168, 295, 298], "is_ion": [289, 388], "is_map": [177, 183, 307, 313], "is_nam": [186, 214, 215, 338, 339], "is_netcon_target": [146, 156, 275, 285], "is_obj_typ": 56, "is_point_process": [161, 214, 215, 290, 338, 339], "is_pointprocess": 279, "is_pysec": 388, "isaac": 255, "isaacson": 255, "isca": 255, "iscas45731": 255, "ischem": [64, 255, 373], "isci": 255, "iscienc": 255, "isec": 52, "iseri": 255, "ish": 53, "ishida": 255, "ishiguro": 255, "ishihara": 255, "ishii": 255, "ishikawa": 255, "ishlam": 255, "isi": [13, 16, 17, 18, 100], "isinst": [331, 387], "islam": 255, "islet": 255, "ismap": [173, 183, 303, 313], "ismembran": [28, 146, 165, 169, 203, 275, 295, 388], "isn": [14, 42, 47, 53, 66, 80, 86, 94, 99, 105, 161, 214, 216, 231, 290, 304, 338, 340, 355], "isnn": 255, "isofluran": 255, "isoform": 255, "isokawa": 255, "isol": [153, 160, 173, 255, 282, 289, 303, 314, 377], "isoliquiritigenin": 255, "isom": 255, "isopen": [187, 188, 316], "isopotenti": 255, "isotyp": 255, "isradipin": 255, "isrcstat": [164, 294], "iss53": 377, "issect": [146, 165, 169, 275, 295, 388], "issn": 255, "issu": [1, 4, 7, 8, 29, 47, 53, 55, 66, 70, 82, 98, 100, 126, 154, 160, 161, 166, 188, 216, 220, 242, 246, 247, 249, 255, 283, 289, 290, 293, 296, 316, 340, 344, 369, 377, 378, 380, 387], "issubclass": 331, "issue_frozen_token": 53, "issue_nr": 377, "istat": [164, 294], "istep": 217, "istim": [220, 344], "isysroot": 246, "italienn": 255, "itani": 255, "itd": 255, "item": [25, 27, 31, 32, 37, 42, 45, 46, 47, 66, 73, 80, 81, 85, 86, 89, 94, 96, 99, 103, 104, 107, 109, 112, 123, 124, 130, 131, 132, 133, 134, 144, 147, 155, 156, 160, 161, 163, 173, 174, 177, 178, 182, 197, 201, 203, 210, 220, 221, 227, 229, 230, 231, 234, 238, 247, 253, 255, 258, 259, 260, 261, 262, 273, 276, 284, 285, 289, 290, 303, 304, 307, 308, 312, 314, 324, 328, 330, 335, 338, 344, 345, 351, 353, 354, 355, 358, 362, 370, 382, 385, 387, 388], "item_id": 304, "item_select": 312, "iter": [1, 3, 13, 16, 17, 29, 51, 52, 64, 68, 81, 94, 96, 104, 106, 136, 154, 156, 163, 167, 169, 184, 194, 197, 201, 203, 204, 205, 220, 229, 230, 264, 283, 285, 292, 297, 299, 314, 321, 324, 328, 344, 353, 354, 366, 369, 377, 378, 382, 388], "iter_stmt_begin": 52, "iter_stmt_ob": 52, "iterator_nam": 81, "iterator_stat": [81, 185, 220, 388], "itertool": 295, "ith": [70, 138, 160, 163, 166, 168, 177, 185, 197, 203, 204, 208, 220, 229, 266, 289, 296, 298, 303, 307, 324, 330, 334, 344, 353], "ito": 255, "its": [3, 4, 6, 9, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 64, 66, 70, 73, 74, 79, 80, 81, 86, 87, 89, 91, 93, 94, 96, 98, 99, 100, 103, 107, 108, 109, 110, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 129, 133, 134, 138, 148, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 170, 173, 175, 182, 185, 186, 188, 190, 191, 195, 197, 200, 201, 204, 205, 207, 210, 214, 220, 221, 225, 227, 229, 231, 234, 237, 242, 246, 247, 248, 252, 253, 255, 257, 261, 262, 266, 268, 277, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 300, 303, 312, 314, 315, 316, 317, 318, 322, 327, 328, 331, 333, 334, 335, 338, 344, 345, 349, 351, 353, 355, 358, 361, 366, 368, 369, 370, 371, 372, 374, 377, 382, 383, 384, 385, 387, 388], "itself": [4, 37, 45, 53, 70, 76, 81, 94, 96, 98, 100, 154, 155, 160, 186, 201, 204, 205, 210, 220, 224, 229, 253, 283, 284, 289, 315, 328, 335, 344, 348, 360, 366, 367, 377, 380, 385, 387, 388], "ityp": 185, "iv": [3, 158, 160, 255, 287, 289], "iv_typ": [150, 152, 279, 281], "ivanov": 255, "ivanova": 255, "ivcmak": 3, "ivec": [201, 328], "iven": 255, "ivmodl": 81, "ivoc": [52, 56, 81, 175, 197, 204, 305, 324], "ivoc_styl": [175, 183, 305, 313, 388], "ivochelp": [225, 349], "ivocmain": [52, 175, 305], "ivocmain_sess": 52, "ivocvect": 98, "ivtool": 70, "iwata": 255, "iwema": 255, "iwithsysroot": 246, "iyengar": 255, "iyer": 255, "iyimag": 136, "izad": 255, "izhikevich": 255, "izont": 70, "izquierdo": 255, "izumi": 255, "j": [3, 25, 35, 41, 46, 53, 81, 88, 93, 95, 100, 126, 160, 185, 197, 200, 201, 203, 204, 229, 231, 235, 241, 247, 254, 255, 289, 324, 327, 328, 330, 353, 355, 359, 370, 371], "j0": [197, 324], "j1": [197, 324], "j4": 255, "ja": 255, "jackeviciu": 255, "jackson": 255, "jacob": [60, 255], "jacobi": [136, 255, 264], "jacobian": [136, 139, 154, 220, 223, 264, 267, 283, 344, 347], "jacobson": 255, "jacquir": 255, "jadi": 255, "jaeger": [254, 255], "jaff": [25, 255], "jageman": 255, "jahr": 255, "jain": 255, "jakob": 255, "jakoubovitch": 255, "jalil": 255, "jalz": 255, "jame": 255, "jamei": 255, "jamieson": 255, "janahmadi": 255, "jang": 255, "janik": 255, "jansen": 255, "januari": [220, 344], "japan": 255, "jape": 255, "japplphysiol": 255, "jarecki": 255, "jaro": 255, "jarski": 255, "jarvi": 255, "jaslov": [191, 233, 318, 357, 371], "java": [150, 279, 363], "javaherian": 255, "javascript": 388, "jbc": 255, "jci40801": 255, "jci42219": 255, "jcol": [197, 324], "jedlicka": 255, "jedli\u010dka": 255, "jedrasiak": 255, "jefferi": 255, "jelescu": 255, "jeltsch": 255, "jeng": 255, "jenkin": [255, 377], "jensen": 255, "jentsch": 255, "jessen": 255, "jester": 255, "jet": 359, "jeub": 255, "jgp": 255, "ji": 255, "jia": 255, "jiang": 255, "jim": 255, "jin": 255, "jinja2": 61, "jit": 247, "jitter": 255, "jk": 100, "jm": 88, "jn": [25, 95, 254, 255], "jneumeth": [100, 254, 255], "jneuroml": [163, 292], "jneurosci": 255, "job": [3, 10, 11, 13, 16, 53, 54, 65, 66, 78, 96, 105, 160, 223, 239, 242, 248, 289, 347], "jochem": 255, "jodar": 255, "joe": 387, "joel": 255, "joerg": 255, "johann": 255, "johansson": 255, "john": [81, 83, 126, 139, 160, 200, 255, 267, 289, 327], "johnsen": 255, "johnson": 255, "johnston": [126, 255], "join": [1, 76, 82, 83, 220, 285, 344, 382, 388], "joint": 255, "jointli": 255, "jokanov": 255, "jolivet": 255, "jolla": 201, "jollei": 255, "jona": 255, "jone": [49, 255], "joo": 255, "jordan": 255, "josaa": 255, "jose": 255, "joseph": 255, "josi": 255, "josic": 255, "jost": 255, "jos\u00e9": 255, "jou": 255, "joucla": 255, "jouhanneau": 255, "joul": [81, 119, 120, 154, 193, 283], "journal": [25, 40, 47, 100, 126, 254, 255, 370, 377, 385], "jo\u00ebl": 255, "jp270372": 255, "jp270688": 255, "jp272022": 255, "jp272317": 255, "jp273482": 255, "jp274258": 255, "jp274408": 255, "jp274581": 255, "jp274861": 255, "jp275083": 255, "jp275310": 255, "jp275498": 255, "jp276356": 255, "jp277664": 255, "jp278952": 255, "jp279452": 255, "jp279744": 255, "jpain": 255, "jphysiol": [46, 255], "jphyspari": 255, "jproc": 255, "jpsj": 255, "jr": 255, "jrd": 255, "json": [38, 249], "jtbi": 255, "jth": [197, 204, 324], "ju": 255, "juan": 255, "judgement": 126, "judgment": [86, 126, 210, 335], "judici": 126, "jugdement": 94, "jul": [158, 159, 287, 288], "juli": 255, "julian": 242, "jump": [24, 33, 40, 81, 95, 255, 377, 378], "jun": [29, 255], "junction": [4, 33, 38, 126, 136, 160, 166, 246, 255, 264, 289, 296], "june": [255, 390], "jung": [254, 255], "jupyt": [0, 1, 3, 61, 240, 359, 382, 383, 384, 387, 388, 392, 393], "jurado": 255, "juri": 255, "just": [0, 1, 3, 10, 11, 14, 25, 28, 32, 36, 42, 45, 47, 51, 52, 53, 66, 67, 69, 70, 77, 80, 86, 87, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125, 127, 134, 147, 149, 151, 153, 154, 155, 160, 161, 163, 168, 170, 173, 188, 191, 198, 201, 205, 207, 210, 219, 220, 221, 223, 225, 229, 230, 233, 234, 246, 247, 248, 249, 255, 262, 276, 278, 280, 282, 283, 284, 289, 290, 292, 300, 303, 304, 312, 316, 325, 328, 331, 333, 335, 343, 344, 345, 347, 349, 353, 354, 357, 358, 366, 370, 371, 377, 383, 384, 385, 387, 388], "just_er": [163, 292], "justifi": [190, 317], "justu": 255, "juvenil": 255, "juxtaglomerular": 255, "jvec": 253, "jw": [46, 136, 264], "jwc": [136, 264], "jwt": [136, 264], "jx": [197, 324], "j\u00e6ger": 255, "j\u00e9rusalem": 255, "j\u00f8rgensen": 255, "k": [25, 36, 48, 53, 81, 119, 120, 123, 153, 154, 155, 160, 161, 163, 193, 203, 231, 242, 250, 255, 282, 283, 284, 289, 290, 292, 293, 328, 330, 355, 366, 368, 371, 373, 376, 377, 387, 388], "k1": [94, 95, 250, 370, 373], "k1buf": 250, "k1p": 370, "k1t": 370, "k2": [36, 94, 95, 250, 370], "k22": 36, "k23": 36, "k2buf": 250, "k2p": 370, "k2t": 370, "k3": 370, "k3p": 370, "k3st": 250, "k3st_cell": 250, "k3stcell": 250, "k3t": 370, "k4": 370, "k4p": 370, "k4t": 370, "k_1": 94, "k_2": 94, "k_disc": 250, "k_f": 366, "k_ion": [149, 242, 278, 388], "k_size": 283, "kaba": 255, "kabaso": 255, "kachar": 255, "kact": 369, "kadji": 255, "kaduri": 255, "kaeser": 255, "kaga": 255, "kagan": 255, "kager": 255, "kahan": 255, "kahana": 255, "kahlig": 255, "kahou": 255, "kailasa": 255, "kairiss": 255, "kaiser": 255, "kaka": 255, "kakadiari": 255, "kalbitz": 255, "kali": 255, "kalman": 255, "kalmbach": 255, "kalra": 255, "kaltenbach": 255, "kamaleddin": 255, "kamasawa": 255, "kambampati": 89, "kameda": 255, "kameneva": 255, "kamiji": 255, "kamijo": 255, "kamitani": 255, "kamiya": 255, "kami\u0144ski": 255, "kammer": 255, "kampa": 255, "kampusch": 255, "kanai": 255, "kanari": 255, "kaneko": 255, "kang": 255, "kaniusa": 255, "kanold": 255, "kanta": 255, "kanyshkova": 255, "kanzaki": 255, "kao": 255, "kaohsiung": 255, "kaphzan": 255, "kaplan": 255, "kapur": 255, "karada": 255, "karantoni": 255, "karlsgodt": 255, "karmarkar": 255, "karschin": 255, "karsh": 255, "karst": 255, "karub": 255, "kase": 255, "kashima": 255, "kaspirzhni": [40, 47, 255], "kaspirzhnyi": 255, "kastellaki": 255, "kasz\u00e1": 255, "kath": 255, "katkov": 255, "katona": 255, "katonai": 255, "katsanevaki": 255, "katsurabayashi": 255, "katyar": 255, "katz": [137, 255, 265], "katzav": 255, "kaufer": 255, "kaufmann": 255, "kaushanski": 255, "kawaguchi": 255, "kawasaki": 255, "kawashima": 255, "kayikcioglu": 255, "kazakova": 255, "kb": [163, 292, 366, 368, 373], "kb1": 250, "kb2": 250, "kc": 36, "kc2": 36, "kc3": 36, "kcc2": 255, "kcnd3": 255, "kcnq": 255, "kcnq2": 255, "kd": [250, 370], "kdc": 370, "kdn": 370, "kdp": 370, "kdt": 370, "kean": 255, "kearn": 255, "kearnei": 255, "keast": 255, "kecs_vec0": 373, "kecs_vec1": 373, "kedziora": 255, "kee": 255, "keen": 255, "keep": [1, 4, 12, 13, 17, 42, 45, 46, 51, 53, 60, 64, 65, 66, 76, 81, 85, 94, 96, 100, 103, 124, 143, 148, 151, 153, 154, 160, 161, 164, 168, 169, 179, 182, 189, 201, 220, 225, 229, 231, 242, 255, 272, 277, 280, 282, 283, 289, 290, 294, 298, 309, 312, 328, 344, 349, 353, 355, 377, 378, 380, 384], "keep_nseg_parm": 388, "keeplin": [147, 276], "keeshen": 255, "kei": [6, 13, 29, 45, 50, 53, 70, 76, 81, 107, 126, 160, 163, 182, 191, 229, 231, 234, 237, 242, 255, 289, 292, 312, 318, 353, 355, 358, 361, 366, 370, 382, 385, 387, 388], "keijzer": 255, "kein": 255, "keirstead": 255, "keith": [220, 344], "kellard": 255, "kellei": 255, "keller": 255, "kelli": 255, "kemnitz": 255, "kempter": 255, "kennedi": 255, "kenneth": [151, 280], "kenneth59715": 49, "kent": 255, "kenyon": 255, "kept": [53, 81, 166, 208, 231, 296, 334, 355, 377], "keren": 255, "kerkhof": 255, "kern": 255, "kernel": [54, 60, 201, 242, 255, 328, 377], "kernel_nam": 242, "kernighan": [81, 126], "kerr": 255, "ketamin": 255, "ketchum": 255, "kettenmann": 255, "ketzef": 255, "key": 255, "keyboard": [81, 154, 177, 283, 307], "keybu": 255, "keychain": 247, "keygen": [160, 289], "keypress": [229, 231, 353, 355], "keystat": [229, 237, 353, 361], "keystrok": 70, "keyword": [1, 36, 46, 51, 52, 79, 94, 140, 150, 154, 155, 160, 163, 165, 174, 184, 205, 250, 279, 282, 283, 284, 288, 289, 292, 295, 296, 299, 304, 314, 328, 330, 359, 360, 363, 366, 368, 369, 370, 382, 387], "keywork": 4, "kf": [163, 292, 366, 373], "kf1": 250, "kf2": 250, "kg": [119, 120], "khadka": 255, "khakh": 255, "khalil": 255, "khaliq": 255, "khanal": 255, "kharitonova": 255, "khatri": 255, "khayrulin": 255, "khazen": 255, "khh": 36, "khmaladz": 255, "khokhlova": 255, "khosrowshahi": 255, "khrapunski": 255, "khz": 255, "ki": [119, 388], "ki0_k_ion": 388, "kidd": 255, "kidnei": 255, "kiehn": 255, "kilb": 255, "kilgor": 255, "kill": [233, 248, 357], "kilohertz": 255, "kim": 255, "kimura": 255, "kin": 250, "kinas": 255, "kind": [25, 28, 29, 32, 44, 45, 49, 53, 54, 66, 81, 82, 83, 93, 96, 108, 117, 119, 120, 144, 153, 154, 155, 173, 174, 201, 227, 242, 246, 255, 273, 282, 283, 284, 303, 304, 351, 377], "kindl": 255, "kinemat": 255, "kinet": [10, 29, 80, 109, 126, 136, 142, 150, 153, 220, 251, 255, 264, 271, 279, 282, 292, 295, 344, 365, 366, 370, 371, 382, 388, 393], "kineticbuild": [141, 227, 270, 351], "king": [254, 255], "kip": 370, "kip3": 369, "kipk": 255, "kir2": 255, "kir4": 255, "kirchhoff": 255, "kish": 255, "kiss": 255, "kisvardai": 255, "kit": [182, 255, 312, 370], "kitano": 255, "kiuchi": 255, "kjm": 255, "klau": 255, "kleak": 255, "klefenz": 255, "kleiman": 255, "klein": 255, "kleinfeld": 255, "kleinl": 255, "klooster": 255, "kloppenburg": 255, "klug": 255, "kluwer": 255, "km": 366, "kmp": 370, "kmt": 370, "knight": 255, "knl": [3, 246], "knock": 255, "knockout": 255, "knodel": 255, "knoflach": 255, "know": [3, 27, 29, 35, 39, 41, 46, 47, 52, 56, 80, 81, 86, 89, 90, 94, 95, 96, 119, 120, 123, 126, 154, 155, 160, 161, 164, 204, 229, 231, 239, 247, 253, 255, 283, 284, 289, 290, 294, 328, 353, 355, 365, 370, 371, 377, 382, 384, 385, 387, 388], "knowledg": [4, 53, 55, 160, 289, 363], "knowlton": 255, "known": [25, 41, 53, 56, 81, 108, 136, 151, 160, 161, 171, 219, 229, 242, 264, 280, 282, 289, 290, 301, 315, 343, 366, 377, 382, 385, 387], "knox": 255, "knuth": [200, 327], "kn\u00f6pfel": 255, "ko": [119, 225, 255, 349, 388], "ko0_k_ion": 388, "kobayashi": 255, "kober": 255, "kobertz": 255, "koch": [254, 255], "kochenov": 255, "kochubei": 255, "kock": 255, "kocsi": 255, "koelbl": 255, "koelman": 255, "koesl": 255, "koester": 255, "koh": 255, "kohan": 255, "kohl": 255, "koizumi": 255, "kokabu": 255, "kolbaev": 255, "kolbl": 255, "kole": 255, "komendantov": 255, "komi": 255, "komorowska": 255, "kondo": 255, "koninck": 255, "kononenko": 255, "konstantoudaki": 255, "koo": 255, "kooi": 255, "kopach": 255, "kopel": 255, "kopp": 255, "kordovan": 255, "koren": 255, "korngreen": 255, "korogod": 255, "koroleva": 255, "korotkova": 255, "kosta": 255, "kotaleski": 255, "kotler": 255, "koucheryavi": 255, "kourennyi": 255, "koussoula": 255, "koutsik": 255, "koutsou": 255, "kovac": 255, "kovalski": 255, "kowalski": 255, "koyama": 255, "kozic": 255, "kozloski": 255, "kozlov": 255, "kraev": 255, "kramer": 255, "krapp": 255, "krashia": 255, "krasn": 255, "krautham": 255, "kremkow": 255, "kress": 255, "kretschmer": 255, "kretzberg": 255, "krieger": 255, "krishnamurthi": 255, "kroeger": 255, "kroger": 255, "kronberg": 255, "krothap": 255, "krueppel": 255, "krull": 255, "krupa": 255, "krylov": [220, 344], "kr\u00f6ger": 255, "kschan": [53, 140, 146, 152, 163, 269, 275, 281, 292, 366, 388], "kserca": 369, "ksgate": [146, 150, 152, 275, 279, 281, 388], "ksp": 370, "ksstate": [146, 150, 152, 275, 279, 281, 388], "kst": 370, "kstran": [146, 150, 152, 275, 279, 281, 388], "kth": 373, "kuba": 255, "kubat": 255, "kube": 255, "kubota": 255, "kub\u00edk": 255, "kuchta": 255, "kuck": 255, "kudo": [255, 377], "kuenzel": 255, "kuhlen": 255, "kuhn": 255, "kukoushka": 255, "kukushka": 255, "kulagina": 255, "kulik": 255, "kulland": 255, "kullmann": 255, "kumar": [254, 255], "kumaravelu": 255, "kumbhar": [248, 254, 255], "kuncel": 255, "kundert": [151, 280], "kuner": 255, "kunkel": 255, "kuo": 255, "kuokkanen": 255, "kupfer": 255, "kuriyama": 255, "kuroda": 255, "kurth": 255, "kushmerick": 255, "kuster": 255, "kutsarova": 255, "kutsch": 255, "kutta": [154, 283], "kuznetsov": 255, "kuznetsova": 255, "kuzum": 255, "kv": 255, "kv1": 255, "kv2": 255, "kv3": 255, "kv4": 255, "kv7": 255, "kwag": 255, "kwarg": 370, "kwarg1": 360, "kwon": 255, "kynuren": 255, "kyoung": 255, "kyriazi": 255, "k\u00e1li": 255, "k\u00f6hler": 255, "k\u00f6hling": 255, "k\u00f6nig": 255, "k\u00fchn": 255, "k\u0131l\u0131\u00e7": 255, "l": [10, 11, 14, 15, 22, 25, 28, 30, 37, 38, 43, 45, 50, 52, 66, 67, 68, 73, 89, 99, 108, 110, 119, 125, 126, 134, 146, 148, 151, 153, 160, 165, 166, 169, 174, 175, 182, 197, 204, 210, 213, 216, 219, 223, 228, 234, 242, 248, 250, 253, 254, 255, 262, 275, 277, 280, 282, 288, 289, 293, 295, 296, 299, 305, 312, 314, 335, 340, 342, 343, 347, 352, 358, 359, 360, 361, 363, 366, 367, 368, 369, 370, 371, 373, 375, 377, 382, 383, 384, 385, 388], "l0x": 68, "l1": 255, "l2": 255, "l3": 255, "l5": 255, "la": [201, 248, 255], "lab": [40, 43, 45, 66, 76, 126], "labadi": 255, "labarca": 255, "labarrera": 255, "labat": 255, "label": [14, 16, 17, 19, 25, 32, 33, 37, 42, 66, 67, 79, 80, 94, 108, 110, 111, 112, 115, 123, 127, 144, 145, 156, 172, 173, 174, 176, 182, 185, 201, 202, 203, 205, 227, 228, 229, 231, 233, 234, 235, 237, 238, 273, 274, 285, 289, 302, 303, 304, 306, 312, 328, 329, 330, 334, 351, 352, 353, 355, 357, 358, 359, 361, 362, 365, 370, 373, 377, 383], "label_with_length": 304, "labelstyl": [176, 306], "labor": [42, 103, 124], "laboratori": [40, 47, 126, 201, 255], "laboured_vinyl_analogi": 53, "labrakaki": 255, "lack": [40, 55, 127, 242, 255], "lacour": 255, "lactat": 255, "lacunosum": 255, "lad": 255, "ladd": 255, "ladenbau": 255, "ladow": 255, "laevi": [41, 255], "laffer": 255, "laforenza": 255, "lafourcad": 255, "lag": [81, 94, 152, 255, 281, 384], "laghaei": 255, "lagnado": 255, "lago": 255, "lahjouji": 255, "lahowetz": 255, "lai": [66, 112, 255], "laid": [182, 312], "laird": 255, "lajeuness": 255, "lakato": 255, "lakhani": 255, "lam": 125, "lambda": [96, 125, 211, 292, 296, 303, 328, 349, 373], "lambda_f": [22, 125], "lambert": [119, 120, 255], "lamghari": 255, "lamina": 255, "laminar": 255, "laminari": 255, "lampert": 255, "lamsa": 255, "land": [99, 231, 355], "landgraf": 255, "landman": 255, "landscap": [70, 99, 177, 183, 226, 231, 307, 313, 350, 355], "lang": 255, "langedijk": 255, "langen": 255, "langner": 255, "languag": [4, 26, 28, 52, 60, 76, 81, 83, 91, 98, 119, 120, 126, 140, 146, 148, 152, 155, 185, 251, 252, 254, 255, 275, 277, 281, 284, 369, 377, 381, 387, 388], "lanka": 255, "lanor": 255, "lansner": 255, "lantz": 255, "lapilov": 255, "laplacian": 366, "laptop": 11, "lara": 255, "larg": [6, 10, 11, 32, 33, 35, 36, 53, 54, 64, 66, 68, 81, 82, 83, 87, 89, 90, 99, 125, 127, 130, 133, 134, 139, 154, 155, 160, 161, 164, 166, 174, 175, 186, 195, 197, 200, 201, 220, 223, 231, 234, 242, 247, 254, 255, 258, 261, 262, 267, 283, 284, 289, 290, 292, 294, 296, 304, 305, 315, 322, 324, 327, 328, 344, 347, 355, 358, 369, 373, 377, 378, 385, 388], "larger": [32, 37, 80, 81, 90, 139, 153, 154, 155, 166, 173, 200, 201, 208, 220, 229, 231, 238, 242, 255, 267, 282, 283, 284, 296, 303, 327, 328, 334, 344, 353, 355, 362, 369, 377, 385, 388], "largest": [10, 11, 32, 47, 91], "lariccia": 255, "larkum": 255, "laroch": 255, "larson": 255, "larval": 255, "laser": [189, 255], "lashkari": 255, "lasien": 255, "laskarato": 255, "lasker": 255, "lasser": 255, "lasserr": 255, "last": [3, 13, 16, 17, 18, 28, 29, 32, 36, 46, 47, 51, 52, 53, 66, 70, 73, 81, 94, 96, 119, 120, 123, 127, 136, 153, 154, 159, 160, 161, 163, 165, 166, 168, 169, 173, 179, 182, 185, 186, 188, 189, 197, 200, 201, 204, 206, 209, 210, 214, 216, 220, 221, 225, 227, 229, 231, 234, 237, 246, 247, 250, 255, 264, 277, 282, 283, 288, 289, 290, 292, 295, 296, 299, 303, 309, 312, 315, 316, 324, 327, 328, 332, 335, 337, 338, 340, 344, 345, 349, 351, 353, 355, 358, 360, 361, 363, 367, 368, 372, 377, 381, 382, 383, 384, 385, 387, 388, 393], "last_nam": 387, "lastli": [42, 103, 119, 120, 124, 155, 223, 284, 347, 377], "lastmod": [196, 323], "late": [160, 255, 289], "latenc": [76, 255, 289], "later": [10, 11, 32, 36, 37, 38, 42, 45, 60, 66, 70, 76, 80, 89, 94, 96, 99, 103, 110, 116, 124, 126, 160, 163, 165, 169, 197, 201, 210, 229, 249, 255, 289, 292, 295, 299, 324, 328, 335, 353, 360, 369, 373, 377, 378, 382, 383, 387], "laterit": 60, "laterodors": 255, "latest": [0, 1, 3, 7, 11, 55, 81, 82, 126, 246, 247, 248, 249, 250, 377, 378], "latham": 255, "latim": 255, "latorr": 255, "latter": [3, 33, 53, 56, 64, 96, 103, 124, 127, 154, 159, 160, 161, 197, 210, 213, 220, 227, 283, 288, 289, 290, 292, 296, 324, 335, 337, 344, 351, 366], "laudanski": 255, "launch": [0, 3, 8, 10, 11, 13, 30, 31, 35, 36, 42, 46, 48, 52, 54, 76, 86, 92, 96, 103, 122, 124, 160, 163, 216, 242, 243, 246, 247, 249, 268, 284, 289, 340, 341, 361, 377, 381, 385], "launcher": 8, "launei": 255, "laup\u00e9ni": 255, "lauritzen": 255, "lavandero": 255, "lavian": 255, "lavidor": 255, "lavil": 255, "lavrov": 255, "lavzin": 255, "law": [255, 344, 366], "lawrenc": [126, 255], "layer": [40, 68, 151, 153, 253, 255, 280, 282, 331], "layervec": [151, 280], "layout": [4, 6, 80, 85, 111, 112, 113, 115, 183, 313], "lazarevich": 255, "lazarewicz": [40, 47, 255], "lazaro": 255, "lazniewska": 255, "lazzi": 255, "lc": 213, "lcov": [3, 241], "ld_library_path": [158, 246, 287], "ld_preload": 242, "ldfile": 186, "ldflag": 373, "ldot": [173, 303], "le": [173, 255, 303, 366], "lead": [7, 29, 40, 53, 89, 98, 104, 246, 255, 377, 381, 388], "leader": [177, 183, 307, 313], "leaf": [167, 297], "leak": [3, 53, 66, 201, 242, 255, 328, 366, 371, 382, 383, 384, 388], "leakag": [52, 153, 255, 282, 371, 388], "leaki": [9, 153, 201, 282, 328, 382, 388], "leaksanit": [3, 242], "leao": 255, "leapman": 255, "leari": 255, "learn": [10, 11, 24, 25, 29, 45, 67, 86, 87, 90, 251, 255, 386, 387], "least": [10, 11, 13, 32, 33, 39, 40, 47, 49, 53, 56, 66, 76, 82, 83, 86, 94, 100, 102, 134, 136, 138, 154, 160, 166, 188, 201, 217, 221, 225, 231, 237, 247, 262, 264, 266, 283, 289, 292, 296, 316, 328, 341, 345, 349, 355, 361, 377, 378, 380, 382], "leav": [3, 14, 24, 25, 53, 66, 70, 94, 95, 96, 107, 108, 109, 114, 116, 154, 164, 166, 201, 210, 223, 231, 248, 283, 294, 296, 328, 335, 344, 347, 355], "leaw": 255, "lebel": 255, "lebloi": 255, "lecchini": 255, "lecoq": 255, "lectur": [29, 255, 292, 389], "led": [25, 53], "ledford": 255, "lee": [220, 255, 344], "leech": 255, "leen": [25, 255], "lefler": 255, "lefort": 255, "left": [12, 25, 31, 32, 33, 37, 41, 42, 46, 47, 52, 66, 67, 70, 79, 80, 81, 84, 85, 86, 94, 96, 99, 103, 104, 105, 109, 110, 112, 114, 123, 124, 129, 131, 133, 134, 144, 147, 153, 154, 155, 166, 173, 175, 177, 179, 180, 185, 188, 190, 194, 196, 197, 201, 204, 207, 214, 215, 216, 221, 223, 229, 230, 231, 233, 234, 236, 237, 238, 255, 257, 259, 261, 262, 273, 276, 282, 283, 284, 292, 296, 303, 305, 307, 309, 310, 316, 317, 321, 323, 324, 328, 333, 338, 339, 340, 345, 347, 353, 354, 355, 357, 358, 360, 361, 362, 366, 367, 369, 373, 382, 387, 388], "lega": 255, "legaci": [1, 57, 87, 89, 136, 246, 298, 304, 314, 318, 333, 363], "legacy_index": 53, "legal": 247, "legasto": 255, "legend": [365, 370, 382, 383], "legend_label": 382, "legendr": 255, "legenstein": 255, "legibl": [154, 283], "lehnardt": 255, "lehotzki": 255, "lehto": 255, "lehv\u00e4slaiho": 255, "lei": 255, "leija": 255, "lein": 255, "leinekugel": 255, "leit": 255, "leiter": 255, "leleo": 255, "leloup": 370, "lem": 277, "lemair": 255, "lemon": 255, "lempka": 255, "len": [29, 100, 166, 208, 214, 215, 292, 296, 298, 304, 314, 325, 328, 334, 338, 339, 360, 366, 387], "len_scal": [235, 237, 359, 361], "lenck": 255, "lend": 126, "length": [13, 24, 25, 27, 38, 40, 41, 45, 46, 52, 65, 66, 67, 68, 76, 94, 100, 104, 105, 119, 125, 126, 134, 138, 154, 160, 165, 166, 169, 188, 198, 200, 201, 204, 208, 214, 216, 218, 219, 220, 221, 230, 235, 236, 237, 253, 255, 262, 266, 283, 289, 292, 295, 296, 299, 312, 314, 316, 325, 327, 328, 334, 338, 340, 343, 344, 345, 354, 359, 360, 361, 366, 368, 369, 371, 373, 382, 387, 388], "lengthen": 255, "lengthi": [89, 160, 289, 292], "lengyel": 255, "lenticular": 255, "lenz": 255, "leonard": 255, "leonik": 255, "lerch": 255, "leresch": 255, "lesion": 255, "less": [3, 25, 33, 36, 39, 78, 81, 91, 119, 120, 136, 154, 160, 161, 185, 201, 204, 216, 220, 229, 231, 234, 255, 264, 283, 284, 289, 290, 314, 328, 340, 344, 353, 355, 358, 377, 378, 382], "lesser": [161, 169, 290], "lessmann": 255, "lesson": [29, 76, 86], "lester": 255, "let": [25, 27, 30, 36, 41, 52, 53, 66, 67, 68, 70, 78, 89, 94, 96, 104, 105, 115, 123, 126, 154, 161, 200, 204, 220, 283, 290, 327, 344, 365, 367, 370, 371, 372, 373, 377, 382, 383, 384, 387, 388], "letter": [81, 165, 255, 295, 337, 387], "letzku": 255, "leukhin": 255, "leung": 255, "leuz": 255, "lev": 255, "level": [1, 3, 10, 11, 32, 35, 37, 52, 53, 67, 76, 77, 81, 89, 98, 107, 119, 120, 126, 129, 133, 142, 147, 151, 153, 154, 155, 163, 165, 169, 170, 173, 182, 186, 188, 190, 195, 200, 201, 204, 205, 210, 211, 214, 220, 223, 224, 231, 233, 248, 250, 255, 257, 261, 271, 276, 280, 282, 283, 284, 292, 295, 300, 303, 312, 314, 315, 316, 317, 322, 327, 328, 331, 335, 338, 344, 348, 355, 357, 368, 369, 377, 382, 388], "leverag": [93, 154, 255, 283], "levi": [95, 255], "levin": 255, "levina": 255, "levinson": 255, "levitan": 255, "lewi": 255, "lexer": 52, "lexicograph": [215, 339], "lezmi": 255, "le\u00dfmann": 255, "le\u00e3o": 255, "lf": [213, 337], "lfp": 255, "lfpsim": 255, "lfpy": 255, "lgamma": [163, 292, 293], "lh": [3, 366], "li": [47, 53, 255, 292], "liang": 255, "liao": 255, "lib": [1, 3, 7, 10, 11, 81, 92, 154, 158, 160, 161, 170, 175, 182, 201, 204, 210, 216, 217, 227, 229, 231, 241, 242, 246, 249, 283, 287, 289, 290, 300, 305, 312, 328, 335, 340, 341, 351, 353, 355], "libc": 242, "liberman": 255, "libgcc_": 249, "libman": 255, "libmpi": [3, 246], "libmpich": [3, 246], "libmus": 3, "libncurs": 246, "libnrniv": [3, 52, 246], "libnrnmech": [160, 246, 289, 373], "libnrnmp_xxx": 3, "libnrnpython3": 246, "libnrnpythonx": 3, "libomp": 248, "libopenmpi": 246, "libpython3": 246, "libpython_path": 388, "libpythonx": 3, "librari": [1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 39, 52, 53, 58, 76, 81, 87, 91, 98, 100, 138, 155, 160, 170, 190, 195, 197, 200, 201, 216, 242, 246, 247, 248, 252, 253, 266, 284, 289, 293, 300, 317, 322, 324, 327, 328, 331, 337, 340, 345, 359, 366, 369, 373, 374, 382, 383, 386, 387, 388, 393], "libreadlin": 3, "libressl": 246, "libstdc": [242, 246, 249], "libvex": 242, "libx11": 246, "libx264": 63, "libxcomposit": 246, "lickfett": 255, "lidocain": 255, "lie": [47, 70, 86, 92, 94, 110, 201, 203, 246, 328, 330, 366], "liebmann": 255, "liedl": 255, "lien": 255, "lieu": [231, 314, 355], "lif": 255, "life": [1, 255, 378, 379], "lifetim": [53, 284], "lift": [50, 357], "ligand": [82, 83, 126, 150, 152, 255, 279, 281], "light": [40, 119, 120, 154, 173, 233, 255, 283, 303, 357], "lightweight": [377, 378], "like": [0, 1, 3, 4, 7, 8, 9, 14, 25, 31, 32, 33, 34, 36, 37, 40, 42, 43, 45, 46, 51, 52, 53, 55, 56, 60, 64, 66, 67, 68, 70, 78, 80, 81, 82, 87, 92, 94, 96, 98, 100, 104, 107, 108, 109, 110, 111, 114, 115, 119, 120, 122, 123, 126, 127, 136, 153, 154, 155, 159, 160, 161, 163, 165, 168, 172, 173, 182, 200, 201, 220, 223, 229, 231, 233, 234, 242, 246, 248, 250, 253, 255, 264, 269, 279, 282, 283, 284, 288, 289, 290, 292, 293, 295, 298, 302, 303, 305, 312, 314, 327, 328, 335, 344, 347, 353, 355, 357, 358, 366, 367, 369, 371, 377, 378, 382, 383, 385, 387, 388], "likewis": [39, 64], "likwid": 242, "lilith": 255, "lilli": 255, "lim_": [39, 376], "lima": 255, "limb": 255, "limit": [3, 4, 33, 39, 40, 41, 51, 76, 81, 94, 96, 129, 134, 136, 153, 155, 159, 160, 161, 163, 164, 175, 182, 188, 211, 216, 218, 220, 221, 223, 229, 230, 233, 249, 252, 255, 257, 262, 264, 282, 284, 288, 289, 290, 293, 294, 298, 305, 316, 330, 340, 342, 344, 345, 347, 353, 354, 357, 366, 370, 373, 388], "limongiello": 255, "lin": 255, "linaro": 255, "lincir1": 33, "linda": [160, 289, 363], "lindahl": 255, "linden": 255, "lindgren": 255, "lindroo": 255, "lindsai": 255, "lind\u00e9n": 255, "line": [3, 14, 25, 27, 28, 29, 31, 32, 37, 45, 47, 52, 53, 66, 70, 79, 81, 84, 86, 89, 92, 93, 94, 96, 98, 99, 101, 104, 107, 109, 113, 115, 119, 120, 126, 127, 131, 133, 134, 151, 153, 154, 160, 161, 169, 185, 188, 189, 190, 191, 196, 197, 198, 200, 201, 202, 204, 205, 209, 210, 216, 219, 220, 227, 228, 229, 231, 233, 234, 235, 236, 237, 241, 246, 247, 249, 255, 259, 261, 262, 268, 280, 283, 289, 290, 303, 304, 314, 316, 317, 318, 323, 324, 325, 327, 328, 329, 334, 335, 340, 343, 344, 351, 352, 353, 355, 357, 358, 359, 360, 361, 366, 373, 377, 382, 383, 385, 387, 388], "line2d": 373, "line_dash": 382, "line_info": [229, 353], "line_to": 228, "line_width": [359, 360, 382, 387, 388], "linear": [4, 26, 27, 38, 39, 94, 96, 105, 126, 136, 151, 153, 160, 194, 197, 198, 200, 201, 220, 251, 255, 264, 280, 282, 289, 321, 324, 325, 327, 328, 344, 377], "linearli": [43, 53, 68, 136, 154, 201, 220, 255, 264, 283, 296, 328, 344, 384, 388], "linearmechan": [33, 136, 140, 146, 152, 153, 160, 220, 223, 264, 269, 275, 281, 282, 289, 344, 347, 388], "linestyl": [84, 383], "linewidth": 360, "link": [3, 8, 10, 11, 28, 40, 46, 52, 53, 54, 62, 81, 89, 90, 96, 98, 126, 154, 155, 188, 204, 227, 240, 242, 246, 247, 248, 254, 255, 283, 284, 316, 351, 373, 377, 385], "linkenka": 255, "linker": 98, "linn": 255, "linspac": [201, 296, 328, 376, 387], "linster": 255, "linta": 255, "linu": 377, "linux": [1, 3, 10, 11, 47, 48, 67, 76, 82, 83, 86, 92, 99, 126, 127, 160, 171, 216, 217, 240, 243, 245, 253, 289, 301, 340, 341, 363, 373, 377, 391], "lipid": [26, 31], "lipinski": 255, "lipo": [246, 247], "lipowski": 255, "lippmann": 255, "lipscomb": 255, "lipton": 255, "lisman": 255, "lisp": 81, "liss": 255, "lissmat": 255, "list": [0, 1, 3, 13, 14, 21, 22, 27, 29, 32, 36, 37, 38, 52, 53, 58, 64, 66, 72, 80, 81, 82, 83, 87, 89, 94, 96, 98, 103, 106, 107, 109, 111, 112, 114, 119, 124, 126, 129, 133, 134, 138, 140, 144, 148, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 167, 169, 170, 173, 175, 177, 178, 179, 182, 183, 185, 186, 191, 197, 200, 201, 204, 205, 208, 210, 214, 216, 218, 219, 220, 227, 229, 231, 233, 235, 236, 237, 242, 247, 248, 249, 253, 255, 257, 261, 262, 266, 268, 269, 273, 277, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 300, 303, 305, 307, 308, 309, 312, 313, 314, 315, 318, 324, 327, 328, 330, 331, 334, 335, 338, 340, 342, 343, 344, 351, 353, 355, 357, 359, 360, 361, 366, 369, 382, 383, 384, 385, 388, 393], "list_a": 387, "list_b": 387, "liter": [53, 119, 120, 154, 155, 165, 250, 252, 283, 284, 295], "literatur": 40, "lithium": 255, "litt": 255, "littl": [3, 10, 11, 13, 47, 53, 78, 86, 94, 96, 103, 109, 124, 126, 166, 231, 237, 239, 255, 296, 355, 361, 372, 382], "litvak": 255, "liu": 255, "live": [163, 214, 249, 255, 292, 338], "liver": 255, "livermor": 126, "lizard": 255, "ll": [27, 30, 31, 45, 46, 47, 66, 67, 74, 76, 82, 83, 86, 94, 96, 100, 102, 114, 116, 159, 248, 253, 288, 365, 367, 370, 376, 382, 383, 384, 388], "llano": 255, "llavina": 255, "lldb": [52, 242], "lledo": 255, "llnl": [126, 220, 344], "llobet": 255, "lloren": 255, "llvm": 242, "llvm_symbolizer_path": 242, "lm": [151, 255, 280], "lmax": 68, "lmb": [231, 355], "ln": [25, 91, 130, 160, 258, 289], "lo": [255, 292], "load": [1, 3, 7, 8, 13, 14, 16, 17, 18, 30, 31, 36, 37, 38, 42, 45, 46, 52, 53, 57, 76, 81, 93, 100, 103, 108, 124, 127, 140, 151, 154, 160, 161, 163, 166, 201, 210, 214, 216, 223, 227, 229, 241, 242, 246, 248, 255, 269, 280, 283, 289, 290, 292, 296, 328, 331, 335, 338, 340, 345, 347, 351, 353, 366, 368, 369, 372, 383, 385, 386, 387, 393], "load_fil": [14, 16, 17, 18, 19, 20, 24, 30, 31, 36, 38, 42, 45, 46, 52, 63, 64, 66, 69, 72, 76, 77, 96, 100, 103, 119, 124, 148, 151, 159, 161, 163, 164, 170, 182, 201, 217, 223, 227, 230, 250, 253, 282, 290, 294, 300, 314, 328, 338, 344, 345, 349, 351, 354, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 382, 383, 384, 388], "load_func": [81, 170, 300, 388], "load_morphologi": 64, "load_proc": [81, 170, 227, 300, 388], "load_templ": [81, 170, 300, 388], "loadabl": 81, "loader": 3, "loadflag": 246, "loadqueu": 76, "loadsess": 30, "lobe": 255, "lobo": 255, "loc": [96, 135, 136, 152, 153, 155, 263, 264, 281, 282, 284, 382, 388], "local": [1, 3, 16, 17, 18, 22, 25, 47, 54, 76, 81, 83, 92, 94, 96, 99, 101, 119, 120, 125, 126, 133, 134, 136, 138, 148, 155, 158, 159, 160, 161, 163, 164, 182, 185, 196, 197, 198, 201, 203, 204, 205, 217, 220, 225, 229, 231, 233, 235, 237, 240, 242, 243, 246, 249, 251, 255, 261, 262, 264, 266, 277, 284, 287, 288, 289, 290, 292, 294, 315, 328, 340, 344, 349, 353, 355, 357, 359, 371, 374, 377, 388], "local_data": 385, "local_minimum_delai": [160, 289], "localhost": [158, 287], "localis": 255, "localobj": [16, 17, 52, 185, 196, 204, 220, 388], "localtyp": [220, 344], "locat": [1, 3, 9, 12, 13, 25, 27, 28, 32, 33, 37, 38, 39, 40, 42, 46, 48, 52, 64, 66, 68, 70, 76, 81, 84, 85, 94, 96, 99, 104, 105, 108, 110, 111, 112, 123, 126, 127, 130, 131, 132, 136, 137, 139, 144, 146, 147, 148, 151, 153, 154, 155, 156, 159, 160, 163, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 201, 203, 206, 216, 220, 223, 225, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 242, 246, 247, 255, 258, 259, 260, 264, 265, 267, 273, 275, 276, 277, 280, 282, 283, 284, 285, 288, 289, 292, 295, 296, 299, 300, 301, 303, 304, 305, 306, 307, 314, 328, 330, 332, 340, 344, 347, 349, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 366, 368, 373, 382, 384, 387, 388], "locatelli": 255, "lock": [210, 255, 335], "locomot": 255, "locomotor": 255, "locu": 255, "lodder": 255, "loew": 255, "log": [0, 28, 81, 91, 96, 130, 132, 133, 158, 160, 163, 195, 201, 202, 210, 227, 246, 247, 258, 260, 261, 287, 289, 292, 293, 322, 328, 329, 335, 351, 377, 388], "log10": [28, 81, 91, 163, 195, 201, 202, 292, 293, 322, 328, 329, 388], "log1p": [163, 292, 293], "log2": 49, "logan": 255, "logarithm": [25, 81, 91, 94, 195, 200, 201, 255, 293, 322, 327, 328], "logavsx": [128, 130, 256, 258], "logfileurl": 247, "logic": [3, 28, 53, 81, 160, 164, 166, 185, 199, 210, 220, 225, 255, 289, 294, 296, 326, 335, 344, 349, 376, 377, 385], "login": [3, 54, 158, 160, 246, 248, 249, 287, 289], "lognorm": [200, 327], "logout": 246, "loizo": 255, "loligo": 30, "lombardi": 255, "lombardo": 255, "lonardoni": 255, "lond": 371, "london": 255, "lone": 255, "long": [16, 17, 18, 29, 33, 38, 40, 41, 49, 51, 53, 76, 81, 94, 95, 96, 126, 130, 133, 151, 160, 161, 163, 166, 179, 191, 196, 198, 200, 201, 204, 216, 220, 223, 227, 229, 255, 258, 261, 280, 289, 290, 292, 296, 309, 318, 323, 325, 327, 328, 340, 344, 347, 351, 353, 369, 371, 377, 384, 387, 388], "long_difus_solv": 60, "longer": [1, 3, 28, 29, 45, 46, 53, 71, 80, 112, 119, 120, 125, 139, 147, 153, 155, 156, 160, 163, 182, 186, 188, 205, 220, 223, 267, 276, 282, 284, 285, 289, 292, 312, 315, 316, 344, 347, 366, 377, 383], "longest": [13, 41, 201, 328], "longitudin": [60, 154, 250, 255, 283, 292], "longitudinal_diffus": 250, "longleftrightarrow": 95, "longtin": 255, "look": [0, 3, 10, 11, 14, 28, 32, 33, 34, 36, 37, 40, 46, 49, 51, 52, 53, 60, 66, 67, 70, 76, 80, 81, 89, 92, 94, 96, 104, 107, 109, 110, 111, 115, 140, 153, 154, 156, 157, 160, 161, 186, 200, 204, 220, 242, 248, 255, 269, 282, 283, 285, 286, 289, 290, 296, 315, 327, 344, 369, 377, 378, 382, 384, 385, 388], "look_tak": [157, 160, 286, 289], "lookup": [52, 154, 160, 283, 289, 314, 385], "loop": [13, 16, 28, 29, 53, 81, 96, 134, 155, 160, 165, 166, 169, 182, 185, 201, 204, 221, 227, 229, 248, 255, 262, 284, 289, 295, 296, 299, 312, 328, 345, 351, 353, 360, 368, 382, 384, 393], "loos": [255, 369], "loparo": 255, "lope": 255, "lopez": 255, "lopreor": 255, "lorach": 255, "lord": 255, "lorenzo": 255, "lori": 255, "lorincz": 255, "losavio": 255, "lose": [42, 66, 94, 103, 124, 377], "losonczi": 255, "loss": [53, 96, 103, 124, 255, 296], "lossless": 255, "lost": [45, 70, 173, 201, 210, 242, 303, 328, 335], "lot": [3, 14, 27, 46, 59, 65, 66, 76, 96, 119, 120, 133, 154, 160, 161, 166, 261, 283, 290, 296, 377, 382], "lotan": 255, "loui": 255, "love": [201, 328], "lovel": 255, "lovelac": 255, "lovero": 255, "lovett": 255, "low": [29, 33, 70, 76, 78, 81, 96, 126, 133, 182, 198, 200, 201, 210, 231, 233, 234, 235, 242, 255, 261, 292, 312, 325, 327, 328, 335, 338, 344, 355, 357, 358, 359, 366, 368, 369, 377, 382, 388], "lower": [42, 44, 53, 70, 80, 99, 105, 130, 144, 145, 173, 175, 197, 201, 229, 233, 238, 255, 258, 273, 274, 292, 303, 324, 328, 353, 357, 362, 377], "lower_limit": [175, 305, 312], "loweri": 255, "lowest": [29, 154, 255, 283, 372], "lowindex": [198, 200, 325, 327], "lp": [210, 229, 335], "lpr": [99, 231, 355], "lsan": 242, "lsf": 385, "lsm": 255, "lso": 255, "lt": [60, 155, 250, 252, 255, 284, 371, 373, 382, 388], "ltd": 255, "lteq": [155, 252, 284], "ltp": 255, "ltr": 220, "ltranspos": 197, "lu": [197, 255, 324], "lubba": 255, "luciani": 255, "luck": 100, "lucki": [160, 289], "luder": 255, "ludwig": 255, "luebk": 255, "lufactor": [197, 324], "lugli": 255, "luhmann": 255, "luijtelaar": 255, "luikart": 255, "lujan": 255, "luj\u00e1n": 255, "lukacsovich": 255, "lukin": 255, "luksch": 255, "lumbar": 255, "lump": 66, "lundberg": 255, "lundbi": 255, "lundqvist": 255, "lundstrom": 255, "lung": 255, "luo": 255, "lupascu": 255, "lupton": 254, "luqu": 255, "lur": 255, "luthman": 255, "luz": 255, "lv": 255, "lva": 255, "lvardt": [220, 344], "lw": [81, 184, 187, 189, 233, 357, 388], "ly": [283, 366], "lymphocyt": 255, "lyonnet": 255, "lytton": [126, 160, 254, 255, 289, 389, 392], "lyttonmpi": [158, 287], "lyu": 255, "l\u00f3pez": 255, "l\u00fcbke": 255, "l\u00fcscher": 255, "l\u00fcthi": 255, "l\u00fcttjohann": 255, "l\u0119ski": 255, "l\u0151rincz": 255, "m": [0, 3, 4, 9, 13, 16, 17, 18, 24, 29, 31, 32, 33, 36, 37, 38, 40, 41, 44, 46, 47, 54, 63, 64, 66, 67, 72, 74, 80, 87, 88, 89, 93, 95, 96, 100, 101, 102, 105, 107, 111, 114, 116, 117, 119, 120, 125, 126, 127, 136, 147, 151, 153, 154, 159, 161, 163, 164, 182, 197, 200, 201, 203, 217, 220, 223, 224, 228, 229, 230, 233, 237, 246, 247, 248, 250, 253, 254, 255, 264, 276, 280, 282, 283, 288, 290, 292, 293, 312, 324, 327, 328, 330, 341, 344, 347, 348, 349, 352, 353, 354, 357, 359, 361, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 382, 383, 384, 385, 388], "m0": [153, 282], "m1": [1, 3, 80, 102, 115, 116, 197, 243, 248, 255, 324], "m111": 255, "m1_e0": 80, "m1_neuron_pap": 4, "m1srcdest": [197, 324], "m2": [119, 120, 197, 324], "m2src": [197, 324], "m_": [220, 344], "m_cell": 80, "m_cell_": 80, "m_count": 53, "m_data_ptr": 60, "m_hh": [69, 77, 153, 220, 223, 227, 235, 236, 344, 347, 351, 359, 360, 388], "m_ptr": 60, "m_stor": 60, "m_storag": 60, "m_var_info": 60, "ma": [25, 100, 119, 126, 137, 153, 155, 182, 220, 250, 254, 255, 265, 282, 284, 344, 371, 373], "maagdenberg": 255, "mac": [1, 3, 10, 11, 13, 76, 127, 160, 188, 216, 226, 227, 242, 243, 245, 289, 316, 340, 350, 351, 373, 391], "mac_m1_container_build": 248, "macaqu": 255, "maccabe": 255, "maccaferri": 255, "maccion": 255, "macdist": 247, "macdonald": 255, "macewan": 255, "machado": 255, "machin": [3, 7, 31, 35, 36, 39, 47, 53, 57, 66, 81, 100, 136, 158, 160, 161, 164, 171, 195, 201, 204, 223, 227, 231, 240, 247, 248, 255, 264, 287, 289, 290, 294, 301, 322, 328, 347, 355, 382, 383, 384, 385], "machine_id": [161, 290], "machine_nam": [81, 216, 340, 388], "machinefil": [160, 289], "macia": 255, "macki": 255, "macnrn_notar": 247, "maco": [1, 3, 10, 48, 67, 76, 82, 83, 227, 240, 242, 243, 246, 247, 253, 351, 363, 381], "macos11": 246, "macosx": [3, 246, 247], "macosx11": 246, "macosx_10_9_x86_64": 248, "macosx_11_0_arm64": 248, "macosx_deployment_target": [247, 248], "macpkg": 247, "macrina": 255, "macro": [4, 53, 56, 98, 154, 155, 252, 255, 283, 284, 377], "macroscop": [255, 373], "maction": [72, 159], "macula": 255, "macular": 255, "mac\u00eda": 255, "made": [3, 12, 13, 33, 47, 53, 64, 66, 70, 80, 81, 86, 96, 103, 110, 124, 126, 144, 153, 155, 160, 163, 166, 173, 201, 220, 227, 229, 230, 233, 248, 273, 282, 284, 289, 292, 296, 303, 314, 328, 344, 351, 353, 354, 357, 369, 377, 378, 385, 387], "madison": 255, "madrid": 255, "maex": 255, "maffei": 255, "mag": [201, 202, 328, 329], "magalh\u00e3": 255, "mage": 255, "magenta": [233, 357], "maggi": 255, "magic": [255, 388], "magidov": 255, "magistretti": 255, "magkanar": 242, "magkanari": [254, 255], "magland": 255, "magloir": 255, "magma": 359, "magnesium": 292, "magnet": 255, "magneto": 255, "magnetoencephalographi": 255, "magnetometri": 255, "magnetomyographi": 255, "magnetostimul": 255, "magnif": 70, "magnifi": [29, 50, 70], "magnitud": [25, 88, 94, 96, 126, 161, 201, 220, 242, 255, 289, 290, 328, 344], "magnocellulari": 255, "magnu": 255, "magran": 255, "mahalingam": 255, "mahapatra": 255, "mahe": 255, "mahmud": 255, "mahnam": 255, "mahrou": 255, "mai": [1, 3, 7, 8, 10, 11, 14, 25, 29, 31, 33, 36, 37, 39, 40, 42, 47, 53, 54, 56, 64, 66, 67, 70, 76, 80, 81, 82, 83, 86, 93, 94, 96, 98, 99, 100, 103, 107, 108, 110, 119, 120, 124, 126, 127, 129, 133, 134, 136, 138, 139, 144, 151, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 174, 175, 182, 185, 193, 197, 200, 201, 204, 205, 207, 208, 214, 220, 221, 223, 225, 227, 229, 230, 231, 233, 234, 235, 237, 239, 242, 246, 247, 249, 253, 255, 257, 261, 262, 264, 266, 267, 269, 273, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 303, 304, 305, 312, 314, 320, 324, 327, 328, 330, 333, 334, 338, 344, 345, 347, 348, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 390, 392, 393], "maidana": 255, "maier": 255, "mail": 126, "maillei": 255, "maimon": 255, "main": [4, 13, 25, 30, 31, 36, 39, 42, 46, 47, 52, 66, 79, 80, 81, 86, 87, 94, 95, 96, 99, 103, 105, 107, 108, 112, 123, 124, 127, 134, 153, 154, 160, 163, 165, 197, 201, 210, 216, 217, 220, 224, 230, 231, 237, 255, 262, 282, 283, 289, 292, 295, 324, 328, 331, 335, 340, 341, 344, 348, 354, 355, 361, 363, 366, 377, 378, 382, 385, 393], "mainen": [188, 201, 255, 316, 328, 393], "maingret": 255, "mainli": [53, 255, 377], "mainlin": 377, "maintain": [7, 28, 53, 64, 77, 81, 98, 154, 201, 203, 223, 229, 231, 248, 250, 255, 283, 328, 330, 347, 353, 355, 357, 363, 369, 377, 378, 382], "mainten": [96, 126, 255, 377], "maintent": 76, "majawadia": 255, "major": [1, 3, 25, 39, 53, 220, 242, 255, 344, 369, 372, 377, 378], "majorstr": [216, 340], "majumdar": 255, "mak": 255, "makara": 255, "make": [0, 1, 3, 4, 5, 7, 8, 10, 11, 14, 24, 25, 27, 28, 31, 32, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 52, 53, 55, 58, 59, 63, 66, 67, 70, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 119, 120, 124, 125, 126, 127, 134, 136, 139, 144, 146, 147, 153, 154, 155, 156, 158, 160, 161, 166, 168, 169, 173, 174, 175, 176, 177, 178, 182, 185, 189, 197, 198, 201, 204, 205, 210, 213, 220, 223, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 244, 246, 247, 248, 249, 250, 252, 255, 262, 264, 267, 273, 275, 276, 282, 283, 284, 285, 287, 289, 290, 296, 303, 304, 305, 306, 307, 308, 312, 314, 324, 325, 328, 331, 335, 337, 344, 347, 348, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 365, 367, 368, 369, 370, 371, 376, 377, 378, 382, 383, 385, 386, 388], "make_mechan": [148, 275, 277, 281, 388], "make_pointprocess": [148, 275, 277, 281, 388], "make_subplot": 371, "makecellbuild": 14, "makedonski": 255, "makedonskyi": 255, "makefamili": [221, 345], "makefil": 249, "makegathervec": 345, "makegraph": [230, 354], "makeiv": 81, "makeoc": 81, "makevectorplai": 345, "makevecwrap": 345, "maksimov": 255, "maksymchuk": 255, "malaga": 255, "male": 255, "maler": 255, "malerba": 255, "malinow": 255, "malinvaud": 255, "maljev": 255, "mallei": 255, "mallinfo2": 1, "malloc": [4, 98, 242, 250], "mallon": 255, "malon": 255, "malot": 255, "malta": 255, "malth": 255, "maltzer": 255, "malyshev": 255, "malzach": 255, "mamelak": 255, "mammalian": [38, 80, 255, 382, 388], "man": [76, 81, 127, 246, 255], "man47096": 255, "manag": [1, 6, 7, 10, 11, 14, 25, 30, 31, 32, 37, 45, 46, 47, 53, 65, 66, 81, 86, 87, 95, 98, 119, 126, 127, 134, 140, 141, 150, 155, 159, 160, 161, 167, 173, 175, 177, 183, 185, 200, 204, 205, 220, 224, 226, 229, 237, 242, 246, 247, 255, 262, 269, 270, 279, 284, 288, 289, 290, 297, 303, 305, 307, 313, 320, 327, 343, 344, 348, 350, 353, 361, 379, 384, 385], "manchanda": 255, "mand": 70, "mandairon": 255, "mandatori": [94, 366, 377, 378], "mandg": 255, "mangia": 255, "manhattan": [201, 328], "mani": [0, 1, 3, 4, 7, 14, 28, 29, 36, 40, 41, 42, 45, 47, 51, 53, 54, 56, 66, 76, 81, 82, 83, 86, 88, 89, 93, 94, 96, 99, 100, 119, 120, 126, 127, 133, 134, 136, 151, 154, 159, 160, 161, 175, 179, 195, 197, 198, 201, 219, 220, 221, 223, 228, 229, 231, 235, 240, 242, 253, 254, 255, 261, 262, 264, 280, 283, 288, 289, 290, 292, 296, 299, 305, 309, 314, 322, 324, 325, 328, 343, 344, 345, 347, 352, 353, 355, 359, 366, 370, 377, 382, 385, 387, 388, 393], "manifest": [98, 210, 231, 335, 355], "manipul": [16, 17, 18, 28, 36, 52, 56, 70, 100, 126, 129, 134, 146, 160, 165, 173, 174, 197, 201, 204, 209, 215, 220, 221, 227, 231, 234, 248, 253, 257, 262, 275, 282, 289, 295, 303, 304, 316, 324, 333, 339, 344, 345, 351, 355, 358], "manipulatesd": 314, "manita": 255, "manner": [68, 70, 76, 119, 120, 154, 201, 255, 283, 377], "manninen": 255, "manookin": 255, "manor": 255, "manseau": 255, "mansveld": 255, "mant": [197, 324], "mantegazza": 255, "mantissa": [197, 324], "mantovani": 255, "manual": [0, 3, 36, 52, 53, 57, 66, 76, 81, 83, 94, 96, 114, 126, 154, 162, 205, 210, 247, 255, 283, 291, 303, 335, 377], "manuel": 255, "manufactur": 377, "manwani": 255, "manylinux": 248, "manylinux1_x86_64": 248, "manylinux2014": [1, 248], "manylinux2014_aarch64": 248, "manylinux_imag": 248, "manylinuxwheel": 248, "manzoor": 255, "map": [1, 25, 52, 70, 72, 80, 81, 92, 108, 159, 160, 161, 173, 177, 180, 182, 183, 201, 221, 227, 229, 237, 242, 255, 289, 290, 303, 307, 310, 312, 313, 328, 345, 351, 353, 361, 366], "mapelli": 255, "mara": 255, "marand": 255, "marasco": 255, "maraviglia": 255, "marc": 255, "marcelin": 255, "march": [7, 371], "marchetti": 255, "marchetto": 255, "marchionni": 255, "marco": 255, "mardal": 255, "marder": 255, "marenco": 89, "marenzi": 255, "margin": [207, 220, 333, 344], "margri": 255, "mari": 255, "maria": 255, "marianelli": 255, "mariani": 255, "marin": 255, "marinelli": 255, "marino": 255, "mari\u00f1o": 255, "mark": [3, 27, 28, 29, 31, 40, 46, 47, 53, 66, 86, 94, 104, 113, 127, 130, 144, 147, 160, 161, 201, 202, 219, 229, 231, 233, 235, 237, 258, 273, 276, 289, 290, 328, 329, 343, 353, 355, 357, 359, 361, 369, 377, 378, 388], "markaki": 255, "markedli": 255, "markov": [142, 255, 271], "markram": [93, 126, 254, 255], "marlei": 255, "marmoset": 255, "marosi": 255, "marquez": 255, "marr": 255, "marra": 255, "marsalek": 255, "marsh": 255, "marshal": 255, "marten": 255, "marti": 255, "martin": 255, "martina": 255, "martinello": 255, "martinet": 255, "martinetz": 255, "martinoia": 255, "martinotti": 255, "martinu": 255, "marton": 255, "marttunen": 255, "mart\u00ednez": 255, "marzaioli": 255, "masetto": 255, "mask": [171, 255, 301], "masland": 255, "masliah": 255, "masmanidi": 255, "masoli": 255, "mason": 255, "mass": [29, 133, 163, 255, 261, 292, 366, 370, 384], "mass_act": 292, "massiv": [160, 289, 377], "massobrio": 255, "masson": 255, "massott": 255, "master": [0, 1, 3, 4, 7, 10, 11, 13, 16, 63, 82, 134, 160, 161, 244, 248, 255, 262, 289, 290, 355, 363, 377, 378], "masurkar": 255, "mat": 70, "match": [53, 96, 98, 161, 165, 169, 182, 201, 210, 213, 220, 242, 255, 290, 292, 295, 312, 328, 335, 337, 344, 366, 370, 377, 378, 381, 387], "mateo": 255, "materi": [1, 76, 90, 154, 242, 255, 283, 366], "mateu": 255, "math": [3, 81, 91, 94, 140, 151, 163, 196, 202, 269, 277, 280, 289, 292, 293, 296, 303, 317, 329, 340, 353, 357, 360, 374], "mathar": 255, "mathcal": 53, "mathemat": [68, 119, 120, 126, 140, 146, 151, 154, 185, 193, 201, 220, 255, 269, 275, 280, 283, 320, 328, 344, 384], "mathew": 255, "mathrm": [151, 280, 344, 366, 372], "matlab": [38, 388], "mato": 255, "matplotlib": [61, 100, 282, 359, 360, 361, 365, 366, 367, 370, 371, 373, 375, 376, 382, 383, 384, 385], "matric": [151, 197, 280, 324], "matrix": [52, 53, 60, 136, 140, 151, 154, 155, 160, 166, 194, 202, 204, 220, 223, 229, 231, 242, 248, 255, 264, 269, 280, 283, 284, 289, 296, 321, 329, 344, 347, 353, 355, 366, 373, 388], "matsubara": 255, "matsui": 255, "matsumoto": 255, "matsumura": 255, "matsunaga": 255, "matsuo": 255, "mattei": 255, "matter": [24, 25, 53, 94, 96, 103, 119, 120, 124, 136, 160, 165, 220, 255, 264, 289, 295, 314, 344, 369], "matteucci": 255, "matthew": 255, "matthi": 255, "mattioni": 255, "matur": [255, 388], "maturana": 255, "matvieienko": 255, "matzner": 255, "maunsel": 255, "mauric": 255, "mauthner": 255, "max": [28, 29, 81, 148, 191, 201, 202, 204, 242, 277, 283, 284, 312, 318, 324, 328, 329, 373, 375, 377], "max_conc": 373, "max_dist": 43, "max_histogram": [157, 160, 286, 289], "max_ind": [28, 201, 202, 328, 329], "max_ip3": 375, "max_spikes_sent_by_any_host": [160, 289], "maxacor": [220, 344], "maxim": [78, 160, 161, 255, 289, 290], "maxima": [231, 355], "maximum": [54, 66, 70, 104, 133, 138, 148, 153, 159, 160, 161, 200, 201, 204, 220, 261, 264, 266, 277, 282, 283, 288, 289, 290, 327, 328, 344, 388], "maxit": 264, "maxord": [220, 344], "maxspik": [160, 289], "maxstat": [220, 344], "maxstep": [220, 344], "maxsteps": [133, 138, 261, 266], "maxwel": 255, "may_cause_realloc": 60, "mayavi": 382, "mayb": [40, 46, 47, 86, 97, 127, 377], "mayberg": 255, "mayr": 255, "mazaraki": 255, "maziashvili": 255, "mazza": 255, "mazzatenta": 255, "mazzoni": 255, "ma\u00e1k": 255, "mb": 368, "mband": [197, 324], "mbf": 40, "mbottom": [229, 237, 353, 361], "mc": [158, 160, 197, 287, 289], "mcalpin": 255, "mcbain": 255, "mccafferti": 255, "mccaulei": 255, "mcclelland": 255, "mccoi": 255, "mccolgan": 255, "mccormick": 255, "mccracken": 255, "mccreight": 255, "mcdonnel": 255, "mcdougal": [254, 255, 389], "mcdougel": 255, "mcell": [198, 200, 255, 325, 327], "mcell_func": 325, "mcell_func2": 325, "mcell_ran4": [138, 200, 202, 266, 327, 329, 388], "mcell_ran4_index": [138, 266], "mcell_ran4_init": [198, 200, 202, 325, 327, 329, 388], "mcellran4": [6, 98, 138, 198, 200, 266, 325, 327], "mcellran4test": 325, "mcewen": 255, "mcgie": 255, "mcgill": 255, "mchugh": 255, "mcinni": 255, "mcintyr": 255, "mckenna": 255, "mckinnon": 255, "mckown": 255, "mclachlan": 255, "mclaughlin": 255, "mcmahon": 255, "mcnab": 255, "mcol": [197, 324], "mcomplex": 1, "mctavish": 255, "md": 244, "mdest": [197, 324], "me": [3, 92, 161, 173, 197, 247, 290, 303, 312, 324], "mea": 255, "mean": [3, 9, 25, 28, 34, 39, 47, 52, 53, 54, 56, 60, 76, 81, 86, 94, 95, 96, 98, 100, 104, 107, 119, 120, 126, 131, 133, 134, 151, 153, 154, 155, 156, 160, 161, 165, 169, 173, 176, 182, 188, 198, 200, 201, 202, 207, 215, 220, 229, 231, 237, 246, 255, 259, 261, 262, 280, 282, 283, 284, 285, 289, 290, 295, 303, 306, 312, 316, 325, 327, 328, 329, 330, 339, 344, 353, 355, 361, 366, 373, 377, 378, 380, 381, 382, 383], "meaning": [67, 81, 119, 120, 133, 154, 155, 261, 283, 284, 368, 377], "meansqerr": [201, 202, 328, 329], "meant": [81, 201, 328, 377], "meantim": 377, "meanwhil": [220, 344], "mearec": 255, "meas": 255, "measur": [10, 11, 25, 40, 47, 53, 64, 76, 86, 93, 94, 104, 130, 131, 132, 136, 153, 161, 166, 188, 220, 227, 255, 258, 259, 260, 264, 282, 290, 296, 316, 344, 351, 368, 370, 382, 388], "mec": 60, "mecan": 87, "mech": [52, 314, 327, 388], "mech1": [283, 284], "mech2": [283, 284], "mech_api": 98, "mech_data": 53, "mech_glob": 330, "mech_insert1": 60, "mech_nam": 60, "mech_tim": [157, 160, 286, 289], "mech_typ": 60, "mechan": [1, 4, 7, 14, 25, 26, 29, 30, 36, 38, 43, 46, 47, 48, 52, 53, 54, 58, 64, 66, 71, 77, 80, 81, 87, 88, 89, 94, 96, 104, 108, 110, 119, 127, 136, 139, 143, 145, 146, 149, 151, 152, 154, 156, 160, 161, 165, 166, 176, 179, 182, 193, 203, 204, 216, 219, 220, 223, 225, 246, 250, 254, 255, 264, 267, 272, 274, 275, 278, 280, 281, 283, 285, 289, 290, 295, 296, 306, 309, 312, 327, 330, 340, 343, 344, 347, 349, 366, 369, 370, 373, 382, 385, 391, 393], "mechanism_nam": 60, "mechanism_object": [283, 284, 314], "mechanism_tim": [160, 289], "mechanisminsert": 60, "mechanismstandard": [72, 140, 143, 144, 156, 159, 210, 220, 269, 272, 273, 285, 335, 344, 388], "mechanismtyp": [60, 140, 146, 160, 203, 214, 220, 269, 275, 289, 330, 338, 344, 388], "mechanismw": 60, "mechanist": 255, "mechanobiologi": 255, "mechanosens": 255, "mechnam": [154, 176, 283, 306, 314, 330], "mechtyp": [25, 60, 141, 270], "med": 255, "medaka": 255, "medalla": 255, "medan": 255, "medengphi": 255, "medfltr": [201, 202, 328, 329], "media": [254, 255], "medial": 255, "median": [201, 202, 255, 328, 329], "mediat": [95, 255], "mediavilla": 255, "medic": [4, 81, 254, 255], "medicin": [89, 255], "medina": 255, "medini": 255, "medinilla": 255, "medit": 255, "medium": [175, 255, 305, 377], "medlock": 255, "medrihan": 255, "medvedev": 255, "meech": 255, "meet": [1, 9, 25, 126, 133, 220, 261, 344, 377, 380, 393], "meffin": 255, "meg": 255, "megohm": [38, 96, 119, 120, 136, 154, 166, 250, 264, 283, 296], "mehaffei": 255, "mehcan": 60, "mehta": 255, "mei": 255, "meier": 255, "meij": 255, "meijer": 255, "meisler": 255, "mel": 255, "melam": 255, "melanogast": 255, "meli": 255, "mellor": 255, "melnick": 255, "mem": 292, "memantin": 255, "memb": [22, 210, 335], "memb_list": 60, "member": [29, 40, 49, 52, 53, 56, 60, 66, 126, 144, 197, 220, 227, 229, 273, 324, 344, 351, 353, 388], "member_func": 56, "member_ret_obj_func": 56, "memberbi": 60, "memberconstructor": 60, "membernod": 60, "memberprop": 60, "membership": 247, "membran": [5, 9, 10, 11, 24, 25, 31, 33, 37, 38, 43, 45, 52, 53, 66, 68, 79, 81, 87, 88, 107, 123, 126, 127, 136, 139, 145, 146, 148, 151, 153, 154, 155, 156, 159, 160, 164, 165, 166, 182, 201, 203, 204, 210, 216, 220, 225, 227, 255, 264, 267, 274, 275, 277, 280, 282, 283, 284, 285, 288, 289, 294, 295, 296, 312, 328, 330, 335, 340, 342, 344, 349, 351, 366, 369, 370, 371, 382, 383, 384, 385, 388], "membranc": 388, "membrane_flux": [163, 292, 366], "memcheck": 242, "memori": [1, 3, 6, 8, 51, 52, 53, 54, 76, 81, 98, 136, 139, 154, 155, 161, 164, 165, 171, 197, 201, 207, 208, 216, 220, 225, 229, 242, 255, 264, 267, 282, 283, 284, 289, 290, 292, 294, 295, 301, 324, 328, 330, 333, 334, 340, 344, 349, 353, 366, 387], "memrist": 255, "mend": 255, "mendez": 255, "menes": 255, "meng": 255, "mengual": 255, "mening": 255, "menini": 255, "mennerick": 255, "menon": 255, "mensh": 255, "mensi": 255, "mental": 81, "menten": [292, 366], "mention": [3, 4, 13, 36, 52, 68, 90, 98, 104, 126, 246, 248, 284, 327, 369, 377, 378, 388], "menu": [13, 25, 29, 30, 31, 32, 37, 42, 46, 47, 50, 66, 70, 79, 80, 81, 84, 85, 86, 87, 94, 96, 99, 103, 105, 107, 108, 112, 123, 124, 127, 128, 129, 130, 131, 132, 134, 144, 145, 146, 147, 153, 156, 177, 182, 183, 201, 210, 217, 220, 221, 224, 229, 230, 234, 237, 238, 246, 256, 257, 258, 259, 260, 262, 273, 274, 275, 276, 282, 285, 307, 312, 313, 328, 335, 341, 344, 345, 348, 353, 354, 358, 361, 362], "menu_act": [229, 235, 237, 353, 359, 361], "menu_remov": [229, 353], "menu_tool": [229, 235, 237, 353, 359, 361], "menubar": [175, 182, 227, 305, 312, 351], "menuexplor": [140, 227, 269, 351], "menuitem": [175, 305], "menuselect": 105, "mercer": 255, "merch\u00e1n": 255, "mercier": 255, "mere": [81, 96, 154, 164, 166, 188, 197, 201, 205, 220, 224, 231, 283, 294, 296, 316, 328, 348, 355], "meredith": 255, "merenda": 255, "merg": [96, 154, 155, 201, 220, 248, 255, 283, 284, 328, 344, 378, 379], "mergenth": 255, "mergia": 255, "merinei": 255, "merjan": 255, "merkt": 255, "merrick": 255, "merrison": 255, "mesa": 255, "mesek": 255, "mesh": 255, "meshkin": 255, "mesial": 255, "mesiotempor": 255, "mesolimb": 255, "messag": [3, 13, 14, 36, 40, 46, 47, 52, 56, 66, 81, 86, 87, 89, 104, 110, 113, 115, 119, 120, 126, 136, 149, 150, 155, 158, 159, 160, 163, 168, 170, 171, 188, 195, 197, 203, 204, 210, 220, 223, 231, 242, 246, 247, 264, 278, 279, 284, 287, 289, 292, 298, 300, 301, 302, 316, 320, 322, 324, 330, 335, 344, 347, 355, 366, 377, 378, 383, 385, 387], "message1": [171, 301], "message2": [171, 301], "messeng": [76, 372], "messi": 67, "messineo": 255, "messor": 255, "mesz\u00e9na": 255, "met": [6, 154, 283], "meta": [229, 237, 255, 353, 361], "metabol": 255, "metabolit": 255, "metabotrop": 292, "metacontrast": 255, "metadata": [292, 377], "metaformat": 89, "metal": 255, "metalloproteinas": 255, "metaplast": 255, "metazoan": 255, "meter": 41, "meth": [35, 288, 344], "method": [1, 4, 24, 26, 32, 33, 35, 36, 38, 40, 44, 53, 56, 58, 64, 66, 67, 76, 80, 93, 94, 96, 98, 100, 119, 120, 123, 126, 133, 134, 136, 138, 139, 148, 150, 153, 154, 155, 156, 159, 160, 161, 163, 164, 166, 169, 173, 195, 197, 199, 200, 201, 203, 204, 205, 208, 211, 219, 220, 223, 225, 227, 228, 229, 233, 237, 242, 246, 251, 254, 255, 261, 262, 264, 266, 267, 277, 279, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 303, 310, 314, 322, 324, 326, 327, 328, 330, 334, 335, 339, 343, 344, 347, 349, 351, 352, 353, 357, 360, 361, 366, 371, 382, 383, 384, 385, 387, 391], "method3": [139, 267], "method_nam": 387, "methodologi": [255, 377], "methodtyp": [220, 344], "methog": 294, "methyl": 255, "meti": [161, 290], "metric": [27, 43, 68, 105, 242, 255], "metzner": 255, "meunier": 255, "meuth": 255, "meyer": 255, "meyrand": 255, "meystr": 255, "meza": 255, "mfull": [197, 324], "mgb": 255, "mglu2": 255, "mglur": [255, 292], "mglur1": 255, "mheight": [229, 237, 353, 361], "mhn": [153, 282], "mho": [47, 153, 155, 282, 284], "mice": 255, "micera": 255, "mich": 366, "micha": [255, 292, 366], "michael": [81, 89, 126, 160, 201, 289, 328, 377], "michaelevski": 255, "michalikova": 255, "michaluk": 255, "michaud": 255, "michel": [36, 255], "michetti": 255, "micku": 255, "micro": [255, 382, 383, 384], "microcircuit": [90, 255], "microcircuitri": 255, "microcircul": 255, "microclust": 255, "microcoil": 255, "microcolumn": 255, "microcultur": 255, "microdomain": 255, "microelectrod": 255, "microelectron": 255, "microemac": [210, 335], "microfarad": [119, 120, 154, 283], "micrograph": 255, "micromagnet": 255, "micromho": [153, 250, 282], "micromolar": 76, "micron": [33, 38, 41, 45, 66, 119, 120, 154, 163, 166, 250, 283, 292, 296, 366, 367, 369, 371, 382, 383, 387, 388], "micron2": [166, 296], "micronet": 74, "microneurographi": 255, "microphysiolog": 255, "microscal": 255, "microscop": [40, 255], "microscopi": [40, 255], "microsecond": 255, "microsiemen": [154, 283], "microsoft": [10, 173, 229, 246, 249, 303, 353, 377], "microstimul": 255, "micturit": 255, "midazolam": 255, "midbrain": 255, "middl": [25, 27, 31, 32, 66, 70, 76, 79, 80, 81, 96, 104, 112, 115, 123, 130, 131, 132, 144, 147, 166, 179, 201, 221, 223, 227, 229, 231, 232, 255, 258, 259, 260, 273, 276, 296, 309, 328, 345, 347, 351, 353, 355, 356, 373, 383, 388], "midpoint": [39, 113], "midtgaard": 255, "midwai": [105, 126, 250], "mig": 54, "might": [1, 7, 8, 10, 11, 14, 29, 34, 39, 46, 47, 49, 53, 54, 66, 68, 76, 78, 80, 86, 90, 92, 94, 96, 100, 110, 126, 127, 133, 154, 155, 160, 163, 179, 201, 220, 231, 242, 246, 261, 283, 284, 289, 309, 316, 327, 328, 344, 355, 365, 366, 368, 377, 378, 387], "miglior": [5, 36, 89, 126, 254, 255], "mignardot": 255, "migrain": 255, "migrat": [1, 98, 247, 377, 378], "miguel": 255, "mihala": 255, "mike": 140, "mikhailov": 255, "mikulov": 255, "mild": 255, "mile": 255, "mileag": 7, "milenkov": 255, "mileston": 377, "milit": [160, 289], "militari": 255, "millar": 255, "miller": [139, 254, 255, 267], "milleret": 255, "milli": [119, 120, 250], "milliamp": [119, 120, 151, 166, 250, 280, 296, 371], "millimet": 255, "millimho": 250, "millimol": 292, "millimolar": [119, 120, 154, 250, 283], "million": [198, 325], "millisecond": [76, 94, 95, 96, 147, 201, 224, 255, 276, 328, 348], "millivolt": [38, 76, 119, 120, 147, 250, 276, 371], "millner": 255, "milm": 255, "milstein": 255, "mimet": 255, "mimic": 255, "min": [28, 29, 81, 138, 160, 191, 201, 202, 242, 255, 266, 283, 284, 289, 312, 318, 328, 329, 373], "min_conc": 373, "min_ind": [28, 201, 202, 328, 329], "minassian": 255, "mind": [25, 66, 160, 219, 254, 343, 377, 378], "mindelai": 36, "mindscop": 255, "mine": [35, 76, 126, 255], "minev": 255, "minf": [4, 136, 220, 264, 344, 371], "minf_hh": [230, 354, 388], "mingw": [246, 249, 363], "mingw32": 249, "mingw64": 249, "mingw_fil": 249, "minh": 255, "mini": 255, "miniatur": 255, "minim": [4, 8, 13, 29, 46, 53, 93, 94, 134, 138, 161, 201, 214, 224, 249, 255, 262, 266, 290, 328, 338, 348], "minima": 94, "minimalist": [314, 377], "minimis": 381, "minimum": [1, 16, 17, 40, 54, 94, 96, 104, 133, 134, 138, 153, 160, 161, 169, 200, 201, 220, 246, 247, 261, 262, 266, 282, 283, 284, 289, 290, 327, 328, 334, 344], "minneci": 255, "minor": [1, 3, 154, 229, 283, 353, 377, 378, 388], "minstep": [220, 344], "minsum": [201, 328], "mintz": 255, "minu": [81, 94, 96, 201, 328], "minut": [53, 63], "minv": [197, 324], "miocinov": 255, "mip": [198, 325], "mira": 255, "miral": 255, "miranda": 255, "mirror": [70, 160, 163, 255, 289, 292, 293, 304], "mirski": 254, "mirzakhalili": 255, "misc": 1, "miscellan": [2, 46, 47, 57, 81, 86, 135, 183, 201, 202, 210, 263, 313, 328, 329, 335, 345], "mishra": 255, "misinterpret": [119, 120], "mislead": [201, 317, 328], "mismatch": [42, 103, 124, 246, 247, 255], "mison": 255, "misra": 255, "miss": [1, 3, 32, 46, 76, 81, 119, 120, 200, 210, 220, 221, 246, 255, 327, 335, 344, 345, 368], "missens": 255, "mistak": [47, 81, 86, 96, 119, 120, 210, 335, 377], "mistyp": 123, "misumi": 255, "misunderstand": [119, 120], "misunderstood": 255, "mit": [25, 126, 127, 254, 255], "mitchel": 255, "mitelut": 255, "mitig": [249, 255], "mitochondri": 255, "mitochondria": [255, 366, 369], "mitral": 255, "mittag": 255, "mittal": 255, "mittman": 255, "miura": 255, "mix": [3, 7, 42, 76, 98, 103, 124, 188, 220, 255, 289, 316, 344, 369], "mixtur": 70, "miyakawa": 255, "miyamura": 255, "miyasho": [36, 255], "miyazaki": 255, "miyazawa": 255, "mize": 255, "mizel": 255, "mkdir": [3, 7, 241, 242], "mkgraph": [173, 303], "mknrndll": [48, 76, 81, 122, 156, 249, 285, 373], "mktemp": [187, 188, 316], "mkthreadsaf": [4, 36], "ml": [89, 100, 254], "mlcg": [200, 327], "mleft": [229, 237, 353, 361], "mm": [41, 119, 120, 137, 154, 250, 255, 265, 283, 359, 365, 366, 367, 368, 370, 371, 375, 376, 388], "mmol": [292, 359], "mname": [156, 285], "mnemon": 108, "mntb": 255, "mo": 255, "mobarhan": 255, "moberget": 255, "mobil": 255, "mobj": [197, 324], "moccia": 255, "mochizuki": 255, "mod": [1, 3, 5, 6, 10, 11, 36, 46, 48, 49, 54, 57, 60, 71, 81, 82, 83, 87, 119, 120, 136, 144, 153, 154, 155, 160, 171, 193, 204, 210, 220, 227, 246, 251, 252, 255, 264, 273, 282, 283, 284, 285, 289, 292, 301, 327, 335, 343, 344, 351, 373, 374, 377, 381, 388], "mod2c": [7, 54], "mod_func": 373, "mod_suffix": [154, 283], "modal": 255, "modat": 255, "mode": [1, 42, 45, 53, 57, 66, 70, 76, 79, 80, 81, 84, 85, 94, 96, 99, 123, 131, 144, 147, 166, 173, 177, 180, 188, 189, 196, 220, 226, 229, 231, 233, 234, 237, 248, 255, 259, 273, 276, 279, 282, 289, 296, 303, 307, 310, 316, 323, 344, 350, 353, 355, 357, 358, 359, 361, 365, 367, 368, 370, 371, 376, 381, 386, 388], "model": [1, 3, 4, 5, 6, 8, 14, 16, 17, 18, 25, 26, 27, 35, 38, 40, 41, 42, 48, 49, 50, 51, 53, 54, 58, 60, 65, 68, 69, 77, 81, 82, 83, 87, 88, 90, 93, 94, 98, 101, 102, 103, 104, 105, 108, 110, 115, 124, 125, 130, 134, 138, 148, 151, 152, 153, 155, 159, 160, 161, 163, 164, 166, 171, 175, 182, 195, 198, 200, 218, 219, 220, 223, 225, 227, 229, 231, 234, 237, 239, 240, 242, 251, 253, 254, 255, 258, 262, 266, 277, 280, 281, 282, 284, 288, 289, 290, 292, 293, 294, 296, 301, 305, 312, 314, 322, 325, 327, 342, 343, 344, 347, 349, 351, 353, 355, 358, 361, 363, 365, 366, 368, 369, 370, 373, 374, 376, 378, 379, 382, 383, 384, 386, 388, 389, 391, 393], "model_coord": [229, 353], "model_nam": 292, "model_sorted_token": 53, "modeldb": [26, 35, 38, 49, 53, 82, 83, 88, 98, 100, 126, 240, 255, 283, 373, 388, 391], "modeldb_and_modelview": 46, "modeldbrepositori": [53, 98, 283], "modelspec": 250, "modeltyp": [220, 344], "modelview": [1, 46, 87, 105, 126, 254, 255], "moder": 255, "modern": [1, 4, 6, 7, 52, 242, 246, 254, 314, 320, 335, 357], "modest": [7, 136, 154, 264, 283], "modesti": 96, "modi": 255, "modif": [126, 154, 255, 283, 314, 377, 382], "modifi": [3, 7, 28, 29, 38, 39, 42, 43, 53, 56, 58, 64, 70, 76, 81, 82, 98, 103, 124, 126, 133, 139, 148, 150, 151, 154, 155, 160, 163, 165, 166, 197, 198, 201, 204, 210, 216, 220, 223, 247, 255, 261, 267, 277, 279, 280, 283, 284, 288, 289, 292, 295, 296, 312, 324, 325, 328, 335, 340, 344, 347, 353, 367, 368, 370, 371, 377, 378, 382, 384, 387, 388], "modl": [154, 283], "modl_includ": [154, 283], "modl_reg": 52, "modlunit": [1, 3, 46, 119, 120, 154, 182, 246, 283, 312], "modobj": 373, "modul": [0, 1, 3, 4, 5, 7, 8, 38, 41, 59, 64, 81, 163, 211, 247, 248, 255, 268, 277, 289, 292, 293, 295, 312, 320, 337, 340, 341, 366, 369, 373, 381], "modular": [13, 43, 45, 51, 65, 76, 88, 90, 96, 255], "modulatori": 255, "modulo": [91, 136, 264], "modulu": [29, 185, 293, 387], "moehli": 255, "moerman": 255, "moezzi": 255, "moffitt": 255, "moham": 255, "mohan": 255, "mohapatra": 255, "mohm": [119, 120, 153, 154, 282, 283], "mohsenian": 255, "moioli": 255, "mol": [255, 292], "molar": [81, 119, 120, 154, 193, 250, 283], "mold": 66, "moldwin": 255, "mole": [81, 119, 120, 154, 193, 283, 292, 320], "molecul": [41, 163, 254, 292, 365, 366, 372], "molecular": [254, 255, 366], "molina": 255, "molinier": 255, "mollinedo": 255, "molnar": 255, "moln\u00e1r": 255, "moment": [36, 53, 67, 96, 242, 255], "monacelli": 255, "mondal": 255, "mondrag\u00f3n": 255, "mongiat": 255, "monier": 255, "monitor": [10, 11, 13, 42, 53, 64, 76, 96, 99, 119, 231, 289, 296, 351, 355, 382, 383, 385], "monkei": 255, "monoligand": 255, "monophas": 255, "monopolar": 255, "monosynapt": 255, "monoton": [39, 166, 220, 255, 296, 344], "monsivai": 255, "montag": 127, "montalenti": 255, "montanaro": 255, "monteil": 255, "montemurro": 255, "montgomeri": 255, "month": [160, 255, 289, 377, 378, 380], "monthli": 1, "monyer": 255, "moodi": 255, "moolen": 255, "moor": [81, 83, 126, 160, 255, 289], "moore83": 46, "moortgat": 255, "moos": 255, "mora": 100, "morabito": 255, "moradi": 255, "moral": 255, "moran": 255, "morari": 255, "moraru": 255, "moraud": 255, "more": [1, 3, 4, 7, 8, 9, 10, 11, 14, 16, 17, 18, 24, 25, 28, 31, 32, 33, 36, 38, 40, 41, 42, 46, 47, 51, 53, 54, 56, 58, 64, 66, 68, 71, 73, 76, 77, 79, 80, 81, 82, 83, 86, 89, 90, 93, 94, 96, 98, 99, 100, 103, 110, 114, 119, 120, 124, 126, 127, 133, 134, 136, 138, 144, 148, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 169, 191, 192, 198, 200, 201, 204, 207, 210, 211, 219, 220, 223, 224, 225, 227, 229, 231, 234, 235, 237, 239, 240, 242, 246, 247, 248, 249, 252, 255, 261, 262, 264, 266, 273, 277, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 304, 312, 314, 317, 318, 319, 325, 327, 328, 331, 333, 335, 340, 343, 344, 347, 348, 349, 351, 353, 355, 358, 359, 361, 363, 365, 366, 370, 372, 377, 378, 381, 382, 383, 384, 385, 387], "moreinput": 52, "moreira": 255, "morel": 255, "moreno": 255, "moreov": [249, 377], "morest": 255, "morgan": 255, "mori": 255, "morilla": 255, "morimoto": 255, "morita": 255, "moritoh": 255, "morkv": 255, "morlei": 255, "mormyrid": 255, "morph": [210, 335], "morphforg": 255, "morphio": 57, "morphml": [47, 89], "morpho": 255, "morphoelectron": [227, 351], "morphofunct": 255, "morpholog": [40, 47, 255, 393], "morphologci": 255, "morphologi": [1, 37, 40, 43, 46, 47, 52, 53, 57, 86, 87, 89, 131, 134, 255, 259, 262, 292, 295, 296, 297, 359, 368, 371, 373, 374, 386, 388], "morphometr": [14, 26, 45, 67, 87, 96, 126, 255], "morphometri": [40, 46, 47, 255], "morphoson": 255, "morri": 255, "morric": 255, "morrison": [88, 255], "mors": [89, 254, 255], "mosaic": 255, "mose": 255, "mosher": 255, "mosig": 255, "mosinit": [36, 38, 46], "moss": 255, "mossi": 255, "most": [1, 3, 4, 7, 8, 10, 11, 13, 14, 24, 25, 27, 29, 35, 39, 40, 42, 43, 47, 52, 53, 66, 68, 76, 81, 86, 93, 94, 96, 98, 99, 100, 103, 104, 107, 119, 120, 124, 125, 126, 127, 133, 139, 143, 153, 154, 160, 161, 163, 164, 166, 169, 171, 174, 175, 182, 190, 196, 197, 199, 200, 201, 218, 225, 227, 229, 231, 233, 242, 247, 248, 261, 267, 272, 282, 283, 289, 290, 292, 294, 296, 299, 301, 304, 305, 312, 314, 317, 323, 324, 326, 327, 328, 331, 340, 342, 349, 351, 353, 355, 357, 377, 381, 385, 388, 393], "mostli": [3, 58, 166, 247, 255, 296, 304, 377, 387, 392], "motif": [231, 255, 355], "motion": 255, "motiv": [40, 53, 154, 283], "motoneuron": [74, 110, 117, 255], "motor": [255, 387], "mou": 255, "moubarak": 255, "moulin": 255, "moulini": 255, "mount": 248, "mourdoukouta": 255, "mous": [25, 31, 37, 46, 47, 50, 66, 70, 79, 80, 81, 84, 85, 86, 94, 96, 99, 105, 110, 111, 112, 113, 115, 131, 133, 144, 147, 156, 173, 174, 177, 178, 180, 221, 229, 231, 234, 237, 238, 255, 259, 261, 273, 276, 285, 303, 304, 307, 308, 310, 345, 353, 355, 358, 361, 362], "mousa": 255, "mouska": 255, "moussaoui": 255, "mout": [197, 324], "move": [1, 12, 24, 25, 37, 38, 42, 50, 52, 53, 59, 66, 70, 72, 80, 81, 85, 86, 90, 98, 99, 103, 104, 105, 107, 110, 112, 123, 124, 127, 133, 136, 144, 153, 155, 159, 160, 163, 164, 173, 175, 177, 182, 188, 201, 204, 211, 220, 229, 231, 233, 237, 242, 246, 255, 261, 264, 273, 282, 284, 289, 292, 294, 295, 303, 305, 307, 312, 316, 328, 344, 353, 355, 357, 361, 366, 371, 377, 387], "move_last": [173, 183, 303, 313], "move_to": [228, 352], "moveelectrod": [131, 259], "movement": [70, 105, 110, 234, 255, 358, 366, 387], "movi": [1, 30, 224, 234, 348, 358], "moviemod": [130, 258], "movierun": [217, 341], "moyer": 255, "mozer": 255, "mp": 370, "mpd": 11, "mpdegrad": 370, "mpi": [1, 2, 5, 7, 8, 10, 11, 26, 82, 100, 136, 146, 157, 158, 161, 243, 246, 247, 249, 264, 275, 286, 287, 290, 300, 343, 386], "mpi32": [160, 289], "mpi4pi": [3, 5, 289], "mpi_abort": [1, 289, 300], "mpi_allgath": [160, 289], "mpi_allgatherv": [160, 289], "mpi_alltoallv": [160, 289], "mpi_barri": [160, 289], "mpi_comm_rank": [160, 289], "mpi_init": [286, 289], "mpi_isend": [160, 289], "mpi_lib_nrn_path": [1, 246], "mpi_wtim": [160, 289], "mpiabort_on_error": [1, 286, 289, 300], "mpic": [160, 289], "mpicc": [160, 289], "mpich": [3, 10, 11, 158, 160, 248, 287, 289, 340], "mpich_lib": [158, 287], "mpich_path": [158, 287], "mpicxx": [160, 289], "mpiexec": [5, 8, 10, 11, 13, 35, 160, 289, 385, 393], "mpifil": [160, 289], "mpirun": [8, 158, 160, 242, 287, 289], "mpiworldrank": 284, "mpt": [1, 3, 248], "mptranscript": 370, "mpvec": 370, "mreit": 255, "mri": 255, "mright": [237, 361], "mrm": 255, "mrow": [197, 324], "mrowka": 255, "mruk": 255, "ms1": [203, 330], "ms2": [203, 330], "msec": [201, 328], "msm": 250, "msmpi": [3, 249], "msn": 255, "msname": [203, 330], "mspars": [197, 324], "msrc": [197, 324], "msrcdest": [197, 324], "mstate": [72, 159], "msvc": 249, "msvcc": 249, "mswin": [10, 11, 31, 36, 46, 47, 67, 76, 82, 83, 86, 92, 126, 127, 177, 188, 216, 226, 227, 307, 316, 340, 350, 351], "mswin_load_dl": 52, "mswindow": [81, 83, 92, 99, 170, 188, 224, 227, 231, 300, 316, 348, 355], "msys2": 249, "msys2_root": 249, "msys64": 249, "msystem": 249, "mt": [72, 156, 159, 203, 285, 330, 370], "mtau": [4, 136, 220, 264, 344, 371], "mtau_hh": 388, "mtdegrad": 370, "mtop": [237, 361], "mttranscript": 370, "mtune": 7, "mtype": 285, "mu": [151, 255, 280, 369], "mu_output": 49, "much": [3, 13, 25, 28, 33, 36, 37, 40, 42, 43, 53, 54, 64, 65, 66, 67, 70, 76, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 99, 103, 110, 119, 120, 124, 127, 129, 133, 134, 139, 144, 148, 153, 154, 159, 160, 161, 166, 169, 180, 201, 220, 227, 229, 231, 236, 249, 255, 257, 261, 262, 267, 273, 277, 282, 283, 288, 289, 290, 296, 298, 310, 328, 344, 351, 353, 355, 360, 377, 383, 387, 388], "mudg": 255, "mueller": 255, "mukamel": 255, "mukherje": 255, "mukovskii": 255, "mukunda": 255, "mul": [28, 94, 197, 201, 202, 208, 324, 328, 329, 334], "mula": 255, "mulholland": 255, "muller": [93, 254, 255], "mulligan": 255, "mulm": [197, 202, 324, 329], "mulrunfitt": [94, 96, 103, 124, 128, 173, 227, 256, 303, 351], "mult": 185, "multi": [3, 155, 220, 255, 284, 344], "multi_line_str": 387, "multichannel": 255, "multicompart": [255, 383, 384, 385], "multicompartment": 255, "multicompartmentreact": [146, 163, 275, 292, 366, 367, 369], "multicontact": 255, "multicor": [10, 11, 13, 36, 160, 289], "multidisciplinari": 254, "multielectrod": 255, "multifascicular": 255, "multiglomerular": 255, "multilin": [1, 70, 180, 310], "multimod": 255, "multiobject": 255, "multiphoton": 255, "multiphys": 255, "multipl": [1, 4, 10, 11, 33, 36, 42, 53, 56, 64, 80, 81, 87, 89, 100, 103, 124, 126, 133, 134, 136, 153, 159, 160, 161, 163, 164, 166, 173, 185, 197, 198, 200, 201, 219, 220, 223, 224, 229, 233, 242, 248, 249, 255, 261, 262, 264, 268, 282, 288, 289, 290, 292, 294, 296, 303, 312, 314, 324, 325, 327, 328, 334, 343, 344, 347, 348, 357, 366, 369, 377, 381, 382, 384, 385, 387, 388], "multiplerunfitt": 93, "multiplex": 255, "multipli": [28, 31, 165, 185, 197, 201, 220, 250, 293, 295, 324, 328, 344, 367, 388], "multipoint": 255, "multiprocessor": 126, "multiresolut": 255, "multiscal": [255, 391], "multisend": [1, 160, 254, 255, 289], "multisend_interv": [160, 289], "multisplit": [36, 157, 160, 166, 219, 286, 289, 296, 343], "multistep": 255, "multitarget": 255, "multithread": [26, 155, 255, 284, 373], "mulv": [197, 202, 324, 329], "mumoli": 255, "mundan": 123, "munnich": 255, "munro": 255, "munsch": 255, "murakami": 255, "muralidhar": 255, "muralidharan": 255, "muras": 255, "murbartian": 255, "murer": 255, "murin": 255, "murphi": 255, "murrai": 255, "muscarin": 255, "muschol": 255, "muscl": 255, "musculoskelet": 255, "mush": [158, 287], "mushahwar": 255, "mushtaq": 255, "musial": 255, "music": [1, 3, 59, 255], "musicinstal": 3, "musienko": 255, "musselman": 255, "must": [1, 3, 4, 5, 6, 8, 16, 28, 29, 31, 39, 44, 51, 53, 56, 64, 66, 67, 70, 73, 74, 75, 79, 80, 81, 82, 83, 91, 94, 95, 96, 103, 105, 109, 119, 120, 124, 127, 134, 136, 138, 139, 144, 148, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 173, 175, 179, 181, 182, 185, 188, 190, 191, 197, 198, 200, 201, 204, 205, 208, 211, 214, 216, 217, 218, 219, 220, 227, 229, 231, 233, 235, 236, 242, 246, 247, 248, 249, 250, 255, 262, 264, 266, 267, 273, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 296, 299, 303, 305, 309, 311, 312, 314, 316, 317, 318, 324, 325, 327, 328, 334, 337, 338, 340, 341, 343, 344, 351, 353, 355, 357, 359, 360, 366, 368, 369, 371, 373, 377, 378, 380, 382, 384, 385, 388], "mustaf\u00e1": 255, "mutalik": 255, "mutant": 255, "mutat": 255, "mutex": [155, 284], "mutexlock": [152, 251, 281], "mutexunlock": [152, 251, 281], "muthurasa": 255, "mutlicompart": 382, "mutlipl": 312, "mutoh": 255, "mutual": [182, 205, 231, 255, 312, 355], "mu\u00f1oz": 255, "mv": [4, 10, 11, 16, 17, 18, 25, 31, 33, 37, 43, 44, 47, 63, 66, 67, 68, 76, 96, 100, 108, 109, 119, 120, 130, 136, 137, 151, 153, 154, 159, 223, 250, 258, 264, 265, 280, 282, 283, 288, 347, 349, 359, 361, 365, 367, 368, 370, 371, 376, 382, 383, 384, 385, 388], "mwidth": [229, 237, 353, 361], "mx": [197, 324], "my": [3, 36, 83, 92, 160, 198, 220, 246, 247, 289, 325, 342, 344, 387], "my_ag": 387, "my_cel": [282, 295, 382, 383], "my_data": [4, 53, 250], "my_func": 360, "my_iclamp": 299, "my_initi": [366, 368, 375], "my_initial2": 368, "my_list": [304, 314, 387], "my_nam": 387, "my_other_cel": 382, "my_print": 387, "my_run": 100, "my_sec": 314, "my_soa_contain": 53, "my_str": [302, 387], "my_tupl": 387, "my_valid_var": 387, "my_vec": 387, "my_xhi": 373, "my_xlo": 373, "my_yhi": 373, "my_ylo": 373, "my_zhi": 373, "my_zlo": 373, "my_\u03b1": 365, "myadvanc": 348, "myakoushko": 255, "mycel": [29, 66, 295, 373, 383], "myelin": [46, 153, 255, 282, 388], "myenter": 255, "mygui": 328, "myid": [160, 161, 289, 290], "myinit": [348, 351], "mymodel": 393, "myocyt": 255, "myproc": 81, "myscript": 289, "mysect": 314, "myst_pars": 61, "mystat": 312, "mystim": 331, "mystr": [28, 312], "myval": 312, "myvector": 314, "mywindow": 312, "m\u00e4ki": 255, "m\u00f6biu": 255, "m\u00f8rch": 255, "m\u00fcller": 255, "m\u00fcllner": 255, "m\u03c9": 38, "n": [5, 8, 10, 11, 13, 16, 17, 23, 25, 33, 35, 36, 39, 46, 52, 53, 54, 56, 69, 77, 81, 89, 100, 125, 126, 138, 150, 151, 153, 154, 156, 159, 160, 161, 165, 167, 169, 174, 176, 177, 178, 182, 185, 188, 190, 191, 192, 196, 197, 200, 201, 203, 204, 213, 214, 219, 220, 223, 229, 231, 233, 237, 242, 248, 250, 254, 255, 266, 279, 282, 283, 285, 288, 289, 290, 296, 297, 303, 306, 307, 312, 314, 316, 317, 319, 324, 327, 328, 330, 337, 338, 343, 347, 353, 355, 357, 368, 370, 371, 377, 378, 383, 384, 385, 387, 388, 393], "n1": [165, 295], "n2": [165, 295], "n275": 63, "n3d": [22, 47, 81, 125, 146, 165, 166, 275, 295, 296, 299, 373, 382, 383, 384, 388], "n_gate": 292, "n_gidgroup": 289, "n_hh": [80, 153, 227, 351, 388], "na": [10, 11, 13, 16, 17, 18, 31, 47, 48, 64, 66, 67, 76, 89, 96, 119, 127, 147, 153, 155, 191, 220, 250, 255, 276, 282, 284, 344, 368, 371, 382, 388], "na_ion": [149, 242, 278, 328, 388], "na_vec": 371, "nabla": 366, "nachbaur": 255, "nadal": 255, "nadifl": 53, "nadim": 255, "nadin": 255, "nafter": [160, 289], "nagapann": 255, "nagarajan": 255, "nagumo": 255, "nahmani": 255, "nai": [137, 149, 191, 265, 278, 388], "nai0_na_ion": [149, 278, 388], "naik": 255, "nair": 255, "naiv": [166, 296], "najarian": 255, "najimi": 255, "najman": 255, "nakamura": 255, "nakano": 255, "nakao": 255, "naldi": 255, "nalli": 70, "name": [0, 1, 3, 7, 8, 10, 11, 12, 14, 27, 28, 29, 30, 31, 37, 38, 42, 45, 46, 47, 52, 53, 54, 60, 63, 64, 66, 67, 70, 76, 86, 98, 99, 103, 104, 105, 108, 109, 119, 120, 123, 124, 127, 129, 133, 134, 137, 138, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 160, 163, 165, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 188, 189, 190, 192, 201, 203, 204, 205, 207, 210, 211, 214, 216, 218, 220, 221, 226, 227, 229, 230, 231, 233, 237, 238, 242, 244, 246, 247, 248, 257, 261, 262, 265, 266, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 319, 328, 330, 333, 335, 338, 340, 342, 344, 345, 347, 349, 350, 351, 353, 354, 355, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388], "name1": [170, 300], "name_declar": [186, 214, 315, 338, 388], "name_ion": [149, 278], "name_mech": 330, "name_of_the_test": 3, "name_str": 330, "name_strref": 330, "name_suffix": 148, "name_t": 53, "name_x": 27, "nameerror": 315, "namei": [149, 229, 278], "nameo": [149, 278], "nameref": [285, 330], "namespac": [52, 53, 204, 370], "nan": [171, 191, 243, 292, 301], "nanclar": 255, "nandi": 255, "nann": 250, "nano": [191, 255], "nanoamp": [38, 76, 119, 120, 151, 153, 166, 250, 280, 282, 296], "nanobiosci": 255, "nanocircuit": 255, "nanodomain": 255, "nanomolar": 76, "nanotub": [191, 255], "nao": [137, 149, 265, 278, 388], "nao0_na_ion": [149, 278, 388], "naranjo": 255, "narayana": 255, "narayanan": 255, "nardelli": 255, "narg": [52, 56], "nargeot": 255, "nark": 255, "narrow": [173, 255, 303], "natan": 255, "nataraj": 255, "nath": 255, "nation": [126, 154, 255, 283, 363], "nativ": [4, 5, 7, 255, 314, 316, 363, 369], "natora": 255, "natschl\u00e4ger": 255, "natur": [24, 25, 29, 46, 56, 64, 81, 91, 96, 100, 119, 120, 126, 130, 154, 155, 173, 197, 201, 229, 231, 252, 255, 258, 283, 284, 293, 303, 324, 328, 330, 353, 355, 377, 378, 384], "nature02116": 255, "nature05523": 255, "nature08935": 255, "nature09086": 255, "nature09160": 255, "nature11451": 255, "nature11554": 255, "nature12600": 255, "naturforschung": 255, "naud": 255, "naunyn": 255, "nauto": 52, "nav": 255, "nav1": 255, "nava": 255, "navarro": 255, "nave": 255, "navero": 255, "navig": [47, 48, 76, 80, 94, 96, 134, 231, 255, 262, 314, 355], "nav\u03b24": 255, "nawm": 255, "nazarpour": 255, "nb": [53, 159, 166, 288, 296, 388], "nbc": 255, "nbconvert": 61, "nbd": 255, "nbefor": [160, 289], "nbsphinx": [1, 61, 366], "nbsr": [154, 283], "nc": [16, 17, 18, 76, 100, 153, 159, 161, 201, 250, 255, 282, 288, 290, 328, 344, 371, 383, 384, 385], "nc_append": [21, 22, 32, 157, 161, 286, 290], "ncard": [173, 303], "ncbi": 89, "ncell": [29, 160, 161, 289, 290], "nchild": [165, 168, 295, 298], "ncit": [250, 371], "nclist": [21, 22, 29, 161, 282, 290], "ncol": [197, 202, 324, 329], "ncomms1202": 255, "ncomms12035": 255, "ncomms12102": 255, "ncomms12659": 255, "ncomms12815": 255, "ncomms12895": 255, "ncomms13033": 255, "ncomms14566": 255, "ncomms9436": 255, "ncomms9815": 255, "ncout": 282, "ncstim": [161, 290, 383], "nctrig": 282, "ncu": 242, "ncurs": 246, "nd": [53, 373], "ndat": [192, 318, 319], "ndlist": [153, 282], "ne": [39, 53, 155, 252, 284], "nearest": [27, 66, 70, 105, 110, 155, 165, 186, 224, 231, 234, 235, 236, 237, 284, 293, 295, 315, 348, 355, 358, 359, 360, 361], "nearli": [25, 126, 154, 283], "neccessari": 297, "neccon": [159, 288], "necess": [119, 120, 134, 160, 201, 220, 262, 289, 328], "necessari": [3, 7, 8, 10, 11, 13, 14, 24, 32, 42, 47, 53, 66, 67, 86, 90, 96, 98, 123, 126, 127, 133, 134, 153, 154, 155, 160, 161, 163, 166, 169, 182, 189, 190, 197, 201, 210, 219, 220, 247, 248, 252, 253, 255, 261, 262, 283, 284, 289, 290, 292, 296, 298, 299, 300, 312, 317, 324, 328, 334, 335, 343, 344, 366, 377, 378, 381, 385, 388], "necessarili": [25, 81, 159, 160, 164, 166, 168, 201, 229, 289, 292, 294, 296, 298, 328, 353, 368], "necessit": [81, 136, 264], "neck": 255, "neco": [254, 255], "neco_a_00006": 255, "neco_a_00278": 255, "neco_a_00345": 255, "neco_a_00375": 255, "neco_a_00433": 255, "neco_a_00458": 255, "neco_a_00491": 255, "neco_a_00521": 255, "neco_a_00602": 255, "neco_a_00633": 255, "neco_a_00640": 255, "neco_a_00705": 255, "neco_a_00712": 255, "neco_a_00788": 255, "neco_a_00876": 255, "neco_a_00989": 255, "neco_a_01400": 255, "neco_a_01438": 255, "necrosi": 255, "nedelescu": 255, "need": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 24, 25, 28, 29, 30, 31, 35, 36, 40, 47, 51, 52, 54, 58, 60, 66, 67, 71, 78, 80, 81, 82, 87, 88, 90, 98, 99, 100, 102, 104, 105, 109, 117, 123, 126, 127, 133, 136, 139, 149, 153, 154, 155, 160, 161, 163, 164, 166, 168, 169, 173, 186, 188, 197, 201, 209, 210, 211, 214, 219, 220, 223, 225, 229, 230, 231, 236, 241, 242, 244, 246, 247, 248, 249, 250, 253, 255, 261, 264, 267, 278, 282, 283, 284, 288, 289, 290, 292, 294, 296, 299, 303, 314, 315, 316, 324, 325, 328, 335, 338, 343, 344, 347, 348, 349, 351, 353, 354, 355, 360, 366, 367, 369, 370, 371, 372, 373, 377, 380, 381, 382, 383, 384, 385, 387, 388], "neef": 255, "neeli": 255, "neg": [29, 33, 39, 54, 81, 94, 131, 133, 136, 139, 153, 160, 166, 175, 197, 200, 201, 215, 227, 255, 259, 261, 264, 267, 282, 289, 293, 296, 305, 314, 324, 327, 328, 339, 351, 377, 387], "negahbani": 255, "negat": 185, "negexp": [153, 200, 201, 282, 327, 328], "neglig": 382, "negrean": 255, "negrello": 255, "neighbor": [161, 290], "neighbor_areas_fract": 292, "neighborhood": [220, 254, 255, 344], "neighbour": 255, "neild": 255, "neill": 255, "neither": [47, 53, 81, 86, 154, 160, 161, 229, 283, 289, 290, 353], "neitz": 255, "nelson": 255, "nemo": [139, 267], "nemo2neuron": [139, 267], "nemosi": [139, 267], "nenad": 255, "nengo": 255, "neo": 93, "neocort": [46, 219, 255, 343], "neocortex": 255, "neonat": 255, "neosim": [159, 288], "neostriatum": 255, "ner": 255, "ner49283": 255, "nerlich": 255, "nernst": [81, 94, 135, 137, 149, 155, 255, 263, 265, 278, 284, 388], "nerv": [14, 119, 120, 154, 254, 255, 283, 371], "nervou": 255, "ness": 255, "nest": [28, 52, 70, 81, 169, 182, 185, 216, 255, 268, 312, 340, 387, 388], "net": [9, 20, 26, 90, 107, 109, 111, 115, 153, 160, 161, 242, 255, 282, 289, 290], "net1": 20, "net1run": 20, "net_ev": [29, 88, 156, 159, 250, 285, 288], "net_mov": [220, 344], "net_rec": [9, 71, 76, 88, 155, 156, 159, 160, 220, 225, 227, 251, 284, 285, 288, 289, 344, 349, 351], "net_send": [220, 223, 250, 344, 347], "netbuild": [227, 351], "netcon": [8, 9, 13, 16, 17, 18, 21, 22, 29, 32, 35, 36, 38, 71, 76, 100, 140, 146, 153, 154, 155, 156, 157, 160, 161, 219, 220, 225, 227, 250, 269, 275, 282, 283, 284, 285, 286, 289, 290, 343, 344, 349, 351, 371, 383, 384, 385, 388, 393], "netconlist": [29, 159, 220, 288, 344], "netcvod": 60, "netcvodethreaddata": [220, 344], "netedgegui": [20, 32, 37, 114], "netgui": [20, 32, 37, 42, 80, 103, 108, 124, 160, 161, 173, 289, 290, 303], "netlib": [151, 280], "neto": 255, "netoff": 255, "netparmpi": [160, 161, 289, 290], "netpyn": [255, 292, 389, 391], "netreadycel": 80, "netreadycellgui": [37, 108, 109, 110, 111], "netrec": [160, 223, 227, 289, 347, 351], "netscap": [204, 231, 355], "netstim": [9, 21, 22, 32, 37, 71, 74, 76, 80, 88, 90, 98, 100, 107, 108, 152, 153, 161, 219, 281, 282, 290, 331, 343, 371, 384, 385, 386, 388], "network": [4, 5, 6, 9, 21, 22, 26, 35, 36, 40, 42, 45, 47, 51, 66, 76, 79, 83, 87, 99, 100, 101, 102, 107, 108, 110, 114, 116, 117, 142, 146, 156, 159, 161, 174, 200, 225, 227, 240, 246, 251, 254, 255, 271, 275, 282, 285, 288, 290, 304, 327, 349, 351, 382, 385, 386, 388, 391], "networkbuild": 32, "networkcel": [32, 37], "networkreadycel": [160, 161, 173, 289, 290, 303], "neu": 255, "neubig": [140, 255], "neubrandt": 255, "neucom": [254, 255], "neufeld": 255, "neulet": 255, "neumaier": 255, "neuman": 255, "neumann": [292, 373], "neunet": 255, "neur": 255, "neural": [25, 40, 47, 81, 156, 254, 255, 285, 377, 388], "neuralsyn": 255, "neurit": [25, 40, 47, 86, 126, 255], "neuro": [254, 255], "neuro4pd": 255, "neuroanatom": 255, "neuroanatomi": [40, 255], "neurobiologi": [89, 201, 255], "neurobot": 89, "neurocomput": [254, 255], "neuroconstruct": 255, "neurocontrol": 255, "neurocytologi": 255, "neurodamu": 58, "neurodegen": 255, "neurodevelopment": 255, "neurodynam": 255, "neuroengin": 255, "neuroethologi": 255, "neurofibromin": 255, "neurogpu": 255, "neurohom": [216, 340], "neurohypophysi": 255, "neuroid": 255, "neuroimag": 255, "neuroinflamm": 255, "neuroinform": [93, 255], "neuroinformat": [26, 89, 254, 255], "neurokinemat": 255, "neurolab": [126, 255], "neuroligin": 255, "neurolog": 255, "neurologi": [40, 47, 254, 255], "neurolucida": [47, 58, 126], "neuromanag": 255, "neuromapp": 255, "neuromethod": 255, "neuroml": [89, 163, 255, 277, 292, 388], "neuromodul": 255, "neuromorph": [25, 130, 255, 258], "neuromorpho": [40, 41, 47, 64, 368, 373, 391], "neuromotor": 255, "neuromuscular": 255, "neuromusculoskelet": 255, "neuron": [2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 24, 28, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 52, 59, 65, 66, 67, 68, 73, 74, 79, 80, 81, 87, 88, 90, 92, 94, 96, 99, 101, 103, 105, 107, 108, 110, 112, 115, 123, 124, 125, 130, 131, 132, 136, 138, 139, 142, 144, 146, 147, 151, 152, 153, 154, 158, 160, 161, 162, 163, 164, 165, 169, 175, 182, 185, 186, 201, 204, 208, 210, 211, 216, 217, 218, 220, 223, 224, 225, 230, 231, 234, 238, 239, 242, 243, 244, 245, 247, 251, 252, 258, 259, 260, 264, 266, 267, 268, 271, 273, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 374, 375, 376, 381, 383, 384, 386, 387, 389, 391], "neuron2nemo": [139, 267], "neuron3": 81, "neuron_array_ref": 303, "neuron_gpu_nightli": 248, "neuron_imag": 63, "neuron_init_mpi": 289, "neuron_module_opt": 1, "neuron_movi": 63, "neuron_nightly_tag": 248, "neuron_vector": 266, "neuron_wheel": 248, "neuron_with_cpp_mechan": 364, "neuron_with_soa_data": 364, "neurondemo": [25, 50, 67, 81, 237, 246, 361, 381], "neurondev": [160, 289], "neurongui": 381, "neuronhom": [20, 92, 160, 166, 170, 175, 204, 210, 216, 227, 231, 268, 296, 300, 305, 335, 340, 351, 355, 388], "neuronmainmenu": [14, 30, 32, 37, 42, 45, 103, 124, 177, 182, 227, 231, 307, 312, 351, 355], "neuronnhom": 81, "neuronsimul": [0, 1, 3, 4, 7, 10, 55, 82, 240, 241, 247, 248, 289, 355, 368, 373], "neuronvisio": 255, "neuropath": 255, "neuropathi": 255, "neuropathologica": 255, "neuropeptid": 255, "neuropharm": 255, "neuropharmacolog": 255, "neuropharmacologi": 255, "neurophysiol": 95, "neurophysiolog": [126, 255], "neurophysiologi": [25, 126, 254, 255], "neuroprosthes": 255, "neuroprosthesi": 255, "neuroprosthet": 255, "neuroprotect": 255, "neuropsychopharmacologi": 255, "neurorehabilit": 255, "neuroreport": 255, "neurorobot": 255, "neurosci": [10, 11, 26, 35, 88, 89, 93, 100, 126, 240, 254, 255, 304, 385], "neuroscientist": [76, 89, 125, 126, 254], "neurosimul": 254, "neurosolv": 255, "neurospora": 370, "neurostimul": 255, "neurosurg": 255, "neurotechnologi": [254, 255], "neurotransmiss": 255, "neurotrauma": 255, "neurotroph": 255, "neurovascular": 255, "neutral": 255, "neve": 255, "nevent": 282, "never": [36, 53, 70, 76, 80, 81, 94, 98, 112, 153, 154, 155, 160, 229, 282, 283, 284, 289, 314, 335, 353, 357, 377], "nevertheless": [94, 162, 291, 377], "nevian": 255, "nevil": 255, "new": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 27, 29, 32, 36, 37, 42, 43, 45, 46, 48, 51, 52, 53, 54, 56, 58, 60, 63, 66, 67, 69, 70, 72, 77, 79, 80, 81, 84, 86, 87, 88, 89, 93, 94, 96, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 113, 115, 124, 126, 133, 138, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 174, 177, 178, 179, 180, 181, 182, 184, 186, 188, 196, 197, 198, 200, 201, 203, 204, 208, 209, 210, 211, 214, 217, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 241, 246, 248, 254, 255, 261, 273, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 303, 304, 310, 312, 314, 315, 316, 318, 324, 327, 328, 331, 334, 335, 338, 339, 342, 344, 345, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 368, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 391], "new_node_list": [163, 292], "new_path": [228, 352], "new_posit": 53, "new_sect": 60, "new_siz": [201, 328], "new_val": [312, 324], "new_vec": 328, "newarrai": 242, "newborn": 255, "newer": [3, 7, 155, 246, 248, 252, 284, 388], "newest": [210, 335], "newflag": 289, "newgroup": [103, 124], "newli": [60, 70, 89, 156, 166, 197, 255, 285, 296, 324, 388], "newlin": [28, 81, 94, 188, 190, 191, 201, 204, 227, 233, 316, 317, 318, 328, 351, 357], "newlist": 314, "newman": 255, "newsiz": [208, 334], "newtarget": [159, 288], "newton": [39, 154, 220, 254, 255, 283, 344, 366, 389], "newvec": [201, 314, 328], "newvect": [201, 328], "newview": [50, 73, 229, 353], "nexp": 36, "next": [0, 1, 10, 11, 13, 27, 28, 35, 39, 42, 43, 51, 52, 66, 67, 76, 81, 84, 88, 94, 96, 99, 101, 104, 105, 106, 109, 111, 112, 113, 115, 119, 129, 153, 154, 156, 160, 163, 164, 173, 175, 185, 188, 190, 191, 198, 201, 204, 220, 221, 225, 229, 231, 233, 239, 242, 246, 247, 248, 257, 282, 283, 285, 289, 292, 294, 295, 303, 305, 316, 317, 318, 325, 328, 344, 345, 349, 353, 355, 357, 369, 377, 378, 383, 384, 387, 393], "nextlin": [182, 312], "neymotin": [255, 369], "nf": [151, 280], "nframe": [52, 268], "ng": 255, "ng2": 255, "ngate": [150, 152, 279, 281, 292], "ngf": 255, "nguyen": 255, "nhost": [23, 136, 157, 160, 161, 225, 243, 264, 286, 289, 290, 349, 385], "nhost_bb": [157, 160, 286, 289], "nhost_world": [157, 160, 286, 289], "ni": [191, 363], "ni_pci_6229": 363, "nice": [40, 45, 65, 86, 94, 127, 161, 229, 242, 289, 290, 377, 383], "niceti": [166, 296], "nicholson": [44, 126, 166, 223, 255, 296, 347, 393], "nickl": 255, "nicol": 255, "nicolson": [220, 223, 344, 347], "nicouleau": 255, "nicovich": 255, "niculescu": 255, "nie": 255, "niebur": 255, "niedringhau": 255, "nielsen": 255, "nieser": 255, "nieu": 255, "nightli": [0, 1, 7, 243, 373, 377, 378], "nigra": 255, "nigral": 255, "nigro": 255, "nih": 89, "nijhoff": 255, "nikol": 255, "nil": [16, 17, 18, 159, 160, 203, 205, 220, 330], "nilsson": 255, "ninf": [4, 36, 292, 371], "ninf_hh": 388, "ninja": 247, "ninvl": [13, 16, 17, 18], "nip": 25, "nirmala": 255, "nishino": 255, "nist": [154, 283], "nistri": 255, "nitric": 255, "nitrogen": 255, "nitsch": 255, "nitschk\u00e9": 255, "nitzan": 255, "niu": 255, "niwano": 255, "nizar": 255, "nj": [93, 126, 254, 255], "nkcc": 255, "nl": [163, 366], "nlayer": [153, 282], "nlayer_extracellular": [282, 388], "nligand": [150, 152, 279, 281], "nlm": [89, 151, 255, 280], "nm": [41, 370, 375], "nmda": [95, 255], "nmdar": 255, "nmin": [16, 17, 18], "nminor": [229, 353], "nmm": [16, 17, 18, 31], "nmod": 328, "nmodl": [1, 2, 4, 7, 26, 36, 52, 53, 54, 60, 71, 87, 98, 126, 138, 140, 146, 148, 152, 153, 163, 204, 219, 220, 241, 242, 246, 251, 252, 254, 266, 269, 275, 277, 281, 282, 285, 292, 304, 314, 330, 344, 366, 369, 373, 374, 388, 391], "nmodl2": 250, "nmodlanguag": 250, "nmodlrandom": [284, 329, 388], "nn": [190, 255, 317], "nn1826": 255, "nnn": [27, 104], "nnw": 255, "nobann": [216, 340], "nobili": 255, "nobjauto": 52, "nobl": 255, "nobodi": [377, 378], "nobrega": 255, "nocicept": 255, "nociceptor": 255, "nocmodl": [3, 53, 81, 154, 246, 283], "nodal": 255, "node": [3, 12, 33, 54, 60, 66, 76, 89, 139, 146, 151, 153, 154, 156, 158, 160, 168, 220, 223, 237, 246, 248, 255, 267, 275, 280, 282, 283, 285, 287, 289, 296, 298, 344, 347, 349, 359, 360, 361, 367, 368, 370, 373, 375, 385], "node0": [160, 289], "node1": [160, 289], "node11": [160, 289], "node1d": [275, 292], "node3d": [275, 292], "node_alloc": 60, "node_by_ijk": 373, "node_by_loc": 373, "node_data": [81, 388], "node_data_offset": 53, "node_list": [163, 292], "nodea": [223, 347], "nodeb": [223, 347], "nodeextracellular": [275, 292], "nodelist": [146, 163, 275, 292], "noderh": [223, 347], "nodes_on_dend": 292, "nodes_on_dend_cent": 292, "nodiscard": 53, "noe": 255, "noei": 255, "nogui": 268, "nois": [40, 47, 96, 100, 107, 108, 153, 255, 282], "noisefromrandom123": 100, "noisi": 255, "nolan": 255, "noload": [148, 170, 201, 210, 300, 328, 335], "nolt": 255, "nomura": 255, "non": [3, 4, 7, 32, 36, 52, 53, 54, 60, 70, 81, 87, 95, 99, 133, 136, 151, 153, 154, 159, 160, 161, 166, 175, 188, 191, 194, 197, 204, 220, 234, 247, 254, 255, 261, 264, 280, 282, 283, 288, 289, 290, 292, 296, 305, 314, 316, 318, 321, 324, 337, 344, 358, 366, 377, 378, 382, 387, 388], "nonburst": 255, "nondescript": 108, "none": [13, 70, 100, 153, 155, 159, 160, 163, 173, 219, 250, 282, 284, 285, 288, 289, 292, 295, 298, 303, 314, 317, 343, 344, 366, 368, 369, 373, 384, 385, 387, 388], "nonetheless": 314, "nonexist": 70, "nonfunct": 255, "nonhomogen": 255, "nonhuman": 255, "noninvas": 255, "nonlinear": [202, 220, 251, 255, 329, 344], "nonlinearli": [166, 296], "nonloc": [154, 283], "nonphysiolog": 94, "nonpyramid": 255, "nonrandom": 255, "nonreciproc": 255, "nonrespons": 255, "nonsatur": 255, "nonsens": [81, 220, 344], "nonspec1": 284, "nonspecif": 255, "nonspecific_curr": [152, 251, 371], "nonspik": 255, "nonsynapt": 255, "nontherapeut": 255, "nontrivi": 81, "nonuniform": [24, 46, 68, 126, 255, 369], "nonvint": 344, "nonzero": [53, 67, 94, 96, 161, 165, 194, 197, 200, 204, 206, 289, 290, 295, 321, 324, 327, 332, 388], "noon": 76, "noonan": 255, "noop": 285, "noor": 255, "nop": 156, "nor": [53, 154, 229, 283, 292, 353], "noradrenerg": 255, "norepinephrin": 255, "norfluoxetin": 255, "norheim": 255, "norm": [94, 133, 134, 138, 194, 220, 261, 262, 266, 321, 344], "normal": [1, 8, 25, 27, 36, 43, 52, 53, 66, 68, 70, 81, 97, 104, 119, 120, 126, 130, 131, 133, 134, 137, 148, 151, 153, 154, 155, 156, 159, 160, 161, 164, 167, 168, 170, 171, 173, 174, 175, 177, 182, 185, 188, 189, 195, 197, 200, 201, 216, 220, 223, 227, 229, 230, 231, 233, 237, 242, 247, 255, 258, 259, 261, 262, 265, 277, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 298, 300, 301, 303, 304, 305, 307, 312, 314, 316, 322, 324, 327, 328, 340, 344, 347, 351, 353, 354, 355, 357, 360, 361, 366, 369, 377, 378, 382, 385], "normann": 255, "normrand": [198, 325], "norwel": 255, "not45": [191, 318], "notabl": [53, 246], "notar": 243, "notarizaton": 247, "notarytool": 247, "notat": [28, 119, 120, 146, 148, 154, 163, 165, 166, 197, 201, 275, 277, 283, 295, 314, 328], "notch": 127, "note": [0, 1, 3, 4, 5, 7, 8, 25, 31, 32, 36, 37, 38, 39, 41, 44, 50, 52, 53, 56, 58, 64, 66, 67, 80, 81, 84, 94, 98, 99, 100, 107, 108, 110, 111, 119, 120, 127, 130, 136, 139, 143, 144, 146, 149, 151, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 177, 181, 182, 186, 188, 189, 190, 197, 198, 200, 201, 203, 205, 207, 210, 211, 213, 214, 216, 219, 220, 223, 225, 227, 229, 231, 237, 241, 242, 246, 248, 249, 255, 258, 264, 267, 268, 272, 273, 275, 278, 280, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 310, 311, 312, 314, 316, 317, 324, 325, 327, 328, 330, 333, 335, 337, 338, 340, 343, 344, 347, 349, 351, 353, 355, 357, 360, 361, 363, 366, 367, 377, 378, 379, 382, 383, 385, 387, 388, 393], "notebook": [1, 3, 359, 365, 367, 368, 370, 371, 373, 376, 382, 383, 385, 387, 388, 392, 393], "notebook_connect": [367, 368, 371], "notepad": 76, "noteworthi": [126, 155, 284], "noth": [13, 29, 66, 79, 94, 96, 133, 155, 160, 161, 166, 170, 171, 174, 176, 186, 188, 203, 234, 242, 261, 284, 289, 290, 296, 300, 301, 304, 306, 315, 316, 330, 358, 377, 382, 385, 388], "notic": [13, 25, 28, 29, 31, 33, 36, 42, 46, 52, 53, 66, 76, 81, 94, 99, 104, 105, 119, 120, 154, 155, 159, 160, 161, 165, 166, 169, 189, 191, 201, 220, 224, 229, 282, 283, 284, 288, 289, 290, 295, 296, 314, 328, 344, 348, 377, 378, 382, 387, 388], "notif": [140, 269], "notifi": [3, 44, 86, 134, 151, 153, 159, 160, 174, 197, 201, 220, 229, 233, 262, 280, 282, 288, 289, 304, 328, 344, 353, 357, 370], "notion": [32, 126, 134, 160, 166, 169, 262, 289, 296], "nov": 3, "novara": 255, "novel": [53, 255], "novo": 255, "novorodovskaya": 255, "nov\u00e8r": 255, "now": [1, 3, 4, 7, 8, 9, 14, 16, 19, 24, 25, 27, 28, 31, 32, 36, 37, 38, 42, 45, 46, 49, 52, 53, 63, 66, 67, 68, 70, 80, 81, 86, 87, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 116, 119, 120, 123, 124, 125, 153, 155, 160, 161, 166, 173, 182, 191, 216, 220, 221, 227, 242, 246, 248, 282, 284, 289, 290, 296, 303, 304, 312, 314, 328, 331, 340, 344, 345, 351, 353, 363, 365, 366, 367, 369, 370, 371, 382, 383, 384, 385, 387, 388], "nowadai": 377, "nowher": [53, 96], "noxiou": 255, "np": [29, 158, 160, 242, 287, 289, 328], "npj": 255, "npost": 250, "npp": 255, "npre": 250, "nprog": 52, "npysecobj_insertfrom": 60, "nrc": 37, "nrecv": [160, 161, 289, 290], "nrecv_us": [160, 161, 289, 290], "nref": [186, 315], "nri": [160, 289], "nrn": [0, 1, 7, 10, 11, 52, 55, 76, 82, 83, 92, 122, 153, 154, 158, 160, 161, 166, 175, 182, 197, 201, 204, 216, 217, 219, 220, 223, 229, 231, 240, 241, 242, 244, 246, 247, 248, 249, 250, 268, 282, 283, 284, 287, 289, 290, 292, 296, 305, 312, 314, 324, 328, 340, 341, 343, 344, 347, 353, 355, 373, 388], "nrn2864": 255, "nrn_": 1, "nrn_ansi": 53, "nrn_build_venv38_": 340, "nrn_change_nseg": 60, "nrn_class": 81, "nrn_codesign": 247, "nrn_cur": 60, "nrn_cur_": 54, "nrn_daq": 1, "nrn_disconnect": 60, "nrn_dll": [186, 315], "nrn_dll_sym": 296, "nrn_enable_coreneuron": 340, "nrn_enable_module_instal": 340, "nrn_enable_python_dynam": [246, 340, 381], "nrn_enable_rx3d": 340, "nrn_enable_thread": 289, "nrn_ensure_model_data_are_sort": [53, 60], "nrn_entitl": 247, "nrn_feenableexcept": [3, 171, 242, 301, 388], "nrn_fenableexcept": [171, 301], "nrn_fihexec": 60, "nrn_finiti": 60, "nrn_get_config_kei": 388, "nrn_get_config_v": 388, "nrn_instal": 247, "nrn_load_dll": [216, 340, 388], "nrn_mallinfo": 388, "nrn_matrix_node_alloc": 60, "nrn_mpi_dynam": 340, "nrn_netrec_state_adjust": 388, "nrn_nightly_upload": 248, "nrn_nmodl_cxx_flag": [1, 246], "nrn_nonvint_block_setup": 60, "nrn_notar": 247, "nrn_num_config_kei": 388, "nrn_option": 268, "nrn_point": 250, "nrn_productsign": 247, "nrn_pylib": 246, "nrn_python_dynam": 381, "nrn_python_vers": 248, "nrn_pythonex": 381, "nrn_random_arg": 98, "nrn_realtim": [1, 363], "nrn_region": [64, 163, 292, 359, 360, 365, 366, 368, 369, 370, 371, 372, 375, 376], "nrn_release_upload": 248, "nrn_requir": 246, "nrn_rx3d_opt_level": 247, "nrn_sanit": 242, "nrn_shape_changed_": 388, "nrn_solver_prepar": 60, "nrn_sort_mech_data": 53, "nrn_sort_node_data": 53, "nrn_sparse_partran": 388, "nrn_spikebuf_s": [160, 289], "nrn_src": 247, "nrn_state_": 54, "nrn_thread": 1, "nrn_version": 377, "nrn_version_": [155, 252, 284], "nrn_version_eq": [155, 252, 284], "nrn_version_gt": [155, 252, 284], "nrn_version_gteq": [155, 252, 284], "nrn_version_gteq_8_2_0": [155, 252, 284], "nrn_version_lt": [155, 252, 284], "nrn_version_lteq": [155, 252, 284], "nrn_version_n": [155, 252, 284], "nrnallpointmenu": 388, "nrnallsectionmenu": 388, "nrnbbcore": 4, "nrncore_arg": 289, "nrncore_run": [286, 289], "nrncore_writ": [286, 289], "nrndat": [160, 289], "nrnglobalmechmenu": [176, 183, 203, 306, 313, 330, 388], "nrngui": [11, 20, 46, 69, 72, 76, 77, 96, 103, 122, 124, 127, 151, 159, 161, 182, 201, 214, 217, 223, 227, 246, 314, 328, 338, 351], "nrnhash": 1, "nrnhine": 4, "nrniv": [1, 3, 5, 8, 11, 35, 52, 53, 72, 81, 82, 83, 153, 158, 160, 163, 164, 165, 166, 201, 210, 216, 219, 230, 231, 241, 242, 246, 248, 268, 283, 287, 289, 294, 314, 328, 335, 340, 341, 343, 354, 355, 381], "nrniv_bind_thread": 388, "nrnivmodl": [1, 3, 4, 5, 7, 8, 48, 60, 76, 81, 98, 122, 154, 156, 246, 249, 250, 283, 285, 373, 381], "nrnivmodl_core_makefil": 1, "nrnmac": [227, 351], "nrnmainmenu": [210, 227, 335, 351], "nrnmainmenu_": 186, "nrnmech": [3, 48, 81, 227, 249, 351], "nrnmechmenu": [176, 183, 203, 306, 313, 330, 388], "nrnmingwenv": 249, "nrnmpi": 216, "nrnmpi_init": [160, 289, 385, 388], "nrnmpi_load": 1, "nrnmusic": 3, "nrnoc": [3, 52, 82, 83, 139, 151, 153, 154, 155, 220, 223, 246, 250, 267, 280, 282, 283, 284, 344, 347], "nrnocmodl": 81, "nrnpointmenu": [176, 183, 203, 306, 313, 330, 388], "nrnpub": 100, "nrnpy_ho2po": 56, "nrnpy_hoc": [3, 56, 241], "nrnpy_numbercheck": 56, "nrnpy_po2ho": 56, "nrnpy_pyobj_sym_": 56, "nrnpyenv": 246, "nrnpython": [3, 8, 56, 59, 163, 211, 216, 241, 314, 348, 351, 381, 388], "nrnran123": 284, "nrnran123_stat": 327, "nrnsecmenu": [176, 183, 306, 313, 388], "nrnsy": [216, 340], "nrntest": 1, "nrnthread": [1, 4, 52, 53, 60, 289], "nrntraub": 4, "nrnunit": [154, 283], "nrnunit_use_legaci": 388, "nrnversion": [52, 210, 216, 227, 268, 335, 340, 351, 388], "nrnwheel": 248, "nrnxx": [11, 92], "nrow": [197, 202, 324, 329], "nrun": [10, 11, 13, 16, 17], "ns2": 282, "ns_list": 100, "nseg": [10, 11, 14, 15, 22, 30, 33, 41, 43, 45, 46, 52, 63, 65, 66, 87, 89, 125, 126, 127, 146, 153, 156, 160, 165, 166, 169, 186, 204, 206, 275, 282, 285, 289, 295, 296, 299, 314, 315, 332, 349, 359, 360, 361, 366, 367, 368, 369, 373, 375, 388], "nsend": [160, 161, 289, 290], "nsendmax": [160, 161, 289, 290], "nsettl": [13, 16, 17, 18], "nsf": 377, "nsg": 26, "nsgneuron": 49, "nsi": 249, "nsight": [54, 242], "nsingl": 279, "nsnum": 100, "nspike": [16, 17, 18, 160, 282, 289], "nstack": [52, 268], "nstate": [150, 152, 164, 279, 281, 294], "nstep": 217, "nstimuli": 282, "nsubseg": 292, "nsy": [54, 242], "nsys_nvtx_profiler_register_onli": 242, "nt": [53, 100, 160, 254, 289], "ntask": 248, "ntau": [4, 292, 371], "ntau_hh": 388, "nth": [383, 384, 385], "nthread": [8, 53, 146, 157, 160, 163, 201, 220, 243, 275, 286, 289, 292, 328, 344, 373], "ntic": [229, 353], "ntici": [233, 357], "nticx": [233, 357], "ntran": [150, 152, 279, 281], "nts_spine": [139, 267], "nuanc": 98, "nucl": 255, "nuclear": [255, 366], "nuclei": 255, "nucleotid": 255, "nucleu": 255, "null": [1, 52, 53, 56, 216, 315, 340], "nullobject": [156, 159, 165, 184, 186, 285, 315], "nullptr": [4, 52, 60, 98], "nullptr_t": 52, "num": [54, 81, 100, 213, 298, 337], "num_el": 353, "num_inst": 60, "num_nod": 366, "num_process": [5, 8], "num_pts_3d": 299, "num_thread": [163, 292], "num_vari": 53, "numarg": [81, 138, 184, 185, 205, 266, 388], "number": [1, 3, 6, 8, 9, 10, 11, 13, 16, 22, 29, 31, 32, 36, 37, 38, 39, 40, 42, 45, 46, 49, 52, 53, 54, 60, 64, 66, 70, 81, 87, 88, 89, 91, 92, 94, 96, 100, 107, 108, 119, 120, 122, 126, 129, 133, 134, 136, 138, 144, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 182, 185, 186, 188, 190, 191, 192, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 216, 219, 220, 221, 224, 225, 227, 229, 230, 231, 233, 234, 236, 237, 242, 247, 252, 255, 257, 261, 262, 264, 266, 273, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 312, 315, 316, 317, 318, 319, 322, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 343, 344, 345, 348, 349, 351, 353, 354, 355, 357, 358, 360, 361, 363, 366, 368, 369, 370, 371, 377, 378, 381, 382, 383, 384, 385, 388], "number_of_parallel_job": 3, "numberofdataregion": [128, 256], "numberset": 312, "numbersfootnot": 120, "numberstep": [221, 345], "numel": 204, "numer": [1, 13, 14, 26, 38, 46, 58, 66, 81, 87, 88, 94, 96, 98, 99, 114, 119, 120, 126, 136, 146, 153, 154, 155, 160, 166, 185, 201, 220, 223, 255, 264, 275, 282, 283, 284, 289, 293, 296, 314, 328, 344, 347, 387, 391], "numerical_truth_valu": 328, "numpi": [1, 61, 64, 201, 246, 247, 249, 253, 292, 296, 303, 322, 328, 353, 366, 376, 387], "numproc": [81, 160, 289, 385], "numpy_element_ref": [303, 328], "numpyarrai": [201, 328], "numzero": 52, "nunn": 255, "nunzio": 255, "nusbaum": 255, "nusser": 255, "nutakki": 255, "nutrient": 368, "nvc": 7, "nvcc": 7, "nvhpc": [1, 3, 7], "nvidia": [1, 7, 54, 242, 246], "nvie": 377, "nvkernel__zn10coreneuron": 54, "nvkernel__zn10coreneuron11nrn_cur_pasepns_9nrnthreadepns_9memb_listei_f1l274_4": 54, "nvkernel__zn10coreneuron14nrn_cur_expsynepns_9nrnthreadepns_9memb_listei_f1l375_7": 54, "nvkernel__zn10coreneuron16nrn_state_expsynepns_9nrnthreadepns_9memb_listei_f1l418_10": 54, "nvkernel__zn10coreneuron18solve_interleaved1ei_f1l653_4": 54, "nvlink": 7, "nvprof": 54, "nvtx": 242, "nworker": [286, 289], "nx": [235, 359], "nxg": 255, "ny": [191, 235, 254, 255, 318, 359], "nya": 255, "nyl\u00e9n": 255, "nystagmu": 255, "n\u00e4gerl": 255, "n\u00e6ss": 255, "n\u00f6renberg": 255, "o": [0, 1, 11, 29, 53, 55, 58, 76, 81, 113, 126, 153, 163, 166, 174, 183, 190, 201, 213, 216, 227, 229, 241, 245, 250, 254, 255, 268, 282, 283, 292, 296, 304, 313, 314, 317, 328, 337, 340, 351, 353, 366, 368, 373, 385], "o0": [3, 241, 246], "o1": [21, 22, 28, 81, 160, 168, 173, 185, 197, 205, 220, 314, 326], "o2": [3, 21, 22, 28, 168, 185, 201, 205, 220], "o3": [7, 28, 201, 229, 246], "o4": [185, 201, 229], "oak": 81, "ob": [52, 238, 362], "obata": 255, "obei": [136, 153, 264, 282], "oberach": 255, "oberlaend": 255, "obermay": 255, "obexpr": [161, 290], "obfunc": [184, 204, 314, 388], "obiden": 255, "obj": [52, 56, 77, 153, 156, 159, 173, 174, 185, 196, 201, 205, 214, 223, 285, 303, 323, 328, 338], "obj1": 185, "obj2": [185, 214, 338], "obj_nam": 300, "obj_or_modul": 312, "objarr": 28, "objcmd": 56, "object": [1, 4, 8, 9, 21, 22, 29, 31, 32, 38, 42, 52, 53, 57, 60, 64, 73, 76, 77, 80, 81, 94, 96, 100, 103, 107, 123, 124, 126, 130, 134, 147, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 168, 169, 170, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 196, 197, 200, 201, 203, 204, 208, 211, 214, 220, 221, 223, 225, 229, 231, 236, 237, 242, 253, 255, 258, 262, 269, 276, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 298, 300, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 317, 323, 324, 327, 328, 330, 332, 334, 337, 338, 339, 343, 344, 345, 347, 348, 349, 353, 355, 359, 360, 361, 366, 368, 377, 382, 383, 384, 385, 388, 393], "object_": 52, "object_id": [81, 156, 185, 186, 285, 315, 388], "object_pop": [20, 72, 81, 159, 186, 315, 388], "object_push": [20, 72, 81, 159, 186, 315, 388], "objectfunc": 52, "objectref": [186, 229, 285, 315], "objectvar": [28, 72, 81, 156, 159, 173, 184, 203, 229, 231, 236, 237, 303, 330, 353, 355, 361, 388], "objectvari": 205, "objet": 178, "objref": [16, 17, 18, 19, 21, 22, 23, 32, 69, 72, 76, 77, 81, 88, 96, 134, 138, 148, 151, 153, 154, 155, 156, 159, 160, 161, 163, 165, 166, 168, 169, 170, 173, 174, 178, 179, 184, 185, 186, 188, 196, 197, 198, 200, 201, 203, 204, 211, 214, 217, 220, 223, 228, 229, 231, 235, 237, 262, 284, 300, 303, 314, 315, 328, 331, 338, 388], "objref1": 185, "objref2": 185, "objvar": [237, 361], "obliqu": [14, 255, 387], "oboff": 52, "obp": 315, "obradov": 255, "obreja": 255, "obscur": [25, 70, 80, 139, 242, 267], "observ": [3, 7, 10, 11, 25, 29, 32, 39, 45, 96, 102, 204, 235, 237, 255, 359, 361, 366], "obsolet": [140, 146, 159, 184, 185, 187, 212, 216, 220, 223, 269, 275, 288, 314, 336, 340, 344, 347], "obstacl": [292, 373], "obtain": [3, 13, 37, 39, 41, 47, 93, 96, 133, 136, 154, 158, 160, 163, 169, 198, 205, 220, 223, 229, 231, 233, 247, 255, 261, 264, 283, 287, 289, 292, 299, 300, 314, 325, 344, 347, 355, 357, 368, 377, 378, 381, 387], "obviat": [133, 159, 160, 220, 261, 288, 289, 344], "obviou": [14, 29, 111, 119, 120, 155, 242, 284, 377], "obvious": [47, 86, 119, 120, 161, 221, 290, 345, 377], "oc": [11, 28, 37, 52, 56, 66, 81, 86, 87, 92, 94, 96, 154, 170, 201, 216, 283, 300, 328], "oc_ansi": 56, "oc_class": 81, "oca_ss": [154, 283], "ocbox_": [72, 159], "ocbox_list_": [72, 159], "occasion": [2, 134, 155, 164, 201, 210, 221, 247, 262, 284, 292, 294, 328, 335, 345, 353], "occlud": [234, 358], "occupi": [64, 70, 292, 366], "occur": [13, 34, 42, 44, 53, 80, 81, 88, 89, 98, 100, 102, 103, 107, 112, 124, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 171, 188, 201, 204, 220, 224, 242, 282, 283, 284, 288, 289, 290, 292, 294, 296, 301, 316, 320, 328, 344, 348, 366, 367, 369, 376, 377, 378, 384, 385, 387], "occurr": [89, 154, 165, 201, 214, 255, 283, 295, 328, 338], "ocker": 255, "oclamp": 388, "ocmatrix": [197, 324], "ocmodl": 81, "oct2": 250, "octal": [190, 317], "octob": 320, "octopu": 255, "od": [39, 126, 154, 160, 255, 283, 289, 369], "oda": 255, "odd": [38, 66, 87, 125, 165, 201, 295, 328, 382, 388], "oddfactor": [165, 295], "odor": 255, "oertner": 255, "off": [7, 28, 32, 35, 36, 50, 52, 53, 54, 66, 67, 70, 71, 73, 76, 80, 81, 93, 94, 96, 105, 108, 119, 120, 133, 134, 147, 153, 154, 159, 160, 163, 164, 169, 170, 171, 173, 181, 182, 188, 195, 196, 200, 201, 210, 216, 220, 221, 223, 224, 229, 231, 233, 242, 246, 247, 248, 250, 255, 261, 262, 276, 282, 283, 288, 289, 292, 293, 294, 299, 300, 301, 303, 304, 311, 312, 316, 322, 323, 327, 328, 335, 340, 344, 345, 347, 348, 353, 355, 357, 368, 369, 373, 377], "offend": [81, 119, 120, 160, 289], "offer": [27, 40, 66, 76, 86, 99, 103, 105, 124, 126, 365, 366, 369, 388, 390, 393], "offici": [246, 248, 253], "offload": [7, 13], "offset": [4, 27, 47, 52, 53, 60, 86, 188, 255, 316], "often": [3, 4, 7, 28, 32, 36, 42, 52, 64, 76, 78, 81, 82, 83, 93, 94, 98, 103, 119, 123, 124, 126, 133, 134, 149, 154, 160, 161, 163, 166, 169, 170, 174, 182, 189, 195, 197, 201, 220, 223, 224, 225, 227, 242, 246, 261, 262, 278, 283, 289, 290, 292, 296, 300, 304, 312, 314, 315, 322, 324, 328, 344, 347, 348, 349, 351, 365, 366, 367, 369, 377, 387, 388], "ogata": 255, "ogawa": 255, "ogden": 255, "ogura": 255, "oh": [28, 76, 377], "ohana": 255, "ohm": [10, 11, 24, 25, 33, 37, 43, 45, 47, 66, 67, 68, 96, 108, 110, 119, 120, 166, 227, 296, 312, 351, 382, 383, 384, 388], "ohmic": 255, "ohmori": 255, "ohno": 255, "ohura": 255, "oi": [185, 255], "ojemann": 255, "ojemb": 255, "ok": [4, 53, 66, 94, 96, 100, 160, 164, 247, 289, 294, 368, 377, 378], "oka": 255, "okada": 255, "okai": 383, "okamoto": 255, "okuda": 255, "old": [4, 36, 42, 52, 53, 66, 76, 93, 98, 103, 124, 126, 140, 150, 153, 154, 159, 160, 161, 162, 165, 166, 196, 201, 208, 210, 225, 231, 233, 235, 246, 255, 279, 282, 283, 288, 289, 290, 291, 295, 296, 323, 328, 334, 335, 349, 355, 357, 359, 383, 387], "old_cvode_st": 24, "old_list": 388, "old_posit": 53, "old_siz": 60, "older": [1, 57, 76, 82, 98, 201, 246, 292, 299, 324, 328, 340, 359, 369, 387, 388], "oldflag": 289, "oldnewth": 377, "oldstyl": [149, 278], "oldtimeout": [160, 289], "olfactori": [1, 4, 5, 255, 288], "oligodendrocyt": 255, "oligodendrogliopathi": 255, "oligom": 255, "oliv": [108, 255], "olivar": 255, "olivari": 255, "oliveira": 255, "olm": 255, "olsen": 255, "olsson": 255, "olted": 255, "olyph": 255, "ol\u00e1h": 255, "omega": [151, 280], "omega0": [151, 280], "omiss": [155, 284], "omit": [29, 70, 201, 255, 288, 292, 295, 296, 298, 305, 328, 368, 369, 377, 378, 382, 387], "omiya": 255, "ommit": [119, 120, 163, 292], "omori": 255, "omp_num_thread": 242, "omurtag": 255, "on_button_press": 303, "on_cell_surfac": 292, "on_click": 304, "on_ev": 353, "on_press": 312, "on_press3": 312, "on_slid": 312, "on_valu": [220, 344], "ona": 255, "onbuild": 248, "onc": [7, 8, 42, 52, 53, 66, 70, 81, 96, 103, 107, 124, 134, 144, 160, 161, 163, 167, 169, 188, 189, 200, 201, 204, 207, 220, 227, 238, 246, 248, 253, 262, 273, 283, 289, 290, 292, 297, 316, 320, 327, 328, 333, 334, 344, 351, 362, 371, 377, 380, 383, 385, 387], "one": [0, 1, 3, 8, 9, 10, 11, 12, 13, 18, 24, 25, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 47, 49, 51, 52, 53, 55, 56, 60, 66, 67, 68, 70, 71, 73, 76, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 103, 104, 105, 110, 112, 114, 119, 120, 123, 124, 126, 127, 129, 130, 131, 133, 134, 136, 144, 147, 148, 149, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 182, 185, 186, 188, 190, 191, 192, 194, 197, 198, 200, 201, 204, 205, 207, 210, 211, 219, 220, 221, 223, 224, 227, 229, 231, 233, 234, 236, 239, 242, 246, 247, 249, 253, 255, 257, 258, 259, 261, 262, 264, 268, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 315, 316, 317, 318, 319, 321, 324, 325, 327, 328, 333, 335, 338, 343, 344, 345, 347, 348, 351, 353, 355, 357, 358, 360, 365, 366, 367, 368, 371, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388, 393], "oneapi": 7, "oneflow": 377, "onerun": [10, 11, 13, 18], "ones": [3, 41, 42, 76, 292, 373, 377, 384], "ongo": [71, 255], "onli": [0, 3, 6, 9, 13, 14, 16, 17, 18, 22, 25, 27, 28, 29, 32, 33, 36, 40, 41, 45, 51, 53, 56, 63, 66, 67, 70, 74, 76, 80, 81, 89, 90, 94, 96, 98, 103, 105, 108, 119, 120, 123, 124, 126, 129, 133, 134, 136, 139, 144, 147, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 180, 182, 185, 186, 188, 190, 191, 196, 197, 200, 201, 204, 205, 210, 211, 213, 216, 219, 220, 221, 223, 227, 229, 231, 233, 234, 237, 242, 244, 246, 247, 252, 253, 255, 257, 261, 262, 264, 267, 268, 273, 276, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 296, 299, 300, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 317, 318, 320, 323, 324, 327, 328, 333, 334, 335, 337, 340, 343, 344, 345, 347, 348, 351, 353, 355, 357, 358, 359, 361, 366, 367, 368, 369, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "onlin": [1, 126, 247, 255, 289, 365, 367, 368, 370, 371, 376, 377, 378, 388, 391], "ono": 255, "onset": [29, 76, 94, 100, 147, 153, 201, 220, 255, 276, 282, 328, 344], "ont": 182, "onto": [3, 27, 29, 32, 36, 45, 46, 52, 56, 74, 76, 80, 104, 122, 153, 155, 159, 160, 180, 182, 201, 220, 231, 237, 255, 282, 284, 288, 289, 299, 310, 312, 328, 344, 355, 361, 377, 382, 383, 384, 385, 388], "ontologi": 292, "ontology_id": 284, "oo": [177, 307], "oop": [45, 52, 96], "ooyen": 255, "op": [33, 161, 290, 377], "op2str": [201, 328], "opatz": 255, "opcod": 52, "open": [0, 8, 14, 16, 17, 18, 31, 38, 46, 47, 50, 63, 70, 76, 81, 86, 89, 93, 94, 95, 103, 107, 124, 126, 133, 156, 173, 181, 184, 187, 188, 189, 190, 191, 197, 200, 201, 204, 222, 225, 228, 229, 231, 233, 240, 246, 247, 248, 253, 255, 261, 282, 285, 303, 311, 312, 314, 316, 317, 318, 324, 327, 328, 345, 346, 349, 352, 353, 355, 357, 365, 367, 368, 370, 371, 373, 376, 377, 378, 380, 385, 387, 388], "openacc": [7, 8, 54, 242], "openlook": [231, 355], "openmp": [7, 8, 54, 242], "openmpi": [1, 3, 7, 10, 246, 247, 248, 340], "openstack": 377, "openworm": 255, "oper": [4, 25, 33, 37, 42, 52, 53, 57, 70, 76, 81, 96, 103, 124, 127, 155, 160, 163, 169, 185, 197, 199, 201, 214, 216, 227, 229, 231, 246, 247, 250, 255, 284, 289, 293, 295, 299, 324, 326, 328, 338, 339, 340, 351, 355, 366, 379, 385, 387, 388], "opera": 70, "operand": 52, "opiat": 255, "opinion": [160, 289], "opitz": 255, "oppon": 255, "opportun": 377, "oppos": [156, 159, 229, 255, 285, 288, 293, 353, 387], "opposit": [25, 70, 108, 136, 166, 231, 234, 264, 296, 355, 358, 369], "opsal": 255, "opstr": [201, 328], "opt": [246, 247, 248, 340, 385], "optic": [40, 255], "optim": [3, 7, 29, 42, 76, 87, 95, 103, 124, 126, 133, 134, 135, 154, 160, 201, 227, 242, 254, 255, 261, 262, 263, 283, 289, 328, 351, 391], "optimis": [3, 6, 7, 53, 93, 246, 255], "optimist": [47, 86], "optimization2": 96, "optimize_node_ord": [286, 289], "optimizerpanel": [133, 261], "optimum": [94, 160, 289], "option": [0, 1, 4, 7, 10, 11, 13, 16, 17, 28, 29, 35, 45, 46, 47, 52, 54, 59, 64, 70, 77, 81, 82, 86, 94, 99, 104, 140, 146, 151, 153, 154, 155, 159, 160, 161, 164, 165, 178, 182, 185, 188, 190, 192, 197, 201, 203, 205, 207, 220, 223, 227, 229, 231, 233, 235, 237, 241, 242, 244, 246, 247, 248, 268, 269, 275, 280, 283, 284, 288, 289, 290, 294, 295, 308, 312, 314, 316, 317, 319, 324, 328, 330, 333, 334, 340, 344, 347, 351, 353, 355, 357, 359, 360, 361, 366, 369, 370, 373, 374, 377, 378, 381, 382, 385, 387, 388], "optionala": 53, "opto": 255, "optogenet": 255, "oran": 45, "orang": [47, 86, 229, 353], "orban": 255, "ordemann": 255, "order": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 29, 32, 33, 37, 42, 46, 52, 53, 60, 65, 66, 67, 70, 77, 80, 81, 88, 94, 96, 98, 100, 103, 121, 124, 126, 131, 133, 134, 139, 144, 153, 154, 155, 156, 159, 160, 161, 164, 166, 167, 169, 170, 173, 185, 188, 197, 201, 204, 208, 218, 220, 223, 225, 227, 229, 231, 234, 237, 241, 242, 246, 247, 248, 249, 250, 255, 259, 261, 262, 267, 273, 282, 283, 284, 285, 288, 289, 290, 292, 294, 296, 297, 300, 303, 316, 324, 328, 330, 334, 342, 344, 347, 349, 351, 353, 355, 358, 361, 366, 369, 370, 377, 381, 385, 387], "ordinari": [40, 369], "org": [40, 41, 46, 47, 52, 64, 89, 93, 151, 160, 200, 242, 246, 247, 248, 249, 254, 255, 280, 289, 327, 368, 370, 373, 377, 380, 391], "organ": [13, 29, 45, 51, 65, 100, 122, 155, 160, 173, 174, 197, 201, 231, 250, 254, 255, 284, 289, 303, 304, 324, 328, 355, 377, 383, 388], "organel": 255, "organellar": 255, "organis": [53, 381], "organogenesi": 255, "organotyp": 255, "orien": 255, "orient": [25, 70, 73, 81, 104, 126, 154, 166, 184, 231, 234, 255, 275, 283, 295, 296, 314, 344, 355, 358, 386, 388], "origin": [27, 28, 29, 36, 40, 43, 45, 53, 56, 58, 64, 66, 68, 70, 81, 89, 96, 104, 133, 136, 151, 153, 154, 160, 163, 166, 185, 188, 190, 200, 201, 219, 221, 229, 231, 233, 234, 236, 237, 246, 253, 255, 261, 264, 280, 282, 283, 289, 292, 296, 316, 317, 327, 328, 343, 345, 353, 355, 357, 358, 360, 361, 371, 377, 383, 388], "orio": 255, "orman": 255, "ornitz": 255, "orozco": 255, "orphan": [47, 86], "orphanoudaki": 255, "ort": 255, "orthogon": [27, 50, 104, 197, 324], "ortiz": 255, "ortner": 255, "or\u0142owski": 255, "os": 76, "osborn": 255, "oscil": [126, 223, 255, 347, 369], "oscillatori": 255, "oscilloscop": [224, 348], "osmosensor": 255, "osorio": 255, "osrc_": 242, "osrt": 242, "oss": 255, "ost": 255, "ostream": 53, "ostroumov": 255, "osx": [160, 216, 246, 248, 289, 340], "osypenko": 255, "otah": 255, "otani": 255, "other": [4, 7, 14, 25, 27, 29, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 54, 59, 60, 64, 66, 67, 68, 70, 73, 81, 82, 83, 84, 86, 87, 89, 94, 95, 96, 99, 100, 103, 109, 111, 112, 119, 120, 123, 124, 126, 127, 130, 136, 137, 147, 149, 153, 154, 155, 158, 160, 161, 163, 164, 165, 169, 171, 173, 175, 182, 185, 188, 191, 195, 197, 201, 203, 204, 205, 209, 214, 216, 219, 220, 223, 225, 227, 228, 229, 234, 236, 237, 240, 242, 246, 247, 248, 251, 255, 258, 264, 265, 276, 278, 282, 283, 284, 287, 288, 289, 290, 292, 294, 295, 301, 303, 305, 312, 316, 318, 322, 324, 328, 330, 331, 338, 340, 343, 344, 347, 349, 351, 352, 353, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 379, 381, 382, 383, 385, 387, 388, 391, 393], "otherw": 52, "otherwis": [3, 7, 53, 56, 81, 108, 133, 134, 149, 153, 160, 161, 164, 165, 168, 173, 182, 185, 186, 190, 196, 197, 198, 201, 203, 204, 207, 210, 214, 216, 220, 226, 231, 235, 239, 261, 262, 278, 282, 283, 288, 289, 290, 292, 294, 295, 298, 302, 303, 312, 315, 317, 323, 324, 325, 328, 330, 333, 335, 338, 340, 344, 350, 355, 359, 367, 368, 369, 370, 377, 378, 382], "otolaryngologi": 255, "otolith": 255, "otopalik": 255, "ottaviani": 255, "otto": 255, "ou": 255, "ouanoun": 255, "ouar": 255, "ouchi": 255, "ouchouch": 255, "ought": [81, 186], "our": [10, 11, 12, 25, 32, 41, 44, 53, 59, 66, 67, 68, 76, 80, 82, 86, 96, 100, 101, 104, 105, 110, 114, 116, 117, 154, 161, 189, 244, 283, 290, 292, 349, 367, 370, 371, 372, 373, 377, 378, 382, 385, 386, 387, 388], "our_argc": 52, "our_argv": 52, "ourep": 255, "ourselin": 255, "ourselv": [67, 86, 96], "out": [0, 3, 4, 10, 11, 13, 25, 28, 29, 40, 47, 49, 50, 52, 56, 66, 70, 76, 80, 81, 93, 94, 96, 100, 104, 110, 112, 119, 120, 127, 129, 136, 139, 147, 153, 154, 159, 160, 161, 171, 173, 182, 184, 187, 192, 195, 197, 198, 201, 203, 204, 210, 219, 220, 223, 227, 229, 231, 233, 234, 239, 247, 248, 249, 255, 257, 264, 267, 276, 282, 283, 288, 289, 290, 292, 301, 303, 312, 314, 319, 322, 324, 325, 328, 330, 335, 343, 344, 347, 351, 353, 355, 357, 358, 360, 368, 369, 377, 378, 382, 383, 385, 388, 393], "out2in": [219, 343], "outcom": [80, 127, 255], "outdat": 335, "outer": 250, "outermost": 250, "outfil": [192, 319], "outlier": 47, "outlin": [7, 46, 54, 66, 70, 76, 99], "outliv": 53, "output": [0, 3, 4, 9, 32, 33, 35, 37, 42, 46, 49, 52, 53, 54, 74, 75, 86, 89, 107, 117, 118, 133, 134, 140, 153, 154, 159, 160, 161, 184, 188, 189, 192, 197, 201, 210, 219, 241, 249, 250, 255, 261, 262, 268, 269, 282, 283, 288, 289, 290, 296, 314, 316, 318, 319, 323, 324, 327, 328, 335, 342, 343, 353, 369, 383, 387, 388], "output_notebook": [382, 387, 388], "output_tim": 282, "output_times_nc": 282, "outputcel": [157, 160, 161, 286, 289, 290], "outputvari": [134, 262], "outset": [119, 120, 173, 201, 303, 328], "outsid": [1, 3, 53, 54, 56, 129, 133, 134, 154, 155, 160, 163, 170, 201, 205, 233, 242, 248, 255, 257, 261, 262, 283, 284, 289, 292, 300, 328, 357, 366], "outside_var": [170, 300], "outstand": [220, 225, 344, 349], "outward": [151, 153, 155, 280, 282, 284], "outwardli": 255, "outweigh": 380, "ovcharenko": 255, "over": [0, 1, 16, 17, 25, 38, 41, 42, 46, 47, 53, 64, 66, 68, 70, 81, 86, 87, 94, 96, 100, 103, 110, 112, 124, 133, 136, 149, 154, 155, 156, 160, 161, 167, 169, 176, 179, 185, 197, 200, 201, 204, 220, 223, 227, 229, 230, 231, 240, 248, 249, 255, 261, 264, 278, 283, 284, 285, 289, 290, 292, 296, 297, 299, 306, 309, 314, 324, 327, 328, 344, 347, 351, 353, 354, 355, 360, 366, 368, 370, 373, 377, 378, 382, 387], "overal": [25, 89, 96, 255], "overcom": [4, 12, 89, 166, 255, 296, 298], "overcompens": 96, "overestim": 40, "overflow": [81, 160, 171, 242, 289, 301], "overhaul": 82, "overhead": [13, 136, 159, 160, 161, 170, 200, 201, 207, 218, 220, 264, 288, 289, 290, 300, 327, 328, 342, 344], "overkil": 87, "overlai": 45, "overlap": [12, 37, 110, 112, 200, 327, 382], "overload": [53, 155, 163, 284], "overpow": [119, 120], "overreach": [119, 120], "overrid": [7, 70, 314, 351], "overriden": 348, "overrun": 51, "oversampl": 255, "overset": 95, "overstreet": 255, "oversubscrib": 385, "overview": [45, 57, 60, 87, 140, 146, 165, 255, 275, 295, 314, 373, 374, 388, 393], "overwhelm": 76, "overwrit": [29, 42, 45, 103, 124, 201, 328, 377], "overwritten": [66, 377, 383], "overwrot": 28, "oviedo": 255, "ovsepian": 255, "ow": 31, "owen": 255, "owl": 255, "own": [27, 40, 45, 47, 53, 59, 66, 68, 73, 76, 81, 86, 90, 92, 93, 96, 100, 103, 107, 124, 125, 126, 153, 154, 159, 160, 161, 173, 201, 220, 225, 229, 231, 234, 246, 253, 282, 283, 288, 289, 290, 303, 314, 328, 344, 349, 353, 355, 358, 370, 372, 377, 382, 385, 393], "owner": [173, 303], "ownership": [255, 380], "owning_handl": [53, 60], "owning_identifi": 60, "owning_vinyl_handl": 53, "oxaliplatin": 255, "oxford": [126, 255], "oxid": 255, "oz": 255, "oza": 255, "ozbai": 255, "ozcan": 255, "ozer": 255, "ozinga": 255, "p": [25, 27, 38, 40, 43, 47, 52, 63, 68, 69, 77, 81, 93, 104, 105, 119, 120, 126, 127, 144, 177, 182, 189, 190, 200, 201, 204, 211, 217, 223, 229, 231, 233, 235, 237, 242, 248, 249, 254, 255, 273, 282, 307, 314, 317, 327, 328, 333, 347, 355, 357, 359, 361, 363, 368, 377, 382, 383, 387, 388], "p0": [105, 370], "p0degrad": 370, "p0product": 370, "p0top1": 370, "p0vec": 370, "p1": [105, 201, 250, 328, 370], "p1degrad": 370, "p1top2": 370, "p1vec": 370, "p2": [201, 370], "p2200": 54, "p2degrad": 370, "p2t2toc": 370, "p2vec": 370, "p2y": 255, "p3dconst": 81, "p8": 54, "p9": 388, "p_symlist": 52, "pa": [14, 22, 25, 31, 37, 43, 45, 47, 66, 67, 68, 81, 82, 83, 89, 96, 108, 153, 156, 203, 204, 242, 282, 285, 314, 328, 330, 382, 383, 384, 388], "pacakag": 249, "pacemak": [29, 255], "pacinian": 255, "pack": [157, 160, 286, 289], "packag": [0, 1, 3, 7, 55, 59, 61, 170, 220, 243, 246, 248, 249, 253, 300, 344, 369, 373, 377, 380, 387], "package_file_nam": 247, "package_full_nam": 247, "packagesbuild": 247, "packard": 189, "packet": 255, "pacman": 249, "pad": [50, 201, 328, 373], "padamsei": 255, "padilla": 255, "padmakumar": 255, "padmashri": 255, "paduraru": 255, "page": [0, 14, 27, 40, 46, 47, 50, 53, 66, 67, 70, 73, 76, 82, 83, 86, 96, 104, 106, 127, 231, 240, 242, 246, 247, 255, 277, 293, 314, 355, 357, 363, 382, 383, 384, 385, 387], "pahwa": 255, "pai": [40, 53, 54, 160, 289], "paid": 40, "paik": 255, "pain": [42, 76, 255], "painless": 66, "paint": 70, "pair": [13, 51, 53, 60, 64, 74, 94, 99, 100, 108, 129, 134, 136, 153, 154, 159, 160, 166, 188, 197, 201, 220, 225, 227, 231, 255, 257, 262, 282, 283, 288, 289, 296, 316, 324, 328, 344, 349, 351, 355, 382, 383, 387, 388], "pairwis": 255, "paiz": 255, "pajo": 255, "pakdaman": 255, "paknahad": 255, "palacio": 255, "paladini": 255, "palathing": 255, "palest": 74, "palett": [84, 109, 229, 231, 353, 355], "pallid": 255, "pallidu": 255, "palma": 255, "palmer": 255, "palmitoyl": 255, "palva": 255, "palyanov": 255, "pampaloni": 255, "pamphlett": 255, "pan": [70, 255, 388], "panares": 255, "panch": 255, "pancreat": 255, "panda": [388, 393], "pandi": 255, "pandoc": 0, "panel": [12, 14, 25, 27, 28, 29, 31, 32, 36, 37, 42, 45, 46, 47, 66, 76, 86, 94, 96, 99, 103, 104, 105, 106, 107, 112, 114, 123, 124, 128, 129, 130, 131, 132, 134, 143, 144, 145, 147, 149, 154, 155, 173, 175, 176, 179, 182, 203, 210, 220, 227, 229, 230, 232, 238, 256, 257, 258, 259, 260, 262, 269, 272, 273, 274, 276, 278, 283, 284, 303, 305, 306, 309, 312, 330, 335, 344, 351, 353, 354, 356, 362, 370], "panel_scrol": [182, 231, 312, 355], "panella": 255, "panelstyl": [144, 273], "pang": 255, "pangratz": 255, "pankratz": 255, "panksepp": 255, "panner": 70, "panzeri": 255, "paol": 255, "papadopoulo": 255, "papasavva": 255, "papastathopoulo": 255, "pape": 255, "paper": [25, 35, 40, 46, 47, 49, 100, 127, 134, 163, 177, 200, 226, 231, 262, 292, 307, 327, 350, 355, 373], "paper_plac": [177, 183, 307, 313], "papoutsi": 255, "par": 255, "paradigm": [152, 255, 281], "paradox": 255, "paragraph": [161, 201, 289, 290, 328], "paralel": [136, 155, 284], "parallel": [3, 4, 7, 13, 16, 25, 26, 29, 66, 81, 82, 100, 126, 136, 146, 153, 154, 157, 158, 161, 171, 200, 220, 225, 242, 246, 254, 255, 264, 275, 282, 283, 284, 286, 287, 290, 301, 327, 344, 349, 363, 367, 373, 377, 378, 382, 383, 384, 386], "parallel_test": 3, "parallelcomput": 36, "parallelcontext": [1, 8, 16, 23, 35, 53, 136, 140, 146, 157, 159, 161, 166, 201, 220, 225, 242, 264, 269, 275, 282, 286, 288, 290, 296, 300, 314, 328, 344, 349, 363, 385, 388, 393], "parallelnetmanag": [35, 140, 146, 157, 160, 269, 275, 286, 289], "parallelnetwork": 35, "paralysi": 255, "param": [13, 16, 27, 28, 29, 52, 53, 68, 96, 210, 335, 384, 385], "param_info": 60, "param_s": 289, "paramat": 382, "paramet": [1, 4, 10, 11, 12, 14, 16, 17, 18, 24, 25, 26, 27, 28, 31, 32, 33, 36, 38, 41, 42, 43, 46, 52, 64, 66, 67, 68, 74, 75, 87, 93, 98, 100, 103, 104, 107, 109, 113, 115, 117, 118, 119, 123, 124, 126, 128, 129, 130, 134, 138, 143, 144, 145, 146, 147, 148, 149, 155, 160, 163, 165, 166, 175, 176, 185, 201, 210, 220, 221, 223, 225, 227, 233, 238, 248, 251, 255, 256, 257, 258, 262, 266, 272, 273, 274, 275, 276, 277, 278, 279, 284, 288, 289, 292, 293, 295, 296, 305, 306, 314, 328, 335, 344, 345, 347, 349, 351, 357, 362, 366, 367, 368, 371, 373, 374, 382, 383, 385, 386, 387, 388, 391, 393], "parameter": [27, 65, 87, 94, 104, 129, 201, 255, 257, 328, 376, 384], "parameter_var": 250, "parameterizedcod": 121, "parameterpanel": [133, 261], "parameterrang": [128, 256], "parameterrangelimit": [128, 256], "parameterstovari": [128, 256], "parametr": 255, "paramount": [166, 296], "paramt": 27, "paramyotonia": 255, "paranod": 255, "paranrn": [35, 160, 161, 216, 289, 290], "parashar": 255, "parasit": [220, 344], "parasuram": 255, "parasympathet": 255, "paraventricular": 255, "paravertebr": 255, "parcon": 289, "pare": 255, "pared": 255, "parekh": 255, "paren": 28, "parent": [47, 60, 86, 153, 156, 160, 161, 165, 166, 167, 168, 223, 231, 234, 255, 282, 285, 289, 290, 295, 296, 297, 298, 314, 344, 347, 355, 358, 377, 382, 388], "parent_connect": [146, 165, 168, 275, 295, 298, 388], "parent_nod": [146, 165, 275, 295, 388], "parent_sect": [146, 165, 275, 295, 388], "parenthes": [76, 94, 119, 120, 163, 185, 201, 204, 292, 314, 317, 328], "parentsec": 314, "parentsect": 388, "parentseg": [275, 295, 298, 314, 344, 388], "parentx": [314, 388], "paresthesia": 255, "pari": 255, "parisi": 255, "park": 255, "parker": 255, "parkinson": 255, "parkinsonian": 255, "parm": [150, 152, 279, 281], "parm1": [148, 277], "parm2": [148, 277], "parm3": [148, 277], "parmvec": [150, 279], "paroxysm": 255, "parra": 255, "parrish": 255, "pars": [0, 40, 52, 58, 81, 154, 170, 182, 197, 204, 215, 220, 233, 283, 300, 324, 339, 357], "parsact": [3, 241], "parser": [52, 76, 81, 185, 204], "parsi": 255, "part": [1, 4, 10, 11, 12, 24, 25, 32, 35, 39, 52, 53, 54, 56, 60, 66, 70, 74, 80, 81, 89, 94, 96, 100, 126, 127, 145, 151, 154, 156, 160, 173, 188, 195, 201, 204, 217, 225, 229, 233, 234, 237, 238, 244, 255, 274, 280, 283, 285, 289, 292, 303, 314, 316, 322, 328, 341, 344, 345, 349, 353, 357, 358, 361, 362, 365, 366, 368, 369, 371, 374, 377, 378, 382, 383, 384, 385, 387, 388], "part_num": 387, "parthasarathi": 255, "parti": 377, "partial": [1, 80, 133, 154, 254, 255, 261, 283, 292, 366], "particip": [1, 136, 160, 264, 289], "particl": [255, 373], "particular": [3, 7, 24, 25, 28, 32, 39, 40, 42, 43, 47, 50, 53, 56, 66, 76, 86, 89, 93, 94, 96, 100, 103, 119, 120, 124, 126, 131, 133, 136, 144, 153, 154, 155, 156, 159, 160, 161, 163, 173, 177, 201, 203, 211, 220, 227, 231, 242, 255, 259, 261, 264, 273, 277, 282, 283, 284, 285, 288, 289, 290, 292, 303, 307, 328, 330, 344, 351, 355, 365, 366, 369, 382, 383, 384, 387, 388], "particularli": [25, 54, 126, 127, 154, 219, 223, 242, 283, 331, 343, 347, 369, 377], "partida": 255, "partit": [157, 160, 286, 289], "partli": [80, 328], "partran": [3, 241], "partridg": 255, "partzsch": 255, "parvalbumin": [255, 372], "parviainen": 255, "par\u00e9": 255, "pascotto": 255, "pashut": 255, "pass": [1, 3, 7, 10, 11, 13, 27, 34, 52, 53, 54, 59, 60, 81, 98, 99, 100, 134, 148, 154, 155, 159, 160, 163, 164, 168, 169, 185, 188, 201, 204, 205, 211, 216, 220, 242, 246, 248, 255, 262, 268, 277, 282, 283, 284, 288, 289, 292, 293, 294, 295, 312, 314, 316, 328, 331, 340, 344, 359, 360, 366, 368, 369, 373, 377, 381, 382, 385, 387, 388], "passag": [159, 288], "passiv": [14, 24, 25, 31, 43, 45, 66, 96, 153, 154, 223, 255, 282, 283, 347, 382, 383, 384, 388], "passive0": [153, 282], "passlack": 255, "password": [158, 160, 247, 287, 289], "past": [3, 17, 36, 70, 94, 96, 150, 159, 160, 230, 242, 279, 288, 289, 354], "pastor": 255, "pat": 70, "patch": [3, 44, 96, 127, 153, 255, 282, 379, 388], "patdemo": 46, "patel": 255, "path": [1, 7, 27, 43, 47, 54, 55, 57, 68, 76, 94, 104, 105, 122, 126, 131, 133, 154, 158, 160, 166, 167, 170, 188, 211, 228, 231, 234, 236, 241, 242, 246, 247, 248, 249, 255, 259, 261, 283, 287, 289, 292, 296, 297, 300, 316, 352, 355, 358, 360, 368, 373, 377, 381, 385], "path_to_your_desktop": 31, "pathnam": [188, 316], "pathogen": 255, "pathogenesi": 255, "patholog": [64, 255], "pathologi": 255, "pathto": 35, "pathwai": 255, "patient": [134, 255, 262], "patil": 255, "patirnich": 255, "patoari": 255, "paton": 255, "patrec": 255, "patriat": 255, "patrich": 255, "patrickporto": 377, "pattern": [13, 14, 32, 46, 47, 53, 65, 66, 70, 73, 86, 87, 159, 160, 166, 201, 220, 229, 255, 288, 289, 296, 328, 343, 344, 353, 369], "pattern8": 70, "patterni": 70, "patternstim": [156, 281, 282, 285, 388], "paucar": 255, "paulsen": 255, "paus": 255, "pava": 255, "pavlov": 255, "pavlovian": 255, "pav\u00f3n": 255, "pawlowski": 255, "pawlu": 255, "paxi": [138, 266], "paydarfar": 255, "payn": 255, "pazo": 255, "pb": 385, "pbio": 255, "pbr": 255, "pc": [8, 10, 11, 13, 16, 23, 48, 49, 52, 126, 127, 160, 161, 189, 219, 233, 282, 289, 290, 343, 357, 385], "pc1": [160, 289], "pc2": [160, 289], "pcbi": [255, 377], "pci": 363, "pclamp": 87, "pcontinu": [157, 161, 286, 290], "pcr": 255, "pd": [255, 388], "pde": 255, "pdf": [25, 127, 200, 254, 255, 327, 370], "peach": 255, "peachei": 255, "peak": [41, 80, 94, 95, 109, 153, 230, 282, 354, 375, 382], "pealei": 30, "pearc": 255, "pearc20": 255, "pecevski": 255, "pedant": 160, "pedersen": 255, "pedrocchi": 255, "pedunculopontin": 255, "peer": [46, 255, 377], "pei": 255, "pelayo": 255, "pele": 255, "pelizzari": 255, "pelleti": 255, "pelot": 255, "pelt": 255, "pen": [189, 229, 233, 353, 357], "pena": 255, "penalba": 255, "penalti": 58, "pend": [159, 160, 188, 220, 232, 288, 289, 316, 344, 356], "pendulum": [151, 280], "pendyam": 255, "penetr": 255, "peng": 255, "pennington": 255, "peopl": [36, 49, 81, 314, 316, 377, 392], "pep": [378, 379], "peptid": 255, "peptidas": 255, "per": [4, 41, 53, 54, 60, 64, 71, 81, 92, 94, 133, 134, 149, 154, 155, 159, 160, 163, 175, 191, 197, 198, 201, 219, 220, 224, 229, 248, 255, 261, 262, 278, 283, 284, 288, 289, 292, 305, 318, 324, 325, 328, 330, 343, 344, 348, 369, 370, 371, 373, 377, 378], "percentag": [41, 241], "percept": 255, "perceptron": 255, "percutan": 255, "pereda": 255, "pereira": [254, 255, 377], "perel": 255, "peretz": 255, "perez": 255, "perf": 54, "perf_count": [340, 359], "perfect": [66, 94, 96, 255, 377], "perfor": 255, "perform": [0, 1, 3, 4, 7, 10, 11, 13, 24, 25, 29, 33, 36, 37, 45, 52, 53, 58, 59, 60, 70, 81, 93, 100, 126, 133, 136, 151, 155, 160, 161, 163, 197, 201, 220, 227, 229, 231, 234, 243, 246, 248, 249, 253, 254, 255, 261, 264, 280, 284, 289, 290, 292, 323, 324, 328, 344, 351, 353, 355, 358, 366, 377, 387, 388], "perfringen": 255, "perg": 255, "perhap": [25, 45, 81, 126, 160, 161, 164, 201, 289, 290, 292, 294, 328, 377], "periaqueduct": 255, "periaxon": 255, "perich": 255, "perigenicul": 255, "periglomerular": 255, "perim_per_area": 292, "perimet": [86, 255, 292], "perin": 255, "perinat": 255, "perinod": 255, "period": [9, 70, 71, 153, 201, 220, 255, 282, 328, 344, 377, 378, 382], "peripher": 255, "perisoma": 255, "perisomat": 255, "perkel": 255, "perkin": 255, "perlmutt": 255, "perm_vector": 53, "perman": [169, 231, 355], "permeabl": [137, 255, 265, 292], "permiss": [24, 377], "permit": [53, 166, 255, 296, 333, 377, 387, 388], "permitt": 255, "permut": [53, 197, 289, 324], "pernet": 255, "pernot": 255, "pern\u00eda": 255, "peron": 255, "perpendicular": [50, 86, 234, 358], "perr": 56, "perra": 255, "perreault": 255, "perrier": 255, "perrin": 255, "perrinet": 255, "persist": [3, 53, 54, 80, 96, 154, 201, 229, 255, 283, 328, 353], "person": [7, 40, 242, 255, 387], "perspect": [40, 94, 255, 314, 377], "pertain": [76, 160, 289], "perturb": [29, 100, 255], "pertusa": 255, "perum": 255, "perus": [227, 351], "pervouchin": 255, "peskin": 255, "peter": [220, 255, 344], "peterchev": 255, "peterka": 255, "peterson": 255, "petersson": 255, "petkov": 255, "petreanu": 255, "petrini": 255, "petroccion": 255, "petrou": 255, "petrovici": 255, "petsch": 255, "pettersen": 255, "pezo": 255, "pezzoli": 255, "pe\u00f1a": 255, "pf": 52, "pfaffing": 255, "pfanzelt": 255, "pfc": 255, "pfd": 52, "pfd_vp": 52, "pfeiffer": 255, "pfeil": 255, "pfl\u00fcger": 255, "pfo": 52, "pfo_vp": 52, "pfr": 52, "pfrd": 52, "pfrd_vp": 52, "pfri": 52, "pfri_vp": 52, "pfro": 52, "pfro_vp": 52, "pfrs_vp": 52, "pfrv": 52, "pfrv_vp": 52, "pfs_vp": 52, "pfv_vp": 52, "pfwm": [45, 47, 76, 86, 99, 103, 124, 127], "pgi": [3, 7], "pgmtop": 70, "pham": 255, "pharmaceut": 255, "pharmacodynam": 255, "pharmacogenet": 255, "pharmacokinet": 255, "pharmacolog": 255, "pharmacologi": 255, "pharmacologica": 255, "pharmacometr": 255, "pharmacotherapi": 255, "phase": [94, 96, 129, 136, 160, 201, 229, 230, 231, 242, 255, 257, 264, 289, 328, 353, 354, 355, 377, 378], "phase2": [160, 289], "phase_begin": 242, "phase_end": 242, "phasic": 255, "phenomena": [100, 255, 365, 366], "phenomenolog": [255, 366, 373], "phenomenon": [25, 80], "phenotyp": 255, "phenytoin": 255, "phi": [81, 193, 255, 320, 388], "phillip": 255, "philosoph": 255, "philosophi": 81, "philox4x32": [200, 327], "phohomsiri": 255, "phoka": 255, "phone": 387, "phosphatidylinositol": 255, "phosphoryl": 255, "photo": 255, "photoelectr": 255, "photon": 255, "photoreceptor": 255, "php": 246, "phpbb": 1, "phy2": 255, "physic": [66, 76, 119, 120, 154, 160, 193, 227, 237, 255, 283, 289, 320, 351, 361, 366, 369], "physica": 255, "physiol": [46, 371], "physiolog": [66, 155, 255, 284], "physiologi": 255, "physiologyweb": 41, "physrev": 255, "physrevlett": 255, "physrevresearch": 255, "pi": [15, 28, 52, 81, 119, 120, 125, 136, 148, 154, 166, 173, 182, 185, 190, 193, 195, 201, 210, 211, 228, 229, 233, 250, 264, 277, 283, 296, 303, 312, 314, 317, 320, 322, 328, 335, 352, 353, 357, 382, 383, 384, 385, 387, 388], "piasini": 255, "pic": 255, "piccion": 255, "pichon": 255, "pick": [13, 16, 29, 43, 76, 78, 94, 96, 127, 138, 200, 201, 209, 239, 247, 248, 266, 327, 328, 367, 377, 378], "picker": 255, "pickl": [160, 289], "pickle_fil": 387, "pickleabl": [160, 289], "pickvector": [209, 227, 229, 351, 353], "picon": 255, "pictur": [24, 37, 70, 89, 127, 130, 147, 160, 227, 234, 258, 276, 351, 358, 377], "pid": 242, "piec": [3, 33, 35, 36, 41, 45, 66, 76, 81, 160, 161, 197, 231, 289, 290, 324, 355, 382, 385, 388], "piecewis": [201, 328], "piekarz": 255, "pieneman": 255, "pier12013108": 255, "pierc": 255, "pierr": 255, "pig": 255, "pignatelli": 255, "piii": [198, 325], "pij": 29, "pike": [81, 126], "pile": [28, 127], "pimashkin": 255, "pimentel": 255, "pimpinella": 255, "pinato": 255, "pinaud": 255, "pine": 201, "pinho": 255, "pinit": [157, 161, 286, 290], "pinki": 160, "pinotsi": 255, "pinpoint": 126, "pinto": 255, "pioneer": 255, "pip": [0, 1, 3, 6, 63, 82, 93, 240, 244, 246, 247, 248, 253, 363, 381, 387], "pip3": [0, 240, 246, 247], "pipe": [226, 246, 350], "pipelin": [248, 249, 255], "pipkin": 255, "piriform": 255, "pirondini": 255, "pissadaki": 255, "pitch": 255, "pitfal": [40, 47], "pithapuram": 255, "pitsch": 255, "pitterl": 255, "piwkowska": 255, "pix_fmt": 63, "pixel": [70, 173, 175, 177, 229, 237, 255, 303, 305, 307, 353, 361], "pizzarelli": 255, "pi\u00f1a": 255, "pk": 255, "pka": 255, "pkg": [240, 246, 247, 253], "pkgproj": 247, "pkzip": 90, "pl": [229, 353], "place": [0, 12, 13, 32, 33, 35, 36, 37, 39, 42, 44, 50, 53, 66, 69, 70, 77, 79, 81, 89, 96, 99, 108, 111, 117, 119, 120, 127, 134, 149, 151, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 175, 177, 179, 188, 190, 191, 197, 201, 204, 205, 207, 218, 220, 221, 223, 225, 227, 229, 231, 233, 236, 242, 247, 249, 255, 262, 278, 280, 283, 284, 288, 289, 290, 292, 294, 295, 296, 299, 300, 303, 305, 307, 309, 316, 317, 318, 320, 324, 328, 333, 342, 344, 345, 347, 349, 351, 353, 355, 357, 360, 366, 367, 373, 377, 383, 385], "placehold": [4, 387], "placement": [81, 110, 173, 182, 183, 229, 255, 303, 312, 313, 353], "plai": [4, 28, 63, 64, 87, 134, 153, 154, 198, 200, 201, 202, 210, 219, 220, 221, 223, 225, 242, 249, 255, 262, 282, 283, 314, 325, 327, 328, 329, 335, 343, 344, 345, 347, 349, 366, 369], "plain": [42, 53, 76, 92, 94, 99, 105, 190, 317, 342, 368, 377], "plan": [66, 88, 89, 255, 377], "plana": 255, "planar": 255, "planck": 255, "plane": [27, 68, 104, 126, 229, 230, 231, 234, 237, 353, 354, 355, 358, 361, 373, 383], "planner": 377, "plasma": [163, 292, 366, 369], "plastic": [126, 255, 369], "plata": 255, "plateau": 255, "platel": 255, "platform": [1, 3, 89, 126, 127, 246, 248, 255, 340, 368, 377, 378, 387], "platschek": 255, "platt": 255, "plausibl": [33, 41, 46, 255], "play_remov": [153, 201, 202, 282, 328, 329], "playground": [282, 365, 367, 368, 370, 371, 376], "playlist": [390, 392, 393], "ple": 70, "pleas": [7, 58, 246, 248, 255, 331, 369, 377, 378], "pleasingli": 12, "plemel": 255, "plenti": 46, "plenum": 255, "plexu": 255, "plist": 247, "plo": [255, 377], "plogmach": 255, "ploscompbiol": 377, "plot": [10, 11, 12, 13, 16, 17, 18, 19, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 63, 66, 69, 72, 74, 75, 77, 78, 79, 81, 86, 87, 89, 94, 96, 100, 103, 104, 105, 108, 110, 115, 117, 118, 124, 126, 127, 128, 130, 131, 132, 139, 140, 151, 154, 159, 166, 173, 189, 200, 201, 202, 221, 223, 224, 227, 229, 231, 234, 235, 236, 253, 256, 258, 259, 260, 267, 269, 280, 282, 283, 289, 296, 303, 327, 328, 329, 334, 345, 347, 348, 351, 353, 358, 359, 360, 361, 365, 366, 367, 368, 373, 375, 376, 384, 385, 386, 387, 391], "plot_it": [365, 366, 375], "plot_\u03b1": 365, "ploterr": [201, 202, 328, 329], "plotfi": [17, 19], "ploti": [81, 233, 357, 388], "plotkin": 255, "plotli": [61, 359, 361, 367, 368, 371], "plotlist": [79, 96], "plotnin": [61, 366, 367, 371, 388], "plotresult": [13, 17], "plotshap": [38, 63, 140, 227, 269, 351, 361, 368, 382, 383, 384, 388], "plotsin": 233, "plotter": [184, 187, 233, 357], "plotwhat": [179, 227, 230, 309, 351, 354], "plotx": [81, 233, 357, 388], "plp": [231, 355], "plprint": 52, "plt": [63, 81, 100, 189, 233, 282, 328, 357, 359, 360, 365, 370, 376, 382, 383, 384, 385, 387, 388], "plu": [3, 9, 10, 11, 14, 31, 46, 52, 76, 81, 96, 107, 136, 153, 166, 194, 255, 264, 282, 296, 321, 387], "plugin": 249, "plumb": 377, "plummet": 96, "pm": 39, "pmc": 89, "pmc6130779": 89, "pn": [52, 201, 328], "pna": 255, "pname": [203, 330], "png": 63, "pnm": [161, 290], "pnt": [152, 153, 155, 281, 282, 284], "pnum": 52, "po": 56, "pobj": 52, "poddubnaya": 255, "poddubnayai": 255, "podman": 248, "poe": 255, "poil": 255, "point": [1, 4, 9, 12, 13, 14, 16, 17, 19, 22, 25, 27, 30, 31, 32, 37, 39, 40, 41, 42, 43, 45, 46, 47, 52, 53, 56, 58, 64, 66, 68, 70, 71, 72, 76, 77, 81, 82, 83, 86, 89, 91, 93, 94, 96, 99, 100, 101, 103, 104, 107, 115, 119, 120, 124, 125, 126, 129, 130, 131, 133, 134, 138, 140, 144, 146, 147, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 171, 173, 174, 176, 185, 186, 190, 191, 196, 198, 199, 200, 201, 203, 204, 205, 207, 208, 210, 213, 214, 219, 220, 221, 223, 224, 225, 227, 228, 229, 231, 233, 234, 236, 237, 238, 242, 246, 247, 249, 250, 253, 255, 257, 258, 259, 261, 262, 266, 269, 273, 275, 276, 277, 281, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 296, 299, 301, 303, 304, 306, 314, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 330, 333, 334, 335, 337, 338, 343, 344, 345, 347, 348, 349, 351, 352, 353, 355, 357, 358, 360, 361, 362, 363, 365, 369, 371, 377, 378, 381, 382, 384, 385, 388], "point_mark": [237, 361], "point_mark_remov": [237, 361], "point_proces_object": [284, 314], "point_process": [1, 38, 136, 148, 152, 153, 159, 160, 169, 201, 203, 214, 219, 220, 251, 264, 277, 282, 288, 289, 299, 314, 327, 328, 330, 338, 344, 388], "point_process_object": [201, 219, 328, 343], "pointer": [1, 6, 28, 29, 38, 52, 53, 56, 60, 81, 138, 140, 152, 159, 160, 164, 165, 168, 173, 182, 185, 186, 188, 197, 201, 203, 204, 205, 208, 218, 219, 220, 229, 231, 236, 250, 266, 269, 285, 288, 289, 292, 294, 295, 298, 303, 305, 312, 314, 315, 316, 324, 328, 330, 334, 337, 342, 343, 344, 353, 355, 360, 372, 388], "pointer1": [284, 328], "pointer2": 328, "pointer_nam": [284, 314], "pointern": 328, "pointervari": 53, "pointgroup": [141, 270], "pointgroupmanag": [173, 303], "pointless": 28, "pointman": [72, 159, 203, 330], "pointmanag": [141, 270], "pointmark": [237, 361], "pointprocess": [32, 37, 79, 88, 109, 141, 153, 154, 155, 156, 159, 164, 203, 220, 225, 238, 270, 279, 282, 283, 284, 285, 288, 294, 295, 330, 344, 349, 362, 388], "pointprocessgroupmanag": [141, 270], "pointprocessmanag": [14, 31, 42, 45, 46, 72, 96, 103, 123, 124, 127, 141, 153, 159, 173, 200, 270, 282, 303], "pointprocessmark": 388, "pointprocessnam": [220, 344], "pointprocessobject": [176, 306], "pointprocesss": 165, "pointtyp": 289, "poirazi": 255, "poisrand": [198, 325], "poisson": [107, 200, 201, 235, 327, 328, 359], "polar": [255, 371], "polasek": 255, "poleg": 255, "polici": [37, 160, 161, 210, 244, 289, 290, 335, 379], "polish": [231, 355], "poll": [160, 289], "polldelai": [160, 289], "polleux": 255, "pollo": 255, "pollut": [214, 338], "polski": 255, "polstra": 255, "polyamin": 255, "polycyst": 255, "polyethylen": 255, "polygon": 70, "polylin": [229, 353], "polymorph": 81, "polypeptid": 255, "polyunsatur": 255, "pomata": 255, "pomberg": 255, "ponc": 255, "pone": 255, "pong": 255, "ponomarenko": 255, "poo": 255, "pool": [1, 220, 242, 255, 344], "poolo": 255, "poolshrink": [1, 220, 344], "poon": 255, "poor": [31, 67, 94], "poorer": 96, "poorli": 255, "poorman": 255, "pop": [12, 32, 36, 37, 46, 52, 66, 80, 84, 94, 96, 99, 107, 108, 129, 133, 134, 144, 153, 155, 159, 169, 172, 176, 177, 178, 179, 182, 186, 188, 204, 210, 221, 227, 230, 231, 234, 237, 238, 247, 257, 261, 262, 273, 282, 284, 299, 302, 306, 307, 308, 309, 312, 314, 315, 316, 335, 345, 351, 354, 355, 358, 361, 362, 388], "pop_sect": [153, 155, 156, 159, 165, 169, 237, 282, 284, 288, 295, 296, 299, 314, 361, 388], "pop_valu": 52, "popov": 255, "popovych": 255, "popul": [29, 53, 255, 328], "popular": [76, 126, 377], "popup": [1, 96, 99, 147, 203, 229, 238, 276, 330, 353, 362], "porat": 255, "porcelain": 377, "porcin": 255, "pore": 255, "poros": 373, "porril": 255, "port": [5, 54, 99, 189, 219, 231, 343, 355, 377, 378], "portabl": [175, 201, 223, 254, 305, 328, 347], "portal": [26, 255, 377], "portegi": 255, "portion": [35, 48, 70, 133, 144, 145, 220, 223, 231, 255, 261, 273, 274, 292, 344, 347, 355], "portland": 255, "portner": 255, "porto": 255, "portrait": [70, 99, 177, 231, 255, 307, 355], "portugu\u00e9": 255, "pose": [126, 369], "posit": [1, 12, 18, 21, 22, 25, 32, 39, 40, 41, 42, 46, 53, 56, 66, 68, 70, 81, 89, 91, 94, 96, 103, 112, 119, 120, 124, 126, 130, 131, 133, 136, 137, 139, 144, 147, 148, 151, 153, 154, 155, 156, 159, 160, 163, 165, 166, 167, 175, 176, 177, 182, 185, 188, 192, 197, 201, 204, 206, 215, 220, 223, 227, 229, 231, 233, 234, 236, 237, 238, 250, 255, 258, 259, 261, 264, 265, 267, 273, 276, 277, 280, 282, 283, 284, 285, 288, 289, 292, 293, 295, 296, 297, 299, 305, 306, 307, 312, 316, 319, 324, 327, 328, 330, 332, 339, 344, 351, 353, 355, 357, 358, 360, 361, 362, 366, 367, 374, 382, 386], "position": 185, "pospischil": 255, "possess": 255, "possibl": [1, 3, 7, 13, 32, 38, 40, 42, 47, 51, 53, 56, 58, 66, 68, 70, 82, 83, 86, 88, 89, 90, 93, 94, 98, 103, 124, 126, 133, 144, 147, 153, 154, 155, 160, 161, 163, 164, 166, 179, 197, 198, 201, 203, 204, 208, 210, 216, 219, 225, 227, 229, 231, 233, 242, 247, 255, 261, 273, 276, 277, 282, 283, 284, 289, 290, 292, 294, 296, 309, 316, 324, 325, 328, 330, 334, 335, 340, 343, 349, 351, 353, 355, 357, 363, 366, 368, 377, 381, 382], "possibli": [32, 53, 133, 160, 170, 220, 223, 230, 242, 261, 289, 300, 316, 344, 347, 354, 377, 378], "post": [1, 10, 11, 13, 16, 29, 32, 38, 76, 82, 83, 126, 155, 157, 159, 160, 161, 174, 201, 229, 231, 237, 250, 255, 284, 286, 288, 289, 290, 304, 328, 353, 355, 361, 377], "postcel": [32, 157, 159, 220, 286, 288, 344], "postcelllist": [157, 159, 286, 288], "postcript": [177, 210, 307, 335], "poster": 89, "postganglion": 255, "postinhibitori": 255, "postion": [47, 86], "postlethwait": 255, "postloc": [157, 159, 286, 288], "postn": 377, "postnat": 255, "postop": 255, "postproc": [16, 17, 18], "postscript": [42, 70, 76, 177, 189, 210, 226, 228, 229, 307, 335, 350, 352, 353], "postscriptfil": [210, 335], "postseg": [286, 288], "postsyn": 29, "postsynaps": 255, "postsynapt": [29, 87, 114, 154, 159, 160, 255, 283, 288, 289, 383, 387], "postsynaptic_cel": 387, "posttraumat": 255, "postvec": 29, "potassium": [38, 64, 153, 154, 250, 255, 282, 283, 292, 368, 371, 373, 382, 383, 384, 388], "potenti": [9, 10, 11, 24, 25, 30, 31, 32, 33, 37, 38, 41, 43, 44, 45, 47, 48, 66, 68, 79, 87, 95, 96, 100, 107, 115, 119, 120, 123, 126, 127, 133, 136, 137, 146, 147, 148, 149, 151, 153, 154, 155, 159, 160, 164, 166, 170, 201, 204, 210, 220, 253, 255, 261, 264, 265, 275, 276, 277, 278, 280, 282, 283, 284, 288, 289, 294, 296, 300, 315, 328, 335, 342, 344, 363, 366, 369, 370, 371, 377, 382, 383, 384, 385, 388], "potier": 255, "potjan": 255, "potrusil": 255, "potworowski": 255, "poucet": 255, "pouei": 255, "pouget": 255, "pouill": 255, "pouladian": 255, "poulet": 255, "poulopoulo": 255, "poulsen": 255, "pousinha": 255, "povolotski": 255, "pow": [91, 163, 197, 201, 202, 292, 293, 324, 328, 329], "power": [7, 10, 25, 28, 47, 65, 73, 76, 81, 82, 83, 87, 89, 91, 93, 103, 119, 120, 123, 124, 148, 150, 152, 197, 201, 204, 227, 242, 255, 277, 279, 281, 293, 324, 328, 351, 366, 369, 377, 378, 384, 388], "powerbook": 3, "powerpc": [160, 198, 289, 325], "powershel": [246, 249], "pozzorini": 255, "pp": [21, 22, 29, 32, 100, 144, 156, 161, 254, 255, 273, 285, 290], "pp_begin": [146, 156, 275, 285], "pp_next": [146, 156, 275, 285], "pp_objref": [154, 283], "pplist": 314, "ppm": [31, 123], "ppmtop": 70, "ppobj": [219, 343], "pprint": [45, 46, 314, 388], "ppshape": 388, "ppsym": 52, "pptg": 255, "pr": [1, 150, 152, 166, 185, 244, 248, 279, 281, 282, 289, 296, 363, 377, 378], "practic": [4, 32, 36, 40, 42, 53, 64, 66, 103, 124, 127, 134, 154, 159, 164, 169, 233, 255, 262, 283, 284, 288, 293, 294, 317, 327, 357, 368, 378, 379, 382, 383, 388], "pradier": 255, "prado": 255, "pralong": 255, "prato": 255, "praxi": [93, 94, 96, 129, 133, 134, 138, 257, 261, 262, 266], "praxisfit": [128, 256], "prcellstat": [157, 160, 242, 286, 289], "pre": [14, 29, 98, 115, 155, 157, 159, 166, 174, 188, 201, 220, 243, 250, 284, 286, 288, 296, 304, 316, 328, 344, 368, 377, 378], "prealloc": 13, "precalcul": 87, "precari": 80, "precaut": 29, "preced": [52, 70, 81, 112, 149, 165, 169, 173, 185, 255, 278, 295, 303, 377, 381, 388], "precel": [32, 157, 159, 220, 286, 288, 344], "precelllist": [157, 159, 286, 288], "precellst": [160, 289], "preci": [190, 317], "precis": [28, 33, 39, 53, 70, 81, 91, 95, 153, 154, 169, 185, 190, 195, 196, 201, 220, 229, 233, 255, 282, 283, 317, 322, 323, 328, 344, 353, 357, 377], "precomput": 76, "precondit": [220, 344], "precursor": 255, "predat": [201, 255, 328], "predeclar": [140, 184], "predefin": 248, "predic": 331, "predict": [25, 242, 255], "predictor": [25, 255], "predominantli": 255, "prefac": 388, "prefer": [1, 3, 28, 31, 49, 53, 67, 76, 81, 98, 110, 154, 213, 229, 255, 283, 302, 314, 337, 359, 370, 377, 378, 382, 388, 390, 392, 393], "preferenti": 255, "prefix": [3, 45, 81, 119, 120, 134, 153, 154, 158, 160, 165, 170, 198, 216, 242, 248, 262, 282, 283, 287, 289, 295, 300, 305, 314, 325, 340, 369, 377, 378, 382], "prefront": 255, "preganglion": 255, "prelimb": 255, "preliminari": [89, 255], "prelist": [157, 159, 286, 288], "preload": 242, "preloc": [157, 159, 286, 288], "prematur": [45, 255, 294], "prentic": [81, 93, 126], "preoccup": 126, "prepar": [1, 45, 53, 60, 66, 76, 98, 201, 219, 229, 231, 247, 255, 289, 328, 343, 353, 355, 377], "prepend": [3, 174, 176, 183, 185, 242, 304, 306, 313], "preprint": [100, 126], "preprocessor": [53, 98, 155, 252, 284, 363, 377], "prerecord": 393, "prerequisit": [42, 103, 124, 160, 247, 289], "presannan": 255, "prescott": 255, "prescript": 53, "preseg": [286, 288], "presenc": [53, 139, 153, 224, 250, 255, 267, 282, 348, 387], "present": [4, 13, 27, 33, 41, 42, 47, 53, 66, 81, 86, 89, 93, 94, 96, 98, 100, 103, 105, 106, 124, 126, 129, 134, 136, 137, 138, 144, 147, 151, 153, 155, 156, 159, 160, 161, 163, 165, 166, 167, 170, 174, 178, 188, 197, 198, 200, 201, 203, 216, 220, 223, 227, 229, 231, 236, 246, 247, 255, 257, 262, 264, 265, 266, 273, 276, 280, 282, 284, 285, 288, 289, 290, 292, 293, 295, 296, 297, 300, 304, 308, 314, 316, 324, 325, 327, 328, 330, 340, 344, 347, 351, 353, 355, 360, 366, 367, 369, 377, 382, 385, 392, 393], "preserv": [25, 98, 99, 108, 127, 159, 161, 165, 166, 173, 197, 255, 288, 290, 295, 296, 303, 324, 377], "presiz": [201, 328], "press": [25, 32, 36, 37, 50, 66, 76, 85, 96, 99, 110, 126, 133, 134, 142, 144, 147, 173, 177, 182, 188, 200, 210, 220, 221, 224, 226, 227, 229, 230, 231, 234, 237, 238, 240, 242, 246, 253, 254, 255, 261, 262, 271, 273, 276, 303, 307, 312, 316, 335, 344, 345, 348, 350, 351, 353, 354, 355, 358, 361, 362], "pressur": 255, "prestimulu": 255, "presto": [66, 80], "prestori": 255, "presum": [51, 53, 76, 242], "presuppos": [161, 290], "presyn": [159, 160, 220, 242, 288, 289, 344], "presynapt": [95, 110, 114, 153, 154, 155, 159, 160, 255, 282, 283, 284, 288, 289, 383], "pretend": [95, 160, 248, 289], "preterm": 255, "pretti": [65, 67, 86, 96, 127, 144, 198, 210, 273, 292, 325, 335, 388], "prettier": 45, "preuss": 255, "preval": 255, "prevec": 29, "prevent": [1, 16, 42, 52, 53, 80, 96, 103, 124, 144, 154, 155, 160, 182, 208, 210, 214, 217, 221, 229, 234, 237, 242, 247, 255, 273, 283, 284, 289, 294, 312, 334, 335, 338, 341, 345, 353, 358, 361, 377], "prevertebr": 255, "preview": [89, 127, 377], "previndex": [229, 353], "previou": [1, 3, 28, 37, 38, 42, 46, 52, 53, 76, 81, 89, 98, 100, 103, 119, 120, 124, 127, 134, 136, 149, 153, 154, 159, 160, 163, 164, 165, 166, 171, 194, 198, 200, 201, 204, 210, 219, 220, 221, 224, 229, 231, 232, 233, 262, 264, 278, 282, 283, 288, 289, 294, 295, 296, 301, 314, 321, 325, 327, 328, 335, 343, 344, 345, 348, 353, 355, 356, 357, 366, 368, 373, 377, 378, 382, 383, 384, 385, 387], "previous": [1, 14, 37, 53, 81, 119, 120, 138, 149, 154, 160, 165, 170, 188, 192, 201, 227, 246, 248, 266, 278, 283, 289, 300, 316, 319, 328, 351, 377, 385], "previous_floating_point_mask": [171, 301], "previous_index": [138, 266], "previous_lowindex": [198, 325], "prevot": 255, "prida": 255, "prieb": 255, "priesemann": 255, "priestlei": 255, "prieto": 255, "primari": [1, 25, 66, 70, 79, 80, 84, 86, 119, 120, 123, 150, 160, 192, 210, 229, 231, 237, 246, 253, 255, 279, 289, 319, 335, 353, 355, 361, 366], "primarili": [8, 29, 133, 155, 201, 220, 255, 261, 284, 328, 344, 393], "primat": 255, "prime": 255, "princ": 255, "princip": [10, 11, 27, 32, 47, 74, 82, 86, 93, 96, 133, 134, 138, 197, 223, 227, 255, 261, 262, 266, 324, 347, 351], "principl": [53, 58, 160, 161, 255, 289, 290, 368, 377], "print": [3, 10, 13, 16, 17, 18, 19, 28, 29, 36, 44, 45, 46, 47, 52, 54, 56, 66, 69, 70, 77, 81, 86, 87, 96, 100, 103, 119, 120, 124, 127, 129, 134, 137, 138, 148, 149, 150, 153, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 177, 182, 185, 186, 189, 190, 191, 192, 194, 195, 197, 199, 200, 201, 203, 204, 205, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 227, 229, 230, 233, 235, 237, 242, 247, 253, 255, 257, 262, 265, 266, 268, 277, 278, 279, 280, 282, 283, 285, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 330, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 351, 353, 354, 357, 359, 361, 366, 368, 371, 375, 382, 383, 385, 387, 388], "print_cmd": [210, 231, 335, 355], "print_event_queu": [220, 344], "print_funct": 324, "print_hello": 387, "print_i": 326, "print_info": 387, "print_local_memory_usag": [53, 388], "print_memory_stat": 53, "print_sess": [226, 227, 231, 350, 351, 355, 388], "print_stat": 296, "printabl": [177, 226, 231, 307, 350, 355], "printer": [70, 99, 127, 201, 210, 227, 231, 255, 328, 335, 351, 355], "printer_command": [231, 355], "printf": [1, 8, 11, 16, 17, 23, 28, 29, 53, 56, 57, 69, 77, 81, 119, 120, 138, 140, 151, 156, 160, 165, 169, 174, 178, 184, 187, 188, 192, 196, 197, 201, 202, 208, 213, 215, 219, 223, 237, 250, 269, 314, 316, 319, 322, 324, 328, 329, 334, 339, 343, 388], "printfil": [177, 183, 229, 235, 237, 307, 313, 353, 359, 361], "println": 253, "printmod": [133, 138, 261, 266], "printnam": [165, 167, 205, 295, 297], "printout": [66, 99, 127], "printsquar": 185, "printwindowmanag": [134, 183, 231, 262, 313, 355], "prinz": 255, "prior": [3, 13, 16, 17, 18, 28, 31, 66, 81, 134, 136, 138, 153, 154, 155, 156, 159, 160, 163, 165, 166, 175, 182, 188, 197, 201, 209, 210, 220, 225, 229, 255, 262, 264, 266, 282, 283, 284, 285, 288, 289, 292, 295, 296, 305, 310, 316, 324, 328, 335, 343, 344, 349, 353, 366, 377, 387], "prioriti": [89, 160, 173, 183, 220, 289, 303, 313, 344, 385], "pritchett": 255, "privat": 53, "priviledg": [169, 249], "privileg": [155, 169, 255, 284], "prjnrnpr": [227, 351], "prknj": 36, "prlist": 52, "prmat": [81, 194, 202, 321, 329, 388], "prn": [231, 355], "probabilist": 255, "probabl": [12, 14, 27, 32, 47, 53, 54, 56, 59, 66, 76, 82, 93, 96, 98, 136, 139, 159, 160, 169, 198, 200, 201, 210, 217, 220, 224, 255, 264, 267, 288, 289, 292, 293, 299, 314, 325, 327, 328, 335, 341, 344, 348, 387], "probe": [255, 388], "problem": [1, 3, 12, 36, 43, 44, 46, 47, 51, 53, 68, 76, 77, 78, 81, 87, 89, 93, 98, 103, 124, 126, 127, 134, 136, 154, 155, 160, 161, 164, 210, 220, 223, 224, 227, 233, 239, 242, 248, 255, 262, 264, 283, 284, 289, 290, 292, 294, 335, 344, 347, 348, 351, 357, 366, 369, 370, 377, 382], "problemat": [98, 253], "probst": 255, "proc": [10, 11, 16, 17, 18, 21, 22, 28, 29, 52, 69, 76, 77, 81, 88, 96, 125, 148, 151, 159, 160, 166, 168, 170, 173, 174, 178, 182, 184, 189, 190, 192, 196, 197, 198, 200, 201, 203, 204, 205, 214, 217, 223, 224, 229, 230, 233, 235, 237, 255, 277, 300, 314, 326, 347, 348, 351, 354, 388], "proc_nam": [173, 303], "proce": [66, 105, 248, 377, 378, 382], "procedur": [4, 13, 32, 36, 46, 52, 86, 87, 96, 98, 100, 119, 120, 123, 126, 134, 148, 155, 159, 160, 161, 165, 168, 169, 173, 185, 189, 192, 201, 204, 205, 220, 223, 224, 227, 229, 230, 233, 251, 252, 255, 262, 277, 282, 284, 288, 289, 290, 303, 314, 319, 326, 328, 344, 347, 348, 351, 353, 354, 357, 371], "procedure_nam": [173, 229, 303, 353], "proceed": [94, 96, 100, 112, 255, 387, 388], "process": [0, 1, 4, 5, 9, 10, 11, 13, 14, 22, 25, 30, 31, 32, 37, 39, 42, 52, 53, 54, 71, 76, 77, 81, 89, 103, 107, 119, 124, 127, 133, 134, 140, 144, 146, 147, 152, 154, 155, 156, 159, 160, 161, 162, 165, 166, 173, 174, 176, 201, 203, 204, 205, 219, 220, 223, 225, 227, 230, 231, 237, 238, 242, 247, 248, 249, 254, 255, 261, 262, 269, 273, 275, 276, 277, 281, 283, 284, 285, 288, 289, 290, 291, 292, 295, 296, 299, 303, 304, 306, 314, 328, 330, 338, 343, 344, 347, 349, 351, 354, 355, 361, 362, 366, 369, 377, 378, 381, 384, 385, 388], "process_data": 385, "processor": [10, 11, 13, 36, 49, 100, 126, 160, 219, 246, 254, 255, 289, 343, 385], "procnam": [154, 237, 283, 361], "proddutur": 255, "prodromaki": 255, "produc": [9, 10, 11, 13, 25, 33, 37, 40, 47, 48, 49, 53, 70, 78, 81, 87, 94, 95, 96, 98, 100, 107, 119, 120, 126, 127, 153, 154, 155, 163, 165, 173, 185, 200, 201, 218, 229, 233, 255, 282, 283, 284, 289, 292, 295, 296, 303, 327, 328, 334, 342, 353, 357, 369, 381, 387, 388], "product": [28, 41, 51, 76, 119, 120, 154, 163, 185, 201, 255, 283, 328, 366, 377, 378], "product_sum": [163, 292], "production_r": 367, "productsign": 247, "profession": 377, "profil": [1, 25, 53, 54, 243, 249, 255], "profiler_interfac": 242, "proflig": [231, 355], "profound": 377, "prog": 52, "prog_parse_recov": 52, "progam": [216, 340], "progbas": 52, "progenitor": 107, "progp": 52, "program": [10, 11, 13, 14, 26, 29, 31, 32, 35, 45, 46, 47, 48, 51, 52, 53, 65, 67, 76, 82, 83, 88, 96, 99, 100, 119, 126, 127, 139, 153, 154, 160, 166, 169, 173, 177, 181, 182, 184, 185, 189, 198, 199, 200, 204, 216, 222, 223, 229, 231, 239, 242, 246, 247, 253, 254, 255, 267, 282, 283, 289, 296, 303, 307, 311, 312, 325, 326, 327, 328, 331, 340, 346, 347, 353, 355, 369, 387, 388], "programm": [1, 4, 45, 51, 66, 76, 82, 83, 100, 126, 161, 163, 169, 182, 201, 239, 240, 253, 290, 312, 328, 393], "programmat": [64, 86, 140, 147, 250, 269, 276, 345, 388], "programming_languag": 52, "progress": [4, 13, 16, 17, 134, 160, 229, 254, 255, 262, 289, 353], "proj": 29, "proj16": 248, "project": [0, 1, 7, 27, 29, 42, 54, 74, 80, 89, 103, 104, 113, 115, 124, 126, 140, 160, 164, 227, 242, 244, 246, 248, 254, 255, 269, 289, 294, 351, 363, 377, 380, 383, 384, 385, 388, 392, 393], "project_source_dir": 3, "prolong": 255, "promin": [4, 126, 136, 264], "promis": 94, "promot": [3, 53, 89, 149, 155, 255, 278, 284, 366], "prompt": [10, 11, 13, 28, 30, 31, 36, 45, 46, 52, 66, 67, 80, 81, 87, 92, 94, 96, 182, 191, 246, 249, 302, 312, 318], "promptli": [160, 289], "promptstr": [191, 318], "prone": [65, 119, 120, 126, 227, 351], "pronocicept": 255, "pronounc": 81, "proof": 373, "prop": [52, 60], "prop_alloc": 60, "propag": [30, 38, 41, 163, 255, 292, 366, 369, 383], "proper": [1, 12, 55, 60, 76, 81, 86, 99, 103, 124, 153, 154, 155, 156, 159, 160, 165, 169, 173, 203, 219, 220, 235, 237, 241, 242, 247, 255, 282, 283, 284, 285, 289, 295, 299, 303, 343, 344, 359, 361], "properli": [10, 11, 12, 31, 44, 45, 66, 94, 126, 153, 154, 160, 164, 173, 189, 204, 205, 220, 223, 229, 231, 282, 283, 289, 294, 303, 331, 344, 347, 353, 355], "propert": 388, "properti": [10, 11, 14, 24, 34, 37, 43, 46, 47, 52, 65, 66, 67, 76, 80, 81, 86, 87, 89, 90, 96, 100, 110, 117, 126, 133, 153, 160, 161, 163, 166, 167, 169, 175, 182, 186, 201, 210, 227, 229, 234, 236, 255, 261, 275, 282, 284, 289, 290, 292, 295, 296, 297, 305, 312, 315, 327, 328, 335, 344, 351, 353, 358, 360, 365, 366, 368, 369, 371, 382, 393], "propiti": 96, "proport": [9, 25, 70, 136, 154, 160, 166, 223, 264, 283, 289, 296, 347, 366, 369, 373], "proportion": [99, 292], "propos": [1, 76, 255, 377], "proprietari": 377, "propriocept": 255, "prospect": [255, 377], "prostaglandin": 255, "prosthes": 255, "prosthesi": 255, "prosthet": 255, "protect": [152, 153, 160, 251, 255, 281, 282, 289], "protein": [146, 255, 275, 366, 367, 368, 369, 372, 393], "protien": 370, "protocol": [12, 33, 42, 76, 93, 96, 103, 124, 126, 133, 160, 255, 261], "proton": 255, "prototyp": [56, 88, 126, 154, 229, 246, 283, 353, 377], "protrus": 255, "protti": 255, "prove": [98, 153, 282, 349, 363], "proven": 242, "provench": 255, "provid": [1, 3, 4, 7, 8, 10, 11, 29, 32, 37, 46, 52, 53, 54, 56, 58, 59, 64, 74, 76, 82, 83, 89, 91, 96, 98, 100, 126, 154, 155, 156, 160, 163, 169, 172, 173, 174, 200, 201, 203, 204, 220, 227, 240, 241, 242, 246, 248, 252, 253, 255, 283, 284, 285, 289, 292, 293, 295, 296, 302, 303, 304, 314, 316, 318, 327, 328, 330, 331, 337, 340, 344, 351, 359, 363, 366, 369, 373, 377, 378, 380, 381, 382, 385, 387, 388], "provis": [220, 255, 344], "proxi": 248, "proxim": [25, 27, 37, 47, 86, 104, 255], "prrt2": 255, "prstat": [157, 161, 286, 290], "prstim": [146, 162, 275, 291, 388], "prstuff": 28, "prt": [207, 333], "prun": [151, 157, 161, 219, 280, 286, 290, 343], "prune": 255, "przedborski": 255, "przekwa": 255, "psarrou": 255, "psection": [1, 45, 46, 52, 66, 146, 165, 168, 190, 204, 275, 295, 314, 317, 330, 382], "pset": [208, 334], "pseudo": [4, 100, 202, 329], "pseudocod": 96, "pseudocolor": 92, "pseudomechan": 53, "pseudorandom": 242, "psfile": 127, "psolv": [8, 157, 160, 161, 219, 220, 242, 282, 286, 289, 290, 343, 344, 385], "psp": [25, 255], "psth": [201, 202, 328, 329], "pstr": 52, "psychiatr": 255, "psychiatri": 255, "psychologi": 255, "psychopharmacologi": 255, "psychophys": 255, "psync": 81, "pt": 370, "pt3d": [40, 46, 47, 66, 166, 296, 382], "pt3dadd": [22, 52, 58, 81, 139, 146, 165, 166, 267, 275, 295, 296, 388], "pt3dchang": [22, 146, 165, 166, 275, 295, 296, 383, 384, 388], "pt3dclear": [22, 81, 146, 165, 166, 275, 295, 296, 388], "pt3dconst": [146, 165, 166, 275, 295, 296, 388], "pt3dinsert": [146, 165, 166, 275, 295, 296, 388], "pt3dremov": [146, 165, 166, 275, 295, 296, 388], "pt3dstyle": [146, 165, 166, 275, 295, 296, 388], "pten": 255, "pthread": [3, 160, 289], "ptr": [52, 207, 333], "ptr_to_array_bas": 53, "ptr_to_current_row": 53, "ptr_update_callback": [208, 334], "ptr_var": 344, "ptrvector": [140, 212, 269, 336, 388], "pts3d": 388, "pttool": 127, "ptyngi": 65, "ptype": [203, 330], "pu": 35, "pub": [160, 289], "public": [1, 21, 22, 32, 52, 76, 80, 81, 82, 83, 88, 89, 123, 126, 148, 160, 170, 178, 184, 186, 189, 214, 231, 248, 277, 289, 300, 315, 338, 355, 377, 388], "publicli": [89, 377, 378], "publio": 255, "publish": [0, 126, 127, 161, 243, 255, 290, 377, 378, 388], "pubm": 46, "pudend": 255, "pugh": 255, "puglies": 255, "pull": [1, 3, 28, 29, 45, 53, 66, 70, 100, 244, 248, 366, 378, 379], "pulldown": 29, "puller": 255, "puls": [12, 30, 31, 33, 38, 41, 44, 63, 66, 67, 71, 87, 90, 96, 127, 147, 153, 201, 220, 255, 276, 282, 328, 344, 382], "pulsedistrib": 76, "pump": [14, 46, 65, 66, 154, 163, 220, 250, 255, 283, 292, 344, 366, 369], "pupe": 255, "pure": [41, 87, 201, 214, 220, 255, 314, 317, 328, 338, 340, 344, 369, 388, 392], "purinerg": 255, "purkinj": [36, 255, 387], "purpl": [53, 234, 358], "purpos": [1, 3, 5, 10, 11, 40, 52, 76, 79, 81, 87, 89, 96, 100, 144, 154, 155, 159, 160, 166, 169, 201, 204, 220, 229, 231, 247, 248, 255, 273, 283, 284, 288, 289, 296, 327, 328, 344, 353, 355, 363, 369, 377, 378], "purpura": 255, "pursu": [7, 53], "pusch": 255, "push": [3, 29, 52, 56, 80, 153, 155, 159, 169, 178, 237, 249, 282, 284, 288, 296, 299, 308, 314, 361, 377, 388], "push_button": [182, 312], "push_sect": [165, 169, 206, 237, 295, 299, 332, 361, 388], "push_select": [235, 237, 359, 361], "push_valu": 52, "pushbutton": [231, 355], "pushx": 56, "put": [4, 28, 29, 36, 42, 45, 52, 59, 66, 76, 81, 83, 85, 94, 96, 99, 110, 160, 161, 173, 177, 179, 182, 197, 201, 214, 220, 225, 242, 246, 247, 255, 289, 290, 292, 303, 307, 309, 312, 324, 328, 338, 344, 349, 367, 371, 382], "putzier": 255, "puzzl": [127, 255], "pv": [208, 255, 334], "pval": [52, 138, 266], "pval_praxi": [133, 135, 138, 261, 263, 266, 388], "pvalfloat": 52, "pvalint": 52, "pvar": 204, "pvec": 328, "pvm": [160, 161, 289, 290], "pvm_probe": [160, 289], "pvm_recv": [160, 289], "pvm_send": [160, 289], "pwd": [3, 160, 241, 248, 289], "pwm_help": [231, 355], "pwm_postscript_filt": [231, 355], "pwman_plac": [72, 81, 159, 175, 183, 231, 305, 313, 355, 388], "pwmanag": [140, 175, 183, 226, 269, 305, 313, 350, 388], "pwr": 54, "pwsh": 249, "px": [201, 328], "py": [1, 3, 5, 8, 11, 24, 44, 45, 55, 57, 66, 100, 122, 151, 160, 164, 242, 244, 246, 247, 248, 250, 280, 283, 289, 294, 314, 328, 381, 385, 393], "py_allgath": [286, 289], "py_alltoal": [157, 160, 286, 289, 385], "py_broadcast": [286, 289], "py_cal": [285, 288, 304, 312, 347, 353, 360], "py_callback": 330, "py_gath": [286, 289], "py_list": 297, "py_obj": 8, "py_refcnt": 56, "py_scatt": [286, 289], "pyalltoal": 289, "pyarrai": 253, "pybind11": 3, "pycal": [151, 164, 253, 280, 294, 344], "pycode1": 381, "pycode2": 381, "pyenv": 242, "pyex": [246, 381], "pyfloat_fromdoubl": 56, "pyhocobject": 56, "pyhon": 45, "pyimport": 253, "pylab": 328, "pylong_fromlong": 56, "pymoos": 255, "pymu": 255, "pynn": 255, "pynrn": 3, "pynumber_check": 56, "pyobj": 163, "pyobject": [57, 253], "pyobject_typecheck": 56, "pypi": [243, 246], "pyplot": [63, 100, 282, 359, 360, 365, 366, 370, 373, 375, 376, 382, 383, 384, 385, 388], "pypn": 255, "pyr": 64, "pyramid": [25, 40, 41, 43, 47, 50, 64, 66, 67, 96, 161, 166, 237, 255, 290, 296, 361, 373, 387], "pyret": [13, 157, 160, 286, 289], "pyrfin": 67, "pyrho": 255, "pysec": 52, "pysecnam": 52, "pysecobj": 52, "pyseg": [153, 282], "pytest": 3, "python": [0, 1, 2, 4, 5, 7, 8, 10, 13, 14, 26, 30, 31, 36, 38, 39, 44, 45, 47, 48, 53, 54, 56, 57, 58, 59, 60, 64, 66, 76, 82, 86, 91, 94, 100, 122, 126, 138, 140, 151, 153, 154, 155, 160, 163, 164, 165, 182, 185, 186, 197, 201, 205, 208, 216, 229, 240, 241, 242, 243, 244, 245, 247, 249, 251, 253, 254, 255, 262, 266, 268, 273, 277, 280, 282, 283, 284, 285, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 308, 309, 312, 315, 316, 317, 318, 320, 322, 323, 324, 326, 328, 330, 332, 333, 335, 337, 339, 340, 341, 344, 351, 353, 357, 360, 361, 366, 369, 370, 371, 373, 377, 378, 379, 382, 385, 391], "python2": [1, 246], "python3": [0, 1, 3, 55, 241, 246, 247, 248, 381], "python310": 249, "python311": 249, "python38": 249, "python39": 249, "python_avail": 211, "python_cal": [160, 289], "python_ex": 385, "python_execut": 340, "python_func": [308, 341], "python_iter": [201, 328], "python_iterable_of_sect": 297, "python_object": [160, 289], "python_prefix": 3, "python_script": 250, "python_stat": 381, "pythona": 381, "pythoncallback": [208, 334], "pythonhom": 253, "pythonlist": [201, 328], "pythonmalloc": 242, "pythonobject": [8, 163, 165, 201, 211, 314, 328, 388], "pythonpath": [3, 7, 241, 246], "pythonvers": 246, "pythonx": 381, "p\u00e1lfi": 255, "p\u00e9rez": 255, "q": [103, 124, 197, 213, 255, 324, 363], "q10": [154, 283, 371], "q175": 255, "qemu": 248, "qi": 255, "qian": 255, "qin": 255, "qt": [197, 255, 324], "quad": [10, 11, 96, 133, 138, 201, 261, 266, 328], "quadrant": 293, "quadrat": [39, 129, 133, 257, 261], "quadro": 54, "quail": 255, "qualif": [136, 264], "qualit": 255, "qualiti": [29, 47, 76, 94, 126, 127, 198, 200, 231, 325, 327, 355, 377], "quantal": 255, "quantif": 255, "quantifi": 255, "quantit": [40, 255, 371, 382], "quantiti": [39, 119, 120, 218, 342], "quantiz": [40, 47], "quantum": 255, "quasi": 255, "quattrochi": 255, "queisser": 255, "quenet": 255, "queri": [53, 255, 289, 292, 296, 344, 369, 377, 388], "quero": 255, "question": [1, 6, 25, 41, 46, 63, 80, 82, 86, 87, 89, 102, 103, 124, 126, 161, 163, 210, 225, 231, 255, 290, 292, 335, 349, 355, 366, 388], "queu": [220, 344], "queue": [52, 76, 219, 220, 223, 225, 289, 343, 344, 347, 349, 385], "queue_mod": [160, 220, 289, 344], "quick": [66, 76, 86, 93, 100, 105, 377, 382], "quickli": [29, 39, 47, 76, 81, 86, 89, 126, 231, 242, 246, 355, 370, 376, 377, 378, 382, 383], "quiescenc": [254, 255], "quiet": [0, 72], "quignard": 255, "quindlen": 255, "quinlan": 255, "quintana": 255, "quintero": 255, "quirk": 255, "quiroga": 255, "quit": [1, 3, 13, 16, 17, 19, 23, 31, 32, 53, 70, 76, 78, 80, 81, 94, 96, 100, 134, 136, 153, 155, 160, 161, 164, 220, 222, 223, 246, 262, 264, 282, 284, 289, 290, 294, 344, 346, 347, 377, 378, 385, 388], "quot": [52, 81, 189, 201, 233, 314, 328, 357, 387], "quota": 377, "r": [0, 3, 28, 38, 40, 47, 50, 54, 63, 74, 76, 80, 81, 88, 93, 96, 100, 110, 111, 119, 120, 126, 153, 154, 160, 163, 175, 185, 188, 190, 192, 193, 197, 200, 201, 220, 228, 235, 246, 250, 254, 255, 282, 283, 289, 292, 305, 316, 317, 320, 324, 327, 328, 344, 347, 349, 352, 359, 360, 366, 370, 373, 377, 382, 383, 384, 385, 388], "r1": [33, 163, 292], "r2": [33, 80, 102, 115, 116, 349], "r_cell": 80, "r_open": [318, 319], "ra": [10, 11, 14, 15, 22, 24, 33, 37, 43, 45, 47, 52, 65, 66, 67, 68, 96, 108, 110, 119, 125, 133, 146, 153, 165, 166, 175, 182, 205, 223, 227, 254, 261, 275, 282, 295, 296, 305, 312, 347, 351, 382, 383, 384, 388], "ra120": 255, "ra_valu": 205, "raastad": 255, "rabang": 255, "rabbit": 255, "rabinowitch": 255, "racca": 255, "race": [4, 155, 160, 164, 201, 284, 289, 294, 328], "racz": 255, "radecki": 255, "radhakrishnan": 255, "radial": [27, 68, 104, 126, 154, 250, 255, 283, 292, 366], "radian": [81, 91, 193, 195, 201, 233, 237, 293, 320, 322, 328, 357, 361], "radiat": 255, "radii": 70, "radio": [14, 25, 31, 32, 42, 66, 67, 84, 85, 96, 99, 112, 113, 115, 131, 133, 173, 182, 229, 231, 259, 261, 303, 312, 353, 355], "radiobutton": [32, 37, 229, 353], "radioitem": [229, 353], "radiomenu": [231, 355], "radiu": [228, 229, 250, 352, 353, 383, 384, 385], "rado": 255, "radu": [220, 344], "rager": 255, "raghavan": 255, "rahamimoff": 255, "rahman": 255, "rahmon": 255, "rai": 255, "raikov": 255, "raimondo": 255, "raingo": 255, "rais": [1, 41, 44, 91, 93, 96, 163, 171, 182, 197, 201, 211, 231, 255, 283, 288, 292, 293, 301, 316, 324, 327, 328, 337, 355, 366], "raja": 255, "rajamani": 255, "rajan": 255, "rajaram": 255, "rajendra": 255, "rajendran": 255, "raj\u00e3o": 255, "rallbranch": [52, 223, 347, 388], "rama": 255, "raman": 255, "ramasubbu": 255, "ramaswami": 255, "ramcdoug": 63, "ramirez": 255, "ramo": 255, "ramp": [27, 105, 233, 255, 357], "ramracheya": 255, "ramrakhyani": 255, "ran": [3, 10, 11, 255], "ran4": [198, 200, 325, 327], "rana": 255, "rancz": 255, "rand": [98, 201, 328], "randal": 255, "randobj": [201, 328], "randolph": 255, "random": [1, 6, 29, 32, 81, 87, 94, 96, 107, 126, 138, 140, 153, 155, 174, 185, 197, 198, 201, 202, 219, 223, 225, 235, 252, 255, 266, 269, 282, 324, 325, 328, 329, 343, 347, 349, 359, 388], "random123": [1, 6, 98, 100, 198, 200, 242, 284, 325, 327], "random123_globalindex": [198, 200, 284, 325, 327], "random123sc11": [200, 327], "random_dpick": 284, "random_ipick": 284, "random_negexp": 284, "random_norm": 284, "random_setid": 284, "random_setseq": 284, "random_uniform": 284, "randomli": [100, 366], "rane": 255, "rang": [1, 4, 13, 16, 17, 24, 25, 27, 29, 36, 38, 47, 60, 63, 76, 78, 81, 89, 91, 94, 96, 100, 104, 107, 126, 127, 129, 133, 134, 136, 145, 148, 152, 153, 154, 159, 160, 161, 164, 165, 166, 169, 171, 173, 176, 179, 182, 185, 191, 195, 197, 198, 200, 201, 203, 204, 208, 216, 218, 220, 221, 227, 229, 230, 231, 233, 234, 235, 236, 242, 250, 252, 255, 257, 261, 262, 264, 274, 277, 279, 282, 283, 285, 288, 289, 290, 294, 295, 296, 299, 301, 303, 306, 309, 312, 314, 318, 319, 322, 323, 324, 325, 327, 328, 330, 334, 337, 340, 342, 344, 345, 351, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 371, 373, 382, 383, 384, 385, 387], "range1": 284, "range_var": [53, 250], "rangevar": [220, 235, 236, 359, 360], "rangevar_suffix": 68, "rangevarplot": [140, 166, 167, 229, 231, 269, 296, 297, 353, 355, 388], "rangvarplot": [236, 360], "ranieri": 255, "ranjan": 255, "ranjith": 255, "rank": [5, 8, 54, 136, 151, 160, 197, 219, 242, 264, 280, 289, 324, 343, 385], "rankov": 255, "ranolazin": 255, "ransom": 255, "ranta": 255, "ranvar": 327, "ranvar1": 284, "ranvar_mech": 327, "ranvier": 255, "rao": 255, "raoui": 255, "rapeaux": 255, "raph": 255, "rapid": [201, 255, 328, 334], "rapidli": [25, 95, 96, 164, 221, 255, 294, 345, 377, 378], "rapoport": 255, "rapp": 255, "rare": [1, 2, 81, 140, 160, 237, 255, 269, 288, 289, 292, 344, 361, 385], "rasband": 255, "rasch": 255, "rasmussen": 255, "raspanti": 255, "raspopov": 255, "raster": [99, 100, 160, 282, 289, 383, 384, 385], "rat": 255, "rate": [1, 4, 9, 36, 39, 41, 80, 94, 95, 116, 119, 120, 146, 153, 154, 161, 195, 201, 218, 220, 223, 224, 229, 231, 233, 250, 255, 275, 282, 283, 290, 322, 328, 342, 344, 347, 348, 349, 353, 355, 357, 365, 367, 369, 370, 371, 372, 373, 376, 388], "rate_b": 366, "rate_f": 366, "rates_hh": [153, 230, 282, 354, 388], "rather": [29, 53, 80, 81, 119, 120, 126, 154, 163, 166, 173, 201, 249, 255, 283, 292, 296, 303, 314, 328, 334, 365, 370], "rathour": 255, "ratio": [25, 81, 91, 99, 126, 135, 136, 193, 229, 231, 237, 255, 263, 264, 320, 353, 355, 361], "ration": 78, "raton": 255, "rattai": 255, "ratt\u00e9": 255, "ravasenga": 255, "ravassard": 255, "ravier": 255, "raw": [53, 63, 201, 246, 247, 328, 368, 373], "rawmodel": 96, "rawpyr": 67, "raymond": 255, "razon": 255, "razor": 95, "razoux": 255, "rb": [387, 388], "rc": [94, 95, 192, 210, 227, 319, 335, 351, 377, 378], "rcparam": 63, "rcsrevis": [192, 319], "rd": [201, 328], "rdm": 29, "re": [0, 1, 7, 25, 31, 32, 36, 37, 42, 47, 49, 53, 55, 64, 66, 67, 80, 81, 84, 86, 87, 94, 96, 99, 100, 103, 104, 105, 108, 109, 110, 111, 114, 124, 127, 130, 143, 144, 150, 153, 154, 160, 163, 165, 168, 186, 189, 192, 197, 201, 208, 220, 223, 229, 231, 239, 242, 246, 249, 255, 258, 272, 273, 279, 282, 283, 289, 292, 295, 298, 319, 324, 328, 334, 337, 344, 347, 353, 355, 370, 377, 382, 383, 384, 387, 388], "re_init": [24, 44, 96, 146, 163, 220, 223, 224, 275, 292, 344, 347, 348, 351, 366], "reach": [1, 4, 13, 24, 29, 53, 81, 94, 153, 159, 160, 164, 169, 201, 231, 234, 255, 282, 288, 289, 294, 328, 355, 358, 369, 377, 378, 385], "reachabl": 242, "react": [163, 292, 366], "reactant": [119, 120, 163, 366], "reactant_sum": [163, 292], "reaction": [1, 26, 94, 140, 146, 154, 160, 225, 254, 255, 269, 275, 283, 289, 293, 295, 314, 349, 365, 368, 369, 371, 372, 388, 391], "reactiv": 255, "read": [4, 14, 19, 28, 38, 40, 42, 46, 58, 63, 64, 66, 80, 81, 82, 83, 87, 90, 92, 94, 96, 99, 100, 103, 112, 113, 115, 119, 120, 124, 133, 134, 146, 149, 153, 160, 161, 163, 165, 180, 184, 187, 188, 189, 192, 197, 201, 203, 204, 213, 219, 223, 225, 228, 230, 239, 240, 242, 251, 261, 262, 275, 278, 282, 289, 290, 292, 295, 302, 309, 310, 312, 314, 316, 319, 324, 328, 330, 343, 347, 349, 352, 354, 360, 361, 371, 373, 374, 377, 382, 385, 387, 388, 391], "read1": 284, "read_csv": 388, "readabl": [32, 54, 66, 133, 261, 282, 382, 388], "readdata": [128, 256], "readdatafil": [128, 256], "reader": [47, 64, 67, 93, 105, 110, 219, 289, 343, 377, 388], "readi": [7, 16, 26, 32, 45, 66, 67, 94, 96, 104, 108, 110, 111, 112, 114, 116, 160, 227, 241, 289, 351, 377], "readili": [158, 255, 287, 371], "readlin": [1, 3, 248, 253], "readm": [5, 46, 49, 76, 127], "readonli": [180, 183, 310, 313], "readout": 104, "readthedoc": [1, 250], "readthedocs_vers": 0, "real": [4, 32, 53, 72, 80, 81, 87, 88, 89, 90, 91, 96, 98, 126, 127, 133, 155, 160, 161, 167, 197, 201, 210, 219, 255, 261, 284, 289, 290, 297, 324, 328, 335, 343, 363, 366, 369, 377], "realist": [29, 53, 90, 136, 210, 255, 264, 335, 372, 388], "realiti": [94, 96, 242, 377], "realiz": [33, 154, 283], "realli": [29, 47, 51, 53, 54, 66, 78, 80, 81, 86, 87, 94, 96, 99, 133, 159, 160, 186, 197, 216, 220, 261, 288, 314, 315, 324, 340, 344, 377], "realloc": [81, 201, 208, 220, 328, 334, 344], "realtim": 72, "reanalyz": 28, "reappear": [84, 201, 328], "reapprais": 255, "rearrang": 16, "reason": [3, 4, 31, 36, 41, 42, 52, 53, 78, 81, 86, 88, 94, 96, 100, 111, 119, 120, 125, 126, 127, 136, 153, 154, 155, 160, 161, 166, 175, 185, 200, 201, 220, 227, 242, 246, 248, 264, 282, 283, 284, 289, 290, 296, 305, 327, 328, 344, 351, 369, 377, 378, 380, 382, 383, 387], "reassembl": 343, "reassembli": 343, "reassign": 382, "reato": 255, "rebas": 379, "rebin": [201, 202, 328, 329], "rebound": 255, "rebuild": [133, 242, 261, 377], "rec": 70, "recal": [39, 80, 96, 201, 231, 255, 328, 355, 369, 370, 382, 388], "recalc_area_": 60, "recalc_diam": [60, 344], "recalcul": [60, 130, 154, 166, 173, 223, 258, 283, 296, 303, 347], "recapitul": [210, 335], "recchia": 255, "receipt": 247, "receiv": [29, 38, 56, 74, 76, 80, 99, 100, 109, 110, 148, 153, 159, 160, 161, 216, 220, 242, 255, 277, 282, 288, 289, 290, 340, 344, 368, 371, 377, 378, 380, 385], "recent": [1, 35, 40, 76, 82, 99, 126, 182, 214, 231, 242, 246, 254, 255, 289, 298, 299, 312, 331, 338, 355, 373, 377, 388], "recentdir": [182, 312], "recept": 255, "receptor": [89, 95, 255, 369], "recess": 255, "recip": [201, 247, 328], "reciproc": [25, 29, 156, 160, 255, 285, 288, 289], "recogn": [80, 96, 255, 331], "recognis": 52, "recognit": 255, "recombin": 255, "recommend": [0, 3, 7, 44, 56, 81, 93, 119, 120, 155, 169, 184, 187, 201, 210, 227, 231, 240, 241, 242, 246, 249, 284, 288, 292, 295, 328, 335, 351, 355, 360, 381, 387], "recompil": [153, 233, 246, 357, 385], "recomput": [13, 166, 223, 250, 296, 347], "reconcil": 255, "reconfigur": [255, 385], "reconnect": [155, 165, 284, 295], "reconstitut": 45, "reconstruct": [14, 40, 42, 45, 47, 51, 64, 67, 103, 124, 166, 210, 234, 255, 296, 335, 358], "record": [4, 5, 8, 13, 16, 17, 18, 25, 29, 33, 38, 49, 51, 53, 60, 64, 69, 77, 82, 87, 93, 96, 100, 130, 133, 134, 136, 151, 153, 157, 159, 160, 161, 163, 201, 202, 219, 220, 221, 223, 240, 242, 250, 253, 255, 258, 261, 262, 264, 280, 282, 284, 286, 288, 289, 290, 292, 314, 328, 329, 342, 343, 344, 345, 347, 365, 372, 375, 376, 384, 385, 393], "record_remov": [220, 344], "record_vector": 250, "recording_callback": 344, "recording_cel": 383, "recov": [29, 42, 53, 80, 103, 124], "recoveri": 255, "recreat": [31, 42, 66, 76, 96, 103, 124, 165, 176, 210, 255, 306, 335, 382], "recruit": 255, "rectangl": [42, 70, 99, 228, 229, 231, 235, 352, 353, 355, 359], "rectangular": [70, 87, 197, 255, 324], "rectif": 255, "rectifi": 255, "rectum": 255, "recugnat": 255, "recur": 100, "recurr": [74, 80, 255], "recurs": [81, 134, 170, 173, 182, 205, 221, 224, 255, 262, 282, 300, 303, 312, 345, 348], "reczko": 255, "red": [12, 25, 27, 28, 29, 42, 46, 47, 53, 58, 66, 70, 84, 86, 94, 96, 99, 101, 104, 105, 110, 127, 131, 132, 144, 145, 166, 181, 201, 229, 233, 235, 237, 238, 246, 259, 260, 273, 274, 282, 296, 311, 328, 353, 357, 359, 361, 362, 382, 383, 384], "redeclar": [28, 204], "redef": 52, "redefin": [29, 119, 120, 154, 283], "redefinit": 52, "redel": 255, "redirect": [184, 187, 216, 314, 340], "redisplai": [231, 355], "redistribut": 255, "redman": 255, "redo": [70, 220, 344], "redon": 70, "redraw": [25, 130, 229, 237, 258, 353, 361], "redrawn": [96, 166, 235, 237, 296, 359, 361], "reduc": [1, 6, 10, 11, 13, 25, 32, 37, 47, 50, 66, 67, 70, 80, 81, 96, 99, 107, 133, 155, 160, 166, 188, 201, 202, 220, 221, 224, 229, 231, 242, 255, 261, 284, 289, 294, 296, 316, 328, 329, 344, 345, 348, 353, 355, 377, 382], "reduced_dent": 4, "reducedtree_computation_tim": [160, 289], "reduct": [96, 220, 255, 344], "redund": 255, "redundantli": 247, "rees": 255, "reetz": 255, "reev": 255, "reevalu": 81, "ref": [28, 58, 164, 173, 183, 201, 248, 285, 289, 294, 295, 302, 303, 309, 312, 313, 314, 315, 316, 318, 324, 325, 327, 328, 330, 337, 338, 339, 344, 377, 388], "ref_var": 312, "refactor": [1, 382], "refcount": 205, "refer": [1, 4, 5, 7, 25, 32, 37, 45, 51, 53, 58, 67, 68, 73, 76, 79, 81, 82, 83, 87, 98, 100, 104, 119, 120, 123, 131, 147, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 173, 177, 179, 185, 186, 188, 196, 197, 198, 201, 205, 207, 214, 215, 220, 229, 231, 235, 237, 239, 240, 242, 246, 247, 248, 253, 255, 259, 269, 276, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 303, 307, 309, 312, 314, 315, 316, 323, 324, 325, 327, 328, 333, 338, 339, 344, 353, 355, 359, 360, 361, 366, 369, 379, 381, 383, 385, 387, 388, 393], "referenc": [4, 144, 147, 150, 154, 168, 173, 174, 186, 209, 231, 237, 273, 276, 279, 283, 298, 303, 304, 315, 355, 361, 387], "refin": [51, 89, 133, 255, 261], "reflect": [25, 32, 70, 101, 125, 147, 153, 155, 156, 166, 182, 229, 237, 255, 276, 282, 284, 285, 292, 296, 312, 353, 361, 371, 377, 378], "reflex": 255, "reformul": [126, 255], "refrac": [107, 153, 282], "refractori": [9, 107, 153, 201, 255, 282, 328], "refresh": [36, 37, 108, 109, 234, 248, 358], "regard": [32, 66, 127, 153, 154, 160, 161, 164, 165, 166, 220, 225, 247, 282, 283, 289, 290, 294, 295, 296, 314, 327, 344, 349, 377], "regardless": [25, 33, 76, 88, 99, 100, 154, 160, 197, 220, 282, 283, 289, 292, 295, 324, 341, 344, 373], "regen": [41, 255, 366, 392], "regener": [255, 282], "regev": 255, "regex": 242, "regexp": [214, 338], "regim": 255, "region": [25, 64, 94, 96, 129, 134, 146, 233, 242, 255, 257, 262, 275, 349, 357, 359, 360, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 388], "region_list": 292, "regionfit": [133, 261], "regist": [52, 53, 55, 126, 134, 174, 178, 208, 242, 262, 308, 334], "register_cel": [157, 161, 286, 290], "register_data_field": 60, "register_mech": 60, "registr": 60, "registrationmechan": 60, "registri": 127, "regraph": [28, 81, 233, 357, 388], "regress": 246, "regret": [136, 264], "regrett": [210, 335], "regul": [25, 255, 369, 370], "regular": [8, 53, 71, 81, 87, 165, 169, 220, 229, 255, 292, 293, 295, 297, 316, 337, 344, 353, 381, 388], "regularli": [221, 224, 249, 255, 345, 348, 377], "rehabilit": 255, "reich": 255, "reichenbach": 255, "reichenberg": 255, "reid": 255, "reilli": 255, "reimann": 255, "reimer": 255, "reinboth": 255, "reinforc": 255, "reiniti": [28, 44, 163, 292, 366, 368], "reinker": 255, "reiser": 255, "reiter": [201, 255, 328], "reitz": 255, "reject": 40, "rejuven": 255, "rel": [3, 25, 29, 42, 53, 63, 80, 81, 88, 99, 104, 127, 147, 151, 153, 154, 155, 159, 160, 161, 163, 166, 169, 170, 177, 201, 220, 229, 231, 233, 236, 255, 276, 280, 282, 283, 284, 288, 289, 290, 296, 300, 307, 328, 344, 353, 355, 357, 360, 366, 375, 377, 378, 382], "rela": 255, "relai": 255, "relat": [1, 12, 25, 32, 52, 60, 82, 89, 98, 100, 113, 136, 144, 154, 160, 161, 210, 220, 249, 255, 264, 273, 275, 283, 289, 290, 335, 344, 363, 377, 380, 385], "relationship": [10, 11, 25, 27, 29, 38, 39, 46, 96, 154, 196, 201, 255, 283, 323, 328, 377, 382], "relaunch": [103, 124, 242], "relax": [153, 247, 255, 282], "releas": [1, 3, 7, 13, 16, 37, 46, 47, 53, 66, 79, 80, 81, 84, 85, 86, 94, 95, 96, 100, 109, 110, 111, 112, 113, 115, 126, 154, 155, 156, 160, 174, 182, 201, 220, 221, 229, 231, 237, 246, 247, 249, 255, 283, 284, 285, 289, 304, 312, 328, 340, 344, 345, 353, 355, 361, 369, 373], "releasedebugautoflag": 3, "relev": [32, 37, 53, 54, 56, 66, 81, 94, 98, 154, 160, 188, 220, 231, 237, 239, 242, 247, 248, 255, 268, 283, 289, 316, 344, 355, 361, 366, 377, 381, 384, 388, 392], "reli": [7, 8, 52, 160, 242, 248, 289, 381], "reliabl": [100, 220, 255, 344], "relianc": [96, 210, 335], "reliev": [81, 255], "reloc": [165, 176, 237, 238, 255, 295, 306, 361, 362], "rem": 255, "remain": [1, 32, 33, 38, 46, 50, 53, 73, 80, 96, 99, 133, 144, 154, 155, 159, 160, 165, 169, 172, 174, 189, 197, 201, 233, 239, 261, 273, 283, 284, 288, 289, 292, 295, 299, 302, 304, 324, 328, 357, 370, 384], "remaind": [81, 91, 96, 191, 201, 293, 328, 387], "remak": 3, "remark": 4, "rememb": [0, 27, 28, 34, 39, 40, 56, 66, 67, 94, 96, 98, 108, 136, 160, 164, 166, 170, 201, 264, 289, 294, 296, 300, 328, 367, 371, 384, 387], "remi": 255, "remind": [66, 96, 154, 283], "reminisc": [104, 204, 228, 352], "remm": 255, "remodel": 255, "remot": [25, 43, 158, 242, 255, 287, 377], "remotelogin": [160, 289], "remov": [1, 3, 7, 28, 36, 42, 53, 58, 64, 70, 98, 103, 124, 133, 134, 136, 143, 144, 146, 147, 155, 156, 159, 160, 165, 166, 167, 170, 173, 174, 182, 183, 188, 192, 201, 202, 206, 214, 220, 227, 229, 230, 231, 237, 241, 250, 255, 261, 262, 264, 272, 273, 275, 276, 284, 285, 288, 289, 295, 296, 297, 300, 303, 304, 312, 313, 316, 319, 328, 329, 332, 334, 338, 344, 351, 353, 354, 355, 361, 383, 387], "remove_al": [29, 174, 183, 304, 313], "remove_last": [173, 183, 303, 313], "remove_st": [150, 152, 279, 281], "remove_transit": [150, 152, 279, 281], "removeparmfromlist": [128, 256], "remp": 255, "rempel": 255, "remyelin": 255, "ren": 255, "renam": [12, 32, 37, 94, 107, 108, 109, 110, 154, 227, 282, 283, 351, 377, 378], "renaud": 255, "renden": 255, "render": [25, 86, 130, 228, 255, 258, 352, 367, 368, 371, 384], "renew": 255, "renger": 255, "renshaw": [74, 108, 255], "renta": 255, "renzi": 255, "renzo": 255, "reopen": [96, 133, 173, 261, 303], "reorder": 53, "repaid": [154, 283], "repair": [36, 47, 86, 255], "reparameter": 255, "repeat": [3, 14, 31, 39, 45, 46, 47, 53, 80, 84, 86, 94, 96, 100, 127, 160, 164, 182, 220, 234, 239, 289, 294, 312, 314, 344, 358], "repeatedli": [53, 81, 204, 231, 355, 370], "reperfus": 255, "repertoir": [82, 83, 254], "repeteadli": 370, "repetit": [10, 11, 13, 80, 231, 255, 355, 383], "repick": [29, 200, 327], "replac": [1, 4, 7, 8, 14, 29, 32, 44, 53, 67, 70, 81, 98, 119, 120, 144, 154, 160, 169, 180, 186, 201, 207, 218, 219, 220, 227, 230, 231, 237, 247, 255, 273, 283, 289, 293, 302, 310, 315, 317, 328, 333, 342, 343, 344, 351, 354, 355, 361, 364, 371, 387], "replai": [198, 255, 325], "repli": 255, "replic": 255, "replot": [129, 257], "repo": [0, 377], "repolar": 255, "report": [1, 3, 10, 11, 16, 17, 18, 47, 53, 89, 96, 126, 201, 241, 242, 255, 312, 328, 366, 377], "reposit": [38, 84, 96], "repositori": [1, 3, 7, 10, 53, 54, 98, 241, 242, 244, 246, 247, 248, 249, 377, 378, 380], "repr": 295, "repres": [25, 39, 40, 42, 52, 53, 56, 76, 99, 103, 110, 124, 126, 130, 154, 163, 165, 166, 173, 197, 201, 203, 227, 231, 251, 258, 283, 292, 295, 296, 324, 328, 330, 351, 355, 369, 371, 372, 377, 378, 383, 387, 388], "represd": 292, "represent": [25, 31, 43, 67, 76, 81, 101, 126, 189, 201, 255, 328, 369, 382, 388], "reprint": [35, 81], "reproduc": [138, 200, 201, 210, 255, 266, 284, 327, 328, 335, 366], "reproduct": [210, 255, 335], "request": [3, 37, 53, 82, 83, 134, 160, 161, 171, 173, 186, 197, 201, 210, 221, 227, 230, 231, 244, 247, 262, 289, 290, 301, 303, 315, 324, 328, 335, 345, 351, 354, 355, 366, 368, 373, 378, 379, 385], "requested_subworld_s": 289, "requir": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 32, 35, 39, 42, 45, 47, 53, 54, 55, 66, 70, 81, 86, 87, 88, 89, 94, 98, 119, 120, 133, 136, 139, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 173, 185, 186, 191, 197, 201, 210, 220, 224, 229, 231, 242, 246, 247, 248, 249, 250, 253, 255, 261, 262, 264, 267, 282, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 303, 314, 318, 328, 335, 344, 345, 348, 353, 355, 366, 369, 371, 378, 379, 380, 383, 385, 387, 389], "requisit": 243, "reread": [14, 70, 229, 353], "rerun": [60, 242, 365, 370, 383], "resampl": [200, 201, 202, 327, 328, 329], "rescal": [31, 86, 123, 127, 130, 177, 255, 258, 307], "rescu": 255, "research": [94, 126, 254, 255, 377, 392], "reserv": [4, 53, 81, 250, 388], "reset": [9, 29, 53, 89, 129, 159, 201, 255, 257, 288, 296, 328, 366, 379], "resid": [160, 289], "residu": 255, "resili": 255, "resist": [25, 33, 38, 76, 119, 136, 160, 166, 242, 255, 264, 289, 296, 382, 383, 384, 388], "resistor": [33, 255], "resiz": [28, 29, 42, 53, 153, 159, 160, 173, 197, 201, 202, 208, 220, 223, 229, 231, 233, 236, 282, 288, 289, 303, 324, 328, 329, 334, 344, 347, 353, 355, 357, 360], "resolut": [40, 76, 81, 127, 134, 160, 161, 163, 182, 216, 217, 224, 229, 231, 255, 262, 289, 290, 292, 312, 340, 341, 348, 353, 355, 369, 377, 382, 388], "resolv": [40, 255, 368, 381, 387], "reson": 255, "resort": [169, 299, 381], "resourc": [57, 70, 120, 154, 231, 255, 275, 283, 355, 368, 373, 385, 387, 388, 391], "respecifi": [166, 296], "respect": [1, 4, 13, 32, 47, 52, 53, 56, 60, 76, 80, 81, 86, 97, 101, 119, 120, 127, 129, 130, 132, 149, 153, 155, 159, 160, 163, 164, 166, 173, 176, 185, 188, 196, 197, 201, 203, 205, 220, 223, 229, 231, 233, 237, 242, 248, 257, 258, 260, 278, 282, 284, 288, 289, 292, 294, 296, 303, 306, 314, 316, 323, 324, 328, 330, 331, 344, 347, 353, 355, 357, 361, 366, 377, 378, 381, 388], "respir": 255, "respiratori": 255, "respond": [10, 11, 71, 80, 87, 160, 255, 289, 371, 382, 383], "respons": [1, 9, 10, 11, 13, 18, 25, 47, 53, 67, 80, 84, 87, 121, 153, 154, 155, 160, 191, 227, 255, 282, 283, 284, 289, 318, 351, 366, 368, 369, 377], "respositori": 3, "rest": [24, 33, 38, 43, 47, 66, 68, 81, 86, 96, 109, 142, 153, 154, 170, 173, 185, 255, 271, 282, 283, 300, 303, 366, 369, 371, 382, 388], "restart": [45, 46, 67, 96, 189, 200, 220, 221, 223, 327, 344, 345, 347], "restat": 68, "restor": [1, 24, 50, 53, 84, 94, 96, 123, 129, 143, 144, 219, 225, 229, 231, 255, 257, 272, 273, 275, 314, 343, 349, 353, 355, 387], "restore_context": 160, "restore_st": 292, "restore_test": [219, 343], "restore_test_bin": [219, 343], "restraint": [155, 252, 284], "restrepo": 255, "restrict": [3, 81, 96, 151, 154, 160, 163, 166, 179, 182, 183, 186, 204, 219, 248, 280, 283, 289, 292, 296, 309, 312, 313, 315, 343, 366, 374], "result": [3, 4, 5, 10, 11, 16, 17, 18, 24, 25, 27, 29, 31, 40, 42, 46, 47, 49, 51, 53, 76, 81, 86, 91, 93, 94, 96, 99, 100, 101, 102, 103, 115, 119, 120, 124, 126, 127, 130, 131, 133, 134, 136, 153, 154, 155, 160, 161, 163, 164, 165, 166, 171, 190, 195, 197, 200, 201, 204, 207, 214, 218, 220, 225, 229, 243, 246, 247, 248, 255, 258, 259, 261, 262, 264, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 301, 309, 317, 322, 324, 327, 328, 333, 338, 342, 344, 349, 353, 369, 377, 383, 386, 393], "result_vector": [160, 289], "resultptr": 309, "resum": [52, 160, 289], "resurg": 255, "resync": 325, "ret": [52, 160, 289, 373], "retain": [53, 159, 201, 210, 255, 282, 288, 328, 335, 377], "retest": 377, "reticular": 255, "reticulari": 255, "reticulata": 255, "reticulospin": 255, "reticulum": [255, 366, 369], "retin": 255, "retina": 255, "retinotopi": 255, "retobj_memb": 56, "retobj_method": 56, "retpc": 52, "retransl": [119, 120], "retreat": 284, "retriev": [13, 14, 16, 42, 67, 81, 87, 94, 96, 126, 133, 134, 136, 160, 182, 185, 201, 207, 227, 248, 255, 261, 262, 264, 289, 312, 328, 333, 351, 387], "retrieveaudit": [81, 222, 346, 388], "retrievefromfil": [134, 262], "retrograd": 255, "retrospleni": 255, "return": [1, 4, 8, 10, 11, 13, 16, 17, 21, 22, 28, 29, 31, 32, 33, 36, 37, 45, 52, 53, 56, 63, 66, 68, 69, 76, 77, 79, 80, 81, 91, 94, 96, 98, 104, 125, 129, 133, 134, 136, 137, 138, 139, 149, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 219, 220, 221, 223, 225, 229, 231, 233, 234, 236, 237, 253, 257, 261, 262, 264, 265, 266, 267, 268, 278, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 347, 349, 353, 355, 357, 358, 360, 361, 366, 367, 368, 371, 373, 375, 382, 383, 384, 385, 387, 388], "returnlevel": [146, 147, 275, 276], "retval": [16, 157, 160, 286, 289], "reus": [4, 43, 45, 47, 82, 83, 197, 324, 330, 370, 382, 383, 393], "reusabl": [65, 76, 83, 126, 383], "reuveni": 255, "rev": [249, 377], "rev_plot": 383, "reveal": [10, 11, 40, 46, 47, 80, 86, 115, 255], "revers": [31, 37, 53, 149, 153, 155, 160, 197, 201, 202, 255, 278, 282, 284, 294, 324, 328, 329, 366, 371, 377, 378, 382, 383, 384, 387, 388], "reversibli": 255, "revert": [70, 169, 292, 349], "review": [3, 66, 88, 100, 136, 248, 254, 255, 264, 379], "revil": 255, "revis": [66, 76, 96, 126, 192, 210, 239, 319, 335, 369, 377, 378, 383], "revisit": [53, 255, 377], "revista": 255, "reward": [10, 11, 255], "rewrit": [29, 126, 377], "rewritten": [1, 377], "rey": 255, "reynaud": 255, "reynold": 255, "rezai": 255, "rgb": [76, 92], "rh": [53, 366], "rhesu": 255, "rho": 255, "rhode": 255, "rhythm": [255, 374], "rhythmic": 255, "rhythmogenesi": 255, "ri": [81, 96, 119, 146, 165, 166, 275, 295, 296, 388], "riachi": 255, "ribbon": 255, "ribeiro": 255, "rice": 255, "rich": [255, 369], "richard": 255, "richardson": 255, "richmond": 255, "richter": 255, "rick": 255, "rid": [28, 47, 86, 99, 201, 255, 328, 368, 382], "rieck": 255, "riek": 255, "rienen": 255, "riera": 255, "rig": [24, 43, 66, 71, 76, 96], "rigbi": 255, "right": [3, 14, 25, 27, 28, 32, 33, 37, 42, 47, 50, 52, 53, 66, 70, 76, 78, 79, 80, 81, 85, 86, 94, 96, 99, 100, 103, 104, 105, 106, 107, 110, 112, 114, 119, 120, 123, 124, 131, 134, 144, 147, 154, 155, 160, 163, 166, 169, 175, 185, 190, 194, 195, 196, 201, 204, 214, 215, 221, 223, 229, 231, 233, 236, 246, 247, 259, 262, 273, 276, 283, 284, 289, 292, 296, 305, 317, 321, 322, 323, 328, 338, 339, 345, 347, 353, 355, 357, 360, 367, 369, 373, 377, 382, 383, 387, 388], "rightarrow": 95, "rightleftharpoon": 372, "rightmost": [129, 257], "rigid": 255, "rigor": [160, 289], "rigosa": 255, "rigosi": 255, "riluzol": 255, "rimehaug": 255, "ring": [5, 35, 54, 161, 242, 255, 290, 382, 385, 386], "ringtest": [54, 242, 246, 289], "rinker": 255, "rinzel": 255, "rio": 255, "rippl": 255, "riquelm": 255, "risal": 255, "rise": [9, 29, 41, 94, 109, 153, 250, 255, 282], "risk": [255, 377], "ristori": 255, "ritter": 255, "rittger": 255, "ritzau": 255, "rivera": 255, "rivlin": 255, "rivoirard": 255, "rizou": 255, "rizza": 255, "rm": [24, 25, 45, 67, 96, 195, 219, 231, 322, 343, 355, 385], "rn": 96, "rng": [52, 200, 327], "ro": [100, 255], "robberecht": 255, "robert": [255, 389], "robertson": 255, "robin": 385, "robinson": 255, "robl": 255, "robot": 255, "robust": [7, 126, 166, 255, 296], "rochefort": 255, "rochel": 255, "rocher": 255, "rod": 255, "rodent": 255, "rodrigu": 255, "rodriguez": 255, "rodr\u00edguez": 255, "roeper": 255, "rogala": 255, "roger": 255, "rogowitz": 92, "rogozinski": 255, "rohregg": 255, "roi": 255, "roja": 255, "role": [38, 154, 198, 201, 229, 255, 283, 325, 353, 366, 369, 387, 393], "roller": 255, "romanelli": 255, "romanenko": 255, "romani": 255, "romanian": 255, "romano": 255, "romaro": 255, "romei": 255, "romeni": 255, "romero": 255, "rooflin": 242, "room": 255, "roossien": 255, "root": [27, 39, 46, 66, 86, 89, 91, 104, 123, 131, 153, 156, 160, 161, 165, 166, 167, 168, 195, 201, 236, 248, 249, 255, 259, 282, 285, 289, 290, 293, 295, 296, 297, 298, 314, 322, 328, 344, 360, 377], "rootnod": [153, 282], "rootsect": [160, 289], "rope": 29, "ropen": [28, 81, 184, 187, 188, 190, 191, 192, 197, 201, 204, 316, 317, 318, 319, 324, 328, 388], "roqu": 255, "roquea": 255, "rorsman": 255, "rosado": 255, "rose": 255, "rosello": 255, "rosen": 255, "rosenberg": 255, "rosentret": 255, "rosetta2": 246, "ross": 255, "rossert": 255, "rossi": 255, "rossum": 255, "rosta": 255, "rotat": [12, 25, 38, 40, 63, 70, 73, 151, 201, 202, 228, 229, 234, 235, 237, 280, 328, 329, 334, 352, 353, 358, 359, 361, 382, 383, 384], "rotem": 255, "roth": 255, "rothman": 255, "rothwel": 255, "rotstein": 255, "rotter": 255, "rottmann": 255, "roucard": 255, "rough": 3, "roughfit": [128, 256], "roughli": [29, 66, 369, 393], "rouleau": 255, "round": [66, 91, 164, 196, 201, 220, 224, 229, 231, 283, 289, 293, 294, 323, 328, 344, 348, 353, 355, 385], "round_robin": [157, 161, 286, 290], "roundoff": [81, 154, 199, 201, 283, 326, 328], "rousseau": 255, "rout": 255, "routh": 255, "routin": [29, 32, 46, 52, 195, 197, 201, 224, 322, 324, 328], "roux": 255, "row": [14, 53, 180, 197, 223, 231, 255, 310, 324, 347, 355, 371, 388], "row_format": [197, 324], "rowald": 255, "rowan": 255, "rowl": 255, "roxin": 255, "royal": 255, "royeck": 255, "royer": 255, "royster": 255, "rozsa": 255, "rpm": [246, 377], "rr13785": 255, "rrr": 255, "rs6000": [198, 325], "rsa": [158, 160, 287, 289], "rsh": [158, 160, 287, 289], "rshcommand": [158, 160, 287, 289], "rsif": 255, "rso": 255, "rstb": 255, "rstim": [153, 282], "rt": 255, "rtai": 363, "rtf": [137, 265], "rtg4510": 255, "rtol": [220, 344], "rubakov": 255, "rubber": [66, 113, 115], "rubberband": [70, 177, 307], "ruben": 255, "rubin": 255, "rubinstein": 255, "rucabado": 255, "ruck": 255, "ruderman": 255, "rudi": 255, "rudimentari": [221, 229, 345, 353], "rudnicki": 255, "rudolph": [88, 100, 254, 255], "ruedt": 255, "ruff": 255, "ruggeri": 255, "ruin": [166, 296], "ruiz": 255, "rule": [30, 52, 66, 67, 70, 76, 92, 98, 126, 136, 149, 154, 155, 160, 163, 197, 253, 255, 264, 278, 283, 284, 289, 292, 293, 295, 324, 367, 368, 369, 371, 377, 381, 382, 387], "ruler": 255, "rumbel": 255, "rumsei": 255, "run": [1, 3, 5, 6, 7, 9, 13, 16, 17, 18, 20, 24, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 59, 63, 66, 67, 72, 74, 75, 78, 81, 83, 86, 87, 88, 89, 100, 117, 118, 123, 126, 127, 128, 133, 140, 148, 151, 158, 159, 160, 161, 163, 164, 165, 170, 171, 179, 183, 191, 200, 201, 204, 210, 219, 220, 221, 223, 224, 229, 230, 231, 233, 240, 241, 243, 247, 248, 249, 250, 255, 256, 261, 269, 277, 280, 282, 287, 288, 289, 290, 292, 294, 295, 300, 301, 309, 313, 318, 328, 330, 334, 335, 341, 343, 344, 345, 347, 348, 353, 354, 355, 357, 365, 366, 368, 369, 373, 374, 376, 377, 384, 385, 386, 387, 393], "run_id": 13, "run_u": 36, "runcontrol": [24, 30, 31, 32, 37, 43, 45, 66, 72, 76, 96, 101, 102, 134, 200, 223, 227, 262, 347, 351], "runfitt": [93, 128, 173, 227, 256, 303, 351], "rung": [154, 283], "runnabl": [64, 163, 282, 292, 293, 328], "runner": [249, 340, 373], "runsim": 373, "runstopat": 72, "runstopin": 72, "runtim": [3, 8, 126, 134, 159, 160, 161, 170, 242, 246, 247, 249, 254, 262, 289, 290, 300], "runtimeerror": [56, 288, 299, 337], "runtimevari": 60, "runwork": [16, 157, 160, 161, 286, 289, 290], "rupprecht": 255, "rusakov": 255, "rusconi": 255, "rush": 255, "russier": 255, "russo": 255, "rusu": 255, "rutishaus": 255, "ruz": 255, "rv": [326, 327], "rvp": [236, 360], "rvp_": [72, 159], "rx3d": [1, 3, 59, 246], "rxd": [0, 1, 4, 41, 64, 146, 160, 163, 246, 275, 277, 289, 292, 293, 349, 359, 360, 365, 366, 368, 369, 370, 372, 373, 375, 376, 388, 391, 393], "rxdexcept": [146, 163, 275, 292], "rxdgeometri": [163, 292], "rxdmath": [1, 163, 292, 293, 373, 376], "rxdsection": 292, "rxvt": 36, "ryanoin": 369, "rybachuk": 255, "rydberg": [119, 120], "ryglewski": 255, "rymer": 255, "ryou": 255, "ryr": 369, "rzhepetskyi": 255, "r\u00f3zsa": 255, "r\u00f6ssert": [93, 255], "r\u00fcbsamen": 255, "r\u00fcckerl": 255, "s0": [21, 32, 80, 85, 101, 111, 112, 113, 114, 115, 116], "s00210": 255, "s00221": 255, "s00401": 255, "s00422": 255, "s00424": 255, "s00429": 255, "s0079": 255, "s0129065717500587": 255, "s0166": 254, "s0219635210002469": 255, "s0219635214400056": 255, "s0219720017500111": 255, "s1": [16, 17, 81, 153, 160, 168, 182, 185, 203, 205, 214, 233, 282, 314, 338, 349, 357], "s10103": 255, "s10158": 255, "s10162": 255, "s10194": 255, "s10237": 255, "s10548": 255, "s10571": 255, "s10827": [100, 254, 255], "s10867": 255, "s10928": 255, "s11055": 255, "s11062": 255, "s11071": 255, "s11427": 255, "s11517": 255, "s11571": 255, "s11734": 255, "s12021": [254, 255], "s12035": 255, "s12038": 255, "s12264": 255, "s12311": 255, "s12559": 255, "s12668": 255, "s12868": 255, "s12915": 255, "s12938": 255, "s12974": 255, "s12984": 255, "s13195": 255, "s13246": 255, "s13408": 255, "s1472": 255, "s157": 255, "s167": 255, "s1740925x09990263": 255, "s1740925x09990391": 255, "s2": [28, 153, 168, 182, 185, 201, 214, 233, 282, 298, 328, 338, 349, 357], "s3": [153, 185, 201, 282, 328], "s4": [201, 328], "s40244": 255, "s40478": 255, "s40708": 255, "s41273": 255, "s41467": 255, "s41537": 255, "s41586": 255, "s41593": 255, "s41596": 255, "s41598": 255, "s42003": 255, "s42005": 255, "s_": 295, "s_netstim": 21, "s_varn": 52, "saar": 255, "sabarli": 255, "sabottk": 255, "sacr": 255, "sacral": 255, "sacr\u00e9": 255, "sadashivaiah": 255, "sadeh": 255, "sadleir": 255, "sadli": [36, 247], "sadoc": 255, "saeb": 255, "safaryan": 255, "safe": [6, 36, 37, 45, 53, 81, 96, 98, 110, 133, 148, 155, 160, 165, 204, 220, 223, 261, 277, 284, 289, 292, 295, 344, 347, 373, 377], "safer": [4, 199, 288, 326], "safest": [47, 86, 160, 289], "safeti": [36, 155, 160, 204, 284, 289], "safiulina": 255, "safronov": 255, "saftenku": 255, "saftig": 255, "saggau": 255, "saghatelyan": 255, "sah": 255, "saha": 255, "sahagun": 255, "sahin": 255, "sahlei": 255, "sahlholm": 255, "sai": [1, 28, 36, 87, 94, 96, 154, 155, 159, 160, 163, 165, 230, 283, 284, 288, 289, 292, 295, 327, 353, 354, 360, 365, 382, 385, 387, 388], "said": [47, 377, 380, 382], "saighi": 255, "sailamul": 255, "saint": 255, "sainz": 255, "saisan": 255, "saito": 255, "saiz": 255, "sajad": 255, "sajedi": 255, "sakad\u017ei\u0107": 255, "sakai": 255, "sakamoto": 255, "sake": [40, 67, 74, 110, 182, 369, 383], "sakmann": 255, "sakurai": 255, "sala": 255, "salamand": 255, "salazar": 255, "sale": 255, "salgado": 255, "salgueiro": 255, "saliba": 255, "salienc": 255, "salk": [198, 201, 325], "salkim": 255, "salloc": [54, 248], "salmon": 100, "saltatori": [255, 369], "salvador": [255, 389], "samarth": 255, "same": [1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 24, 25, 28, 29, 30, 32, 33, 36, 37, 39, 41, 42, 43, 45, 46, 48, 52, 53, 54, 56, 58, 64, 65, 66, 67, 68, 70, 71, 76, 80, 81, 88, 89, 93, 94, 95, 96, 98, 100, 103, 107, 110, 111, 119, 120, 124, 127, 134, 136, 144, 148, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 173, 176, 179, 181, 182, 185, 186, 189, 192, 197, 198, 200, 201, 203, 204, 205, 208, 214, 219, 220, 225, 229, 230, 231, 233, 235, 237, 242, 246, 247, 248, 250, 262, 273, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 294, 295, 296, 298, 299, 300, 303, 306, 309, 311, 312, 314, 319, 324, 325, 327, 328, 330, 334, 338, 343, 344, 349, 353, 354, 355, 357, 359, 361, 365, 366, 368, 369, 373, 377, 378, 381, 382, 384, 385, 387, 388, 392], "samengo": 255, "samoudi": 255, "sampl": [76, 160, 198, 200, 201, 255, 289, 325, 327, 328], "samura": 255, "san": [126, 255], "san_opt": 242, "sanayei": 255, "sanchez": 255, "sander": 255, "sandercock": 255, "sandler": 255, "sandov": 255, "sandstrom": 255, "sanger": 255, "sanghevi": 255, "sangrei": 255, "sanhueza": 255, "sanit": [3, 243], "saniti": [246, 289], "sanjai": 255, "sankar": 255, "sankarasubramanian": 255, "santacoloma": 255, "santamaria": 255, "santand": 255, "santaniello": 255, "santello": 255, "santhakumar": 255, "santini": 255, "santo": 255, "santoro": 255, "santucci": 255, "sapiro": 255, "sara": 255, "saraceno": 255, "sarafi": 255, "saraga": 255, "saraiva": 255, "saravanan": 255, "sarbaz": 255, "sarco": 369, "sarid": 255, "sarkar": 255, "sarma": 255, "sasaki": 255, "sasmal": 255, "satellit": [126, 255], "sath": 255, "satifi": [163, 292], "satisfactori": [78, 94], "satisfi": [24, 93, 126, 231, 292, 355, 366, 371, 385, 387], "sato": 255, "sattel": 255, "satur": [95, 255], "sauc": 59, "saudargien": 255, "saudargien\u0117": 255, "sauer": 255, "sav_g": [153, 282, 388], "sav_rh": [153, 282, 388], "save": [1, 3, 10, 11, 13, 16, 17, 24, 25, 26, 27, 30, 31, 32, 36, 37, 46, 47, 48, 51, 53, 65, 67, 70, 81, 82, 83, 86, 87, 94, 96, 99, 100, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 121, 125, 127, 129, 133, 134, 143, 144, 147, 153, 154, 156, 160, 161, 173, 174, 175, 177, 182, 183, 185, 186, 189, 201, 203, 210, 219, 222, 223, 225, 229, 230, 231, 233, 237, 246, 255, 257, 261, 262, 272, 273, 275, 276, 282, 283, 285, 288, 289, 290, 303, 305, 307, 312, 313, 315, 328, 330, 335, 343, 346, 347, 349, 353, 354, 355, 357, 361, 368, 377, 385, 387, 393], "save_all_imag": 63, "save_context": [160, 289], "save_everi": 63, "save_nam": [72, 159, 229, 235, 237, 353, 359, 361], "save_sess": [177, 226, 227, 231, 307, 350, 351, 355, 388], "save_st": 292, "save_test": [219, 343], "save_test_bin": [219, 343], "save_window_": [72, 159], "saveabl": [226, 227, 350, 351], "saveal": [226, 350], "saveaudit": [81, 222, 346, 388], "savefig": [63, 370, 385], "savefitbrows": [134, 262], "savefitparm": [134, 262], "savegroup": [103, 124], "savepath": [133, 261], "saverestorefitparam": [128, 256], "saverestorefunct": [128, 256], "saveresult": [13, 16, 17], "savesess": 30, "savest": [1, 140, 219, 223, 269, 292, 343, 347, 388], "savichetva": 255, "savspk": 29, "savtchenko": 255, "saw": [80, 96], "sawalh": 255, "sawtel": 255, "say_hi": 353, "sayegh": 255, "sb": [178, 308], "sbml": 275, "sc": 255, "scaf": 255, "scaffold": [197, 201, 255, 324], "scalablebord": [163, 292], "scalar": [52, 53, 81, 151, 154, 160, 185, 186, 197, 201, 203, 214, 280, 283, 289, 314, 315, 324, 328, 330, 334, 338, 373], "scale": [5, 12, 41, 46, 47, 49, 53, 63, 70, 73, 87, 90, 92, 96, 99, 126, 130, 133, 134, 136, 153, 154, 163, 166, 177, 183, 201, 202, 220, 227, 228, 229, 231, 233, 234, 235, 237, 250, 254, 255, 258, 261, 262, 264, 282, 283, 292, 296, 307, 313, 328, 329, 344, 351, 352, 353, 355, 357, 358, 359, 361, 366, 368, 369, 376, 391], "scale_by_area": [163, 292], "scalefactor": 95, "scalei": [228, 229, 352, 353], "scalex": [228, 229, 352, 353], "scan": [14, 53, 170, 191, 201, 255, 300, 318, 328], "scanf": [81, 197, 201, 202, 324, 328, 329], "scanstr": [187, 188, 316], "scantil": [201, 202, 328, 329], "scanvar": [187, 188, 191, 316, 318], "scanziani": 255, "scar": 255, "scarciti": 255, "scari": 247, "scarlati": 255, "scatter": [160, 208, 289, 334, 344, 367, 371], "scattoni": 255, "scenario": [64, 246, 255], "scene": [12, 53, 144, 145, 147, 229, 230, 234, 237, 238, 243, 273, 274, 276, 289, 353, 354, 358, 361, 362], "scene_": [72, 159], "scene_background": 92, "scene_foreground": 92, "scene_list_": [72, 159], "scene_vector_": [72, 159], "schad": 255, "schaefer": 255, "schaff": 255, "schaffer": 255, "schall": 255, "schappo": 255, "schaworonkow": 255, "schedul": 54, "scheinpflug": 255, "schemat": [53, 234, 237, 358, 361], "scheme": [53, 92, 109, 126, 142, 150, 153, 154, 160, 173, 220, 250, 255, 271, 279, 282, 283, 289, 303, 344, 366, 379], "schemmel": 255, "schepkin": 255, "schertel": 255, "scheuer": 255, "schiavon": 255, "schiefer": 255, "schierwagen": 255, "schiff": 255, "schild": 255, "schill": 255, "schiller": 255, "schindel": 255, "schindler": 255, "schizophren": 255, "schizophrenia": 255, "schleimer": 255, "schloss": 255, "schl\u00f6gl": 255, "schl\u00fcter": 255, "schmelz": 255, "schmid": 255, "schmidt": 255, "schmiedeberg": 255, "schmitt": 255, "schmitz": 255, "schmuker": 255, "schneeberg": 255, "schneider": 255, "schnitzer": 255, "schnupp": 255, "schoch": 255, "schofield": 255, "scholz": 255, "schomburg": 255, "school": 89, "schoorlemm": 255, "schoppa": 255, "schorg": 255, "schottler": 255, "schouenborg": 255, "schreglmann": 255, "schreiber": 255, "schreibman": 255, "schroeder": 255, "schrott": 255, "schr\u00f6der": 255, "schubert": 255, "schuchmann": 255, "schueffni": 255, "schuermann": 255, "schui": 255, "schulman": 81, "schult": 255, "schulten": 255, "schultz": 255, "schulz": 255, "schurch": 255, "schutter": [254, 255], "schwaller": 255, "schwartz": 255, "schwarz": 255, "schwarzach": 255, "schwindt": 255, "sch\u00fcrmann": [93, 254, 255], "sciadv": 255, "sciatic": 255, "scienc": [89, 255, 388], "scientif": [1, 28, 40, 119, 120, 126, 220, 242, 255, 344], "scimemi": 255, "scitranslm": 255, "scl": [235, 237, 359, 361], "sclerosi": 255, "scm": [0, 248, 249, 377, 378], "scn1a": 255, "scn2a": 255, "scn8a": 255, "scobj": [179, 309], "scolamiero": 255, "scop": [119, 120, 154, 283], "scop_rand": [98, 198, 325], "scop_random": [198, 325], "scope": [32, 52, 53, 98, 154, 155, 160, 169, 170, 204, 242, 283, 284, 289, 300, 314, 328, 368, 377], "scopmath": [138, 201, 266, 328], "scorcioni": [40, 47, 255], "scott": 255, "scratch": [1, 10, 11, 14, 94, 126, 154, 283], "screen": [25, 42, 47, 50, 66, 67, 70, 76, 81, 86, 99, 103, 110, 121, 124, 127, 144, 172, 173, 174, 175, 177, 179, 180, 182, 185, 189, 201, 204, 205, 210, 221, 226, 227, 229, 231, 232, 233, 234, 237, 255, 268, 273, 302, 303, 304, 305, 307, 309, 310, 312, 314, 328, 335, 345, 350, 351, 353, 355, 356, 357, 358, 361, 387, 388], "screw": [29, 155, 284], "script": [1, 3, 4, 26, 36, 48, 55, 60, 66, 76, 81, 86, 87, 160, 200, 216, 219, 229, 231, 237, 242, 247, 248, 249, 255, 269, 289, 314, 340, 343, 353, 355, 361, 382, 383, 384, 385, 386, 391], "scroll": [46, 47, 79, 80, 85, 99, 103, 105, 107, 123, 124, 174, 180, 182, 231, 304, 310, 312, 355], "scroll_po": [174, 183, 304, 313], "scrollbox": [173, 182, 303, 312], "sction": 60, "scurfield": 255, "scuri": 255, "sdk": [1, 3, 7, 246], "sdk_root": 3, "sdkroot": 1, "sdsc": [188, 316], "se": [10, 11, 20, 24, 30, 37, 45, 47, 66, 67, 86, 87, 96, 104, 121, 127, 133, 210, 227, 230, 231, 255, 261, 335, 351, 354, 355, 359, 361], "se1": [22, 37], "se_netstim": 22, "sea": [173, 303], "seai": 255, "seal": [153, 282, 344], "search": [46, 53, 89, 94, 126, 133, 160, 170, 201, 220, 231, 240, 254, 255, 261, 289, 292, 300, 328, 344, 355, 381], "searchabl": 126, "sec": [38, 46, 47, 53, 54, 56, 60, 63, 66, 72, 119, 120, 153, 154, 159, 160, 163, 164, 165, 168, 169, 206, 250, 264, 265, 273, 275, 276, 278, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 297, 298, 306, 308, 314, 317, 328, 330, 332, 344, 347, 359, 360, 361, 368, 369, 373, 382, 383, 384], "sec2": [119, 120], "sec_alloc": 60, "sec_in_thread": [157, 160, 286, 289], "seclamp": [42, 66, 87, 103, 124, 133, 134, 152, 153, 162, 220, 261, 262, 281, 282, 291, 344, 388], "seclist": [160, 236, 289, 359], "secnam": [47, 81, 96, 146, 156, 165, 166, 169, 178, 237, 275, 295, 299, 314, 361, 388], "second": [4, 9, 16, 17, 25, 28, 31, 36, 38, 39, 41, 42, 46, 53, 66, 70, 76, 80, 81, 88, 89, 90, 98, 103, 108, 119, 120, 124, 126, 136, 138, 139, 149, 154, 160, 161, 165, 166, 169, 170, 173, 174, 176, 179, 182, 185, 186, 191, 192, 197, 198, 201, 204, 207, 214, 216, 217, 220, 223, 224, 225, 229, 231, 234, 236, 237, 242, 248, 250, 253, 255, 264, 266, 267, 278, 283, 289, 290, 292, 295, 296, 297, 300, 303, 304, 306, 309, 312, 314, 315, 318, 319, 324, 325, 328, 333, 338, 340, 341, 344, 347, 348, 349, 353, 355, 358, 360, 361, 366, 372, 373, 377, 382, 383, 387, 392, 393], "secondari": [50, 85, 86, 123, 255], "secondli": 283, "secondord": [81, 153, 154, 186, 220, 223, 227, 282, 283, 315, 344, 347, 351, 388], "secret": 255, "secret_fil": 377, "secretori": 255, "section": [0, 1, 3, 4, 6, 7, 8, 9, 14, 25, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 60, 64, 65, 66, 67, 68, 76, 79, 81, 86, 88, 89, 96, 98, 103, 104, 105, 108, 110, 124, 125, 126, 127, 130, 131, 134, 136, 137, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 167, 168, 173, 176, 178, 179, 186, 201, 203, 204, 206, 211, 219, 220, 223, 225, 227, 229, 230, 231, 235, 236, 237, 238, 242, 247, 248, 250, 252, 253, 255, 258, 259, 262, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 297, 298, 303, 306, 308, 309, 314, 315, 327, 328, 330, 332, 338, 342, 343, 344, 347, 349, 351, 354, 355, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 381, 383, 384, 387, 393], "section1": [154, 155, 283, 284], "section2": [154, 155, 283, 284], "section_exist": [146, 165, 168, 275, 295, 298, 388], "section_nam": [169, 299], "section_orient": [146, 165, 168, 275, 295, 298, 388], "section_own": [146, 165, 275, 295, 388], "section_pop": 168, "section_set": 242, "sectionbrows": [140, 167, 183, 269, 297, 313, 388], "sectionconnectsec_impl": 60, "sectionlist": [22, 66, 81, 140, 146, 151, 160, 163, 165, 169, 178, 205, 235, 236, 237, 269, 275, 280, 289, 292, 295, 299, 308, 314, 331, 359, 360, 361, 366, 388], "sectionnam": [146, 165, 169, 275, 295, 299, 388], "sectionpool": 60, "sectionref": [81, 140, 146, 160, 165, 169, 206, 269, 275, 289, 295, 299, 314, 331, 332, 388], "sectionsif": 60, "secur": [248, 380], "sed": [3, 219, 343], "seddik": 255, "sedlak": 255, "see": [0, 1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 50, 52, 53, 54, 55, 56, 58, 60, 64, 66, 68, 70, 77, 78, 79, 80, 82, 83, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 114, 116, 119, 120, 124, 125, 126, 127, 129, 130, 133, 134, 136, 138, 144, 147, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 170, 173, 179, 182, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 215, 216, 219, 220, 222, 223, 225, 227, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 242, 246, 247, 248, 249, 250, 257, 258, 261, 262, 264, 266, 268, 269, 273, 276, 277, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 303, 309, 312, 314, 321, 322, 324, 325, 327, 328, 330, 332, 333, 335, 339, 340, 342, 343, 344, 346, 347, 349, 351, 353, 354, 355, 357, 359, 360, 361, 365, 366, 370, 371, 373, 377, 380, 381, 382, 383, 385, 387, 388], "seed": [100, 122, 160, 198, 200, 289, 325, 327], "seed1": [200, 327], "seed2": [200, 327], "seek": [64, 187, 188, 316], "seeli": 255, "seem": [46, 66, 73, 78, 80, 87, 96, 119, 120, 127, 156, 197, 210, 246, 285, 324, 335, 377, 378, 382, 383], "seemingli": 383, "seen": [3, 7, 33, 50, 52, 53, 56, 81, 96, 98, 108, 126, 169, 255, 312, 382, 388], "seenivasan": 255, "seg": [28, 41, 285, 288, 292, 295, 296, 299, 314, 344, 360, 375, 382, 383, 384], "segal": 255, "segev": [93, 254, 255], "segfault": [1, 3, 208, 243, 334], "segment": [1, 25, 38, 45, 46, 51, 60, 64, 66, 70, 89, 125, 131, 136, 139, 146, 148, 151, 153, 154, 155, 160, 161, 165, 166, 176, 196, 201, 203, 204, 206, 220, 225, 229, 246, 255, 259, 264, 267, 275, 277, 280, 282, 283, 284, 288, 289, 290, 295, 296, 298, 306, 323, 328, 330, 332, 344, 349, 353, 359, 360, 361, 368, 369, 375, 377, 382], "segment1": 296, "segment2": 296, "segmentnew_sect": 60, "segnum": 206, "segreg": [103, 124, 255], "seguin": 255, "seidenbech": 255, "seidenstein": [254, 255], "seizur": [254, 255], "sejnowski": [126, 255, 363, 393], "sejp": 255, "sekiguchi": 255, "sekul": 255, "sekuli\u0107": 255, "seldom": [160, 201, 289, 328], "select": [1, 6, 10, 11, 12, 14, 19, 25, 27, 29, 30, 31, 32, 45, 46, 47, 48, 50, 51, 66, 67, 70, 72, 73, 79, 80, 84, 86, 87, 89, 92, 96, 98, 99, 100, 104, 105, 106, 108, 112, 115, 123, 126, 127, 129, 130, 131, 132, 133, 134, 144, 145, 146, 147, 156, 159, 160, 163, 165, 166, 174, 177, 178, 179, 182, 183, 185, 188, 197, 200, 201, 203, 216, 218, 220, 221, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 242, 246, 247, 248, 255, 257, 258, 259, 260, 261, 262, 273, 274, 275, 276, 285, 289, 292, 295, 296, 304, 307, 308, 309, 312, 313, 316, 324, 327, 328, 330, 340, 342, 344, 345, 350, 351, 352, 353, 354, 355, 357, 358, 361, 362, 382], "select_act": [174, 178, 183, 229, 304, 308, 313, 353], "selected1": 312, "selected2": 312, "selectinject": [132, 260], "selectloc": [131, 132, 259, 260], "selectmeasur": [132, 260], "selector": [14, 42, 169], "selectpointprocess": [31, 144, 273], "self": [64, 71, 81, 201, 220, 225, 250, 255, 295, 312, 314, 325, 328, 334, 344, 347, 349, 373, 377, 382, 383, 384, 385, 387], "selfev": [220, 344], "selfeventpool": [220, 344], "selfqueu": [220, 344], "seller": 66, "sem": [201, 255, 328], "semant": [53, 56, 119, 120, 153, 160, 163, 169, 173, 201, 210, 211, 282, 289, 292, 303, 328, 335, 378, 379], "semi": [46, 248, 255], "semicolon": 3, "seminar": [126, 255], "semver": 377, "semyanov": 255, "senbhattacharya": 255, "send": [29, 47, 66, 70, 86, 87, 99, 148, 153, 159, 160, 161, 204, 210, 220, 231, 268, 277, 282, 288, 289, 290, 335, 344, 355, 366, 371, 383, 385], "send_cmd": 182, "send_tim": [157, 160, 286, 289], "sengupta": 255, "senk": 255, "senkow": 255, "senn": 255, "sens": [10, 11, 14, 53, 66, 81, 94, 96, 119, 120, 144, 154, 155, 159, 160, 166, 173, 175, 185, 197, 231, 233, 255, 273, 283, 284, 288, 289, 294, 296, 303, 305, 314, 324, 355, 357, 369, 377, 387], "sensat": 255, "sensibl": [3, 155, 284], "sensit": [25, 36, 53, 123, 126, 136, 154, 160, 255, 264, 283, 289], "sensor": 255, "sensori": [36, 255], "sensorimotor": 255, "sent": [99, 153, 159, 160, 204, 210, 219, 220, 282, 288, 289, 330, 335, 343, 344, 368, 385], "sentinel": [53, 81, 201, 328], "seo": 255, "separ": [1, 3, 13, 16, 17, 18, 28, 39, 42, 45, 52, 53, 56, 66, 70, 76, 81, 83, 87, 94, 96, 99, 103, 110, 124, 129, 133, 134, 148, 154, 155, 159, 160, 161, 163, 166, 169, 170, 174, 197, 198, 200, 201, 204, 205, 216, 220, 227, 229, 230, 231, 234, 242, 246, 247, 249, 255, 257, 261, 262, 277, 283, 284, 288, 289, 290, 292, 296, 299, 300, 304, 315, 324, 325, 327, 328, 340, 342, 344, 351, 353, 354, 355, 358, 369, 377, 382, 383, 387, 388], "sepsi": 255, "septa": 255, "septal": 255, "septoentorhin": 255, "septum": 255, "sepulchr": 255, "sepulveda": 255, "seq": [126, 200, 225, 327, 349], "sequenc": [10, 11, 13, 39, 42, 45, 65, 66, 81, 87, 94, 100, 103, 124, 133, 153, 154, 160, 165, 166, 169, 188, 198, 200, 201, 219, 220, 225, 229, 237, 239, 255, 261, 282, 283, 284, 289, 295, 296, 316, 325, 327, 328, 343, 344, 349, 353, 361, 372], "sequenti": [28, 29, 81, 126, 160, 229, 237, 255, 289, 353, 361, 372, 384], "sequest": 369, "sequestr": 369, "seraph": [201, 328], "serban": [126, 220, 344], "serca": 369, "seri": [13, 41, 76, 81, 96, 99, 103, 124, 153, 154, 166, 204, 246, 251, 255, 282, 283, 289, 296, 342, 368, 377, 378, 383, 384, 385, 386, 387, 390, 392, 393], "serial": [4, 5, 10, 11, 13, 16, 17, 100, 160, 171, 189, 242, 250, 255, 289, 301, 384, 386], "serif": 127, "seriou": [40, 86, 96, 119, 120, 160, 161, 201, 210, 220, 227, 289, 290, 335, 344, 351, 377], "serna": 255, "serotonerg": 255, "serotonin": 255, "serrat": 255, "serv": [9, 40, 53, 81, 82, 83, 98, 153, 159, 201, 229, 282, 288, 328, 353, 377, 387], "server": [160, 233, 246, 289, 357, 377], "servic": [160, 255, 289, 377], "sesion": 108, "session": [24, 26, 27, 31, 37, 39, 45, 46, 47, 65, 67, 82, 83, 86, 87, 94, 96, 99, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 127, 129, 133, 134, 143, 144, 147, 156, 170, 173, 175, 177, 182, 186, 203, 210, 223, 227, 229, 237, 249, 253, 257, 261, 262, 272, 273, 276, 285, 300, 303, 305, 307, 312, 315, 330, 335, 347, 351, 353, 361, 393], "set": [1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 24, 25, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 49, 50, 52, 55, 56, 60, 64, 65, 68, 69, 70, 72, 77, 78, 80, 81, 86, 87, 89, 92, 93, 94, 99, 100, 101, 102, 103, 108, 109, 111, 112, 114, 116, 119, 120, 123, 124, 125, 126, 127, 133, 134, 136, 138, 144, 145, 147, 148, 149, 151, 153, 154, 155, 158, 159, 160, 163, 164, 165, 166, 169, 170, 171, 173, 174, 182, 183, 188, 189, 191, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 210, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 233, 235, 237, 241, 242, 243, 246, 247, 250, 255, 261, 262, 264, 266, 268, 273, 274, 276, 277, 278, 280, 282, 283, 284, 287, 288, 289, 292, 294, 295, 296, 300, 301, 303, 304, 312, 313, 314, 316, 318, 323, 324, 325, 327, 328, 329, 330, 333, 334, 335, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 357, 359, 360, 361, 365, 366, 368, 369, 371, 372, 373, 377, 378, 381, 382, 383, 385, 393], "set_data": 373, "set_f": [150, 152, 279, 281], "set_field_statu": 53, "set_foo": [155, 252, 284], "set_gid": 385, "set_gid2nod": [157, 160, 161, 282, 286, 289, 290, 385], "set_id": 327, "set_index_then_doit": 327, "set_maxstep": [157, 160, 161, 219, 220, 282, 286, 289, 290, 343, 344, 385], "set_param": 13, "set_se": [198, 325], "set_seq": 327, "set_solve_typ": [146, 163, 275, 292], "set_unsorted_callback": 53, "set_xlabel": [282, 383], "set_xlim": 282, "set_xtick": 383, "set_ylabel": 383, "set_ytick": 282, "set_yticklabel": 282, "setcol": [197, 202, 324, 329], "setcolor": [81, 233, 357, 388], "setdata": [153, 282], "setdata_featur": 388, "setdata_hh": [153, 282, 388], "setdata_mechnam": [154, 283], "setdata_pa": 388, "setdata_suffix": [153, 282], "setdiag": [197, 202, 324, 329], "setdt": 72, "setenv": [158, 287], "sethighindex": [200, 327], "sethupathi": 255, "sethuramanujam": 255, "seti": 28, "setpar": 29, "setparam": [13, 16, 17], "setpoint": [81, 154, 155, 204, 284, 314, 388], "setpost": [157, 159, 286, 288], "setrand": [197, 200, 201, 202, 235, 324, 327, 328, 329, 359], "setrow": [197, 202, 324, 329], "setspinearea": [81, 139, 146, 165, 166, 267, 275, 295, 296, 388], "setstructur": [150, 152, 279, 281], "settabl": [9, 27, 107, 153, 282, 388], "setter": 312, "settext": [81, 233, 357], "settl": [13, 24, 78, 94, 96], "setup": [1, 3, 35, 45, 52, 57, 60, 64, 81, 100, 153, 160, 161, 223, 225, 233, 242, 246, 248, 249, 253, 255, 282, 284, 289, 290, 328, 344, 347, 349, 357, 374, 385], "setup_diam": 296, "setup_discontinu": 44, "setup_ex": 249, "setup_gui": 201, "setup_topologi": 60, "setup_transf": [157, 160, 286, 289], "setuptool": [1, 57, 248], "setuptools_scm_pretend_vers": 248, "setuptools_use_distutil": 1, "setval": [151, 197, 202, 208, 280, 324, 329, 334], "setview": [230, 354], "seung": 255, "seutin": 255, "seven": [53, 182, 255, 312], "sever": [1, 10, 11, 24, 25, 36, 37, 39, 41, 42, 46, 47, 52, 53, 59, 64, 67, 76, 81, 93, 94, 96, 99, 100, 103, 107, 124, 126, 133, 134, 136, 147, 150, 153, 154, 155, 160, 163, 169, 173, 188, 198, 200, 201, 210, 221, 227, 229, 230, 233, 234, 235, 236, 237, 241, 248, 261, 262, 264, 276, 279, 282, 283, 284, 289, 292, 303, 316, 325, 327, 328, 335, 345, 351, 353, 354, 357, 358, 359, 360, 361, 369, 377, 378, 381, 382, 384, 385, 389], "sevilla": 255, "seward": 242, "sexual": 255, "se\u00e1\u00f1ez": 255, "sf": [214, 338], "sfyraki": 255, "sgritta": 255, "sh": [0, 158, 160, 216, 219, 246, 247, 248, 249, 287, 340, 343], "sha": 363, "shabestari": 255, "shade": 70, "shafer": 255, "shah": 255, "shahabi": 255, "shai": 255, "shaker": 255, "shal": 255, "shall": [191, 248, 318, 377, 378, 380], "shallowest": 52, "shalom": 255, "shamma": 255, "shao": 255, "shape": [27, 28, 29, 30, 36, 38, 39, 40, 41, 46, 52, 66, 70, 81, 86, 87, 89, 94, 104, 105, 108, 110, 115, 130, 139, 140, 144, 145, 146, 147, 160, 163, 165, 167, 178, 224, 229, 231, 234, 235, 238, 255, 258, 267, 269, 273, 274, 275, 276, 289, 292, 295, 297, 308, 348, 353, 355, 358, 359, 362, 382, 388], "shape_scale_fil": 92, "shape_window": 384, "shapeplot": [41, 235, 359], "shapeselectact": [131, 259], "shapiro": 255, "shappir": 255, "share": [3, 4, 10, 11, 14, 49, 53, 54, 56, 65, 82, 83, 89, 92, 100, 126, 153, 159, 160, 161, 169, 197, 205, 216, 229, 242, 246, 255, 268, 282, 283, 288, 289, 290, 299, 314, 324, 330, 340, 344, 353, 355, 373, 377, 385], "shariati": 255, "sharkovska": 255, "sharma": 255, "sharp": [95, 255], "sharpen": 255, "sharpli": 255, "shatillo": 255, "shaul": 255, "shaw": [100, 255], "she": [210, 335], "sheasbi": 255, "sheath": [153, 255, 282, 388], "sheet": 255, "sheffield": 255, "shehzad": 255, "sheight": [237, 361], "shekhar": 255, "shelburn": 255, "shell": [10, 31, 46, 48, 81, 154, 163, 216, 242, 246, 249, 250, 268, 283, 292, 340, 366], "shellenv": [246, 247], "shen": 255, "shepard": 255, "shepherd": [89, 254, 255], "sherif": 255, "sherman": 255, "sheroziya": 255, "sherrard": 255, "sheth": 255, "sheynikhovich": 255, "shi": 255, "shiffl": 60, "shifman": 255, "shift": [29, 50, 67, 70, 81, 100, 104, 201, 229, 234, 237, 255, 328, 353, 358, 361, 371, 376], "shigemoto": 255, "shigeto": 255, "shih": 255, "shillcock": 255, "shilyanski": 255, "shimazaki": 255, "shimizu": 255, "shimojo": 255, "shimoura": 255, "shin": 255, "shinawi": 255, "shinn": 255, "shinozaki": 255, "ship": 249, "shiraishi": 255, "shiraz": 255, "shirinpour": 255, "shirk": 255, "shkorbatova": 255, "shlifer": 255, "shoemak": 255, "shoffstal": 255, "shoham": 255, "short": [1, 29, 45, 52, 53, 60, 66, 76, 80, 81, 108, 133, 160, 201, 204, 229, 230, 231, 250, 255, 261, 289, 328, 353, 354, 355, 363], "shortcom": 377, "shortcut": [46, 70, 83], "shorten": [10, 11, 70, 126, 388], "shorter": [51, 88, 126, 296, 328, 377, 378, 384, 388], "shortest": [160, 201, 255, 289, 328], "shorthand": 3, "shot": 255, "shou": 255, "shoudl": 49, "should": [1, 4, 7, 8, 10, 11, 13, 14, 24, 25, 28, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 53, 54, 64, 66, 67, 81, 86, 87, 90, 93, 94, 96, 98, 99, 107, 108, 109, 110, 111, 115, 119, 120, 133, 134, 136, 138, 144, 147, 149, 151, 153, 154, 155, 158, 160, 161, 163, 164, 165, 166, 168, 169, 173, 176, 182, 185, 188, 189, 198, 200, 201, 204, 206, 208, 209, 210, 213, 216, 219, 220, 221, 223, 225, 226, 227, 229, 231, 233, 236, 242, 246, 247, 248, 249, 252, 255, 261, 262, 264, 266, 273, 276, 278, 280, 282, 283, 284, 287, 289, 290, 292, 294, 295, 296, 298, 299, 303, 306, 312, 314, 316, 325, 327, 328, 332, 334, 335, 337, 340, 343, 344, 345, 347, 349, 350, 351, 353, 355, 357, 360, 361, 366, 369, 376, 377, 378, 382, 383, 385, 387, 388], "shouldn": [96, 248], "show": [3, 10, 11, 13, 17, 24, 25, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 46, 47, 54, 64, 65, 66, 67, 70, 76, 80, 81, 86, 89, 90, 93, 94, 96, 99, 100, 101, 104, 105, 107, 108, 114, 115, 119, 120, 123, 130, 131, 133, 134, 144, 145, 147, 149, 153, 154, 166, 173, 174, 176, 177, 182, 188, 201, 216, 219, 227, 229, 231, 232, 234, 235, 237, 238, 242, 255, 258, 259, 261, 262, 273, 274, 276, 278, 282, 283, 296, 303, 306, 307, 312, 316, 328, 330, 340, 343, 351, 355, 356, 358, 359, 360, 361, 362, 365, 366, 367, 368, 370, 371, 372, 376, 382, 383, 384, 387, 388], "show_all_s": 303, "show_err_m": [170, 300], "show_errmess_alwai": [81, 170, 171, 300, 301, 388], "show_val": 312, "show_video": 63, "show_winio": [216, 340, 388], "showcas": 250, "showcellmap": [32, 37], "showconv1": 29, "showdiv1": 29, "showmechan": [141, 227, 270, 351], "shown": [3, 14, 25, 27, 28, 37, 38, 47, 53, 66, 86, 89, 95, 96, 103, 113, 115, 124, 144, 166, 173, 178, 188, 231, 237, 248, 273, 277, 296, 299, 303, 308, 314, 316, 355, 361, 365, 366, 368, 373, 385, 387, 388], "shownumb": [229, 353], "showposit": [131, 259], "showspk": 29, "shrager": 255, "shree": 255, "shrink": [201, 328], "shrinkag": 255, "shryock": 255, "shtrahman": 255, "shu": 255, "shuffl": [201, 328], "shukla": 255, "shumak": [220, 344], "shuman": 255, "shunt": [80, 109, 255], "shupe": 255, "shut": 385, "shvartsman": 255, "si": [37, 185, 201, 255, 328], "si1": 37, "si2": [22, 37], "si_netstim": 22, "sibil": 255, "sick": 255, "sid": [160, 289], "side": [3, 25, 42, 53, 66, 70, 96, 100, 104, 110, 127, 131, 153, 154, 155, 160, 169, 185, 194, 197, 201, 204, 207, 210, 220, 223, 240, 242, 253, 255, 259, 282, 283, 284, 289, 292, 321, 324, 328, 333, 335, 344, 347, 363, 366, 377, 387, 388], "sidiropoul": 255, "siegelbaum": 255, "siegl": 255, "siel": 255, "siemen": [96, 371], "sierra": 255, "siev": 255, "sigfp": [171, 242, 301], "sight": [166, 296], "sigil": 7, "sigmoid": [94, 376], "sign": [33, 46, 47, 86, 94, 96, 109, 154, 190, 191, 201, 243, 255, 283, 293, 317, 318, 328, 377, 387], "signal": [7, 25, 41, 52, 53, 81, 100, 160, 166, 216, 231, 255, 289, 296, 340, 355, 366, 369, 382, 392], "signatur": [53, 255, 387], "signfic": [161, 290], "signifi": [25, 94, 139, 155, 201, 229, 267, 284, 353], "signific": [13, 25, 33, 45, 53, 64, 86, 96, 154, 160, 231, 255, 283, 355, 369, 377, 378, 387], "significantli": [3, 160, 255, 289, 382], "sigpol": [160, 289], "sigulinski": 255, "sikdar": 255, "sikora": 255, "silberberg": 255, "silbergeld": 255, "silenc": 255, "silent": [119, 120, 255], "silicio": 255, "silico": 255, "silicon": 255, "siljak": 255, "siloni": 255, "silva": 255, "silver": 255, "silversmith": 255, "silverstein": 255, "sim": [1, 4, 28, 29, 36, 63, 220, 342, 344], "sim1": [165, 295], "sim2": [165, 295], "sim3": [165, 295], "simd": [3, 4, 155, 284], "simgraph": [229, 353], "simgraph_remov": [220, 344], "simiaki": 255, "similar": [0, 5, 25, 29, 33, 38, 39, 43, 46, 53, 66, 68, 81, 89, 93, 96, 99, 100, 114, 133, 136, 144, 150, 154, 155, 159, 160, 166, 170, 185, 191, 192, 198, 200, 201, 204, 220, 229, 230, 242, 246, 250, 255, 261, 264, 273, 279, 283, 284, 288, 289, 296, 300, 318, 319, 325, 327, 328, 334, 339, 344, 353, 354, 368, 370, 377, 382, 385, 387], "similarli": [53, 98, 126, 197, 219, 242, 324, 343, 369, 377, 381, 387, 388], "simmon": 255, "simo": 255, "simon": 255, "simpl": [5, 7, 24, 25, 29, 32, 45, 51, 52, 53, 58, 66, 76, 81, 88, 94, 96, 98, 100, 103, 110, 114, 118, 124, 126, 147, 153, 154, 155, 160, 161, 166, 201, 210, 220, 227, 233, 248, 250, 255, 276, 282, 283, 284, 289, 290, 296, 315, 328, 335, 344, 351, 357, 371, 373, 377, 378, 382, 384, 385, 388], "simpler": [89, 161, 185, 220, 229, 290, 343, 344, 368, 377, 388], "simplest": [7, 28, 41, 42, 51, 81, 93, 103, 124, 160, 161, 289, 290, 366, 367, 377], "simplex": [201, 227, 328, 351], "simpli": [4, 7, 13, 39, 45, 53, 54, 66, 70, 86, 96, 98, 166, 179, 185, 190, 204, 246, 292, 296, 309, 314, 317, 328, 366, 377, 381, 382, 387, 388], "simplic": [369, 377], "simplif": 255, "simplifi": [3, 14, 29, 43, 53, 66, 76, 96, 108, 126, 159, 163, 220, 243, 255, 288, 292, 344, 377, 388, 392], "simplist": [166, 296], "simtooldb": 96, "simtrack": 255, "simuat": 220, "simul": [1, 3, 4, 5, 6, 9, 10, 11, 12, 16, 17, 18, 24, 26, 29, 38, 40, 41, 42, 46, 49, 53, 54, 57, 58, 66, 74, 75, 76, 81, 82, 83, 87, 88, 89, 93, 94, 96, 100, 103, 105, 117, 118, 123, 124, 127, 133, 134, 139, 142, 143, 148, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 196, 200, 201, 210, 218, 219, 220, 224, 225, 227, 230, 231, 233, 242, 246, 250, 253, 254, 255, 261, 262, 267, 271, 272, 277, 280, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 297, 323, 327, 328, 335, 342, 343, 344, 348, 349, 351, 354, 355, 357, 359, 365, 366, 368, 369, 372, 373, 374, 377, 384, 385, 386, 391, 392], "simulat": [32, 108], "simulaten": 366, "simultan": [81, 93, 98, 126, 134, 144, 151, 153, 154, 160, 204, 229, 255, 262, 273, 280, 282, 283, 289, 353, 377, 385, 387], "sim\u00f5": 255, "sin": [28, 52, 81, 91, 151, 160, 163, 166, 173, 185, 190, 195, 201, 202, 204, 216, 229, 230, 233, 280, 289, 292, 293, 296, 303, 317, 322, 328, 329, 334, 340, 353, 354, 357, 360, 383, 384, 385, 387, 388], "sinauer": [126, 255], "sinc": [0, 3, 4, 14, 25, 28, 29, 32, 36, 37, 39, 42, 46, 47, 58, 66, 81, 88, 94, 96, 103, 112, 119, 120, 124, 126, 127, 133, 134, 136, 149, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 168, 169, 173, 182, 186, 197, 200, 201, 204, 210, 211, 213, 216, 219, 220, 221, 225, 229, 231, 232, 234, 236, 237, 246, 247, 248, 250, 261, 262, 264, 278, 280, 282, 283, 284, 288, 289, 290, 294, 295, 296, 298, 299, 303, 312, 314, 315, 324, 327, 328, 335, 337, 340, 343, 344, 345, 349, 353, 355, 356, 358, 360, 361, 366, 367, 370, 371, 377, 382, 384, 385, 387, 388], "sindex": [150, 152, 279, 281], "sine": [91, 136, 201, 204, 229, 264, 293, 328, 353, 357, 387], "singapor": 255, "singer": [254, 255], "singh": 255, "singl": [1, 3, 5, 10, 11, 13, 26, 28, 33, 36, 38, 42, 45, 47, 48, 49, 51, 53, 58, 66, 70, 71, 72, 76, 80, 81, 86, 89, 95, 96, 99, 100, 103, 107, 108, 109, 110, 119, 120, 124, 126, 127, 129, 133, 134, 138, 142, 143, 144, 147, 153, 154, 159, 160, 161, 163, 164, 165, 166, 169, 173, 174, 178, 179, 190, 191, 197, 198, 200, 201, 203, 204, 210, 214, 220, 223, 224, 227, 229, 231, 233, 235, 246, 251, 254, 255, 257, 261, 262, 266, 271, 272, 273, 276, 279, 282, 283, 288, 289, 290, 292, 294, 295, 296, 299, 303, 304, 308, 309, 317, 318, 324, 325, 328, 330, 335, 338, 342, 344, 347, 348, 351, 353, 355, 357, 359, 360, 365, 366, 369, 371, 377, 381, 384, 385, 386, 387, 388, 391], "single_run": 289, "singlecompart": [72, 159, 173, 303], "singlerunfit": [128, 256], "singleton": 344, "singular": [39, 136, 154, 197, 264, 283, 324], "sinh": [91, 163, 292, 293], "sinha": 255, "sinica": 255, "sink": [98, 154, 283, 366], "sinusoid": [201, 255, 328], "siquier": 255, "siri": 255, "sirvent": 255, "sit": 53, "site": [25, 37, 46, 76, 82, 93, 130, 131, 132, 160, 227, 255, 258, 259, 260, 289, 351, 372], "sittl": 255, "situ": [3, 197, 255, 324], "situat": [25, 53, 80, 81, 98, 126, 154, 160, 201, 223, 283, 289, 292, 312, 314, 328, 347, 377, 381], "siu": 255, "sivagnanam": 255, "sivakumaran": 255, "siwani": 255, "six": [182, 201, 255, 312, 328, 330, 380], "sixteen": 70, "sixtieth": [201, 328], "size": [4, 16, 17, 18, 19, 28, 29, 37, 42, 47, 52, 53, 66, 70, 72, 73, 76, 78, 86, 94, 99, 103, 119, 120, 124, 126, 127, 136, 138, 151, 154, 159, 160, 161, 163, 173, 175, 177, 183, 185, 190, 197, 198, 200, 201, 202, 203, 204, 205, 208, 219, 220, 226, 229, 231, 233, 235, 236, 237, 242, 255, 264, 268, 280, 283, 288, 289, 290, 292, 303, 305, 307, 313, 314, 317, 324, 325, 327, 328, 329, 330, 334, 343, 344, 350, 353, 355, 357, 359, 360, 361, 369, 373, 383, 388], "size_t": [53, 60], "sizeof": [4, 98, 201, 250, 328], "sj\u00f6str\u00f6m": 255, "sk": 255, "sk_l": 255, "skaar": 255, "skach": 255, "skf83959": 255, "skin": 255, "skinner": 255, "skip": [14, 54, 70, 191, 219, 318, 343, 344, 377, 382, 383, 385, 387, 388], "skip_embeded_python_test": 248, "skmod": 373, "skolnick": 255, "skoufo": 254, "skrzypiec": 255, "skull": 255, "skylak": [3, 7], "sl": [151, 167, 169, 235, 237, 280, 295, 297, 308, 314, 359, 361], "slack": 380, "slash": [81, 119, 120], "slastic": 255, "slave": [134, 262], "sleep": [160, 255, 289, 296, 328, 334], "sleft": [237, 361], "slice": [66, 76, 255, 328, 387], "slide": [127, 255], "slider": [27, 104, 173, 182, 221, 231, 303, 312, 345, 355], "slight": 113, "slightli": [13, 29, 53, 66, 78, 98, 104, 150, 154, 163, 166, 201, 220, 233, 279, 283, 294, 296, 312, 322, 328, 344, 357, 388], "sliva": 255, "sliwa": 255, "slope": [39, 105, 255], "sloppi": 255, "slopsema": 255, "slot": [52, 385], "slow": [53, 66, 94, 96, 109, 169, 170, 182, 201, 220, 242, 255, 300, 312, 328, 344, 373], "slowdown": 242, "slower": [9, 29, 129, 148, 229, 232, 236, 242, 249, 257, 277, 353, 356, 360], "slowest": [13, 234, 358], "slowli": [3, 9, 153, 220, 247, 255, 282, 344], "slui": 255, "slurm": [54, 385], "sm": 242, "sm_60": 7, "smad": 255, "small": [1, 12, 29, 32, 39, 40, 42, 47, 53, 54, 66, 70, 76, 78, 80, 81, 94, 96, 105, 126, 127, 133, 134, 136, 148, 154, 155, 160, 161, 164, 185, 201, 220, 223, 228, 230, 234, 239, 242, 255, 261, 262, 264, 277, 283, 284, 289, 290, 294, 328, 344, 347, 352, 354, 358, 373, 377, 378, 382, 385], "smaller": [40, 47, 64, 76, 83, 94, 96, 198, 201, 208, 325, 328, 334, 366, 369, 373, 377], "smallest": [10, 11, 39, 40, 47, 91], "smart": [105, 231, 355], "smede": 255, "smetter": 255, "smhist": [201, 202, 328, 329], "smi": 54, "smirnaki": 255, "smit": 255, "smith": [255, 387], "smooth": [30, 98, 201, 255, 328], "smoothli": 94, "snap": [177, 183, 307, 313], "snape": 307, "snapshot": [7, 177, 210, 307, 335, 360], "snapyan": 255, "snip": 7, "snippet": [53, 251], "snudda": 255, "snyder": 255, "so": [0, 3, 4, 8, 10, 11, 12, 13, 14, 16, 24, 25, 28, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 50, 52, 53, 54, 56, 60, 66, 67, 68, 70, 71, 76, 78, 80, 81, 84, 86, 88, 89, 90, 93, 94, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 123, 124, 125, 126, 130, 133, 134, 136, 138, 147, 149, 150, 151, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 169, 170, 173, 174, 182, 185, 186, 188, 195, 197, 198, 200, 201, 203, 207, 208, 210, 214, 220, 221, 223, 224, 227, 228, 229, 231, 232, 233, 237, 238, 241, 242, 246, 247, 248, 250, 252, 253, 258, 261, 262, 264, 266, 276, 278, 279, 280, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 297, 299, 300, 303, 304, 312, 314, 315, 316, 322, 324, 325, 327, 328, 330, 334, 335, 338, 344, 345, 347, 348, 351, 352, 353, 355, 356, 357, 361, 362, 366, 367, 369, 370, 371, 373, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 393], "soa": [53, 60], "soao": [53, 60], "social": 255, "societi": [126, 255], "sod": 255, "sod1": 255, "sodium": [30, 38, 64, 68, 105, 136, 153, 154, 155, 250, 255, 264, 282, 283, 284, 292, 328, 368, 371, 382, 383, 384, 388], "soff": 255, "soft": [3, 246, 255], "softki": 255, "softwar": [1, 3, 7, 76, 81, 89, 93, 126, 160, 246, 247, 248, 254, 255, 289, 377, 378, 379, 382, 389], "sofwar": 35, "sohal": 255, "sohn": 255, "sokal": 255, "sokolova": 255, "sola": 255, "solbr\u00e5": 255, "soldado": 255, "soldovieri": 255, "sole": [4, 66, 79, 210, 335, 357, 377, 382], "solenoid": 255, "soler": 255, "soleu": 255, "solid": [70, 377], "solina": 255, "solitarii": 255, "solla": 255, "solsona": 255, "soltesz": 255, "solut": [3, 7, 39, 44, 88, 127, 153, 154, 160, 197, 255, 282, 283, 289, 304, 324, 341, 366, 377, 382, 385, 388], "solv": [4, 36, 39, 53, 81, 136, 148, 151, 153, 154, 155, 160, 161, 197, 201, 202, 204, 210, 220, 223, 225, 233, 251, 255, 264, 277, 280, 282, 283, 284, 289, 290, 324, 328, 329, 335, 344, 347, 349, 357, 369, 371, 377, 388, 393], "solvabl": [136, 264], "solve_interleaved1": 54, "solve_interleaved2": 54, "solver": [38, 39, 53, 126, 151, 163, 220, 242, 280, 292, 344, 366, 370], "soma": [1, 10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 31, 37, 38, 41, 43, 44, 45, 46, 47, 58, 63, 64, 66, 67, 68, 72, 74, 80, 86, 88, 89, 94, 96, 104, 105, 108, 110, 115, 125, 126, 131, 133, 134, 148, 151, 159, 160, 163, 164, 165, 166, 168, 169, 178, 179, 203, 210, 218, 220, 223, 235, 237, 250, 253, 255, 259, 261, 262, 277, 280, 282, 283, 284, 288, 289, 292, 294, 295, 296, 299, 308, 309, 314, 315, 328, 330, 333, 335, 338, 342, 344, 347, 349, 353, 359, 360, 361, 365, 366, 368, 369, 371, 372, 376, 383, 384, 385, 387, 388], "soma1": 204, "soma_id": 299, "soma_plot": 383, "soma_v": [382, 383, 384, 385], "somat": [24, 25, 31, 45, 58, 66, 80, 96, 102, 255], "somata": 255, "somato": 255, "somatodendrit": 255, "somatofug": 25, "somatopet": 25, "somatosensori": 255, "somatostatin": 255, "sombeck": 255, "some": [1, 3, 4, 5, 6, 7, 10, 11, 25, 28, 29, 32, 36, 38, 40, 46, 47, 52, 53, 54, 60, 64, 66, 68, 70, 74, 76, 80, 81, 82, 83, 86, 89, 90, 94, 98, 99, 100, 119, 120, 126, 127, 133, 136, 144, 151, 153, 154, 155, 156, 160, 161, 166, 169, 173, 174, 181, 182, 200, 201, 205, 211, 219, 220, 221, 223, 224, 229, 231, 242, 246, 247, 248, 251, 252, 255, 261, 264, 273, 280, 282, 283, 284, 285, 289, 290, 292, 296, 303, 304, 311, 314, 327, 328, 343, 344, 345, 347, 348, 353, 355, 357, 366, 369, 372, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388], "some_c": 53, "some_cs_manu": 53, "some_double_pointer_saved_for_lat": 53, "some_funct": [53, 98, 242], "some_method_taking_an_int": 98, "some_procedur": [133, 261], "some_range_vari": 53, "somebodi": 66, "somedendrit": [154, 155], "somehow": [4, 250], "someon": [47, 66, 160, 289, 314, 387], "someth": [4, 28, 32, 36, 37, 45, 53, 56, 66, 68, 78, 81, 87, 94, 96, 98, 100, 123, 127, 133, 154, 155, 160, 161, 163, 185, 201, 220, 221, 242, 249, 250, 261, 283, 284, 289, 290, 292, 315, 328, 344, 345, 353, 361, 368, 382, 385, 388], "sometim": [1, 53, 54, 55, 76, 78, 89, 119, 120, 126, 154, 163, 201, 209, 211, 219, 220, 227, 231, 234, 242, 246, 249, 253, 283, 289, 292, 298, 299, 324, 328, 343, 344, 351, 355, 358, 366, 368, 377, 387], "somewhat": [86, 96, 100, 199, 201, 314, 326, 328], "somewher": [47, 70, 82, 83, 133, 161, 261, 290, 387], "somjen": 255, "sommer": 255, "somogyi": 255, "somogyvari": 255, "somogyv\u00e1ri": 255, "sonata": 255, "song": 255, "songbird": 255, "sonomura": 255, "soon": [70, 94, 111, 153, 282, 366, 377, 380], "sooner": [10, 11, 66, 249], "sophist": [53, 54, 255, 366, 387], "sorensen": 255, "sorg": 255, "soriano": 255, "sorri": [127, 220, 344], "sort": [16, 29, 45, 160, 161, 197, 201, 202, 255, 289, 290, 324, 328, 329, 387], "sorter": 255, "sortindex": [16, 201, 202, 328, 329], "sosinski": 255, "sosulina": 255, "sotayo": 255, "sotiropoulo": 255, "sotr": 255, "soudri": 255, "sound": [126, 255, 377], "sourc": [0, 1, 3, 6, 9, 11, 25, 32, 33, 35, 40, 41, 46, 49, 54, 57, 63, 71, 74, 76, 81, 88, 93, 108, 115, 116, 126, 153, 154, 156, 159, 160, 161, 164, 197, 201, 203, 219, 220, 227, 240, 241, 242, 245, 247, 248, 249, 255, 282, 283, 285, 288, 289, 290, 294, 324, 328, 330, 343, 344, 351, 366, 371, 373, 378, 379, 383, 384, 385, 388], "source_cell_gid": [161, 290], "source_gid": 385, "source_global_index": [160, 289], "source_obj": 283, "source_object": [159, 288], "source_ref_v": 288, "source_var": [157, 160, 286, 289], "source_vari": [160, 289], "sourceforg": 246, "sousa": 255, "souza": 255, "sovilj": 255, "sp": [29, 52, 292], "sp014582": 46, "spaak": 255, "spac": 70, "space": [3, 14, 24, 25, 27, 28, 29, 30, 33, 36, 37, 45, 46, 47, 52, 53, 66, 67, 68, 70, 79, 81, 104, 121, 126, 129, 133, 146, 148, 153, 166, 170, 173, 191, 201, 210, 214, 216, 227, 229, 231, 234, 235, 236, 240, 246, 247, 255, 257, 261, 275, 277, 282, 296, 300, 303, 318, 328, 335, 338, 340, 342, 351, 353, 355, 358, 359, 360, 363, 366, 368, 369, 373, 377, 378, 387, 388], "spacer": 255, "spack": 1, "spain": 255, "spampanato": 255, "span": [94, 126, 160, 161, 163, 166, 229, 289, 290, 292, 296, 353, 366, 377, 387], "sparc": [201, 328], "spare": 255, "spark": [201, 328], "sparrei": 255, "spars": [151, 154, 197, 220, 250, 255, 280, 283, 324, 344], "sparse_print": [197, 324], "spatial": [14, 25, 27, 30, 40, 46, 47, 64, 65, 66, 86, 89, 96, 105, 139, 155, 163, 165, 166, 250, 255, 267, 284, 292, 295, 296, 365, 366, 369], "spatial_method": [139, 267], "spatio": 255, "spatiotempor": [255, 369], "spawn": [66, 76, 107], "spctrm": [201, 202, 328, 329], "speak": [86, 134, 262, 344, 388], "speaker": 392, "spec": [25, 32, 37, 144, 166, 223, 228, 273, 296, 347, 352], "specfi": [160, 244, 289], "specfic": 249, "speci": [41, 64, 137, 146, 154, 155, 163, 255, 265, 275, 283, 284, 292, 293, 349, 359, 360, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 388], "special": [1, 5, 8, 25, 28, 53, 54, 68, 81, 82, 86, 90, 93, 119, 120, 126, 127, 154, 155, 156, 160, 163, 168, 173, 182, 185, 190, 193, 201, 210, 211, 220, 228, 231, 242, 243, 244, 246, 247, 248, 255, 268, 283, 284, 285, 292, 303, 317, 320, 328, 335, 344, 352, 355, 373, 377, 378, 381, 387, 388], "specialis": [6, 7], "specif": [1, 2, 4, 14, 16, 17, 18, 21, 22, 24, 25, 32, 33, 37, 42, 43, 45, 46, 64, 65, 68, 70, 71, 73, 76, 81, 86, 89, 100, 101, 103, 105, 108, 110, 119, 124, 127, 130, 131, 132, 134, 136, 148, 153, 154, 155, 160, 161, 163, 164, 165, 175, 179, 190, 194, 201, 216, 218, 220, 224, 225, 227, 228, 229, 230, 233, 246, 247, 248, 250, 255, 258, 259, 260, 262, 264, 277, 282, 283, 284, 289, 290, 292, 294, 295, 299, 305, 309, 317, 321, 327, 328, 337, 340, 342, 344, 348, 349, 351, 352, 354, 357, 359, 360, 365, 366, 372, 377, 380, 382, 383, 387, 388, 389, 392], "specifc": 66, "specifi": [1, 3, 4, 9, 10, 11, 12, 13, 14, 18, 25, 27, 30, 31, 32, 37, 42, 43, 45, 46, 47, 52, 53, 56, 63, 64, 65, 69, 70, 71, 74, 75, 77, 78, 80, 81, 82, 83, 86, 87, 90, 93, 98, 99, 100, 101, 110, 111, 112, 113, 115, 117, 119, 120, 125, 126, 129, 130, 131, 132, 133, 134, 136, 138, 144, 146, 148, 151, 153, 154, 155, 156, 159, 160, 161, 164, 166, 169, 173, 175, 182, 188, 190, 200, 201, 203, 204, 208, 210, 216, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 233, 235, 236, 237, 238, 244, 246, 247, 253, 257, 258, 259, 260, 261, 262, 264, 266, 273, 275, 277, 280, 282, 283, 284, 285, 288, 289, 290, 294, 295, 296, 297, 299, 303, 305, 308, 312, 314, 316, 317, 327, 328, 330, 332, 334, 335, 340, 341, 342, 343, 344, 345, 347, 350, 351, 353, 354, 355, 357, 359, 360, 361, 362, 365, 366, 368, 369, 370, 371, 373, 377, 378, 383, 385, 387, 388], "specifii": 359, "spectra": [201, 255, 328], "spectral": [201, 255, 328], "spectrin": 255, "spectrum": [201, 255, 328], "speech": 255, "speed": [0, 6, 10, 11, 26, 41, 47, 86, 94, 119, 120, 139, 154, 161, 166, 224, 235, 246, 255, 267, 283, 290, 296, 348, 359, 366, 391], "speedup": [10, 11, 13, 36, 101, 126, 161, 290], "spehr": 255, "speicif": 250, "spencer": 255, "spent": [53, 154, 160, 283, 289], "spera": 255, "spgetrowv": [197, 202, 324, 329], "sphere": [24, 66, 110, 166, 296, 373, 382], "spheric": [255, 382], "sphinx": [0, 1, 3, 57, 61], "sphinx_rtd_them": 61, "sphinxverbatim": 368, "spider": 7, "spierenburg": 255, "spiga": 255, "spike": [4, 5, 8, 9, 10, 11, 13, 16, 17, 18, 28, 32, 37, 51, 54, 66, 74, 75, 80, 82, 83, 87, 88, 95, 114, 116, 117, 118, 126, 153, 159, 160, 161, 200, 201, 219, 220, 242, 246, 250, 254, 255, 282, 288, 289, 290, 327, 328, 343, 344, 371, 383, 384, 386, 391, 393], "spike_cell_id": 282, "spike_compress": [157, 160, 220, 286, 289, 344], "spike_id": 282, "spike_record": [8, 157, 160, 161, 282, 286, 289, 290], "spike_stat": [220, 344], "spike_statist": [157, 160, 161, 286, 289, 290], "spike_t": 282, "spike_tim": [383, 384, 385], "spike_times_vec": 383, "spikebin": [201, 202, 328, 329], "spikedur": 107, "spikeforest": 255, "spikeinterfac": 255, "spikelet": 255, "spikeout": 282, "spikeplot": [32, 37, 101, 102, 108, 173, 303], "spikes_py_gpu": 54, "spikestim": 250, "spiketim": [160, 242, 289], "spiketimevector": [160, 289], "spikevec": [161, 290], "spilioti": 255, "spill": 255, "spillov": 255, "spin": 255, "spinal": 255, "spindl": 255, "spine": [41, 46, 139, 160, 166, 255, 267, 296, 391], "spine3d": [81, 146, 165, 166, 275, 295, 296, 388], "spined3d": [139, 267], "spini": [14, 255], "spinner": [66, 114], "spira": 255, "spiral": 255, "spiro": 255, "spirou": 255, "splai": [220, 344], "splenic": 255, "splice": 255, "spline": [70, 201, 328], "split": [36, 160, 161, 166, 219, 254, 283, 285, 289, 290, 296, 343, 366, 377, 382, 383, 388, 392, 393], "split_at": 290, "splitcel": [157, 160, 161, 286, 289, 290], "splitcell_connect": [160, 289], "splitcell_exchange_tim": [160, 289], "spoleti": 255, "spong": 255, "spontan": [29, 255], "sporad": 255, "spot": [52, 70, 231, 355], "spratt": 255, "spread": [25, 255], "spreadsheet": 388, "sprekel": 255, "spring": 66, "springer": [126, 254, 255], "sprinkl": [161, 290], "sprint": [81, 160, 170, 173, 182, 190, 215, 231, 314, 317, 339, 355, 388], "sprout": 255, "sprowlen": [197, 202, 324, 329], "spruston": 255, "spuriou": [201, 255, 328], "spvec": [13, 16, 17, 18], "sq": [201, 328], "sqlite3": 393, "sqrt": [39, 52, 81, 91, 125, 148, 163, 166, 195, 201, 202, 204, 277, 292, 293, 296, 322, 328, 329, 388], "squair": 255, "squar": [12, 25, 29, 31, 47, 70, 81, 86, 91, 94, 123, 133, 134, 138, 151, 163, 166, 185, 195, 197, 201, 204, 220, 229, 235, 255, 261, 262, 266, 280, 292, 293, 296, 322, 324, 328, 344, 353, 359, 366, 387, 388], "squash": 379, "squeez": 96, "squid": [26, 30, 127, 154, 255, 283, 371, 382, 388, 393], "squiggl": 315, "sr": 314, "src": [3, 32, 37, 52, 56, 59, 63, 81, 82, 83, 85, 112, 113, 115, 139, 150, 151, 152, 153, 154, 155, 158, 160, 164, 175, 197, 201, 219, 220, 223, 233, 241, 242, 246, 247, 250, 267, 279, 280, 281, 282, 283, 284, 287, 289, 294, 305, 324, 328, 343, 344, 347, 357, 377], "src_buffer_s": [160, 289], "src_dest_vector": [160, 289], "src_end": [201, 328], "src_gid": [161, 290], "src_id": [161, 290], "src_inc": [201, 328], "src_index": [150, 279], "src_ksstate": [150, 279], "src_start": [201, 328], "srcdir": [160, 216, 289], "srcend": [201, 328], "srcgid": [157, 159, 160, 286, 288, 289], "srcindex": [21, 22], "srcitem": 289, "srclist": [160, 289], "srcstart": [201, 328], "srcvec": [208, 334], "sred": [81, 184, 187, 191, 318, 388], "sref": [168, 298], "srep00089": 255, "srep00928": 255, "srep02934": 255, "srep11543": 255, "srep19078": 255, "srep21753": 255, "srep23196": 255, "srep31696": 255, "srep34233": 255, "srep40612": 255, "srep42682": 255, "srep43253": 255, "srep46147": 255, "srep46550": 255, "sridhar": 255, "srikanth": 255, "sriniva": 255, "srun": 8, "ss": [237, 361], "ss_init": 24, "sscanf": [52, 191, 215, 318, 339, 388], "ssf": 338, "ssh": [158, 160, 247, 248, 249, 287, 289], "sst": 255, "st": [53, 160, 213, 255, 289], "st1": 81, "st2": 81, "stabil": [44, 66, 126, 151, 154, 160, 161, 223, 255, 280, 283, 289, 290, 347, 377, 378, 391], "stabl": [3, 13, 24, 33, 36, 38, 53, 154, 223, 255, 283, 347, 365, 366, 369, 377, 378, 380], "stabli": 53, "stabliz": [16, 17, 18], "stacei": 255, "stack": [52, 53, 56, 58, 81, 127, 146, 153, 155, 159, 165, 171, 186, 204, 237, 255, 268, 282, 284, 288, 299, 301, 314, 315, 331, 361], "stackdatum": 52, "stackoverflow": 63, "stadler": 255, "staff": 255, "stage": [52, 53, 60, 255, 378, 379], "stagger": [148, 220, 277, 344], "stai": [39, 41, 70, 80, 85, 160, 233, 289, 357, 388], "staiger": 255, "stain": 40, "staircas": 255, "stalbovskii": 255, "stalei": 255, "stamboulian": 255, "stamp": [368, 388], "stand": [29, 52, 53, 185, 201, 229, 231, 237, 255, 328, 353, 355, 361, 363, 377], "standalon": [126, 242, 377], "standard": [1, 10, 11, 16, 17, 18, 33, 34, 37, 46, 50, 53, 54, 76, 81, 89, 96, 98, 100, 119, 120, 126, 127, 139, 140, 148, 151, 153, 154, 155, 160, 161, 163, 165, 170, 184, 187, 188, 191, 192, 197, 200, 201, 203, 204, 210, 220, 226, 230, 231, 233, 246, 255, 267, 269, 277, 280, 283, 284, 289, 290, 292, 293, 295, 300, 314, 316, 318, 319, 324, 327, 328, 330, 335, 337, 344, 350, 354, 355, 357, 366, 367, 370, 371, 377, 378, 381, 382, 383, 387], "standardis": 7, "standpoint": 78, "stanislova": 255, "stapl": 247, "star": [81, 255], "starburst": 255, "start": [1, 3, 7, 12, 13, 16, 22, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 64, 66, 67, 68, 70, 76, 86, 87, 89, 90, 92, 93, 94, 96, 98, 100, 103, 104, 107, 108, 115, 124, 126, 127, 129, 131, 133, 138, 144, 147, 153, 154, 160, 161, 165, 182, 188, 191, 197, 198, 201, 210, 217, 218, 220, 221, 227, 229, 231, 233, 236, 242, 246, 248, 250, 251, 257, 259, 261, 266, 273, 276, 282, 283, 284, 289, 290, 295, 312, 316, 318, 324, 325, 328, 335, 341, 342, 344, 345, 351, 353, 355, 357, 359, 360, 365, 371, 374, 377, 378, 382, 383, 384, 385, 386, 388, 393], "start_seg": 360, "start_sess": 52, "start_siz": [173, 303], "start_tim": 36, "startpoint": 96, "startsw": [16, 17, 81, 161, 216, 217, 235, 340, 388], "startswith": [382, 388], "startup": [70, 81, 246], "stasheff": 255, "stasik": 255, "stat": 242, "state": [1, 3, 4, 7, 8, 9, 12, 26, 29, 31, 32, 33, 36, 53, 64, 69, 77, 89, 94, 109, 123, 126, 127, 130, 133, 136, 146, 149, 150, 151, 152, 153, 155, 159, 160, 163, 164, 165, 166, 173, 176, 182, 186, 188, 200, 201, 203, 205, 219, 220, 223, 224, 225, 227, 229, 230, 231, 237, 242, 251, 255, 258, 261, 264, 275, 278, 279, 280, 281, 282, 284, 288, 289, 293, 294, 295, 296, 303, 306, 312, 315, 316, 327, 328, 330, 343, 344, 347, 348, 349, 351, 353, 354, 355, 360, 361, 366, 371, 373, 374, 377], "state0": [154, 283], "state1": [154, 283], "state2": [154, 283], "state_magnitud": [220, 344], "state_suffix": [220, 344], "statebutton": [231, 312, 355], "stated3d": 373, "statement": [1, 3, 4, 10, 11, 13, 28, 37, 42, 45, 46, 47, 52, 66, 76, 77, 83, 90, 96, 103, 119, 120, 124, 125, 126, 127, 133, 134, 138, 149, 150, 152, 153, 155, 156, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 184, 191, 193, 194, 197, 201, 203, 204, 205, 207, 208, 211, 220, 223, 224, 225, 230, 233, 242, 250, 261, 262, 266, 278, 279, 281, 282, 284, 285, 288, 289, 290, 294, 299, 300, 301, 314, 317, 318, 320, 321, 324, 328, 333, 334, 344, 347, 349, 354, 357, 368, 377, 378], "statenam": [220, 344], "statepress": 312, "states3d": 373, "states_copi": 344, "statetransitionev": [140, 146, 152, 269, 275, 388], "static": [3, 4, 8, 52, 53, 60, 153, 155, 160, 248, 250, 255, 282, 284], "stationari": [73, 200, 255, 327], "statist": [54, 100, 133, 153, 160, 200, 220, 255, 261, 282, 284, 289, 327, 344, 387], "statland": 255, "statu": [28, 53, 73, 189, 210, 246, 247, 248, 254, 255, 335], "staud": 255, "stavrin": 255, "std": [1, 52, 53, 60, 98, 160, 246, 255, 284, 289], "stddev": 54, "stderr": [188, 201, 202, 316, 328, 329], "stdev": [201, 202, 328, 329], "stdgui": [16, 17, 18, 19], "stdin": [188, 316], "stdinit": [8, 69, 72, 77, 161, 219, 223, 224, 289, 290, 343, 347, 348], "stdio": [3, 213, 337], "stdlib": [1, 4, 10, 11, 64, 214, 227, 338, 351], "stdout": [52, 160, 161, 188, 190, 216, 289, 290, 316, 317, 340], "stdout_str": [216, 340], "stdp": 255, "stdrun": [63, 100, 119, 161, 163, 164, 201, 220, 221, 225, 227, 229, 237, 250, 253, 282, 290, 294, 328, 338, 344, 345, 349, 351, 353, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 382, 383, 384, 388], "stdrun_quiet": 72, "ste": [164, 294], "steadi": [10, 11, 31, 116, 154, 223, 230, 250, 255, 283, 347, 354, 374], "steadili": 384, "steady_k": 373, "steady_k_mod": 373, "steadyst": 250, "steal": 76, "steed": 255, "steen": 255, "steep": [255, 376], "steepest": [25, 28], "steephen": 255, "steer": [7, 242, 255], "stefan": 255, "stefano": 255, "stefanov": 255, "stefanova": 255, "stegeman": 255, "stegen": 255, "steigerwald": 255, "stein": 255, "steinert": 255, "steinmetz": 255, "stelescu": 255, "stellat": 255, "stem": [45, 53], "stemmler": 255, "step": [0, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 44, 45, 47, 52, 53, 55, 64, 65, 68, 69, 72, 77, 80, 87, 88, 93, 117, 118, 126, 127, 128, 130, 133, 134, 147, 148, 151, 153, 154, 155, 159, 160, 161, 163, 164, 195, 201, 217, 218, 220, 221, 223, 224, 229, 231, 233, 239, 246, 248, 249, 254, 255, 256, 258, 261, 262, 276, 277, 280, 282, 283, 284, 288, 289, 290, 292, 294, 322, 327, 328, 342, 344, 345, 347, 348, 353, 355, 357, 366, 370, 377, 383, 385, 387, 393], "step_tim": [157, 160, 286, 289], "step_wait": [157, 160], "stepaniuk": 255, "stephen": 255, "stepniewski": 255, "stepper": [182, 231, 312, 355], "steprun": 72, "steps_per_m": [72, 164, 294], "stepsiz": [126, 201, 328], "stepwis": 255, "ster": 255, "stereotact": 255, "steriad": [254, 255], "sterl": 255, "sterlini": 255, "stern": 255, "sternson": 255, "steroid": 377, "sterratt": 255, "steuber": 255, "steve": [220, 344], "steven": 255, "stewart": [191, 233, 254, 255, 318, 357], "stick": [5, 10, 11, 14, 24, 26, 65, 87, 251], "stickier": 53, "stickler": 255, "stiefel": 255, "stiennon": 255, "stiff": [153, 154, 220, 282, 283, 344], "stile": 255, "still": [8, 13, 16, 28, 29, 38, 46, 53, 56, 76, 78, 81, 86, 94, 96, 104, 105, 108, 109, 112, 119, 120, 125, 138, 139, 153, 154, 155, 160, 161, 165, 173, 197, 201, 220, 228, 242, 246, 247, 248, 255, 266, 267, 282, 283, 284, 289, 290, 295, 303, 314, 324, 328, 344, 352, 369, 370, 377, 382, 387], "stim": [13, 16, 17, 18, 28, 103, 124, 147, 148, 153, 155, 156, 160, 161, 169, 250, 276, 277, 282, 284, 285, 289, 290, 299, 314, 328, 331, 371, 382, 383], "stim_delai": [384, 385], "stim_i": 328, "stim_id": 100, "stim_prepar": 60, "stim_t": [100, 384, 385], "stim_tim": 282, "stim_times_nc": 282, "stim_w": [384, 385], "stimberg": 255, "stimlu": 71, "stimobj": [153, 282], "stimul": [30, 32, 44, 45, 75, 76, 90, 107, 108, 153, 156, 161, 255, 282, 285, 290, 383], "stimuli": [10, 11, 76, 100, 126, 146, 153, 155, 255, 275, 282, 284, 292], "stimulu": [10, 11, 13, 16, 17, 18, 31, 32, 37, 42, 45, 46, 60, 71, 103, 124, 127, 133, 136, 147, 161, 201, 255, 261, 264, 276, 282, 290, 328, 342, 344, 383, 384, 385], "stipul": 94, "stkobj_unref": 52, "stl": [160, 289], "stm2": 204, "stmt": [52, 77, 81, 153, 159, 169, 182, 185, 201, 204, 207, 217, 223, 312, 328, 333], "stmt1": [81, 185, 204], "stmt2": [81, 185, 204], "stmt3": [185, 204], "stmtlist": 52, "stn": 255, "stochast": [41, 82, 83, 100, 126, 200, 255, 292, 327, 366], "stockbridg": 46, "stockton": 255, "stoenica": 255, "stoichiometri": 366, "stoke": 255, "stolarski": 255, "stoler": 255, "stomatogastr": 255, "stone": 53, "stonei": 255, "stoop": 255, "stop": [31, 36, 52, 53, 72, 76, 81, 96, 98, 129, 133, 134, 136, 138, 153, 159, 201, 204, 217, 219, 220, 221, 223, 229, 231, 237, 242, 257, 261, 262, 264, 266, 282, 288, 328, 341, 343, 344, 345, 347, 353, 355, 360, 361, 377, 378, 382, 388], "stop_praxi": [133, 135, 138, 261, 263, 266, 388], "stop_run": [221, 345], "stop_seg": 360, "stop_tim": 63, "stopatnextquadform": [128, 256], "stopfer": 255, "stoprun": [72, 138, 159, 223, 230, 266, 288, 347, 354, 388], "stopsw": [81, 216, 235, 340, 388], "stopwatch": [216, 340], "storac": 255, "storag": [36, 52, 53, 60, 70, 100, 159, 160, 166, 197, 201, 203, 225, 255, 288, 289, 296, 324, 328, 330, 349, 369, 393], "storagecr": 60, "storagetext": 60, "storch": 255, "store": [13, 28, 36, 38, 56, 64, 70, 76, 89, 134, 136, 160, 166, 197, 201, 220, 225, 229, 230, 233, 236, 242, 247, 248, 255, 262, 264, 289, 292, 296, 314, 324, 328, 335, 342, 344, 349, 353, 354, 357, 360, 377, 382, 383, 384, 388], "store_ev": [220, 344], "stori": [51, 127], "storm": 255, "str": [160, 173, 188, 207, 214, 289, 292, 295, 303, 314, 333, 334, 338, 359, 387], "str_type": 328, "stradleigh": 255, "straehl": 255, "strahler": 255, "straight": [47, 66, 86, 166, 296], "straightforward": [1, 7, 53, 58, 86, 289, 377], "straightforwardli": [153, 282], "strain": [70, 155, 255, 284], "straka": 255, "strang": 123, "strarg": 156, "strategi": [14, 27, 31, 32, 37, 39, 43, 45, 47, 51, 65, 78, 88, 100, 105, 106, 126, 133, 160, 201, 210, 254, 255, 261, 289, 328, 335, 374, 377], "stratifi": 255, "stratton": 255, "stratum": 255, "straub": 255, "strauss": 255, "strcmp": [56, 81, 185, 215, 339, 388], "strdef": [28, 81, 156, 160, 165, 169, 172, 173, 174, 177, 179, 180, 182, 185, 186, 188, 201, 203, 204, 205, 207, 213, 214, 215, 216, 231, 285, 289, 299, 307, 309, 310, 314, 315, 338, 339, 340, 355, 388], "strdef1": 185, "strdef2": 185, "stream": [4, 9, 37, 87, 126, 159, 192, 197, 198, 200, 201, 210, 216, 220, 284, 288, 319, 324, 325, 327, 328, 335, 340, 344], "streamlin": 377, "strength": [38, 76, 100, 113, 115, 126, 136, 160, 255, 264, 289], "stress": [250, 255], "stretch": [70, 73, 96, 255], "stretegi": 87, "striat": 255, "striatal": 255, "striatum": 255, "stribbel": 255, "stricker": 255, "strict": [119, 120, 154, 246, 247, 283], "stricter": 98, "strictli": [74, 94, 160, 289, 292, 344, 388], "striessnig": 255, "strike": 94, "string": [7, 12, 37, 42, 46, 52, 56, 60, 66, 70, 80, 81, 94, 96, 103, 107, 119, 120, 123, 124, 129, 133, 134, 137, 140, 150, 160, 165, 166, 169, 170, 173, 174, 177, 180, 182, 185, 188, 189, 190, 191, 192, 197, 201, 203, 204, 205, 207, 211, 216, 220, 228, 229, 231, 233, 242, 246, 249, 257, 261, 262, 265, 269, 279, 285, 289, 292, 295, 296, 300, 302, 303, 304, 307, 309, 310, 312, 314, 316, 317, 318, 319, 324, 328, 330, 333, 334, 340, 344, 352, 353, 355, 357, 381, 382, 388, 393], "string1": [185, 215, 339], "string2": [185, 215, 339], "string_dialog": [81, 172, 183, 302, 313, 388], "stringchoos": [221, 345], "stringent": [160, 289], "stringer": 255, "stringfunc": 52, "stringfunct": [140, 161, 186, 191, 215, 269, 290, 318, 339, 388], "stringn": [173, 303], "stringnam": 204, "strlen": 52, "strname": [174, 304], "strnasgn": 52, "strobj": [214, 338], "stroke": [64, 228, 352, 373], "strong": [49, 98, 255], "strongest": 38, "strongli": 255, "strptr": 316, "strref": [302, 312, 330], "strube": 255, "struct": [52, 60, 160, 289], "structur": [4, 6, 25, 33, 46, 52, 57, 60, 70, 77, 81, 82, 86, 89, 126, 127, 139, 165, 166, 200, 205, 210, 220, 223, 225, 242, 254, 255, 267, 283, 289, 295, 296, 327, 335, 344, 347, 349, 382, 387, 388], "structure_change_cnt": 344, "structure_change_count": 344, "struggl": 242, "strvar": [81, 165, 191, 295, 318], "str\u00fcber": 255, "stuart": [126, 255], "stuck": 96, "student": [29, 40, 392, 393], "studi": [25, 76, 90, 255, 386, 388], "studio": 243, "stuff": [51, 76, 80, 316], "stufflebeam": 255, "stuhmil": 255, "style": [12, 13, 25, 32, 37, 53, 70, 76, 81, 98, 126, 127, 138, 144, 149, 150, 155, 159, 160, 161, 166, 169, 180, 182, 183, 185, 188, 189, 197, 201, 210, 216, 220, 228, 229, 231, 234, 237, 246, 255, 266, 273, 278, 279, 284, 288, 289, 290, 292, 296, 309, 310, 312, 313, 314, 316, 324, 328, 335, 340, 344, 352, 353, 355, 358, 361, 377], "stylist": [154, 283], "styliz": [43, 46, 65, 67, 68, 87, 165, 234, 295, 358], "su": 255, "suan": 255, "suarez": 255, "sub": [28, 53, 119, 120, 160, 201, 202, 255, 289, 295, 328, 329, 366, 377, 387], "subblock": 255, "subcallos": 255, "subcellular": 255, "subclass": [3, 163, 292, 314, 331, 387], "subcolumnar": 255, "subcort": 255, "subdirectori": [76, 210, 219, 246, 335, 343, 381], "subdivis": [66, 86], "subdur": 255, "subexpress": 185, "subfold": [76, 219, 343], "subicular": 255, "subiculum": 255, "subitem": 46, "subject": [39, 40, 96, 107, 255, 377], "sublay": 255, "sublinear": 255, "submatrix": [197, 324], "submembran": 255, "submenu": [144, 156, 182, 230, 273, 285, 312, 354], "submillisecond": 255, "submiss": [160, 289], "submit": [13, 16, 66, 157, 160, 286, 289], "submodel": 289, "submodul": [1, 3, 7, 163, 292, 382, 388], "submyelin": 255, "subnet": [51, 161, 282, 290], "subpanel": [144, 273], "subplot": [100, 282, 371], "subpopul": 255, "subprocess": 253, "subprogram": 52, "subproject": 3, "subramaniyam": 255, "subregion": 367, "subrepositori": 244, "subscrib": 126, "subscript": 53, "subsect": 53, "subsequ": [3, 32, 81, 134, 138, 149, 154, 155, 160, 168, 170, 185, 188, 189, 192, 197, 201, 220, 231, 233, 237, 262, 266, 278, 283, 284, 289, 298, 300, 316, 319, 324, 328, 330, 344, 355, 357, 361, 366, 369, 377, 388], "subset": [14, 22, 27, 32, 35, 46, 65, 68, 86, 89, 96, 106, 148, 161, 190, 201, 213, 231, 255, 277, 290, 317, 328, 337, 355], "subsetdomainiter": [27, 68], "subsidiari": [160, 289], "substanc": [292, 369, 376], "substant": [154, 242, 283], "substanti": [32, 53, 126, 127, 150, 220, 279, 344], "substantia": 255, "substitut": [53, 88, 122, 224, 227, 348, 351, 382, 387], "substr": [54, 214, 215, 220, 338, 339, 344], "substrat": [255, 366], "subsystem": [10, 240, 245], "subtask": 113, "subthalam": 255, "subthalamopallid": 255, "subthreshold": 255, "subtl": [155, 160, 255, 284, 289, 377], "subtleti": [164, 294], "subtool": [142, 271], "subtract": [39, 81, 160, 185, 201, 255, 289, 328], "subtre": [66, 67, 86, 160, 161, 165, 166, 167, 275, 289, 290, 295, 296, 297, 343, 388], "subtyp": [52, 186, 255, 292, 315], "subunit": 255, "subvert": 255, "subworld": [146, 157, 275, 286, 384], "subworld_s": [160, 289], "succe": [1, 42, 103, 124, 247, 381, 388], "succeed": [81, 289, 388], "success": [10, 11, 56, 70, 76, 154, 158, 160, 166, 169, 170, 188, 190, 200, 201, 211, 216, 231, 247, 249, 255, 283, 287, 289, 296, 300, 315, 316, 317, 327, 328, 340, 355, 377, 388], "successfulli": [192, 319, 349, 373, 385, 388], "succinct": 385, "succol": 255, "suckow": 255, "sucros": 255, "sudden": [95, 153, 282], "suddenli": [3, 66, 369], "sudhakar": 255, "sudo": [3, 241, 244, 246], "suffczynski": 255, "suffer": 377, "suffic": [166, 296, 328, 384], "suffici": [3, 38, 80, 98, 126, 166, 201, 246, 255, 282, 296, 328, 377, 382], "suffix": [4, 36, 42, 81, 103, 119, 120, 124, 148, 152, 153, 154, 160, 203, 219, 231, 251, 277, 282, 283, 289, 314, 330, 355, 371, 373, 377, 378, 385], "suggest": [10, 11, 29, 76, 80, 94, 96, 119, 120, 154, 160, 161, 201, 240, 255, 283, 289, 290, 328, 377, 378, 383, 388], "sugino": 255, "sui": 255, "suit": [1, 126, 220, 242, 246, 255, 344, 377], "suitabl": [16, 32, 37, 40, 53, 64, 76, 89, 126, 153, 154, 155, 170, 200, 201, 227, 236, 282, 283, 284, 300, 327, 328, 351, 360, 366, 376, 393], "sulcal": 255, "suleimanova": 255, "sullivan": 255, "sultan": 255, "sum": [3, 9, 28, 94, 107, 133, 153, 154, 160, 163, 166, 173, 201, 202, 204, 220, 255, 261, 282, 283, 289, 292, 296, 303, 328, 329, 344, 366, 371], "sum_": [201, 328], "sumegi": 255, "sumgauss": [201, 202, 328, 329], "summar": [89, 388], "summari": [60, 66, 154, 220, 227, 241, 242, 283, 344, 351], "summaris": [4, 53], "summat": [80, 153, 220, 255, 282, 344], "summer": [26, 76, 126, 289], "sumsq": [201, 202, 328, 329], "sun": [189, 195, 255, 322], "sundaram": 255, "sunderland": [126, 255], "sundial": [126, 220, 344, 369], "sundt": 255, "suni": 4, "super": 3, "supercomput": [10, 11, 54, 160, 254, 255, 289], "supercrit": 255, "superfici": 255, "superimpos": [201, 328], "superior": [201, 255], "superlinear": [36, 161, 290], "superoxid": 255, "superresolut": 255, "supersed": [144, 161, 165, 201, 206, 227, 273, 290, 295, 332, 351], "superset": 81, "supiot": 255, "supp": 242, "supplant": 126, "supplement": 126, "suppli": [52, 70, 81, 117, 155, 160, 164, 195, 201, 219, 220, 284, 289, 294, 317, 322, 328, 343, 344], "support": [1, 3, 4, 6, 7, 8, 32, 41, 52, 53, 54, 56, 64, 81, 87, 89, 98, 100, 155, 160, 163, 185, 190, 196, 211, 231, 241, 242, 247, 252, 253, 255, 284, 285, 289, 292, 293, 296, 297, 305, 308, 314, 316, 317, 318, 323, 324, 328, 330, 344, 345, 353, 355, 359, 363, 366, 369, 373, 376, 377, 378, 379, 381, 382, 385, 388], "suppos": [25, 42, 46, 76, 80, 81, 94, 96, 100, 102, 103, 105, 119, 120, 124, 149, 154, 155, 161, 189, 191, 201, 220, 229, 278, 283, 284, 290, 318, 328, 344, 353, 365, 369, 372, 373, 376, 377], "suppress": [242, 255], "supragranular": 255, "supralinear": 255, "supraphysiolog": 255, "suprathreshold": 255, "sur": 247, "sure": [0, 3, 4, 5, 7, 8, 10, 11, 14, 28, 29, 31, 38, 42, 46, 47, 50, 51, 59, 64, 66, 67, 76, 86, 90, 92, 94, 96, 98, 99, 100, 102, 103, 105, 106, 110, 124, 125, 126, 127, 134, 147, 153, 154, 155, 158, 160, 189, 201, 204, 213, 220, 223, 227, 229, 231, 238, 239, 246, 247, 262, 276, 283, 284, 287, 289, 304, 314, 328, 337, 344, 347, 351, 353, 355, 362, 377, 382, 385], "surea": 255, "surfac": [1, 15, 31, 46, 48, 68, 86, 127, 154, 250, 255, 283, 292, 366, 369, 373, 382], "surface_area": [292, 366], "surface_fract": [292, 369], "surg": 255, "surgeri": 255, "surki": 255, "surmeier": 255, "surmis": 96, "surpris": [7, 40, 47, 66, 81, 86, 96, 166, 201, 220, 255, 296, 328, 344, 381], "surrog": [100, 255], "surround": [70, 119, 120, 155, 170, 252, 255, 284, 300, 387], "survei": 255, "suryanarayana": 255, "suscept": 255, "sushil": 89, "susi": 255, "suspect": [159, 288], "sustain": [13, 254, 255], "suter": 255, "sutton": 255, "sutula": 255, "suzuki": 255, "svclamp": 81, "svclmp": [153, 282], "svd": [197, 202, 324, 329], "svdtest": [197, 324], "svec": [16, 17], "svenningsson": 255, "svensson": 255, "svg": [60, 385], "svgz": 385, "svn": 377, "sw": 371, "swadlow": 255, "swami": 255, "swan": 255, "swap": [25, 53, 132, 260, 387], "swapmeasur": [132, 260], "swarm": 255, "swc": [1, 47, 58, 64, 126, 368, 373], "sweep": [4, 70, 224, 348, 393], "sweet": 255, "swell": 255, "swenson": 255, "swidth": [237, 361], "swietek": 255, "swim": 255, "swimmi": 255, "swindlehurst": 255, "switch": [3, 4, 25, 38, 39, 45, 53, 71, 94, 96, 99, 101, 126, 140, 147, 151, 160, 163, 188, 190, 200, 220, 255, 269, 276, 279, 280, 289, 292, 293, 312, 316, 317, 327, 344, 376, 383, 388], "sxm2": 54, "sy": [55, 70, 160, 211, 253, 268, 289, 312, 381, 385], "syi": 249, "sylantyev": 255, "sym": [52, 56], "symbol": [3, 52, 80, 81, 133, 134, 174, 179, 182, 186, 214, 223, 229, 231, 242, 261, 262, 304, 309, 314, 315, 338, 347, 355, 388], "symchoos": [140, 172, 183, 186, 221, 269, 302, 313, 315, 345, 388], "symlink": [242, 248, 381], "symlist": [52, 56], "symmeig": [197, 202, 324, 329], "symmetr": [197, 324], "symmetri": 255, "sympathet": [250, 255], "symposium": [254, 255], "symptom": [81, 255], "symptomat": 255, "syn": [38, 153, 154, 155, 157, 159, 220, 246, 282, 283, 284, 286, 288, 338, 344, 371, 383, 384, 385], "syn1": 204, "syn_": [22, 383], "syn_delai": [384, 385], "syn_i": 383, "syn_plot": 383, "syn_w": [384, 385], "synaps": [4, 22, 25, 29, 38, 75, 76, 80, 88, 95, 102, 108, 114, 115, 117, 126, 153, 154, 155, 156, 159, 160, 161, 174, 200, 204, 219, 227, 254, 255, 282, 283, 284, 285, 288, 289, 290, 292, 304, 327, 343, 351, 371, 384, 385, 386, 391, 393], "synapse_id": [161, 290], "synapse_prepar": 60, "synapse_target_object": [161, 290], "synapsesif": 60, "synapsin": 255, "synapt": [9, 25, 29, 32, 38, 76, 94, 109, 110, 113, 115, 126, 153, 155, 159, 174, 220, 255, 282, 284, 288, 289, 304, 344, 384, 385, 388, 391], "synaptogenesi": 255, "synaptopathi": 255, "sync": [96, 292, 369, 377], "syncer": 29, "synchron": [70, 146, 160, 255, 275, 289], "synchroni": [36, 255], "syncyti": 255, "syncytium": 255, "syndrom": 255, "synergist": 255, "synfir": 255, "synindex": [21, 22], "synlist": [21, 22, 157, 159, 161, 286, 288, 290], "synonym": [64, 81, 153, 154, 160, 163, 201, 205, 283, 289, 292, 328, 366], "synopsi": [70, 81], "synp": 204, "synpr": 204, "syntact": [119, 120], "syntax": [4, 98, 119, 120, 126, 134, 136, 137, 138, 140, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 228, 229, 231, 232, 233, 235, 236, 237, 262, 264, 265, 266, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 347, 349, 350, 352, 353, 355, 356, 357, 359, 360, 361, 382, 387, 388], "syntaxin": 255, "synthesi": 255, "synthet": 255, "syntim": 76, "syntyp": 37, "syntypegui": [37, 108, 109, 110], "sysconfig": [246, 247], "sysn": 249, "system": [1, 3, 7, 8, 13, 25, 39, 40, 47, 54, 67, 70, 76, 81, 87, 95, 96, 100, 134, 136, 140, 151, 154, 155, 159, 160, 161, 163, 164, 166, 175, 179, 189, 197, 200, 201, 202, 204, 210, 217, 220, 223, 224, 225, 229, 231, 234, 242, 246, 247, 248, 249, 253, 254, 255, 262, 264, 269, 280, 283, 284, 288, 289, 290, 292, 294, 296, 305, 309, 324, 327, 328, 329, 335, 341, 344, 347, 348, 349, 353, 355, 357, 358, 366, 367, 368, 369, 370, 371, 377, 381, 382, 385, 388], "system32": 249, "systemat": [47, 52, 66, 68, 154, 255, 283], "systemprefer": [160, 289], "szabad": 255, "szabo": 255, "szab\u00f3": 255, "szadai": 255, "szalai": 255, "szalisznyo": 255, "szegedi": 255, "szkudlarek": 255, "szoboszlai": 255, "szokol": 255, "sztarker": 255, "szuc": 255, "szymanska": 255, "sz\u00e9keli": 255, "sz\u00e9le": 255, "s\u00e1nchez": 255, "s\u00e1rai": 255, "s\u00f8rensen": 255, "s\u00f8renssen": 255, "s\u00fcmb\u00fcl": 255, "s\u0103vulescu": 254, "t": [0, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 64, 66, 67, 70, 71, 72, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 119, 120, 123, 124, 125, 126, 127, 134, 139, 147, 148, 151, 153, 154, 157, 159, 160, 161, 164, 165, 166, 173, 182, 190, 191, 195, 197, 199, 200, 201, 210, 214, 216, 217, 218, 219, 220, 223, 225, 227, 229, 230, 231, 233, 242, 246, 248, 250, 253, 254, 255, 262, 267, 276, 277, 280, 282, 283, 284, 286, 288, 289, 290, 292, 294, 295, 296, 297, 303, 304, 305, 312, 314, 317, 318, 322, 324, 326, 327, 328, 333, 335, 338, 340, 342, 343, 344, 347, 349, 351, 353, 354, 355, 357, 365, 366, 367, 370, 371, 372, 375, 376, 377, 378, 382, 383, 384, 385, 388], "t0": [24, 153, 217, 220, 225, 282, 344, 349, 370], "t0degrad": 370, "t0product": 370, "t0tot1": 370, "t1": [16, 17, 18, 153, 282, 370], "t1174": 255, "t1degrad": 370, "t1tot2": 370, "t2": [16, 17, 18, 370], "t2degrad": 370, "t2degradation_due_to_light": 370, "t2n": 255, "t_in_hour": 370, "t_stim": 64, "t_stim_vec": 64, "t_threshold": [220, 344], "t_valu": 283, "t_vec": [373, 375], "ta": 29, "tab": [28, 46, 94, 99, 190, 191, 227, 317, 318, 351], "tabl": [6, 28, 52, 66, 67, 110, 119, 149, 186, 204, 220, 223, 251, 255, 278, 315, 344, 347, 363, 371, 387], "table_cel": 250, "table_tau1_": [154, 283], "table_tau1_k3st": [250, 283], "table_tau2_": 283, "table_tau2_k3st": 250, "tablecel": 250, "tables": [154, 283], "tachibana": 255, "tactil": 255, "tadpol": 255, "tag": [0, 53, 60, 139, 247, 248, 249, 267, 373, 378, 379], "taglialatela": 255, "taglietti": 255, "taha": 255, "tail": [214, 215, 338, 339], "tailor": [0, 3, 126, 246], "tajarenejad": 255, "takagi": 255, "takahashi": 255, "takayasu": 255, "take": [9, 10, 11, 27, 28, 29, 36, 37, 41, 44, 49, 52, 53, 56, 60, 76, 81, 86, 89, 94, 96, 100, 112, 119, 120, 126, 133, 136, 138, 149, 151, 153, 154, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 173, 175, 181, 185, 195, 197, 201, 207, 216, 217, 219, 220, 221, 223, 225, 227, 229, 231, 242, 246, 247, 248, 255, 261, 264, 266, 268, 278, 280, 282, 283, 284, 286, 288, 289, 290, 294, 295, 296, 299, 300, 303, 305, 311, 320, 322, 324, 328, 333, 340, 341, 343, 344, 345, 347, 349, 351, 353, 355, 360, 361, 366, 367, 373, 381, 382, 383, 384, 385], "taken": [3, 4, 13, 53, 81, 96, 136, 137, 154, 160, 164, 176, 182, 201, 220, 264, 265, 283, 289, 294, 306, 328, 344, 369, 373, 385], "takeno": 255, "tal": 255, "talanov": 255, "talk": [64, 119, 120, 161, 290], "talli": [47, 86], "tama": 255, "tamper": [234, 358], "tam\u00e1": 255, "tan": [91, 163, 185, 255, 292, 293], "tanaka": 255, "tandem": 255, "tang": 255, "tangent": [91, 163, 195, 201, 292, 293, 322, 328], "tangh": 255, "tangl": 70, "tanh": [91, 163, 195, 201, 202, 292, 293, 322, 328, 329, 368, 376, 388], "taniguchi": 255, "tank": 255, "tao": 255, "tapercel": [104, 121], "tapia": 255, "tar": [3, 32, 37, 49, 85, 112, 113, 115, 158, 160, 287, 289], "tarantino": 255, "tarbal": [1, 3], "tarcelindex": [21, 22], "tarcsai": 255, "target": [0, 1, 3, 7, 9, 22, 32, 52, 115, 116, 126, 150, 152, 153, 155, 156, 159, 160, 161, 203, 220, 241, 242, 246, 248, 255, 279, 281, 282, 284, 285, 288, 289, 290, 330, 344, 369, 377, 378, 383, 384, 385], "target_cell_gid": [161, 290], "target_gid": [161, 290], "target_index": [150, 279], "target_ksst": [150, 279], "target_object": [159, 288], "target_var": [136, 157, 160, 264, 286, 289], "target_vari": [160, 289], "targetpointprocess": [160, 289], "targetsynaps": [160, 289], "tarnaud": 255, "tarotin": 255, "tartavul": 255, "taschenberg": 255, "task": [10, 11, 13, 14, 26, 32, 42, 49, 53, 65, 68, 81, 93, 94, 100, 108, 111, 112, 160, 229, 239, 255, 289, 353, 377], "task1": 255, "task3": 255, "taskin": 255, "tast": 255, "tatsuno": 255, "tatter": 255, "tau": [9, 22, 29, 37, 38, 107, 109, 153, 220, 242, 255, 282, 344, 371, 383, 384], "tau1": [76, 109, 153, 154, 250, 282, 283], "tau1_k3st": [154, 283], "tau1_rec": 250, "tau1_valu": 250, "tau1_vec": [154, 250, 283], "tau1_vector": 250, "tau2": [76, 109, 153, 250, 282, 283], "tau2_": 283, "tau2_rec": 250, "tau2_vec": 250, "tau_hh": [153, 282], "tauc2o": 123, "taue": [153, 282], "taueps_intfire4": 388, "taught": 392, "tauhe": 255, "taui1": [153, 282], "taui2": [153, 282], "taum": [9, 153, 282], "tauopathi": 255, "taur": 250, "tauvec": [150, 279], "taxidi": 255, "taylor": [126, 255], "tbegin": 250, "tbme": 255, "tc1": 255, "tcbb": 255, "tchetchik": 255, "tcp": [158, 287], "tdeliv": [159, 288], "te": 255, "tea": 255, "teach": 255, "team": [49, 247, 377], "team_id": 247, "teammat": 49, "teardown": 289, "tech": 391, "technic": [0, 4, 52, 255, 377, 380, 383, 393], "techniqu": [29, 40, 53, 93, 220, 254, 255, 344, 377, 393], "technologi": [255, 377, 378], "technot": 247, "ted": [15, 16, 17, 18, 19, 160, 201, 255, 289, 328], "tediou": [53, 81, 160, 201, 289, 328], "teeter": [40, 255], "tegment": 255, "tegolo": 255, "tehrani": 255, "tejada": 255, "tektronix": [233, 357], "telefont": 255, "telenczuk": 255, "teleost": 255, "telephon": 126, "tele\u0144czuk": 255, "tell": [7, 25, 29, 46, 52, 64, 66, 80, 92, 94, 96, 99, 104, 105, 123, 127, 139, 154, 155, 160, 161, 187, 188, 229, 230, 247, 255, 267, 283, 284, 289, 290, 316, 354, 359, 368, 369, 381, 382, 383, 387, 388], "telltal": [182, 312], "telltalegroup": [229, 353], "tem": 70, "temido": 255, "temp": [52, 54, 119, 120, 160, 161, 164, 189, 190, 201, 229, 246, 247, 283, 289, 290, 294, 317, 328, 343], "temp1": [127, 161, 290], "temp_file_nam": 316, "temp_filenam": [231, 355], "tempel": 255, "temperatur": [104, 223, 227, 255, 283, 347, 351, 368, 371, 388, 393], "templat": [1, 21, 22, 32, 52, 53, 60, 81, 90, 148, 159, 160, 169, 174, 179, 205, 220, 227, 255, 277, 288, 289, 304, 309, 314, 331, 344, 351], "templatenam": [174, 186, 304, 315], "tempoari": 316, "tempor": [29, 255, 369], "temporari": [7, 36, 42, 53, 70, 160, 170, 186, 188, 192, 201, 229, 236, 300, 315, 316, 319, 353, 377, 382, 387], "temporarili": [36, 170, 248, 296, 300, 314, 330], "temporo": 255, "temporoammon": 255, "tempstr": [231, 355], "ten": [201, 213, 255, 328], "tend": [31, 52, 81, 126, 160, 201, 289, 328, 365], "teng": 255, "tennei": 255, "tennigkeit": 255, "tenn\u00f8": 255, "tenth": [66, 160, 289], "tenuou": 255, "teplitzki": 255, "tepper": 255, "teppola": 255, "terhag": 255, "term": [53, 64, 68, 70, 89, 94, 95, 96, 119, 120, 126, 136, 151, 154, 155, 160, 163, 166, 201, 220, 225, 255, 264, 280, 283, 284, 289, 292, 296, 328, 344, 349, 377, 385], "terman": 255, "termin": [1, 3, 13, 14, 16, 30, 31, 33, 35, 36, 43, 46, 47, 48, 53, 56, 66, 68, 76, 81, 86, 122, 129, 159, 166, 184, 187, 189, 201, 216, 231, 240, 242, 246, 249, 255, 257, 296, 314, 328, 340, 353, 355, 384, 385, 392, 393], "terminologi": [53, 377], "tern": 70, "terni": 255, "ters": [3, 160, 289], "tesauro": [25, 255], "tesfayesu": 255, "tesla": 54, "test": [1, 3, 4, 5, 7, 10, 11, 13, 24, 28, 35, 36, 39, 41, 43, 45, 51, 53, 57, 66, 67, 69, 71, 76, 77, 89, 98, 100, 114, 116, 139, 154, 155, 158, 160, 182, 198, 200, 201, 213, 219, 220, 223, 237, 239, 241, 242, 243, 247, 250, 255, 267, 283, 284, 287, 289, 292, 295, 312, 315, 325, 327, 328, 337, 343, 344, 347, 353, 361, 377, 378, 383, 386, 387, 393], "test0": [35, 158, 160, 287, 289], "test_1_and_2": [71, 76], "test_3": [71, 76], "test_curr": 3, "test_direct": 5, "test_ring1": 385, "test_ring1_": 385, "test_ring1_1rank": 385, "test_ring1_2rank": 385, "test_ring1_ref": 385, "test_ring2": 385, "test_ring2_ref": 385, "test_round": [196, 323], "test_spik": 5, "test_submodel": 289, "test_table_f": 250, "test_table_p": 250, "test_wheel": 248, "testa": 255, "testbench": 255, "testcorenrn": [4, 246], "testfil": 3, "testlevel": [146, 147, 275, 276], "testmpi": [289, 385], "testvar": 250, "tetraethylammonium": 255, "tetrahedr": 255, "tetzlaff": 255, "tevent": [164, 220, 294, 344], "text": [13, 24, 32, 42, 46, 47, 60, 66, 70, 73, 81, 84, 87, 89, 92, 99, 103, 124, 127, 151, 154, 160, 163, 179, 180, 183, 185, 188, 189, 201, 204, 231, 233, 280, 283, 292, 302, 309, 310, 312, 313, 316, 328, 342, 355, 357, 368, 375, 377, 393], "texteditor": [140, 183, 269, 313, 388], "textual": 126, "textwrap": 388, "tf": 255, "tg2576": 255, "tgetent": 246, "tgoto": 246, "th": [52, 53, 56, 100, 156, 159, 160, 166, 173, 177, 197, 201, 220, 285, 288, 289, 296, 303, 307, 324, 328, 337, 344, 385], "thakor": 255, "thalam": [254, 255], "thalamocort": [126, 255], "thalamu": 255, "than": [3, 4, 7, 9, 14, 16, 17, 18, 29, 32, 33, 35, 36, 38, 39, 40, 41, 46, 47, 53, 64, 66, 70, 71, 73, 78, 80, 81, 82, 83, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 109, 110, 119, 120, 123, 124, 125, 126, 127, 133, 134, 136, 144, 148, 151, 153, 154, 155, 160, 161, 163, 164, 166, 167, 169, 173, 182, 185, 191, 192, 193, 198, 200, 201, 204, 207, 208, 214, 216, 219, 220, 225, 229, 231, 232, 233, 234, 242, 246, 249, 252, 255, 261, 262, 264, 273, 277, 280, 282, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 303, 312, 314, 318, 319, 325, 327, 328, 333, 334, 338, 340, 343, 344, 349, 353, 355, 356, 357, 358, 366, 370, 373, 377, 378, 381, 382, 383, 384, 387, 388], "thank": [52, 53, 377], "thankamani": 255, "the_arg": 387, "the_nam": 387, "the_old_list": 387, "thei": [3, 4, 9, 12, 14, 25, 28, 29, 34, 39, 40, 41, 42, 46, 47, 52, 53, 54, 56, 59, 60, 64, 66, 67, 70, 71, 76, 77, 81, 82, 83, 84, 86, 88, 89, 94, 96, 98, 99, 103, 104, 105, 110, 119, 120, 124, 126, 127, 139, 148, 153, 154, 155, 159, 160, 161, 163, 164, 166, 169, 173, 174, 182, 186, 191, 199, 201, 204, 210, 211, 215, 218, 219, 220, 223, 229, 231, 233, 242, 246, 247, 248, 255, 267, 277, 282, 283, 284, 288, 289, 290, 292, 294, 296, 303, 304, 314, 315, 318, 326, 328, 331, 335, 339, 342, 343, 344, 347, 353, 355, 357, 360, 366, 367, 369, 370, 371, 377, 378, 380, 382, 383, 385, 387, 388], "them": [3, 4, 5, 10, 11, 25, 28, 36, 40, 42, 46, 47, 51, 52, 53, 54, 56, 58, 59, 60, 66, 67, 70, 71, 81, 86, 87, 96, 98, 104, 105, 108, 111, 112, 126, 127, 149, 153, 154, 155, 160, 165, 166, 168, 175, 182, 185, 186, 198, 199, 201, 210, 219, 220, 222, 227, 231, 234, 247, 248, 253, 255, 278, 282, 283, 284, 289, 295, 296, 305, 312, 314, 315, 325, 326, 328, 331, 335, 343, 344, 346, 351, 355, 358, 366, 369, 370, 373, 376, 377, 380, 382, 383, 387, 388], "themselv": [28, 56, 126, 160, 201, 220, 246, 247, 248, 289, 292, 328, 344, 371], "theorem": [39, 366], "theoret": [41, 53, 133, 255, 261], "theoretician": 126, "theori": [76, 254, 255, 385, 391], "therapeut": 255, "therapi": 255, "thereaft": [96, 200, 327], "therebi": [7, 29, 126, 328], "therefor": [25, 29, 32, 39, 52, 96, 153, 154, 156, 158, 159, 160, 166, 169, 170, 174, 182, 185, 189, 197, 201, 220, 225, 229, 231, 242, 282, 283, 285, 287, 288, 289, 292, 296, 300, 304, 312, 328, 337, 344, 349, 353, 355, 369, 377, 378, 383, 388], "therein": 0, "thermal": 255, "thermodynam": 255, "thermoelectr": 255, "thermomet": 104, "thermoplasmon": 255, "thermoreceptor": 255, "thermosensit": 255, "thesalmon": [200, 327], "theta": [63, 151, 255, 280, 296, 383, 384, 385], "theta0": [151, 280], "thevenon": 255, "thi": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 271, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "thiamin": 255, "thick": [28, 101, 113, 115, 127, 229, 250, 255, 353, 382], "thiel": 255, "thielscher": 255, "thierri": 255, "thin": [86, 113, 115, 255, 382], "thing": [3, 16, 25, 27, 28, 29, 32, 37, 38, 39, 41, 51, 52, 53, 56, 65, 66, 67, 76, 80, 81, 83, 86, 94, 96, 98, 108, 115, 119, 120, 129, 136, 160, 161, 163, 169, 173, 182, 201, 204, 214, 220, 223, 224, 231, 237, 249, 257, 264, 289, 290, 292, 303, 305, 312, 314, 328, 338, 344, 347, 348, 349, 355, 361, 377, 387], "thing_ptr": 98, "think": [10, 11, 43, 46, 66, 67, 76, 94, 96, 119, 120, 126, 136, 154, 220, 231, 264, 283, 344, 355, 384, 388], "thinnest": [229, 353], "thio": 255, "thiran": 255, "third": [70, 76, 81, 89, 119, 120, 127, 138, 139, 148, 149, 159, 160, 175, 182, 185, 197, 201, 214, 218, 220, 226, 229, 255, 264, 266, 267, 278, 288, 289, 305, 312, 324, 328, 330, 338, 342, 344, 350, 353, 366, 377, 384, 387], "third_range_var": 53, "this_modul": 312, "this_nod": [206, 212, 332, 336, 388], "this_sect": [169, 206, 212, 299, 332, 336, 388], "thisindex": [229, 353], "thoes": 53, "thoma": [89, 255, 387], "thome": 255, "thompson": 255, "thomson": 255, "thon": 255, "thorbergsson": 255, "thorough": 248, "those": [0, 1, 3, 4, 10, 11, 12, 16, 17, 18, 32, 36, 41, 42, 43, 45, 47, 49, 51, 53, 56, 60, 64, 66, 81, 86, 93, 94, 103, 119, 120, 124, 126, 127, 133, 136, 143, 144, 153, 154, 155, 159, 160, 161, 164, 165, 166, 170, 178, 186, 197, 201, 220, 223, 226, 227, 229, 234, 244, 246, 247, 261, 264, 272, 273, 282, 283, 284, 288, 289, 290, 292, 294, 295, 296, 300, 308, 312, 314, 315, 324, 328, 344, 347, 350, 351, 353, 358, 365, 366, 368, 370, 371, 377, 381, 383, 387, 388, 390, 392, 393], "though": [28, 29, 35, 78, 80, 81, 160, 161, 165, 197, 201, 216, 246, 248, 289, 290, 295, 299, 324, 327, 328, 340, 366, 370, 377, 378, 382, 388], "thought": [81, 136, 201, 220, 231, 264, 328, 344, 355, 377], "thousand": [32, 36, 47, 160, 219, 229, 289, 343, 353, 377, 388], "thread": [3, 6, 8, 36, 52, 53, 95, 126, 153, 155, 157, 160, 163, 164, 200, 201, 220, 242, 255, 282, 284, 286, 289, 292, 294, 327, 328, 330, 341, 344, 351, 371, 373, 385], "thread_busywait": [157, 160, 286, 289], "thread_cach": 53, "thread_ctim": [157, 160, 286, 289], "thread_how_many_proc": [157, 160, 286, 289], "thread_stat": [157, 160, 286, 289], "threaddatum": 4, "threads_en": 289, "threadsaf": [3, 4, 36, 152, 153, 160, 251, 282, 289, 371], "threadsanit": [3, 242], "three": [10, 11, 13, 27, 33, 37, 42, 50, 53, 59, 66, 68, 70, 76, 88, 96, 99, 100, 108, 115, 117, 130, 133, 144, 147, 153, 155, 160, 161, 163, 166, 169, 182, 188, 190, 191, 201, 203, 211, 220, 229, 233, 242, 248, 250, 255, 258, 261, 273, 276, 282, 284, 289, 290, 292, 296, 312, 316, 317, 328, 330, 344, 353, 357, 360, 366, 377, 378, 387, 388, 392], "thresh": [153, 201, 282, 328], "threshold": [16, 17, 18, 29, 80, 153, 157, 159, 160, 164, 201, 220, 242, 255, 282, 286, 288, 289, 292, 293, 294, 328, 344, 366, 374, 383, 385], "through": [4, 9, 13, 14, 25, 27, 29, 33, 49, 52, 64, 70, 80, 82, 83, 86, 89, 90, 93, 96, 99, 108, 119, 120, 126, 153, 154, 155, 159, 160, 161, 163, 165, 166, 170, 173, 201, 211, 220, 227, 229, 237, 247, 248, 250, 251, 253, 255, 282, 283, 284, 288, 289, 290, 292, 293, 295, 296, 298, 300, 303, 312, 314, 320, 328, 344, 351, 353, 361, 366, 377, 382, 383, 386, 388, 389, 393], "throughout": [18, 24, 25, 43, 66, 67, 68, 89, 154, 283, 366, 369, 383], "throughput": [242, 255], "throw": [29, 53, 66, 76, 81, 110, 133, 165, 189, 194, 261, 295, 321], "thu": [33, 39, 42, 53, 58, 64, 79, 81, 103, 119, 120, 124, 148, 151, 153, 160, 165, 166, 174, 175, 200, 201, 204, 205, 207, 220, 223, 229, 277, 280, 282, 289, 292, 295, 296, 305, 312, 314, 324, 327, 328, 333, 335, 344, 347, 353, 366, 377, 388], "thumb": [136, 160, 264, 289], "thunemann": 255, "thurbon": 255, "ti": 52, "tian": 255, "tic": [229, 233, 353, 357], "tick": [78, 127, 246, 383], "ticket": 66, "tid": [160, 289], "tidi": 377, "tiesinga": 255, "tiff": [70, 127], "tifi": 70, "tiganj": 255, "tiger": [160, 255, 289], "tigerholm": 255, "tight": [1, 154, 155, 255, 283, 284], "tighter": 93, "tightli": [6, 25, 153, 282, 369], "tikidji": 255, "til": [72, 81, 160, 201, 220, 231, 289, 328, 344, 355], "tilda": [170, 300], "tile": [173, 303], "till": [81, 229, 233, 353], "tilleri": 255, "time": [0, 1, 3, 4, 9, 10, 11, 13, 14, 16, 17, 18, 24, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 44, 45, 46, 49, 52, 53, 54, 63, 64, 66, 67, 72, 78, 80, 81, 87, 88, 89, 94, 95, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 115, 119, 120, 123, 124, 126, 127, 133, 134, 136, 139, 147, 148, 150, 151, 153, 154, 155, 157, 159, 160, 161, 163, 164, 168, 169, 173, 174, 175, 177, 180, 182, 188, 189, 191, 192, 197, 198, 200, 201, 204, 210, 211, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 242, 246, 247, 248, 249, 250, 254, 255, 261, 262, 264, 267, 268, 276, 277, 279, 280, 282, 283, 284, 286, 288, 289, 290, 292, 294, 296, 299, 303, 304, 305, 307, 310, 316, 318, 319, 324, 325, 327, 328, 330, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 363, 365, 366, 368, 370, 373, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "timeout": [157, 160, 182, 286, 289, 312], "timer": [140, 160, 216, 242, 269, 289, 340, 388], "timescal": 255, "timeseri": [384, 385], "timestep": [4, 39, 153, 160, 201, 225, 242, 282, 289, 328, 349, 373], "timet": 70, "timofeev": 255, "timofeeva": 255, "ting": 255, "tinglei": 255, "tini": 96, "tinker": 66, "tinyurl": [365, 367, 368, 370, 371, 376], "tion": 70, "tip": [57, 66, 76, 107, 108, 126, 255], "tiptekno": 255, "tire": 127, "tirozzi": 255, "tisson": 255, "tissu": [66, 76, 255], "titl": [4, 81, 94, 96, 103, 124, 173, 174, 177, 180, 182, 227, 229, 231, 249, 250, 303, 304, 307, 310, 312, 318, 319, 351, 353, 355, 371, 385], "title_text": 371, "titu": 255, "tj": 46, "tkatch": 255, "tm": [89, 160, 254, 255, 289], "tmate": 249, "tmp": [16, 188, 190, 201, 216, 219, 248, 316, 317, 328, 340, 343], "tmpdos1": [216, 340], "tmpdos2": [216, 340], "tmpfile": 28, "tn3147": 247, "tnb": 255, "tnew": 388, "tnewp": 388, "tnext": [164, 294], "tnnl": 255, "tnsre": 255, "to_html5_video": 373, "to_python": [201, 202, 250, 253, 314, 328, 329], "to_vector": [197, 202, 236, 324, 329, 360], "tobin": 255, "tobj": 204, "todai": [52, 255, 393], "todd": 255, "todo": [154, 155, 160, 250, 283, 284, 289], "todorov": 255, "toff": 71, "togeth": [3, 4, 28, 29, 32, 36, 45, 52, 70, 100, 122, 126, 127, 152, 160, 161, 165, 166, 201, 204, 220, 229, 242, 255, 281, 289, 290, 295, 296, 328, 344, 353, 366, 369, 377, 388], "toggl": [48, 53, 66, 67, 70, 94, 96, 99, 133, 204, 220, 229, 231, 234, 261, 312, 344, 353, 355, 358], "tognolina": 255, "toh": 255, "toi": [47, 161, 239, 255, 290], "tokarska": 255, "token": [52, 53, 81, 160, 207, 333], "tokenis": 52, "tol": [220, 344], "told": [80, 94, 382], "toledo": 255, "toleikyt": 255, "toler": [96, 126, 133, 136, 138, 220, 227, 255, 261, 264, 266, 292, 344, 351, 366, 369, 370], "tolerancemultipli": [220, 344], "tolia": 255, "toloza": 255, "tolstykh": 255, "tolu": 255, "tom": [198, 325, 387], "toma": 255, "tomassini": 255, "tominaga": 255, "tomko": 255, "tomlinson": 255, "tomsett": 255, "ton": 71, "tone": 255, "tongu": 255, "tonic": 255, "tonight": 45, "tonini": 255, "tonotop": 255, "too": [3, 29, 31, 37, 52, 56, 78, 81, 85, 87, 89, 96, 109, 119, 120, 125, 126, 127, 139, 160, 161, 166, 179, 186, 201, 210, 220, 221, 229, 231, 233, 235, 242, 267, 283, 289, 290, 296, 309, 315, 328, 335, 344, 345, 353, 355, 357, 359, 383], "took": [14, 247], "tool": [3, 9, 12, 14, 26, 29, 30, 31, 32, 36, 37, 38, 40, 44, 45, 46, 53, 54, 58, 64, 65, 70, 80, 82, 83, 87, 88, 89, 92, 100, 103, 105, 108, 111, 112, 114, 119, 123, 124, 125, 126, 129, 131, 132, 133, 134, 140, 142, 144, 150, 161, 174, 177, 209, 210, 217, 220, 221, 229, 230, 231, 234, 239, 242, 244, 246, 247, 254, 255, 257, 259, 260, 261, 262, 269, 271, 273, 279, 290, 304, 307, 335, 341, 344, 345, 353, 354, 355, 358, 369, 373, 377, 378, 382, 387, 388, 392], "toolbar": [16, 17, 18, 42, 45, 66, 76, 94, 96, 99, 104], "toolbox": 255, "toolchain": [1, 249, 340], "toolkit": [7, 255, 363], "toothpick": 108, "top": [0, 1, 3, 4, 14, 25, 29, 37, 46, 47, 52, 55, 59, 66, 67, 70, 76, 77, 79, 81, 86, 89, 98, 110, 112, 113, 114, 127, 129, 130, 133, 134, 142, 144, 145, 153, 165, 169, 170, 173, 174, 175, 177, 182, 186, 188, 196, 197, 201, 205, 211, 214, 220, 223, 228, 229, 231, 234, 237, 241, 250, 257, 258, 261, 262, 271, 273, 274, 295, 299, 300, 303, 304, 305, 307, 312, 314, 315, 316, 323, 324, 328, 331, 338, 344, 352, 353, 355, 358, 361, 368, 370, 377, 382], "topcel": [47, 86], "topic": [0, 4, 53, 66, 76, 79, 93, 94, 96, 255, 366, 377, 378, 392, 393], "topograph": 255, "topographi": 255, "topol": 22, "topolgi": 125, "topolnik": 255, "topolog": [255, 388], "topologi": [12, 14, 36, 37, 45, 46, 47, 60, 65, 67, 81, 86, 140, 146, 151, 166, 168, 210, 227, 255, 269, 275, 280, 289, 296, 335, 344, 351, 382], "toporikova": 255, "toprani": 255, "torben": 255, "torikai": 255, "toro": 255, "torqu": 385, "torr": 255, "torrei": 201, "tort": 255, "tortuos": [1, 292, 368, 373], "torvald": 377, "tos": 126, "toschev": 255, "total": [9, 10, 11, 13, 29, 32, 36, 54, 89, 93, 94, 96, 107, 126, 127, 133, 134, 136, 153, 154, 155, 160, 166, 200, 201, 220, 236, 241, 242, 255, 261, 262, 264, 282, 283, 284, 289, 296, 327, 328, 344, 360, 366, 370, 380, 388], "total_iclamp_cur": 344, "total_imem": 344, "totalbuff": 250, "toth": 255, "totowa": [254, 255], "touch": [3, 255], "toumaz": 255, "touretzki": [25, 255], "tout": [220, 344], "toward": [9, 24, 25, 29, 31, 33, 47, 52, 53, 86, 107, 113, 115, 153, 195, 201, 231, 255, 282, 322, 328, 355, 365, 377, 378], "toxin": 255, "tozer": 255, "tpi": [190, 317], "tpost": 250, "tpre": [154, 155, 250, 283, 284], "tput": 246, "tq": [220, 344], "tqdm": 63, "tqitempool": [220, 344], "tqperf": 1, "traboulsi": 255, "trace": [25, 46, 73, 81, 92, 94, 96, 99, 127, 171, 201, 242, 255, 301, 328, 342, 384], "traceabl": 377, "tracefil": 241, "track": [17, 53, 60, 94, 96, 105, 110, 148, 154, 179, 201, 255, 277, 283, 309, 328, 363, 377, 378, 384], "tracker": 377, "tract": 255, "tractu": 255, "trade": [67, 255], "tradeoff": [255, 296], "tradit": [368, 377, 378], "tradition": [58, 59, 163, 377], "traffic": 255, "traffick": 255, "trail": [81, 190, 197, 201, 210, 220, 317, 324, 328, 335, 344, 388], "train": [1, 9, 32, 36, 37, 71, 74, 75, 83, 100, 117, 118, 153, 159, 201, 255, 282, 288, 328], "trajec": [151, 280], "trajectori": [4, 8, 29, 39, 80, 94, 96, 161, 255, 289, 290, 365], "tran": [150, 152, 160, 255, 279, 281, 289], "trana": 255, "tranchina": 255, "transact": 255, "transcend": 33, "transcendent": 81, "transcrani": 255, "transcript": [255, 370], "transcutan": 255, "transduct": 255, "transfer": [1, 4, 8, 25, 70, 81, 94, 126, 130, 132, 135, 136, 146, 157, 163, 166, 201, 204, 236, 242, 255, 258, 260, 263, 264, 275, 286, 292, 296, 328, 360, 388], "transfer_exchange_tim": [160, 289], "transfer_phas": [135, 136, 263, 264], "transform": [25, 126, 130, 201, 227, 255, 258, 328, 351, 376], "transgen": 255, "transient": [36, 44, 94, 95, 96, 231, 255, 355], "transistor": 255, "transit": [53, 98, 123, 126, 152, 164, 250, 255, 275, 294], "translat": [1, 4, 8, 35, 36, 47, 50, 53, 54, 60, 64, 81, 82, 86, 87, 89, 98, 100, 112, 139, 153, 154, 155, 160, 166, 189, 220, 229, 234, 246, 247, 254, 255, 267, 282, 283, 284, 289, 296, 314, 344, 353, 358, 373, 377, 384, 385], "transmembran": [155, 250, 255, 284, 344], "transmiss": [95, 255, 391, 393], "transmit": [255, 383], "transmitt": [94, 100, 154, 155, 255, 283, 284], "transpar": [4, 6, 188, 197, 246, 316, 324], "transpil": [4, 7], "transport": [126, 255, 366], "transpos": [53, 197, 202, 324, 329, 388], "transposit": 53, "transsynapt": 255, "transvers": [47, 255], "trantham": 255, "trap": [160, 171, 255, 289, 301, 371], "trapani": 255, "trapezoid": [166, 234, 255, 296, 358], "trash": 246, "traub": 255, "traumat": 255, "travel": [41, 255, 366, 369], "travers": [53, 369], "travi": [1, 255], "trayn": 255, "treat": [4, 52, 56, 76, 81, 94, 96, 129, 133, 148, 149, 153, 154, 155, 160, 163, 166, 182, 185, 190, 193, 199, 236, 255, 257, 261, 277, 278, 282, 283, 284, 289, 292, 296, 298, 312, 317, 320, 326], "treatment": [155, 255, 284, 371], "tree": [3, 4, 10, 11, 27, 29, 33, 43, 47, 52, 66, 68, 82, 86, 89, 94, 96, 104, 105, 126, 151, 156, 160, 166, 220, 223, 242, 255, 280, 284, 285, 289, 295, 296, 314, 344, 347], "tree_chang": 60, "tree_sec": 314, "treinish": 92, "tremblai": 255, "tremend": [126, 220, 344], "tremor": 255, "trend": [254, 255], "trevathan": 255, "trevelyan": 255, "trevisiol": 255, "tri": [3, 7, 76, 94, 155, 160, 242, 246, 284, 289], "triadic": 255, "trial": [200, 201, 255, 327, 328], "triangl": [195, 201, 229, 322, 328, 353], "triangular": 197, "trianti": 255, "tricep": 255, "trick": 29, "tricki": 249, "tridimension": 255, "triesch": 255, "trig": 387, "trigavg": [201, 202, 328, 329], "trigemin": 255, "trigger": [9, 29, 38, 52, 53, 63, 71, 114, 127, 153, 164, 201, 248, 255, 282, 294, 328, 371, 377, 383, 385, 391, 393], "triggerthreash": [164, 294], "triggerthresh": [164, 294], "triggervar": [164, 294], "trigksyn": 220, "trigo": 255, "trigonometr": [195, 322], "triheteromer": 255, "triller": 255, "trillo": 255, "trimbl": 254, "trimmer": 255, "trinh": 255, "trio": [201, 328], "trip": 255, "trip8b": 255, "tripathi": 255, "triphosph": [255, 369], "tripl": [314, 387], "triplet": [216, 284, 340], "triskaidekaphobia": 96, "trisom": 255, "trisphosph": 255, "tristabl": 255, "tritonia": 255, "trivial": [28, 81, 86, 136, 164, 264, 294, 377, 380], "trol": 70, "troll": 70, "tropper": 255, "troubl": [32, 37, 119, 120, 247], "troubleshoot": [240, 243], "trouslard": 255, "trp": 255, "trpe": 284, "trpevski": 255, "trpm8": 255, "trpv1": 255, "trpv4": 255, "true": [8, 13, 28, 39, 53, 56, 64, 66, 81, 100, 138, 153, 154, 160, 164, 182, 185, 188, 192, 198, 199, 201, 204, 211, 219, 220, 229, 242, 246, 248, 266, 280, 282, 283, 288, 289, 292, 294, 298, 303, 304, 310, 312, 314, 316, 319, 323, 325, 326, 328, 330, 331, 338, 343, 344, 353, 366, 368, 369, 370, 373, 377, 378, 382, 383, 384, 387], "truepar": [165, 168, 295, 298, 388], "trueparentseg": [344, 388], "trueta": 255, "trun": [13, 16, 17], "trunc": [163, 292, 293], "truncat": [81, 89, 166, 190, 195, 199, 201, 213, 296, 317, 322, 326, 328, 337], "trunk": [66, 160, 289], "truong": 255, "trussel": 255, "trust": 255, "truth": [153, 255, 282, 328], "try": [10, 11, 25, 28, 31, 34, 36, 44, 45, 46, 47, 53, 56, 66, 68, 71, 76, 78, 86, 92, 94, 96, 102, 104, 119, 120, 127, 134, 160, 182, 185, 188, 210, 211, 230, 246, 247, 248, 262, 289, 312, 315, 316, 335, 354, 377, 378, 381, 383, 385, 387, 388], "tr\u00e4nkler": 255, "ts65dn": 255, "tsai": [25, 255], "tsan": 242, "tsang": 255, "tsanov": 255, "tsao": 255, "tscherter": 255, "tseng": 255, "tsimr": 255, "tsitoura": 255, "tstep": [218, 342], "tstop": [8, 13, 16, 17, 18, 24, 28, 32, 37, 47, 66, 72, 96, 100, 101, 102, 127, 151, 160, 161, 163, 218, 219, 220, 225, 242, 280, 282, 289, 290, 328, 342, 343, 344, 349, 375], "tstop_chang": 72, "tstpnt1": [283, 314], "tstpnt2": [283, 314], "tstr": [160, 188], "tsubo": 255, "tsuchitani": 255, "tsur": 255, "tsutsui": 255, "tt": [81, 217], "ttx": 255, "tu": 255, "tucker": 255, "tuckwel": 255, "tuft": [25, 255], "tuleau": 255, "tuluc": 255, "tulumello": 255, "tumor": 255, "tumulti": 255, "tunabl": [201, 328], "tune": [3, 126, 242, 255, 377], "tunstal": 255, "tup": 211, "tupl": [13, 60, 211, 292, 312, 314, 363, 387], "turbo": [233, 357], "turhan": 255, "turi": 255, "turn": [3, 14, 24, 25, 27, 28, 32, 36, 40, 45, 47, 66, 67, 74, 76, 80, 81, 90, 93, 94, 96, 101, 115, 119, 120, 127, 133, 134, 147, 154, 159, 160, 170, 171, 181, 182, 195, 201, 220, 224, 229, 255, 261, 262, 276, 282, 283, 288, 289, 297, 300, 301, 311, 312, 322, 328, 344, 348, 353, 366, 368, 377, 388, 393], "turnaround": 380, "turner": 255, "turrigiano": 255, "turtl": 255, "tutor": 96, "tutori": [0, 1, 3, 47, 49, 58, 64, 66, 67, 68, 76, 82, 83, 86, 87, 95, 123, 125, 126, 163, 242, 255, 269, 289, 292, 293, 314, 365, 366, 368, 369, 382, 383, 384, 385, 387, 388, 391], "tutorial2": 96, "tv": 250, "tvec": [29, 151, 159, 201, 219, 220, 250, 280, 282, 288, 328, 343, 344], "tveito": 255, "tvl": [160, 289], "tweak": 248, "twelv": 63, "twice": [4, 36, 53, 126, 151, 154, 160, 165, 200, 220, 223, 229, 254, 280, 283, 289, 295, 327, 328, 344, 347, 353, 393], "twik": 255, "two": [1, 3, 4, 14, 25, 26, 28, 29, 30, 33, 36, 37, 38, 39, 40, 42, 46, 47, 52, 53, 56, 59, 60, 64, 66, 70, 76, 81, 84, 86, 88, 89, 94, 96, 98, 99, 100, 105, 109, 110, 113, 114, 119, 120, 126, 129, 133, 136, 137, 138, 144, 147, 153, 154, 155, 160, 161, 163, 166, 168, 169, 182, 185, 188, 189, 190, 195, 197, 199, 201, 204, 209, 211, 219, 220, 227, 229, 231, 234, 236, 242, 247, 249, 250, 253, 255, 257, 261, 264, 265, 266, 273, 276, 282, 283, 284, 285, 289, 290, 292, 295, 296, 303, 312, 316, 317, 322, 324, 326, 328, 331, 343, 344, 351, 353, 355, 358, 360, 365, 366, 369, 371, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388, 392, 393], "twofold": [160, 289], "twophase_multisend": [216, 340], "twyford": 255, "twyman": 255, "txt": [0, 3, 7, 46, 59, 76, 127, 158, 246, 247, 287, 377], "ty": 70, "tyc": [40, 47, 255], "tyler": 255, "typ": 70, "typcial": 289, "type": [1, 3, 4, 7, 9, 12, 14, 24, 31, 36, 37, 46, 48, 52, 58, 60, 64, 65, 67, 70, 74, 75, 77, 80, 81, 82, 86, 87, 88, 92, 94, 96, 99, 109, 110, 112, 117, 118, 122, 123, 126, 136, 144, 149, 150, 152, 153, 154, 156, 158, 160, 161, 163, 164, 169, 179, 182, 185, 186, 190, 191, 197, 201, 203, 204, 205, 214, 216, 220, 223, 227, 229, 231, 236, 237, 238, 240, 246, 251, 253, 255, 264, 273, 278, 279, 281, 282, 283, 284, 285, 287, 289, 290, 292, 294, 302, 308, 309, 312, 314, 315, 316, 317, 318, 322, 324, 328, 330, 331, 338, 340, 341, 344, 347, 351, 353, 355, 360, 361, 362, 369, 377, 378, 383, 388, 393], "type_nam": 56, "typedef": 52, "typeerror": [186, 211, 283, 315, 383, 387], "typefac": 127, "typgin": 65, "typic": [1, 4, 7, 8, 47, 54, 60, 94, 98, 122, 136, 155, 160, 163, 201, 221, 242, 249, 252, 255, 264, 283, 284, 289, 292, 314, 328, 345, 353, 360, 369, 373, 377, 378, 381, 383, 387, 388], "typo": [119, 120, 154, 283, 377], "tyurikova": 255, "tzilivaki": 255, "tzounopoulo": 255, "t\u00f3th": 255, "t\u00f6reyin": 255, "t\u00f8nnesen": 255, "u": [4, 10, 11, 39, 46, 47, 52, 53, 63, 65, 66, 67, 68, 80, 81, 86, 95, 96, 104, 105, 106, 107, 111, 112, 119, 182, 197, 231, 246, 253, 254, 255, 297, 312, 324, 355, 365, 366, 370, 372, 377, 382, 383, 384, 387, 388], "u0": 365, "u00000010": 52, "u0000001a": 52, "u1": [119, 120], "u2": [119, 120], "u_": 366, "u_auto": 52, "u_proc": 52, "u_t": 366, "ubiquit": 242, "ubsan": 242, "ubuntu": [1, 3, 242, 246, 248, 268], "ubuntu21": 1, "uchida": 255, "udvari": 255, "uebach": 255, "uebel": 255, "uf": [11, 37, 43, 68, 96, 119, 120, 153, 154, 282, 283], "ugart": 255, "ugli": [47, 86], "uhlirova": 255, "uhlrich": 255, "ui": 377, "uint32": [200, 327], "uint34_valu": 284, "ujfalussi": 255, "ujihara": 255, "uk": [126, 255, 370], "ulbert": 255, "ulimit": [171, 301], "ullah": 255, "ullman": 255, "ulrich": 255, "ultim": [7, 25, 52, 53, 58, 94, 382], "ultra": 255, "ultrafast": 255, "ultrasound": 255, "um": [11, 25, 31, 33, 37, 43, 46, 64, 68, 242, 250, 292, 296, 312, 314, 367, 371], "um2": [11, 15, 31, 37, 166, 250], "umashankar": 255, "umat": [197, 324], "umho": [153, 155, 250, 282, 284], "un": [177, 201, 307], "unabl": 316, "unaccept": 204, "unaffect": [192, 319], "unalt": 255, "unam": 247, "unaryminu": 81, "unavail": [170, 300], "unbalanc": 255, "unbeliev": 96, "unbound": [94, 373], "unbranch": [108, 126, 166, 296, 388], "uncertainpi": 255, "uncertainti": 255, "unchang": [1, 32, 56, 96, 99, 107, 165, 166, 172, 188, 197, 201, 210, 223, 229, 231, 295, 296, 302, 316, 324, 328, 334, 335, 347, 353, 355, 382, 388], "uncheck": 108, "uncom": [239, 249], "uncommon": [154, 283, 377], "uncompress": [201, 328], "unconnect": 12, "uncorr": 54, "uncov": 255, "undefin": [3, 70, 81, 169, 230, 242, 246, 248, 292, 354], "undefinedbehaviorsanit": [3, 242], "undefinedbehavioursanit": 1, "under": [0, 1, 3, 8, 10, 11, 14, 35, 39, 40, 46, 47, 52, 53, 76, 81, 82, 83, 86, 89, 92, 93, 94, 96, 98, 99, 103, 105, 124, 126, 127, 139, 153, 154, 156, 160, 163, 166, 170, 171, 173, 177, 181, 182, 190, 201, 216, 220, 224, 227, 231, 242, 246, 248, 250, 255, 267, 282, 283, 285, 289, 296, 300, 301, 303, 307, 311, 312, 317, 328, 340, 344, 348, 351, 355, 363, 366, 369, 377], "underestim": 292, "undergo": [95, 133, 261], "undergon": 377, "undergradu": 255, "underli": [29, 35, 41, 53, 56, 58, 60, 70, 130, 160, 242, 255, 258, 289, 292, 359], "underneath": 60, "underscor": [155, 284, 382, 388], "underset": 95, "understand": [10, 11, 12, 26, 70, 76, 86, 89, 100, 125, 126, 144, 160, 166, 227, 255, 273, 289, 296, 316, 351, 369, 370, 377, 378, 383], "understood": [119, 120, 126, 213, 337, 377, 378], "underyl": 60, "undesir": [16, 99, 100, 294], "undiminish": 80, "undo": [66, 70, 377], "undoabl": 70, "undocu": [81, 219, 343], "undon": 70, "unduli": [196, 323], "undurraga": 255, "unequ": 185, "unexecut": [160, 289], "unexpect": 255, "unfamiliar": 51, "unfil": 70, "unfinish": 34, "unfortun": [33, 35, 36, 53, 81, 136, 153, 154, 155, 160, 231, 249, 264, 282, 283, 284, 289, 312, 314, 355], "unfriendli": 363, "ungless": 255, "ungroup": [70, 103, 124, 127], "unhandl": [201, 328], "unhid": [42, 99], "unicod": 76, "unidirect": 255, "unidraw": 70, "unifi": [1, 255], "uniform": [24, 29, 43, 66, 81, 96, 98, 160, 166, 200, 201, 227, 255, 284, 289, 296, 327, 328, 351, 366, 374], "uniformli": [53, 198, 325], "unimpl": [188, 316], "uninform": 40, "uninsert": [81, 204, 227, 351, 388], "uninstal": 248, "uninstallng": 246, "unintend": [79, 80, 221, 345], "union": [52, 53], "unipolar": 255, "uniqu": [89, 100, 160, 161, 165, 167, 200, 205, 255, 289, 290, 292, 295, 297, 327, 385], "unique_ptr": 60, "unit": [1, 3, 25, 29, 41, 63, 64, 70, 87, 100, 125, 130, 136, 137, 155, 160, 163, 182, 183, 193, 201, 220, 233, 246, 251, 255, 258, 264, 265, 282, 284, 289, 292, 312, 313, 320, 328, 344, 349, 357, 359, 361, 365, 366, 367, 368, 371, 376, 377, 382, 383, 384, 385, 388], "unitari": 255, "uniti": [70, 81, 133, 237, 261, 361], "units_on_flag": [182, 312], "unitsoff": [119, 120, 371], "unitson": [119, 120, 371], "univers": [54, 81, 89, 126, 160, 198, 247, 254, 255, 289, 325], "universal2": [1, 246, 247, 248], "universidad": 255, "unix": [10, 11, 47, 52, 67, 76, 81, 83, 86, 99, 119, 120, 122, 126, 127, 154, 158, 160, 171, 175, 177, 188, 216, 226, 231, 246, 249, 283, 287, 289, 301, 305, 307, 316, 340, 350, 355], "unix_mac_pc": [216, 340, 388], "unknown": [3, 53, 154, 216, 242, 283, 312, 340, 368, 382, 385], "unlabel": [12, 231, 355], "unless": [3, 12, 32, 36, 64, 81, 94, 96, 153, 154, 155, 156, 159, 160, 161, 164, 188, 189, 197, 201, 219, 220, 225, 229, 236, 282, 283, 284, 285, 288, 289, 290, 292, 294, 316, 324, 328, 343, 344, 349, 353, 360, 380, 388], "unlik": [3, 40, 53, 80, 89, 94, 119, 120, 154, 163, 283, 292, 297, 377, 381, 388, 393], "unlikelyto": [158, 287], "unlimit": [171, 301], "unlink": [187, 188, 248, 316], "unmap": [173, 177, 183, 229, 231, 235, 237, 303, 307, 313, 353, 355, 359, 361], "unmerg": 377, "unmyelin": 255, "unnam": [70, 94, 96, 133, 261], "unnecessari": [53, 67, 119, 120, 153, 154, 282, 283], "unoppos": 80, "unoptim": 93, "unord": 53, "unordered_map": 1, "unpack": [13, 16, 157, 160, 286, 289], "unpick": 53, "unpickl": [160, 289], "unpleas": [47, 86], "unpredict": 255, "unpurifi": 255, "unravel": 255, "unreason": [40, 161, 290], "unrecogn": 246, "unref": [52, 160, 184, 205, 289], "unreferenc": [173, 174, 282, 303, 304], "unrel": [53, 81, 242, 377], "unresolv": 94, "unrespons": [107, 383], "unsaf": [206, 315, 332], "unsav": [70, 81, 233, 357], "unscal": [94, 130, 258], "unselect": [66, 70], "unsign": [52, 53, 190, 247, 317], "unsort": 53, "unspecifi": [53, 186, 315], "unstabl": [94, 154, 248, 283, 377], "unsupervis": 255, "unsupport": [6, 312, 381], "unsworth": 255, "unsynchron": 255, "untangl": 255, "untest": 377, "until": [7, 14, 28, 32, 45, 47, 53, 66, 70, 80, 81, 86, 96, 98, 100, 101, 110, 159, 160, 172, 173, 177, 189, 201, 205, 216, 220, 224, 239, 246, 288, 289, 302, 303, 307, 328, 331, 340, 344, 348, 357, 371, 377, 378, 382, 385, 388], "unus": [1, 53, 130, 132, 149, 160, 165, 197, 258, 260, 278, 289, 295, 324], "unwant": 377, "unwrap": [160, 161, 224, 289, 290, 348], "unzip": [46, 76], "up": [0, 1, 7, 9, 10, 11, 12, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 45, 46, 47, 48, 49, 51, 52, 53, 55, 59, 60, 65, 68, 70, 76, 79, 80, 81, 84, 86, 88, 92, 93, 95, 99, 101, 102, 105, 107, 108, 110, 111, 112, 114, 119, 120, 123, 126, 129, 133, 134, 136, 138, 139, 144, 147, 151, 154, 155, 160, 161, 164, 170, 172, 173, 176, 177, 179, 182, 188, 191, 200, 201, 204, 210, 214, 216, 220, 221, 223, 224, 227, 229, 230, 231, 234, 235, 238, 243, 247, 250, 252, 255, 257, 261, 262, 264, 266, 267, 273, 276, 280, 283, 284, 289, 290, 293, 294, 300, 302, 303, 306, 307, 309, 312, 316, 318, 327, 328, 335, 338, 340, 344, 345, 347, 348, 351, 353, 354, 355, 358, 359, 362, 365, 366, 369, 372, 373, 379, 380, 382, 387, 391], "upcom": [1, 248], "updat": [1, 6, 18, 29, 32, 53, 60, 66, 76, 81, 82, 98, 108, 133, 150, 153, 154, 155, 160, 163, 164, 166, 182, 203, 220, 224, 231, 232, 234, 242, 246, 248, 249, 261, 279, 282, 283, 284, 289, 294, 296, 312, 314, 327, 328, 330, 335, 344, 348, 355, 356, 358, 371, 377, 378, 385, 388], "update_layout": 367, "update_xax": 371, "update_yax": 371, "upgrad": [0, 53, 63, 98, 246, 247, 292], "upkpyobj": [157, 160, 286, 289], "upkscalar": [157, 160, 286, 289], "upkstr": [157, 160, 286, 289], "upkvec": [157, 160, 286, 289], "upload": [49, 247], "upon": [56, 82, 83, 89, 220, 231, 255, 344, 355, 369, 377, 378, 387], "upper": [25, 31, 66, 70, 76, 86, 130, 144, 175, 197, 223, 229, 233, 255, 258, 273, 324, 347, 353, 357, 373, 385], "upper_limit": [175, 305, 312], "upregul": [255, 369], "upset": [160, 289], "upstream": [25, 377], "uptak": 255, "upward": [29, 91], "urakubo": 255, "urand": 98, "urban": 255, "urbano": 255, "uri": [155, 284, 292], "urinari": 255, "url": [3, 204, 248], "urllib": 373, "urlretriev": 373, "us": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 54, 55, 56, 58, 59, 60, 64, 68, 70, 71, 74, 78, 79, 81, 84, 87, 88, 89, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 120, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 182, 185, 186, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 249, 250, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 389, 391, 392, 393], "usa": 254, "usabl": [4, 32, 36, 163, 200, 327], "usag": [1, 5, 6, 11, 12, 51, 53, 54, 64, 76, 87, 93, 98, 133, 136, 142, 144, 147, 155, 160, 163, 165, 167, 168, 174, 179, 201, 203, 204, 220, 221, 229, 233, 238, 242, 248, 250, 261, 264, 271, 273, 276, 284, 288, 289, 292, 295, 304, 309, 314, 330, 344, 345, 353, 357, 362, 366, 370, 377], "usc": [237, 361], "use_daspk": [220, 344], "use_fast_imem": [4, 53, 153, 220, 282, 344], "use_fixed_step_bin_queu": [220, 344], "use_local_dt": [159, 201, 220, 328, 344], "use_long_doubl": [220, 344], "use_mcell_ran4": [198, 202, 325, 329, 388], "use_mxb": [220, 344], "use_self_queu": [220, 344], "use_sparse13": [220, 344], "useion": [36, 149, 152, 251, 278, 371, 373], "useless": [40, 165, 206, 225, 295, 332, 349], "usepoint": [229, 353], "useprint": [226, 350], "user": [0, 1, 3, 4, 9, 10, 11, 19, 25, 27, 31, 42, 45, 47, 51, 52, 53, 56, 58, 60, 66, 71, 76, 78, 81, 83, 87, 99, 100, 103, 107, 119, 120, 124, 127, 129, 130, 133, 134, 139, 144, 147, 153, 154, 155, 160, 164, 165, 169, 172, 173, 180, 182, 185, 186, 188, 191, 192, 197, 201, 204, 209, 210, 216, 219, 220, 223, 224, 225, 227, 229, 231, 233, 237, 246, 247, 248, 255, 257, 258, 261, 262, 267, 273, 276, 282, 283, 284, 289, 294, 295, 300, 302, 303, 310, 312, 314, 315, 316, 318, 319, 324, 328, 335, 340, 343, 344, 347, 349, 351, 353, 355, 357, 361, 363, 369, 370, 377, 378, 385], "userid": [157, 160, 286, 289], "usernam": 248, "userproperti": [186, 315], "useselect": [226, 350], "usetable_hh": [153, 282, 388], "usetable_suffix": [154, 223, 283, 347], "usin": 53, "using_morphometric_data": 47, "usr": [1, 83, 92, 219, 242, 246, 247, 249, 340, 343], "usual": [8, 28, 39, 41, 66, 68, 78, 81, 96, 98, 100, 119, 120, 131, 153, 154, 155, 161, 163, 173, 185, 197, 200, 201, 216, 220, 229, 231, 233, 234, 236, 259, 282, 283, 284, 290, 303, 314, 324, 327, 328, 330, 340, 344, 353, 355, 357, 358, 360, 367, 370, 371, 377, 383, 387, 388], "usx202": 255, "ut": [197, 324], "uta": 255, "utecht": 255, "utest1": [119, 120], "util": [29, 52, 53, 54, 137, 158, 160, 214, 220, 242, 250, 255, 265, 287, 289, 338, 344], "utilis": 255, "utricular": 255, "uzuntarla": 255, "v": [1, 3, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 28, 30, 31, 37, 38, 39, 41, 43, 44, 45, 49, 52, 60, 63, 65, 69, 72, 77, 80, 81, 94, 96, 98, 105, 119, 120, 126, 127, 130, 132, 133, 134, 136, 137, 138, 139, 146, 148, 150, 151, 153, 154, 155, 158, 159, 160, 163, 166, 169, 176, 179, 185, 197, 201, 204, 210, 218, 220, 223, 227, 229, 234, 235, 236, 242, 246, 248, 249, 250, 253, 255, 258, 260, 261, 262, 264, 265, 266, 267, 275, 277, 279, 280, 282, 283, 287, 288, 289, 292, 296, 299, 306, 309, 314, 315, 322, 324, 328, 331, 333, 335, 338, 344, 347, 349, 351, 353, 358, 359, 360, 361, 371, 379, 382, 386, 387, 388, 393], "v1": [47, 72, 159, 197, 201, 255, 324, 328, 388], "v100": 54, "v1p": 370, "v1t": 370, "v2": [154, 197, 201, 255, 283, 324, 328, 388], "v2p": 370, "v2t": 370, "v3": [0, 47, 154, 201, 248, 283, 328], "v374a": 255, "v3p": 370, "v3t": 370, "v4": [153, 201, 282, 328], "v4p": 370, "v4t": 370, "v8": [377, 378], "v_init": [24, 72, 96, 224, 230, 328, 348, 351, 354], "v_max": [148, 277, 283], "v_min": 283, "v_setup_vector": 60, "v_size": 283, "v_structure_chang": 60, "v_vec": [154, 283], "va": 255, "vabicaserin": 255, "vabnick": 255, "vacanc": 255, "vachicoura": 255, "vafai": 255, "vagu": 255, "val": [52, 53, 150, 191, 197, 203, 207, 208, 229, 279, 289, 312, 318, 324, 330, 333, 334, 353, 387, 388], "val1": 360, "val_str": 312, "valenc": [1, 137, 251, 255, 265, 373], "valencia": 255, "valent": 255, "valenti": 255, "valenzuela": 255, "valero": 255, "valgrind": 243, "valiant": 255, "valid": [1, 53, 56, 98, 129, 134, 150, 154, 155, 157, 159, 161, 164, 191, 220, 247, 255, 257, 262, 279, 283, 284, 286, 288, 290, 292, 294, 318, 327, 338, 344, 366, 377, 378, 387, 388], "vall": 255, "valtcheva": 255, "valtorta": 255, "valu": [3, 4, 10, 11, 12, 13, 16, 17, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 46, 47, 52, 60, 66, 67, 69, 70, 77, 81, 87, 89, 91, 92, 93, 95, 99, 100, 103, 104, 105, 107, 114, 116, 119, 120, 124, 125, 126, 127, 129, 131, 133, 134, 136, 137, 138, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 169, 171, 173, 175, 176, 177, 181, 182, 185, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 243, 248, 250, 253, 257, 259, 261, 262, 264, 265, 266, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 299, 301, 302, 303, 305, 306, 307, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 370, 373, 382, 383, 384, 387, 388], "valuabl": [28, 377], "value1": [201, 328], "value2": [201, 328], "value_to_grid": 292, "valueeditor": [145, 274], "valuefieldeditor": [140, 183, 269, 313, 388], "valuepanel": 312, "valus": 334, "van": [93, 255], "vandael": 255, "vandenbergh": 255, "vandrei": 255, "vann": 255, "vantag": 25, "var": [81, 134, 155, 169, 170, 182, 191, 200, 201, 202, 204, 208, 218, 220, 230, 242, 250, 262, 284, 300, 312, 318, 327, 328, 329, 334, 344, 354, 383, 388], "var1": [154, 155, 204, 283, 284], "var1_mech1": [154, 155], "var2": [154, 155, 204, 214, 283, 284, 338], "var2_mech2": [154, 155], "var_mech": 388, "var_nam": 60, "var_refer": 328, "var_val": [208, 334], "varaibl": 7, "varela": 255, "varga": 255, "vari": [7, 10, 11, 13, 25, 27, 38, 41, 66, 68, 76, 94, 104, 105, 110, 126, 133, 134, 136, 138, 147, 153, 154, 163, 166, 220, 227, 255, 261, 262, 264, 266, 276, 282, 283, 292, 296, 328, 344, 351, 366, 373, 374, 382, 388, 392], "variabl": [0, 1, 3, 6, 8, 9, 25, 28, 29, 31, 32, 33, 36, 37, 38, 39, 42, 44, 47, 51, 52, 56, 60, 63, 64, 67, 69, 76, 77, 88, 89, 93, 94, 96, 99, 101, 103, 107, 119, 120, 124, 126, 129, 131, 133, 134, 137, 138, 140, 144, 145, 148, 149, 151, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 173, 175, 176, 179, 182, 184, 185, 186, 188, 189, 191, 194, 195, 200, 201, 203, 204, 205, 207, 208, 210, 211, 214, 216, 218, 220, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 242, 246, 247, 251, 254, 255, 257, 259, 261, 262, 265, 266, 269, 273, 274, 277, 278, 279, 280, 282, 283, 284, 287, 288, 289, 290, 292, 294, 295, 296, 300, 301, 303, 305, 306, 309, 312, 314, 315, 316, 317, 318, 321, 322, 327, 328, 330, 333, 334, 335, 338, 340, 342, 343, 344, 345, 347, 348, 349, 353, 354, 355, 357, 358, 359, 360, 361, 366, 367, 368, 370, 381, 382, 384, 385, 393], "variable_domain": [175, 182, 183, 198, 200, 305, 313, 388], "variable_nam": [154, 283], "variablecr": 60, "variablefield_data": 60, "variablenam": [207, 333], "variablestepcontrol": [31, 32, 37, 220, 344], "variabletimestep": [101, 126, 227, 351], "variabletofit": [128, 133, 256, 261], "variabletyp": 250, "variad": 53, "varialbl": 289, "varianc": [200, 201, 255, 327, 328], "variant": [42, 52, 103, 107, 124, 200, 255, 296, 327, 368, 377], "variat": [25, 29, 65, 77, 87, 100, 105, 107, 125, 129, 154, 155, 160, 223, 255, 257, 283, 284, 347], "varicos": 255, "varieti": [4, 86, 107, 177, 200, 225, 246, 307, 327, 349], "variou": [1, 3, 4, 32, 40, 60, 64, 81, 82, 90, 98, 100, 130, 154, 159, 221, 223, 229, 234, 242, 246, 247, 250, 258, 283, 288, 292, 345, 347, 353, 358, 377, 381, 383, 384, 385, 387], "varlabel": [147, 276], "varn": 204, "varnam": [169, 175, 179, 182, 203, 204, 229, 235, 305, 309, 312, 314, 330, 353], "varnamkhasti": 255, "varoqueaux": 255, "varref1": 342, "varref2": 342, "varsiz": [201, 328], "varstart": [201, 328], "varstep": [201, 328], "vartyp": [176, 203, 306, 330], "varvar": [201, 328], "varx": [138, 266], "varyamp": [147, 276], "vascular": 255, "vaseghi": 255, "vasilaki": 255, "vasilkov": 255, "vasoact": 255, "vasoconstrictor": 255, "vasodilat": 255, "vassia": 255, "vast": 53, "vastli": 108, "vat": 255, "vazquez": 255, "vb": [197, 324], "vb1": 303, "vb2": 303, "vbox": [72, 81, 140, 147, 159, 172, 173, 183, 201, 214, 229, 269, 276, 302, 303, 313, 328, 338, 353, 388], "vc": [33, 147, 153, 276, 282, 377], "vclamp": [81, 87, 146, 147, 152, 153, 156, 162, 175, 203, 220, 275, 276, 281, 282, 285, 291, 305, 330, 344, 388], "vclampfamili": [146, 147, 275, 276], "vclampigraph": [146, 147, 275, 276], "vclamprig": 66, "vclmp": [153, 220, 282, 344], "vcnt": [160, 289], "vcodec": 63, "vcxsrv": 246, "vd": [201, 328], "vdcc": 255, "vdest": [160, 201, 289, 328], "vdestindex": [201, 328], "vdp": 370, "vdt": 370, "ve": [55, 87, 99, 108, 161, 198, 246, 247, 248, 290, 325, 382, 388], "vec": [28, 29, 138, 150, 159, 160, 185, 197, 198, 200, 201, 204, 205, 220, 235, 253, 279, 288, 289, 314, 324, 325, 327, 328, 331, 334, 344, 359, 388], "vec1": [185, 201, 204, 328], "vec2": [201, 328], "vec3": [201, 328], "veclist": 29, "vecplai": 76, "vecsiz": [201, 328], "vecsrc": [160, 289], "vecstim": 76, "vect": 56, "vectaport": [70, 127], "vectobj": [201, 328], "vector": [3, 4, 7, 8, 13, 16, 17, 18, 38, 51, 52, 56, 60, 64, 81, 87, 94, 96, 98, 100, 127, 134, 136, 138, 139, 140, 150, 151, 153, 154, 155, 159, 160, 161, 163, 188, 195, 197, 198, 199, 200, 202, 204, 205, 208, 209, 211, 219, 220, 221, 223, 225, 229, 231, 233, 235, 236, 250, 253, 262, 264, 266, 267, 269, 279, 280, 282, 283, 284, 288, 289, 290, 292, 296, 314, 315, 316, 322, 324, 325, 326, 327, 329, 331, 334, 338, 342, 343, 344, 345, 347, 349, 353, 355, 357, 359, 360, 365, 366, 370, 371, 372, 373, 375, 376, 382, 383, 384, 385, 387, 388], "vector_arg": 56, "vector_capac": 98, "vector_play_init": [219, 343], "vector_res": 98, "vector_sym": 56, "vectorflag": [229, 353], "vectoris": [3, 6, 7, 53], "vectorplai": [76, 227, 351], "vectorsbi": 60, "vecwrap": [227, 351], "vega": 255, "vegni": 255, "veh": 255, "veigenvalu": [197, 324], "vein": [155, 284], "velden": 255, "velet": 255, "vella": 255, "velman": 255, "veloc": [234, 255, 358], "velt": 255, "veltink": 255, "venanc": 255, "vendor": [1, 246], "venkadesh": 255, "venkataraman": 255, "venter": 372, "ventral": 255, "ventrolater": 255, "ventroposterolater": 255, "venu": 126, "venv": 0, "venzi": 255, "vera": 255, "verb": [189, 233], "verbatim": [1, 4, 36, 53, 82, 98, 152, 154, 160, 219, 251, 281, 283, 289, 343, 370], "verbern": 255, "verbist": 255, "verbos": [3, 53, 138, 266, 289], "verhagen": 255, "verhoog": 255, "veri": [1, 3, 9, 25, 29, 30, 40, 46, 47, 53, 54, 66, 67, 68, 76, 80, 81, 86, 88, 94, 96, 99, 100, 102, 110, 114, 119, 120, 123, 126, 127, 133, 134, 136, 148, 154, 155, 160, 161, 164, 166, 169, 170, 171, 186, 197, 200, 201, 209, 210, 220, 223, 224, 227, 228, 229, 236, 242, 247, 249, 252, 255, 261, 262, 264, 277, 283, 284, 289, 290, 294, 296, 300, 301, 315, 324, 327, 328, 331, 334, 335, 344, 347, 348, 351, 352, 353, 360, 372, 377, 378, 382, 383, 384, 385], "verif": 377, "verifi": [10, 11, 13, 27, 38, 42, 43, 45, 48, 66, 67, 68, 96, 103, 104, 124, 210, 246, 247, 255, 335], "verify_structur": 60, "verlag": [126, 255], "verma": 255, "versa": [70, 88, 126, 393], "versatil": [200, 255, 327], "verschur": 255, "version": [0, 1, 3, 7, 11, 31, 43, 48, 53, 54, 55, 66, 70, 81, 82, 87, 89, 92, 98, 122, 126, 127, 134, 136, 138, 153, 154, 155, 156, 160, 161, 164, 165, 177, 188, 198, 200, 201, 210, 214, 216, 219, 223, 225, 231, 242, 244, 246, 247, 248, 249, 252, 253, 262, 264, 266, 282, 283, 284, 285, 289, 290, 292, 294, 295, 298, 299, 305, 307, 314, 316, 320, 324, 325, 327, 328, 335, 338, 340, 343, 347, 349, 355, 359, 363, 365, 367, 368, 370, 371, 372, 373, 376, 379, 381, 384, 385, 387, 388], "versionstr": 216, "versu": [39, 255], "vert": [182, 312], "vertebr": 255, "vertex": [70, 255], "vertic": [50, 70, 94, 96, 127, 133, 173, 182, 201, 231, 261, 303, 312, 328, 355], "vertical_axi": 63, "veruki": 255, "vervaek": 255, "vesicl": [31, 255], "vesicular": 255, "vestibular": 255, "vestigi": [176, 234, 306, 358], "veter": 255, "veto": 255, "vetter": 255, "vext": [151, 153, 155, 160, 220, 250, 280, 282, 284, 289, 344, 388], "vfe": [181, 311], "vfi": [201, 328], "vfi_dest": [201, 328], "vfi_src": [201, 328], "vfix": [229, 353], "vfr": [201, 328], "vfr_dest": [201, 328], "vfr_src": [201, 328], "vga": [233, 357], "vgap": 38, "vgdb": 242, "via": [1, 3, 4, 5, 7, 8, 13, 22, 31, 32, 37, 44, 52, 53, 55, 59, 64, 70, 71, 81, 86, 88, 93, 98, 100, 103, 124, 126, 132, 136, 139, 148, 153, 154, 155, 156, 159, 160, 161, 163, 164, 166, 205, 210, 211, 214, 216, 229, 231, 240, 241, 242, 243, 246, 249, 253, 254, 255, 260, 264, 267, 277, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 299, 312, 314, 315, 328, 330, 331, 335, 338, 340, 341, 344, 345, 348, 353, 355, 360, 361, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 382, 385, 386, 387, 388, 392], "viana": 255, "vibrotactil": 255, "vicari": 255, "vice": [70, 88, 126, 393], "vicent": 255, "vida": 255, "vidal": 255, "video": [1, 63, 70, 76, 82, 83, 86, 289, 292, 373, 390, 392, 393], "video_path": 63, "video_url": 63, "vierl": 255, "vievil": 255, "view": [3, 10, 18, 24, 25, 27, 29, 31, 32, 41, 47, 50, 53, 70, 72, 73, 76, 78, 86, 89, 105, 112, 123, 127, 133, 151, 159, 160, 166, 201, 227, 229, 230, 231, 234, 235, 237, 240, 241, 255, 261, 280, 289, 296, 351, 353, 354, 358, 359, 360, 361, 377], "view_count": [229, 235, 237, 353, 359, 361], "view_equal_plot": 229, "view_info": [229, 353], "view_init": 63, "view_siz": [229, 353], "viewdown": 50, "viewer": [30, 141, 270], "viewfallbackfrom": 377, "viewonenam": [144, 273], "viewselect": [144, 273], "viewtop": 246, "viggiano": 255, "vigour": 255, "viik": 255, "villarroel": 255, "villett": 255, "vin": [25, 130, 131, 197, 258, 259, 324], "vindex": [201, 328], "vinject": 25, "vinyl": 53, "viola": 255, "violat": [201, 229, 328, 353], "violenc": [153, 282], "violet": [229, 233, 353, 357], "vip": 255, "virenqu": 255, "viridi": [359, 361], "virtu": [10, 11, 377], "virtual": [3, 33, 42, 43, 45, 66, 96, 99, 160, 246, 248, 255, 289, 383, 388, 391], "virtualbox": 246, "virtualenv": 7, "visapi": 255, "viscer": 255, "visi": 70, "visibl": [70, 73, 84, 123, 174, 177, 178, 229, 231, 304, 307, 308, 353, 355], "visibli": 96, "vision": 255, "visit": 344, "visual": [25, 27, 38, 66, 92, 96, 166, 243, 255, 292, 296, 359, 374, 382, 383, 388, 393], "visualstudio": 249, "vital": 255, "vitek": 255, "vitiat": [219, 343], "vitko": 255, "vitro": 255, "vittinghu": 255, "vive": 255, "vivo": 255, "vizcai": 255, "vizi": 255, "vlacho": 255, "vladimirov": 255, "vlasit": 255, "vlasov": 255, "vlieger": 255, "vline": [100, 282, 383, 384, 385], "vlkolinski": 255, "vlpag": 255, "vlsi": 255, "vm": [25, 33, 45, 47, 80, 96, 97, 99, 102, 127], "vmat": [197, 324], "vmax": [366, 373], "vmeanfreq": [201, 328], "vmeasur": 25, "vmin": 373, "vmp": 370, "vmt": 370, "vnew": 388, "vnewp": 388, "vobj": [197, 324], "vocal": 255, "voelker": 255, "voffset": 127, "vogel": [35, 255], "vogging": 255, "void": [4, 52, 53, 56, 60, 242, 250], "void_ptr": 98, "voigt": 255, "voila": 47, "vol": [25, 200, 250, 254, 327], "volatil": [54, 209, 255], "volgushev": 255, "volk": 255, "volkmann": 255, "vollei": 255, "volman": 255, "volt": [33, 119, 120, 154, 283], "volta": [7, 54], "voltag": [5, 8, 9, 24, 25, 26, 28, 29, 30, 31, 33, 37, 44, 45, 53, 60, 66, 76, 79, 80, 82, 83, 96, 103, 119, 123, 124, 126, 127, 130, 131, 132, 133, 136, 144, 147, 151, 153, 154, 155, 159, 160, 166, 169, 195, 200, 201, 220, 223, 225, 227, 230, 236, 255, 258, 259, 260, 261, 264, 273, 276, 280, 282, 283, 284, 289, 296, 314, 322, 328, 342, 344, 347, 349, 351, 354, 359, 360, 371, 382, 385, 388, 393], "voltage_valu": 250, "voltage_vector": 250, "volterra": 255, "volum": [1, 86, 154, 163, 255, 283, 292, 366, 369, 373, 382], "volume_fract": [292, 368, 373], "volumetr": 292, "voluntari": 255, "volynski": 255, "vom": 255, "vomeronas": 255, "von": 255, "vorwerk": 255, "vout": [25, 130, 131, 197, 258, 259, 324], "voxel": [1, 292], "vplai": 345, "vpre": [154, 155, 204, 283, 284], "vrabec": 255, "vread": [28, 187, 188, 201, 202, 316, 328, 329], "vrecord": [201, 328], "vri": 255, "vrieler": 255, "vscode": 249, "vsdi": 255, "vsourc": [201, 328], "vsp": 370, "vsrc": [160, 201, 289, 328], "vsrcdest": [201, 328], "vsrcdestindex": [201, 328], "vsrchist": [201, 328], "vsrcindex": [201, 328], "vsrcx": [201, 328], "vst": [370, 377], "vt": [201, 314, 328], "vt_dest": [201, 328], "vt_src": [201, 328], "vtransfer_tim": [157, 160, 286, 289], "vtrap": [163, 292, 293, 371, 388], "vtrap_hh": 388, "vtsrc": [201, 328], "vu": 255, "vuillaum": 255, "vuksic": 255, "vulner": 255, "vuong": 255, "vv": [3, 241, 331], "vvec": [150, 279], "vwrite": [28, 187, 188, 201, 202, 316, 328, 329], "vx": [197, 324], "vya": 255, "vyleta": 255, "vyver": 255, "v\u00e4is\u00e4nen": 255, "w": [9, 28, 29, 81, 93, 95, 107, 126, 153, 159, 160, 188, 192, 201, 229, 231, 248, 250, 254, 255, 282, 289, 316, 328, 353, 355, 373, 377, 388], "w64": 249, "w_open": 319, "wa": [1, 3, 4, 7, 31, 32, 35, 36, 39, 40, 41, 47, 52, 53, 66, 67, 70, 78, 80, 81, 86, 89, 94, 96, 98, 99, 101, 112, 119, 120, 121, 123, 125, 126, 130, 136, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 173, 174, 176, 177, 182, 185, 186, 188, 191, 195, 197, 198, 200, 201, 207, 210, 211, 216, 218, 219, 220, 221, 223, 229, 231, 233, 237, 242, 247, 248, 258, 264, 268, 282, 283, 284, 285, 288, 289, 290, 292, 294, 295, 296, 298, 300, 303, 306, 307, 308, 312, 314, 315, 316, 318, 322, 324, 325, 327, 328, 330, 333, 335, 340, 342, 343, 344, 345, 347, 353, 355, 357, 361, 363, 366, 373, 377, 381, 382, 385, 387, 390, 393], "waddi": 255, "wade": 255, "wadleigh": 255, "wadman": 255, "wage": 40, "wagner": [41, 255], "wah": 255, "wai": [0, 4, 5, 7, 10, 11, 14, 25, 28, 38, 39, 42, 45, 46, 47, 52, 56, 59, 64, 66, 80, 81, 86, 87, 94, 96, 99, 100, 103, 104, 105, 110, 114, 119, 120, 122, 124, 126, 127, 136, 147, 148, 154, 155, 156, 159, 160, 164, 166, 169, 173, 182, 184, 185, 187, 192, 201, 210, 219, 220, 223, 226, 227, 242, 246, 248, 253, 264, 276, 277, 283, 284, 285, 288, 289, 292, 294, 296, 299, 303, 312, 314, 317, 319, 328, 334, 335, 343, 344, 345, 347, 349, 350, 351, 360, 361, 365, 366, 369, 373, 377, 381, 382, 383, 385, 387, 388], "wait": [66, 80, 81, 96, 134, 153, 160, 161, 216, 221, 224, 262, 289, 290, 340, 345, 348, 385], "wait_tim": [157, 160, 161, 286, 289, 290], "waittim": [160, 289], "wake": 255, "walckier": 255, "wald": 255, "waleszczyk": 255, "walk": [182, 255, 312], "walker": 255, "walkthrough": [10, 11], "wall": [36, 160, 246, 255, 289], "wallac": 255, "walltim": [36, 160, 289], "walmslei": 255, "walsh": 255, "walsworth": 255, "wanaverbecq": 255, "wang": 255, "want": [0, 1, 3, 7, 10, 11, 14, 27, 28, 31, 40, 42, 46, 47, 53, 54, 56, 60, 64, 66, 67, 68, 70, 78, 79, 80, 82, 86, 87, 90, 92, 93, 96, 99, 100, 103, 104, 105, 106, 110, 114, 122, 123, 124, 127, 155, 158, 161, 163, 165, 166, 174, 179, 229, 231, 236, 241, 242, 246, 248, 284, 287, 290, 292, 295, 304, 309, 314, 328, 335, 353, 355, 360, 365, 368, 369, 370, 373, 377, 378, 381, 382, 383, 385, 387, 388], "want_all_spik": [157, 161, 286, 290], "warashina": 255, "ward": 255, "ware": 255, "warn": [3, 14, 36, 46, 54, 67, 76, 98, 149, 154, 155, 185, 195, 201, 220, 225, 231, 246, 248, 278, 282, 283, 284, 292, 320, 322, 328, 344, 349, 355, 366, 377, 385, 387], "warp": 25, "warrant": [64, 292], "warren": 255, "warrick": 255, "wasn": [47, 86], "wast": [53, 153, 160, 161, 186, 282, 289, 290], "watanab": 255, "watch": [3, 24, 37, 40, 76, 82, 94, 148, 152, 159, 160, 223, 240, 242, 250, 277, 281, 288, 289, 347], "watchthefit": [128, 256], "water": [41, 255], "wathei": 255, "watkinson": 255, "watrin": 255, "watson": 255, "watt": 255, "watznauer": 255, "wave": [41, 136, 201, 229, 254, 255, 264, 328, 353, 357, 374], "waveform": [87, 255], "wavelet": 255, "waxman": 255, "wb": [387, 388], "wc": [219, 343], "wcnt": [157, 159, 286, 288], "wdr": 255, "we": [0, 1, 3, 4, 5, 7, 9, 10, 11, 14, 16, 24, 27, 29, 30, 31, 32, 36, 37, 38, 39, 42, 44, 46, 47, 51, 52, 53, 55, 58, 59, 60, 64, 65, 66, 67, 68, 74, 75, 76, 80, 81, 89, 93, 95, 100, 103, 104, 105, 106, 109, 117, 119, 120, 124, 125, 126, 136, 153, 154, 155, 158, 160, 161, 163, 191, 211, 220, 229, 242, 246, 247, 248, 249, 251, 253, 255, 264, 282, 283, 284, 287, 289, 290, 292, 304, 318, 327, 344, 349, 353, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393], "weak": [49, 80, 255, 387], "weakli": [43, 160, 255, 289], "wearabl": 255, "wearn": 255, "weaver": 255, "web": [70, 255, 377], "webb": 255, "weber": 255, "webinar": [86, 289, 390, 393], "websit": [1, 40, 377, 378, 385, 387], "week": [160, 289, 377, 378, 380], "weekli": 393, "weert": 255, "wefelmey": 255, "wehr": 255, "wei": [237, 255, 361], "weibul": [200, 327], "weidel": 255, "weight": [8, 9, 21, 22, 29, 32, 37, 74, 75, 80, 94, 95, 96, 102, 107, 108, 109, 113, 114, 115, 116, 129, 134, 153, 154, 155, 157, 159, 160, 161, 201, 220, 225, 255, 257, 262, 282, 283, 284, 286, 288, 289, 290, 328, 344, 349, 371, 383, 384, 385], "weight_vec": [201, 328], "weil": 255, "weiland": 255, "weinberg": 255, "weiner": 255, "weis": 255, "weiss": 255, "weissler": 255, "weisz": 255, "weitbrecht": 255, "welcom": 391, "weldai": 255, "weldi": 255, "weli": 255, "well": [1, 3, 28, 29, 36, 37, 40, 41, 47, 52, 53, 54, 60, 64, 70, 76, 80, 81, 86, 89, 94, 96, 98, 100, 119, 120, 123, 126, 133, 136, 142, 143, 144, 153, 154, 159, 160, 174, 185, 189, 201, 204, 205, 210, 220, 227, 229, 231, 237, 238, 242, 247, 248, 249, 253, 255, 261, 271, 272, 273, 283, 288, 289, 292, 304, 322, 328, 335, 344, 351, 353, 355, 361, 362, 366, 367, 369, 370, 377, 378, 382, 383, 384, 387], "wellein": 255, "weltzien": 255, "wen": 255, "wendt": 255, "weng": 255, "wenger": 255, "wennek": 255, "went": [29, 96], "were": [1, 12, 14, 25, 27, 29, 39, 40, 42, 45, 47, 49, 53, 68, 70, 74, 76, 80, 81, 82, 83, 86, 89, 93, 96, 98, 103, 116, 121, 124, 127, 138, 153, 154, 156, 160, 161, 165, 167, 195, 200, 201, 216, 220, 229, 234, 241, 242, 266, 282, 283, 285, 289, 290, 295, 297, 298, 322, 327, 328, 331, 340, 344, 349, 358, 377, 378, 381, 382, 385, 388], "weren": 382, "werginz": 255, "wespatat": 255, "westbrook": 255, "wester": 255, "westerfield": 46, "westov": 255, "wet": [66, 76], "wetmor": 255, "weyer": 255, "wg": [229, 353], "wget": [63, 368], "what": [0, 10, 11, 13, 24, 28, 30, 31, 32, 36, 38, 39, 40, 41, 44, 45, 49, 52, 53, 66, 67, 78, 81, 87, 90, 92, 94, 99, 100, 101, 102, 104, 105, 108, 110, 113, 115, 116, 117, 119, 120, 127, 144, 154, 155, 158, 160, 161, 163, 185, 201, 204, 220, 221, 224, 225, 229, 230, 231, 239, 241, 242, 246, 247, 249, 255, 273, 283, 284, 287, 289, 290, 292, 314, 328, 344, 345, 348, 349, 353, 354, 355, 366, 368, 369, 372, 376, 377, 382, 383, 385, 387], "whatev": [10, 11, 31, 53, 66, 67, 92, 127, 161, 169, 189, 218, 220, 241, 248, 290, 292, 342, 344, 385], "wheel": [1, 3, 7, 54, 59, 240, 243, 245, 363, 377, 378, 380, 381], "wheeler": 255, "wheelhous": 248, "wheight": [229, 353], "when": [0, 1, 3, 4, 7, 9, 12, 13, 14, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 44, 45, 46, 51, 52, 60, 64, 66, 67, 70, 73, 80, 81, 84, 87, 88, 89, 92, 94, 96, 98, 99, 100, 105, 107, 108, 109, 110, 111, 113, 115, 116, 119, 123, 127, 129, 130, 131, 133, 134, 136, 138, 143, 144, 145, 147, 148, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 188, 191, 195, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 214, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 241, 242, 246, 248, 249, 250, 253, 255, 257, 258, 259, 261, 262, 264, 266, 268, 272, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 316, 318, 322, 324, 325, 327, 328, 330, 333, 334, 335, 338, 340, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 361, 366, 367, 369, 372, 376, 377, 378, 381, 382, 383, 385, 387, 388], "whenev": [16, 31, 42, 53, 81, 94, 103, 124, 134, 154, 155, 160, 166, 182, 188, 205, 208, 210, 220, 223, 231, 237, 262, 283, 284, 289, 296, 312, 316, 334, 335, 344, 347, 355, 361, 377, 387], "where": [0, 1, 4, 5, 9, 10, 11, 13, 14, 25, 27, 28, 35, 37, 38, 39, 41, 43, 46, 47, 52, 53, 54, 56, 59, 64, 66, 68, 70, 73, 78, 81, 87, 92, 93, 94, 95, 96, 98, 99, 105, 119, 120, 126, 131, 136, 145, 153, 154, 155, 160, 161, 163, 166, 170, 173, 175, 185, 188, 197, 201, 202, 204, 206, 210, 216, 220, 221, 223, 224, 227, 229, 231, 234, 236, 237, 242, 246, 247, 248, 255, 259, 264, 268, 274, 282, 283, 284, 288, 289, 290, 292, 293, 296, 298, 300, 303, 305, 312, 314, 316, 320, 324, 328, 329, 332, 335, 340, 344, 345, 347, 348, 351, 353, 355, 358, 360, 361, 367, 368, 369, 372, 373, 377, 378, 381, 382, 383, 384, 385, 388], "where_is_iv": [158, 287], "where_to": [158, 287], "where_you_want_it": [158, 287], "wherea": [25, 52, 53, 154, 155, 188, 201, 204, 229, 255, 283, 284, 292, 316, 328, 353, 381], "wherein": 366, "wherev": [145, 274, 385], "whether": [3, 10, 11, 27, 33, 37, 39, 49, 51, 53, 54, 70, 76, 81, 88, 94, 96, 98, 100, 119, 120, 123, 126, 130, 131, 132, 133, 134, 154, 155, 160, 166, 182, 201, 204, 210, 220, 229, 255, 258, 259, 260, 261, 262, 282, 283, 284, 289, 296, 312, 328, 335, 344, 353, 369, 377, 381, 387], "which": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 56, 60, 64, 66, 68, 70, 71, 73, 74, 80, 81, 83, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 103, 104, 107, 108, 109, 111, 112, 119, 120, 124, 125, 126, 127, 130, 131, 133, 134, 136, 138, 139, 144, 147, 148, 149, 150, 151, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 175, 176, 178, 179, 181, 182, 185, 186, 188, 189, 190, 192, 195, 196, 197, 200, 201, 204, 205, 206, 210, 214, 218, 219, 220, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 241, 242, 246, 247, 248, 253, 255, 258, 259, 261, 262, 264, 266, 267, 273, 276, 277, 278, 280, 282, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 306, 308, 309, 311, 312, 314, 315, 316, 317, 319, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 366, 369, 370, 371, 372, 373, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389], "whichev": [223, 347], "while": [1, 13, 16, 24, 28, 38, 39, 40, 47, 50, 52, 53, 66, 67, 70, 71, 76, 79, 80, 81, 85, 86, 89, 96, 109, 110, 111, 112, 113, 115, 126, 127, 129, 134, 152, 153, 155, 160, 173, 186, 191, 197, 201, 204, 210, 218, 221, 227, 229, 231, 234, 242, 246, 247, 248, 253, 257, 262, 280, 281, 282, 284, 285, 289, 303, 315, 316, 318, 328, 335, 342, 345, 351, 353, 355, 358, 366, 375, 377, 378, 381, 385, 387, 388], "whisker": 255, "white": [66, 70, 81, 92, 229, 233, 255, 353, 357], "whitesel": 255, "whitespac": [70, 81, 188, 191, 316, 318], "whitteridg": 255, "whittington": 255, "whl": 248, "who": [40, 47, 93, 126, 154, 163, 198, 283, 292, 325, 372, 388, 390, 392, 393], "whole": [13, 25, 36, 86, 160, 185, 201, 229, 231, 237, 255, 289, 292, 295, 314, 328, 353, 355, 361, 377, 382], "wholetre": [64, 165, 167, 275, 292, 295, 297, 314, 359, 360, 367, 368, 371, 382, 383, 384, 388], "whom": 377, "whose": [9, 13, 40, 53, 66, 76, 80, 81, 86, 89, 107, 154, 159, 160, 166, 197, 201, 218, 220, 227, 283, 288, 289, 296, 324, 328, 342, 344, 351, 360, 369, 377], "why": [25, 32, 41, 46, 47, 53, 66, 80, 86, 87, 94, 96, 100, 102, 119, 120, 125, 127, 160, 242, 289, 326, 382, 385, 388], "wickman": 255, "wide": [32, 70, 76, 98, 126, 201, 246, 255, 328, 377, 388], "widen": [201, 255, 328], "wider": [78, 314], "widespread": [242, 255, 377], "widget": [47, 86, 129, 134, 140, 144, 154, 170, 183, 201, 203, 230, 231, 257, 262, 273, 283, 300, 313, 328, 330, 354, 355], "width": [63, 70, 81, 173, 180, 190, 201, 229, 255, 303, 310, 317, 328, 353, 359, 361, 382], "wiederman": 255, "wield": [231, 355], "wiendl": 255, "wierenga": 255, "wiki": [1, 52, 377], "wikipedia": [52, 293, 366], "wikstr\u00f6m": 255, "wilber": 255, "wild": [53, 201, 242, 328], "wilder": 255, "wildli": [50, 96], "wilhelm": 255, "wilj": 255, "wilkinson": 388, "willcox": 255, "willem": 255, "william": 255, "willishaw": 255, "willshaw": 255, "wilm": 255, "wilson": 255, "wimmer": 255, "win": 249, "win2k": 76, "win95": [160, 289], "win_build_cmak": 249, "win_download_dep": 249, "win_install_dep": 249, "windir": 249, "window": [1, 3, 10, 11, 14, 25, 31, 32, 35, 36, 37, 45, 46, 47, 48, 50, 66, 67, 70, 79, 80, 81, 82, 86, 87, 89, 92, 94, 96, 107, 108, 109, 110, 114, 122, 123, 129, 133, 134, 140, 147, 172, 173, 174, 175, 176, 177, 179, 182, 201, 210, 216, 221, 226, 229, 233, 235, 237, 238, 240, 243, 245, 255, 257, 261, 262, 269, 276, 302, 303, 304, 305, 306, 307, 309, 312, 325, 328, 334, 335, 340, 345, 350, 353, 357, 359, 361, 362, 363, 373, 381, 382, 388], "window_plac": [177, 183, 307, 313], "windowgroup": [227, 351], "windup": 255, "winexec": [216, 340], "winio": 81, "winkel": 255, "winkelmann": 255, "winner": 255, "winograd": 255, "winslow": 255, "winter": 255, "winther": 255, "wire": [29, 160, 255, 289], "wirelessli": 255, "wirth": 255, "wisden": 255, "wise": [29, 52, 160, 289], "wish": [3, 29, 93, 133, 154, 158, 159, 160, 164, 166, 173, 197, 201, 204, 206, 220, 222, 229, 246, 261, 283, 287, 288, 289, 294, 296, 303, 328, 332, 344, 346, 353, 366, 376, 383, 388], "wisnoski": 255, "wissmann": 255, "wit": 377, "withdraw": 255, "witherington": 255, "within": [29, 32, 41, 53, 56, 64, 70, 77, 81, 87, 91, 105, 120, 127, 134, 148, 153, 154, 155, 160, 165, 169, 170, 174, 182, 185, 198, 199, 201, 204, 205, 208, 219, 220, 223, 229, 231, 233, 235, 246, 253, 255, 262, 268, 277, 282, 283, 284, 289, 292, 299, 300, 325, 326, 327, 328, 330, 334, 343, 344, 347, 353, 355, 357, 359, 363, 368, 369, 377, 385, 387, 388], "withmpi": [160, 289], "without": [1, 3, 10, 11, 14, 29, 32, 37, 38, 40, 44, 53, 54, 56, 66, 68, 76, 81, 89, 93, 99, 126, 134, 150, 153, 154, 155, 158, 160, 163, 170, 171, 188, 190, 197, 198, 201, 204, 214, 219, 220, 221, 223, 224, 229, 230, 231, 233, 242, 246, 250, 255, 262, 279, 282, 283, 284, 287, 288, 289, 300, 301, 316, 317, 324, 325, 328, 331, 338, 343, 344, 345, 347, 348, 353, 354, 355, 357, 359, 365, 368, 371, 377, 382, 385, 388], "witoelar": 255, "wittmeier": 255, "wittner": 255, "wittum": 255, "wizard": 246, "wleft": [229, 353], "wlodarczyk": 255, "wm_ffm": 246, "wman": 20, "wnp": 255, "wojciechowski": 255, "wojtowicz": 255, "wokosin": 255, "wolanski": 255, "wolf": 255, "wolfart": 255, "wolff": 255, "wolfram": 255, "wolfu": 255, "wolgamuth": 255, "won": [4, 32, 37, 71, 78, 81, 82, 83, 182, 242, 248, 370, 377, 378], "wonder": [53, 382, 385], "wong": 255, "wongsarnpigoon": 255, "woo": 255, "woock": 255, "wood": 255, "woodin": 255, "woodman": 255, "woodward": [220, 344], "wopen": [16, 17, 28, 81, 184, 187, 188, 190, 192, 201, 316, 317, 319, 328, 388], "word": [25, 42, 66, 99, 127, 155, 191, 201, 204, 231, 248, 284, 304, 318, 328, 355], "work": [0, 1, 3, 4, 10, 11, 13, 16, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 51, 54, 55, 57, 66, 68, 70, 73, 76, 81, 82, 83, 86, 87, 88, 90, 94, 96, 98, 103, 107, 109, 111, 112, 119, 120, 124, 125, 133, 134, 136, 139, 144, 148, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 173, 177, 180, 186, 189, 197, 201, 204, 210, 216, 219, 220, 221, 225, 226, 227, 228, 229, 231, 237, 242, 246, 247, 248, 251, 252, 253, 255, 261, 262, 267, 273, 277, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 300, 301, 303, 305, 307, 310, 312, 314, 315, 317, 322, 324, 328, 333, 335, 338, 340, 341, 343, 344, 345, 349, 350, 351, 352, 353, 355, 359, 361, 366, 368, 373, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 393], "workaround": [53, 76, 246], "workbench": 255, "worker": [10, 11, 13, 16, 160, 161, 289, 290], "workflow": [0, 3, 8, 57, 243, 255, 377], "workhors": 81, "workload": 55, "worksheet": 388, "workshop": 255, "workspac": 249, "workstat": [10, 11, 36, 81, 126, 160, 161, 289, 290], "world": [32, 35, 37, 53, 158, 160, 165, 182, 211, 255, 287, 289, 312, 314, 318, 338, 353, 377, 387], "worri": [14, 53, 201, 328], "wors": [53, 155, 284, 377], "worst": 33, "wortel": 255, "worth": [47, 79, 153, 160, 282, 289, 377], "worthless": 377, "worthwhil": [36, 53, 220, 242, 344], "would": [3, 4, 7, 10, 11, 13, 14, 25, 29, 37, 39, 40, 41, 42, 45, 46, 47, 53, 56, 58, 64, 65, 66, 67, 76, 78, 80, 81, 86, 89, 96, 98, 99, 103, 104, 107, 108, 119, 120, 124, 127, 133, 136, 149, 153, 154, 155, 159, 160, 161, 163, 164, 166, 173, 197, 201, 204, 220, 229, 236, 242, 246, 249, 253, 261, 264, 278, 282, 283, 284, 288, 289, 290, 292, 294, 296, 303, 305, 314, 324, 328, 340, 344, 360, 366, 369, 370, 371, 372, 377, 378, 380, 381, 382, 387, 388], "wouldn": [47, 114, 382], "wqinit": 81, "wrachtrup": 255, "wrai": 255, "wrap": [16, 29, 53, 110, 160, 161, 201, 211, 284, 289, 290, 327, 328, 391], "wrapper": [35, 60, 160, 161, 165, 200, 216, 277, 289, 290, 327, 340], "wreh": 255, "wrestl": 126, "wright": 255, "wrinkl": 255, "writabl": [188, 316], "write": [4, 13, 14, 24, 28, 29, 36, 38, 51, 53, 55, 64, 65, 66, 68, 76, 81, 82, 83, 88, 90, 96, 100, 119, 120, 126, 149, 153, 154, 160, 163, 173, 184, 187, 188, 190, 197, 201, 220, 223, 225, 233, 242, 246, 247, 251, 253, 278, 282, 283, 289, 303, 314, 316, 317, 318, 324, 328, 344, 347, 349, 357, 370, 371, 373, 381, 382, 383, 385, 387, 388], "write1": 284, "writefil": 385, "writehoc": [225, 349], "writelin": 373, "writen": 4, "writer": [189, 219, 343, 388], "writerow": 388, "written": [5, 40, 42, 46, 47, 66, 81, 89, 103, 119, 120, 124, 126, 136, 151, 154, 155, 185, 192, 201, 204, 210, 225, 242, 264, 280, 283, 284, 289, 295, 314, 317, 319, 328, 335, 349, 366, 371, 373, 388], "wrong": [28, 29, 32, 37, 53, 56, 87, 96, 110, 133, 155, 173, 220, 261, 284, 303, 344, 387], "wrote": [53, 119, 120, 160, 289], "wr\u00f3bel": 255, "wshorten": 246, "wsl": [1, 240, 245], "wsl1": 246, "wsl2": 246, "wstrict": 246, "wt": 29, "wtihin": 369, "wtop": [229, 353], "wu": [126, 255], "wulff": 255, "ww": 254, "wwidth": [229, 353], "www": [1, 70, 76, 82, 83, 89, 100, 126, 127, 151, 158, 160, 164, 200, 248, 254, 280, 287, 289, 294, 327, 370, 377], "wyant": 255, "wybo": 255, "wylli": 255, "w\u00e5rdell": 255, "w\u00f3jcik": 255, "x": [0, 3, 4, 7, 10, 11, 13, 16, 17, 18, 21, 22, 28, 29, 30, 31, 32, 39, 40, 41, 43, 50, 53, 66, 67, 68, 70, 76, 78, 81, 83, 86, 91, 94, 98, 99, 119, 120, 122, 125, 126, 127, 129, 131, 133, 134, 136, 137, 138, 148, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 165, 166, 169, 171, 173, 176, 177, 182, 185, 188, 190, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 213, 215, 216, 217, 220, 221, 223, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 246, 248, 250, 254, 255, 257, 259, 261, 262, 264, 265, 266, 277, 280, 282, 283, 284, 285, 286, 288, 289, 292, 293, 295, 296, 299, 301, 303, 306, 307, 312, 314, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 337, 339, 340, 344, 345, 347, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 366, 367, 368, 371, 373, 375, 376, 377, 378, 382, 383, 384, 387, 388], "x0": [53, 138, 229, 266, 353], "x1": [53, 81, 125, 154, 155, 228, 229, 283, 352, 353], "x11": [1, 3, 233, 246, 247, 268, 357], "x2": [125, 154, 155, 228, 283, 284, 352], "x3d": [22, 81, 146, 165, 166, 275, 292, 295, 296, 368, 373, 382, 383, 384, 388], "x64": [249, 385], "x86_64": [1, 3, 5, 8, 54, 122, 158, 216, 242, 243, 248, 249, 287, 340, 373, 381], "x86_64_container_build": 248, "x_": 39, "x_0": 39, "x_align": [229, 353], "x_axis_label": [382, 387, 388], "x_i": [4, 250], "x_increment": [201, 328, 334], "x_n": 39, "x_offset": [4, 250], "x_val": 387, "x_vec": [201, 328, 334], "x_vector": [201, 328], "xaxi": [229, 353], "xaxis_titl": 367, "xb": 81, "xbutton": [28, 46, 72, 81, 173, 182, 183, 198, 200, 201, 217, 231, 303, 312, 313, 325, 327, 328, 334, 355, 388], "xc": [153, 282, 388], "xcaxial": [153, 282], "xcheckbox": [72, 81, 166, 182, 183, 231, 296, 312, 313, 355, 388], "xchng_meth": [160, 289], "xcode": [246, 247], "xcode_13": 340, "xcodedefault": 340, "xcrun": [3, 247], "xctoolchain": 340, "xd": [201, 328], "xdest": [201, 328], "xdir": [219, 343], "xea": 52, "xenopu": [41, 154, 255, 283], "xexpr": [173, 229, 353], "xfixedvalu": [81, 182, 183, 312, 313, 388], "xg": [153, 282, 388], "xg0": [229, 353], "xg1": [229, 353], "xhi": [292, 373], "xhost": [3, 246], "xia": 255, "xiang": 255, "xiao": 255, "xiumin": 255, "xlabel": [81, 100, 182, 183, 231, 312, 313, 355, 365, 366, 370, 375, 376, 385, 388], "xlaunch": 246, "xlim": 100, "xline": [229, 353], "xline0": [196, 323], "xline1": [196, 323], "xlo": [292, 373], "xmax": [229, 353], "xmenu": [81, 182, 183, 231, 312, 313, 355, 388], "xmic": [3, 246], "xmin": [229, 353], "xml": [89, 126], "xo": [28, 220], "xopen": [1, 52, 81, 125, 166, 170, 184, 187, 188, 192, 210, 225, 296, 300, 316, 319, 335, 349, 388], "xopen_broadcast_": 388, "xorg": [233, 235, 237, 357, 359, 361], "xpanel": [28, 46, 72, 81, 156, 166, 173, 181, 182, 183, 197, 198, 200, 201, 203, 217, 229, 231, 285, 296, 303, 311, 312, 313, 325, 327, 328, 330, 334, 353, 355, 388], "xplacement": [144, 147, 273, 276], "xpo": [229, 353], "xpoint": [196, 323], "xprime": [383, 384], "xpvalu": [81, 181, 182, 183, 197, 198, 200, 201, 217, 303, 311, 312, 313, 328, 388], "xquartz": [3, 246, 247, 248], "xrad": [235, 237, 359, 361], "xradiobutton": [81, 166, 173, 182, 183, 201, 229, 231, 296, 303, 312, 313, 328, 353, 355, 388], "xraxial": [153, 282, 388], "xred": [81, 184, 187, 191, 204, 318, 388], "xside": 50, "xsize": [233, 235, 357, 359], "xslider": [81, 182, 183, 231, 312, 313, 355, 388], "xsquiggl": 338, "xsrc": [201, 328], "xstart": [229, 233, 353, 357], "xstatebutton": [81, 182, 183, 231, 312, 313, 355, 388], "xstop": [229, 233, 353, 357], "xt3": 126, "xterm": [47, 86, 134, 210, 242, 262, 335], "xu": 255, "xue": 255, "xv": [229, 353], "xval": [219, 343], "xvalu": [28, 72, 81, 154, 166, 173, 181, 182, 183, 197, 201, 203, 231, 283, 296, 311, 312, 313, 325, 327, 328, 330, 338, 355, 388], "xvalue_format": [175, 305], "xvarlabel": [46, 81, 182, 183, 231, 312, 313, 355, 388], "xvec": [19, 151, 200, 201, 220, 229, 236, 280, 296, 327, 328, 344, 353, 360], "xx": [92, 231, 355, 366], "xxx": 242, "xy": [19, 126, 234, 237, 358, 361, 383], "xylouri": 255, "xyz": [211, 377], "y": [0, 3, 21, 22, 24, 25, 28, 29, 32, 36, 38, 39, 40, 41, 50, 53, 63, 78, 81, 86, 91, 94, 99, 105, 119, 120, 127, 129, 134, 136, 138, 151, 153, 154, 165, 166, 173, 182, 191, 192, 195, 201, 204, 209, 213, 220, 221, 227, 228, 229, 230, 231, 233, 234, 235, 237, 246, 248, 255, 257, 262, 264, 266, 280, 283, 292, 293, 295, 296, 312, 314, 318, 319, 322, 328, 334, 337, 344, 345, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 365, 366, 367, 371, 373, 375, 376, 377, 381, 382, 383, 384, 387, 388], "y0": [151, 229, 280, 353], "y1": [228, 229, 352, 353], "y2": [228, 352], "y3d": [22, 81, 146, 165, 166, 275, 292, 295, 296, 368, 373, 383, 384, 388], "y_": 39, "y_align": [229, 353], "y_axis_label": [382, 387, 388], "y_n": 39, "y_objectref": [229, 353], "y_val": 387, "yaari": 255, "yacc": 52, "yadav": 255, "yaeger": 255, "yager": 255, "yagi": 255, "yale": [1, 38, 81, 89, 100, 126, 160, 164, 242, 255, 289, 294, 393], "yamada": [250, 255], "yamaguchi": 255, "yamamoto": 255, "yamasaki": 255, "yamashita": 255, "yamazaki": 255, "yaml": 244, "yan": 255, "yanagawa": 255, "yanez": 255, "yang": 255, "yanov": 255, "yao": 255, "yarom": 255, "yaron": 255, "yastrebova": 255, "yau": 255, "yaxi": [229, 353], "yaxis_titl": 367, "yazdanfar": 255, "yazicioglu": 255, "yd": [201, 328], "ydest": [201, 328], "ye": [60, 161, 191, 242, 255, 290, 318, 387], "year": [76, 126, 150, 247, 279, 292, 377, 387], "yearwood": 255, "yebeh": 255, "yeh": 255, "yehuda": 255, "yellow": [76, 229, 231, 233, 234, 353, 355, 357, 358], "yerm": 255, "yeshurun": 255, "yet": [4, 32, 42, 66, 76, 92, 99, 103, 107, 124, 127, 142, 161, 220, 242, 246, 271, 290, 344, 377, 378, 382, 388], "yexpr": [128, 173, 256], "yfit": [133, 261], "yg0": [229, 353], "yg1": [229, 353], "ygather": [220, 344], "yger": 255, "yhi": [292, 373], "yi": 255, "yichun": [237, 361], "yichunw": [237, 361], "yield": [53, 63, 81, 134, 136, 160, 201, 255, 262, 264, 289, 328, 369], "yildirim": 255, "yim": 255, "yimag": 136, "yin": 255, "yitzchaik": 255, "ylabel": [100, 365, 366, 370, 375, 376, 385, 388], "yline": [229, 353], "yline0": [196, 323], "yline1": [196, 323], "ylo": [292, 373], "ymax": [229, 353], "ymin": [229, 353], "yml": [0, 248], "yo": 28, "yokota": 255, "yoo": 255, "yorg": [233, 235, 237, 357, 359, 361], "yorgan": 255, "york": [126, 254, 255], "yoshida": 255, "yoshimoto": 255, "yoshinaga": 255, "you": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 54, 56, 64, 66, 67, 70, 73, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 123, 124, 125, 127, 133, 134, 144, 149, 151, 153, 154, 155, 158, 159, 160, 161, 163, 165, 166, 169, 173, 174, 175, 179, 182, 185, 186, 188, 197, 198, 201, 204, 206, 210, 214, 220, 222, 223, 225, 227, 229, 230, 231, 234, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 253, 255, 261, 262, 269, 273, 278, 280, 282, 283, 284, 287, 288, 289, 290, 292, 295, 296, 299, 302, 303, 304, 305, 309, 312, 314, 315, 316, 324, 325, 328, 332, 335, 338, 344, 346, 347, 349, 351, 353, 354, 355, 358, 359, 360, 361, 362, 366, 367, 369, 370, 371, 373, 377, 381, 382, 383, 385, 387, 388], "young": 255, "your": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 27, 29, 30, 31, 35, 36, 38, 39, 42, 45, 47, 51, 53, 54, 64, 65, 70, 76, 83, 90, 92, 96, 98, 99, 100, 103, 122, 123, 124, 125, 127, 155, 158, 160, 161, 163, 166, 173, 179, 185, 204, 220, 225, 231, 240, 241, 242, 246, 247, 248, 249, 255, 284, 287, 289, 290, 292, 296, 303, 309, 316, 344, 349, 355, 366, 367, 370, 373, 381, 382, 385, 387, 388, 393], "your_machin": [158, 287], "your_script": 8, "your_sim": 242, "your_starting_fil": 122, "yourself": [25, 35, 39, 44, 66, 96, 158, 197, 210, 287, 324, 335, 385, 387, 388], "yousif": 255, "youssef": 255, "youtub": [390, 391, 392, 393], "yplacement": [144, 147, 273, 276], "ypo": [229, 353], "ypoint": [196, 323], "ypp": 52, "yprime": [383, 384], "ypvec": [220, 344], "yrad": [235, 237, 359, 361], "yreal": 136, "yscatter": [220, 344], "ysize": [233, 235, 357, 359], "ysrc": [201, 328], "ysrcdest": [201, 328], "ystart": [229, 233, 353, 357], "ystop": [229, 233, 353, 357], "ytick": 100, "yu": 255, "yuan": 255, "yue": 255, "yust": 255, "yuv420p": 63, "yvec": [19, 220, 229, 236, 296, 344, 353, 360], "yvert": 255, "yxxkjhszrppy": 377, "yy": 366, "yylex": 52, "yylval": 52, "yypars": 52, "yystyp": 52, "z": [0, 3, 21, 22, 32, 40, 50, 53, 81, 86, 127, 137, 165, 166, 195, 204, 231, 234, 237, 248, 255, 265, 292, 295, 296, 322, 355, 358, 361, 373, 377, 382, 383, 384], "z3d": [22, 81, 146, 165, 166, 275, 292, 295, 296, 368, 373, 383, 384, 388], "zach": [188, 201, 316, 328], "zachari": 255, "zacksenhous": 255, "zadina": 255, "zador": 255, "zagha": 255, "zahid": 255, "zaika": 255, "zak": 255, "zalanyi": 255, "zamith": 255, "zander": 255, "zandt": 255, "zang": 255, "zaninetta": 255, "zara": 255, "zbili": 255, "zc": 25, "zebrafish": 255, "zecev": 255, "zeeuw": 255, "zeitler": 255, "zeitschrift": 255, "zeki": 255, "zeldenrust": 255, "zelechowski": 255, "zellmer": 255, "zemelman": 255, "zemmar": 255, "zeng": 255, "zenk": 255, "zerlaut": 255, "zero": [3, 28, 29, 35, 47, 53, 81, 98, 133, 139, 151, 153, 154, 159, 160, 161, 171, 188, 190, 197, 201, 202, 204, 261, 267, 280, 282, 283, 288, 289, 290, 292, 301, 316, 317, 324, 328, 329, 337, 373, 377, 387], "zf": 46, "zhan": 255, "zhang": 255, "zhao": 255, "zhen": 255, "zheng": 255, "zhi": [292, 373], "zhong": 255, "zhou": 255, "zhu": 255, "zhuang": 255, "zhuchkova": 255, "zhukov": 255, "zia": 255, "ziegler": 255, "ziemann": 255, "zigzag": 53, "zilbert": 255, "zimmer": 255, "zimmerman": 255, "zin": 25, "zinc": 255, "zinyuk": 255, "ziouziou": 255, "zip": [3, 46, 49, 76, 96, 100, 121, 140, 248, 282, 290, 328, 382, 383, 384, 387, 388], "zippo": 255, "zirp": 255, "zitella": 255, "zitzewitz": 255, "zlateski": 255, "zlo": [292, 373], "zn": [25, 255], "zn2": 255, "zobeiri": 255, "zochowski": 255, "zollo": 255, "zolnik": 255, "zomorrodi": 255, "zona": 255, "zone": 255, "zoom": [25, 44, 50, 67, 70, 96, 201, 229, 231, 328, 353, 355, 382, 388], "zorg": [235, 237, 359, 361], "zorio": 255, "zornetz": 255, "zorumski": 255, "zou": 255, "zprofil": [246, 247], "zrad": [235, 237, 359, 361], "zrenner": 255, "zside": 50, "zsiro": 255, "ztransfer": 25, "zuehl": 255, "zulaica": 255, "zuloaga": 255, "zung": 255, "zuo": 255, "zupanc": 255, "zurada": 255, "zurek": 255, "zvec": 296, "zybura": 255, "zylberberg": 255, "zylbermann": 255, "zylbert": 255, "zytnicki": 255, "zz": [96, 366], "zzz": 314, "z\u00f6llner": 255, "\u00b5f": [24, 45, 66, 67, 108, 110], "\u00b5m": [24, 27, 38, 40, 41, 45, 48, 64, 66, 110, 119, 127, 292, 359, 367, 368, 371, 375, 382], "\u00e0": 255, "\u00e1": 255, "\u00e1lvarez": 255, "\u00e5": 255, "\u00e5gren": 255, "\u00e8": 255, "\u00ed\u00f1igo": 255, "\u00f3": 255, "\u00f6": 255, "\u00f6ktem": 255, "\u0142\u0119ski": 255, "\u0161i\u0161kov\u00e1": 255, "\u03b1": [255, 365], "\u03b15": 255, "\u03b1_init": 365, "\u03b2": 255, "\u03b4": 255, "\u03b5": 255, "\u03b8": 255, "\u03bc": 255, "\u03bcdb": 255, "\u03bcf": [10, 388], "\u03bcm": [10, 41, 47, 255, 366, 388], "\u03bcm2": [366, 369, 382], "\u03bdmodl": [154, 283], "\u03c0": 293, "\u0430": 255, "\u043c": 255}, "titles": ["NEURON Documentation", "NEURON 8.2", "CMake Build Options", "Introduction", "CoreNEURON Compatibility", "Examples", "CoreNEURON", "Getting CoreNEURON", "Running a simulation", "Artificial Cells in NEURON", "Batch runs with bulletin board parallelization", "Batch runs with bulletin board parallelization", "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder", "Bulletin board code walkthroughs", "CellBuilder Overview and Hints", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Custom Initialization", "Electrotonic Analysis with NEURON", "NEURON Course Exercises", "Overview of the Tasks", "HOC Exercises", "Hopfield Brody synchronization (sync) model", "Interactive Modeling", "Introduction to the GUI", "Introduction to the Network Builder", "Introduction to the Linear Circuit Builder", "Managing Models on the Fly", "Parallel Computing with MPI", "Multithreaded parallelization", "Network ready cells from the CellBuilder", "NEURON scripting exercises", "Numerical Methods Exercises", "Quality Issues with Morphometric Data", "Reaction-Diffusion Exercises", "Saving Windows", "Inhomogeneous Channel Distribution", "State and parameter discontinuities", "Using the CellBuilder", "Using ModelDB with NEURON", "Working with Morphometric Data", "Using NMODL files", "Using the Neuroscience Gateway (NSG) portal", "Working with Shape Plots", "Dealing with Simulations that Generate a lot of Data", "HOC Interpreter", "Data structures", "Testing GPU functionality", "HOC Sphinx Domain", "How-Do-I Guide", "NEURON Development topics", "Morphology loading in NEURON", "setuptools", "Workflow Code Paths", "do not check import of next line", "C/C++ API", "Example of Generating a Movie", "Biology Modeling FAQ", "Using the Cell Builder GUI", "Creating a stylized (\u201cstick-figure\u201d) model cell", "Managing a model cell with complex anatomy", "Specifying parameterized variation of biophysical properties", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Differences between idraw and CorelDraw", "Example of a Hybrid Network", "Example of a Simple Network", "Frequently asked questions (FAQ)", "FIinitializeHandler", "Fixing funny axes", "How to delete v(.5) from the graph", "How to plot variables that belong to biophysical cell models in a network", "Hoc", "How to get started with NEURON", "How to get started with NEURON", "How to move the labels", "How to translate the view", "Using the Import3D GUI", "Guides", "Introduction to Network Construction", "ModelView: Compact display of parameters for NEURON models", "Network Builder tutorials", "NMODL\u2019s built-in functions", "How to change the background color used in shape plots and other graphs", "Using NEURON\u2019s Optimization Tools", "Tutorial 1 : Fitting a function to data", "Implementational Details of the Synaptic Mechanism", "Tutorial 2 : Fitting a model to data", "&lt;no title&gt;", "Adapting MOD files for C++ with NEURON 9.0[.dev]", "The Print &amp; File Manager", "Randomness in NEURON models", "Run a simulation and plot the input and output spike trains", "Run a simulation and plot the input and output spike trains", "Using Session Files for Saving and Retrieving Windows", "Step 1. Set up a SubsetDomainIterator", "Step 3. Specify and verify the functions that govern the parameters", "Step 2. Specify the model parameter(s) to be varied", "Step 1. Define the types of cells", "Step 1. Define the types of cells", "2. Specifying what kinds of synapses can be attached to an M cell", "3. Placing synapses on the M cell", "Step 2. Create each cell in the network", "Step 2. Create each cell in the network", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Tutorial 2 : Making Hybrid Nets", "Tutorial 1: Making Networks of Artificial Neurons", "Units used in NEURON", "UNITS Tutorial", "Step 4. Use the model specification", "Using NEURON on the Mac", "Using \u201cPlot what?\u201d to Specify a Variable to be plotted", "Using Session Files for Saving and Retrieving Windows", "Using the d_lambda Rule", "What is NEURON", "Working with PostScript and idraw figures", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "NEURON HOC documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "ValueFieldEditor", "Widgets", "GUI Design", "HOC Language", "HOC Syntax", "Debugging and Internals Access", "Input and Output", "File Access (Recommended Way)", "Plotter Control (obsolete)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "HOC Keywords", "Object Oriented Programming", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Predeclared Variables", "Project Management", "HOC accessing Python", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "How to develop and debug your own code", "The NEURON Simulator", "Code Coverage", "Diagnosis and Debugging", "Developer Builds", "Code Formatting", "Installation", "Installing Binary Distribution", "Mac Binary Package (Apple M1 and Mac x86_64)", "Building Python Wheels", "Windows build", "Neuron MODelling Language", "NMODLanguage", "VERBATIM", "Other scripting languages", "Publications about NEURON", "Publications using NEURON", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "Environment Variables", "NEURON Python documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "Mathematical functions for rate expressions", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "ValueFieldEditor", "GUI Widgets", "GUI Design", "Accessing HOC from Python", "Debugging and Internals Access", "File Access (objected-oriented via NEURON)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "NEURON Python Classes and Objects", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Project Management", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "Removed Features", "&lt;no title&gt;", "Varying initial concentrations and parameters", "Reaction-diffusion introduction", "Restricting reactions to a part of a region", "Initialization Strategies", "Example: Calcium waves", "Example: Circadian rhythm", "Example: combining MOD file ion channels with rxd", "Example: Degradable buffer", "Extracellular reaction-diffusion tutorial", "Python RXD tutorials", "IP3 demo", "Reaction-diffusion thresholds", "NEURON Source and Release Management Guide", "NEURON Versioning and Release Guidelines", "NEURON SCM and Release", "NEURON Software Policies", "Running Python and HOC scripts", "Ball and stick 1: Basic cell", "Ball and stick 2: Build a ring network of ball-and-stick cells", "Ball and stick 3: Extensible network of cells", "Ball and stick 4: Parallel vs serial mode", "Python tutorials", "Introduction to Python", "Scripting NEURON basics", "CNS 2021 Online Tutorial", "INCF/CNS 2022 Online Tutorial", "Training videos", "NetPyNE 2021 Online Course", "NEURON 2021 Online Course"], "titleterms": {"": [1, 25, 42, 46, 47, 63, 67, 76, 80, 86, 91, 93, 103, 106, 124, 127, 377, 388, 390], "0": [1, 3, 48, 94, 98], "01": 393, "03": 393, "06": 393, "07": 393, "08": 393, "1": [1, 38, 39, 41, 46, 48, 66, 67, 80, 94, 96, 104, 107, 108, 118, 368, 382, 388, 392, 393], "10": 393, "100": 29, "13": 393, "15": 393, "17": 393, "1983": 46, "1996": 46, "2": [1, 38, 39, 41, 46, 48, 66, 67, 76, 80, 89, 94, 96, 106, 109, 111, 112, 117, 368, 383, 388, 392, 393], "20": 393, "2003": 89, "2021": [389, 392, 393], "2022": 390, "22": 393, "24": 393, "2488": 46, "27": 393, "29": 393, "3": [1, 38, 39, 41, 46, 48, 61, 66, 67, 80, 94, 96, 105, 110, 113, 114, 115, 116, 166, 296, 368, 384, 388, 392], "3d": [166, 296], "4": [1, 38, 39, 41, 46, 66, 67, 80, 94, 96, 121, 368, 385, 388], "440": 377, "5": [38, 39, 66, 67, 76, 79, 94, 96, 388, 392], "6": [38, 39, 66, 94, 96, 388, 392], "7": 388, "8": [1, 388], "9": [98, 388, 392], "9852": 46, "A": [25, 47, 67, 95, 96, 104, 105, 107, 108, 111, 112, 113, 115, 126, 253, 372, 377, 383, 393], "And": [227, 231, 351, 355], "For": [163, 292, 387], "IF": [154, 283], "ON": 3, "On": [49, 371], "TO": 250, "The": [10, 11, 25, 32, 37, 42, 43, 65, 81, 93, 95, 96, 99, 100, 103, 124, 126, 127, 239, 240, 249, 367, 371, 382, 388], "To": [56, 83], "WITH": [250, 377], "With": 4, "about": [14, 83, 96, 254], "abrupt": 366, "absolutetoler": [227, 351], "access": [53, 54, 186, 188, 211, 314, 315, 316, 388], "accuraci": 390, "acknowledg": 89, "action": 89, "activ": [59, 64], "ad": 393, "adapt": [98, 390], "add": [82, 83, 371, 390], "address": 53, "adjust": [94, 96, 383], "advanc": [3, 53, 381, 382], "advantag": 126, "affer": [108, 112], "after": [28, 155, 250, 284], "again": 96, "al": [46, 89], "algorithm": [53, 94, 96], "all": [25, 42, 63, 103, 124, 239], "alloc": 60, "alon": 81, "alpha": [377, 378], "also": 81, "altern": 377, "alwai": 66, "amplitud": 382, "an": [28, 47, 56, 63, 76, 86, 94, 96, 99, 109, 111, 112], "anaconda": 0, "analysi": [25, 76, 128, 135, 140, 201, 256, 263, 269, 328, 392], "analyz": [28, 46, 53], "anatom": 108, "anatomi": [47, 67], "ani": [76, 249], "anim": 29, "anisotropi": 373, "anoth": 46, "anothervariabletofit": [134, 262], "answer": 14, "anyth": [28, 76], "api": [62, 98], "appl": [246, 247], "approxim": 45, "ar": [76, 98], "arbitrari": 76, "arc": 95, "architectur": [47, 113, 115], "archiv": [227, 351], "area": 99, "arg": [129, 257], "argument": [4, 56, 119, 120, 185], "argvalu": [129, 257], "arithmet": 387, "arrai": [28, 53], "artifici": [9, 32, 107, 118, 153, 282, 390], "artificialcel": [227, 351], "ascii": [99, 231, 355], "asid": [45, 388], "ask": 76, "assess": 29, "assign": [154, 250, 283], "associ": 249, "assum": [28, 53], "attach": 109, "automat": [32, 37, 248], "avail": 126, "ax": 78, "axistyp": [231, 355], "azur": 248, "b": [47, 67, 104, 105, 107, 108, 111, 112, 114, 116], "back": 385, "background": [52, 76, 92], "ball": [37, 45, 382, 383, 384, 385, 386], "base": [126, 148, 277], "basic": [82, 83, 140, 154, 163, 251, 269, 283, 292, 369, 382, 386, 388, 392, 393], "batch": [10, 11, 218, 342, 392], "bb5": 248, "bbcore_read": 4, "bbcore_writ": 4, "bbcorepoint": [155, 284], "bbsavest": [219, 343], "befor": [155, 250, 284], "begintempl": 205, "behavior": 64, "behind": 244, "being": 46, "belong": 80, "benchmark": 242, "bequiet": [134, 262], "best": [76, 377], "beta": 377, "between": [29, 73, 76], "beyond": 29, "big": 76, "bin": [3, 81], "binari": [76, 246, 247], "bind": 95, "biolog": 45, "biologi": [64, 126], "biophys": [66, 67, 68, 80, 108, 126, 382, 388, 390], "bistabl": 366, "block": [28, 119, 120, 250], "board": [10, 11, 13], "bokeh": [61, 388], "bookkeep": 53, "bool": 3, "both": 382, "bound": 53, "boundari": 373, "box": [172, 302], "branch": [377, 393], "break": [1, 61, 249], "breakpoint": [154, 250, 283], "bring": [66, 94, 377], "brodi": 29, "browser": [231, 355], "brush": [231, 355], "buffer": 372, "bug": 1, "build": [0, 2, 8, 12, 227, 243, 246, 248, 249, 351, 383, 390, 392, 393], "builder": [12, 32, 33, 65, 90, 111, 112, 227, 351], "built": [28, 76, 91], "bulletin": [10, 11, 13], "bunch": 239, "button": [231, 355], "c": [3, 47, 62, 76, 98, 107, 110, 112], "ca1": 89, "cabl": 30, "cach": 53, "calbindin": 372, "calcium": 369, "calcul": 76, "call": [93, 216, 340], "can": [28, 42, 76, 103, 107, 108, 109, 124], "candid": 377, "cast": 387, "caveat": 47, "cc": 3, "cell": [9, 10, 11, 29, 32, 37, 45, 46, 65, 66, 67, 76, 80, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 153, 282, 382, 383, 384, 388, 390, 392, 393], "cellbuild": [14, 37, 45, 66, 67, 142, 227, 271, 351], "celsiu": [227, 351], "chang": [1, 64, 76, 84, 92, 94, 96, 249, 366, 377], "changecolor": [231, 355], "changeparmfromlist": [134, 262], "changetext": [231, 355], "channel": [43, 64, 95, 152, 220, 281, 344, 371, 388, 393], "characterist": 373, "check": [14, 56, 61], "checkout": 377, "choic": 387, "choos": [47, 86, 94, 96, 99], "ci": 249, "circadian": 370, "circleci": 248, "circuit": [12, 33, 60, 393], "clamp": [12, 64, 76, 96], "clariti": 370, "class": [56, 80, 107, 108, 110, 200, 207, 214, 327, 331, 333, 338, 383, 384, 387], "cmake": [2, 246], "cmake_build_typ": 3, "cmake_c_compil": 3, "cmake_cxx_compil": 3, "cmake_install_prefix": 3, "cn": [389, 390], "code": [10, 11, 13, 28, 32, 37, 46, 52, 53, 60, 66, 76, 100, 170, 239, 241, 244, 249, 250, 300], "color": [76, 84, 92], "colormap": 92, "combin": 371, "command": [216, 227, 340, 351], "comment": [51, 127, 154, 185, 283], "commit": 377, "common": [195, 322], "commonfunctionalform": [129, 257], "commun": [155, 385], "compact": 89, "comparison": 387, "compart": [154, 283], "compat": [4, 53], "compil": [7, 76, 122, 139, 250, 267], "complet": 53, "complex": [47, 67], "comprehens": 387, "comput": [10, 11, 24, 30, 31, 35, 43, 45, 49, 74, 75, 126], "concentr": [64, 76, 220, 344, 365, 368], "concept": [369, 390, 393], "conceptu": [24, 30, 31, 43, 45, 74, 75, 95, 166, 296], "concern": 126, "conclus": 393, "condit": [28, 373], "conduct": [154, 283, 383], "conf": 0, "confgur": 0, "config": 0, "configur": [66, 96], "connect": [29, 32, 37, 113, 114, 115, 116, 155, 284, 382, 383], "conserv": [95, 154, 250, 283], "consid": 98, "consider": 248, "constant": [29, 154, 193, 250, 283, 320], "constrain": [94, 96], "construct": [76, 81, 88, 250, 383], "constructor": [154, 250, 283], "contain": [53, 81], "contamin": 96, "content": 99, "continu": [66, 114, 116], "continuefor": [224, 348], "continuetil": [224, 348], "contribut": [377, 378], "contributor": 1, "control": [13, 63, 81, 126, 140, 189, 203, 223, 227, 269, 330, 347, 351], "conveni": 126, "convent": 377, "convers": 98, "convert": 86, "copi": 76, "cord": 392, "coreldraw": 73, "coreneuron": [3, 4, 6, 7, 8, 246], "count": 53, "cours": [26, 390, 392, 393], "coverag": 241, "cpu": [81, 246], "crash": 242, "creat": [28, 66, 67, 76, 92, 96, 99, 111, 112, 239, 377, 382, 388], "creation": [32, 37, 60], "credit": [24, 94], "criteria": 94, "crosshair": [231, 355], "csv": 388, "current": [64, 76, 96, 382], "currentaxi": [227, 351], "currentvaluesasdefault": [129, 134, 257, 262], "custom": [24, 92], "customiz": 126, "cvmemblist": 53, "cvode": [220, 344], "cycl": 377, "cytosol": 64, "d": [47, 76, 107, 166, 296], "d28k": 372, "d_lambda": 125, "data": [28, 40, 47, 51, 53, 60, 76, 86, 94, 96, 166, 296, 366, 392], "dataweight": [129, 134, 257, 262], "date": 377, "deal": 51, "debug": [186, 239, 242, 315], "debugg": 239, "declar": [28, 56, 98, 370], "default": [53, 169, 231, 299, 355, 368], "defin": [32, 107, 108, 154, 163, 166, 250, 283, 292, 296, 370, 382], "definit": [53, 63, 98, 119, 120, 377], "degrad": 372, "delet": [79, 99, 231, 355], "deliv": 76, "demo": 375, "demonstr": [29, 100], "dendrit": 382, "depend": [241, 244, 246, 247, 250], "deprec": [1, 98, 377, 378, 380], "derefer": 56, "deriv": [154, 250, 283], "descript": [10, 13, 77, 94, 96, 154, 283], "design": [46, 183, 313], "destructor": [154, 250, 283], "detail": [27, 47, 95], "dev": 98, "develop": [10, 11, 57, 126, 239, 243], "diagnosi": 242, "diagram": 59, "dialog": [172, 302], "diam": 53, "dictionari": 387, "differ": [29, 73, 76, 242], "diffus": [41, 64, 163, 292, 366, 373, 374, 376, 390], "dir": 388, "dirti": 96, "discontinu": 44, "discourag": 314, "discov": 46, "discret": [126, 154, 250, 283, 367], "discuss": 393, "displai": [29, 89, 227, 351, 387], "dissoci": 95, "distanc": [104, 368], "distribut": [43, 227, 246, 351], "do": [10, 11, 28, 46, 56, 61, 64, 76, 93, 96, 122], "doc": 61, "docker": 248, "dockerhub": 248, "document": [0, 126, 140, 269, 314, 377], "doe": [76, 93], "doesn": 76, "dofit": [134, 262], "domain": [55, 163, 175, 292, 305], "don": 239, "done": [50, 76, 105], "dot": [169, 299], "download": [94, 373], "draw": [227, 351], "dress": 127, "drive": [76, 248], "driven": 392, "dt": [224, 348], "dynam": [152, 170, 281, 300, 372, 387], "e": [47, 76], "each": [111, 112], "earli": 96, "edit": [76, 81, 94, 127, 227, 351], "editor": [231, 355], "edu": 46, "effect": [76, 384], "effici": 126, "eg": 29, "electr": 96, "electrod": [12, 144, 147, 273, 276], "electrode_curr": [155, 250, 284], "electroton": [25, 76], "elimin": 53, "els": [154, 283, 387], "enabl": [8, 369], "encapsul": 56, "end": 380, "endtempl": 205, "enhanc": 126, "enter": 76, "environ": [0, 249, 268, 392], "eol": 380, "equat": 30, "eras": [231, 355], "eraseal": [230, 354], "error": [56, 76, 81, 163, 171, 292, 301], "et": [46, 89], "etc": [76, 152, 163, 249, 281, 292], "event": [76, 220, 344, 390], "everyth": 239, "examin": 46, "exampl": [5, 46, 52, 63, 74, 75, 76, 77, 89, 210, 250, 253, 335, 366, 369, 370, 371, 372, 374, 385], "execcommand": [221, 345], "execut": [0, 4, 52, 66, 67, 170, 216, 300, 340], "exercis": [24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 41, 43, 45, 47, 127, 382, 392, 393], "exist": [56, 377, 380], "exit": 76, "expect": 239, "experi": [64, 96, 127], "experiment": [45, 94, 96], "explicit": [4, 53], "explicitli": 28, "explor": [86, 384, 392], "export": [47, 66, 86, 292], "express": [81, 163, 185, 292, 293], "extend": 126, "extens": [155, 284, 384], "extern": [3, 155, 205, 284], "extra": [94, 134, 262], "extracellular": [163, 292, 373], "f": 47, "fail": 249, "failur": 249, "famili": [221, 227, 345, 351], "familiar": [29, 126], "family1": [227, 351], "familylabel": [231, 355], "faq": [64, 76, 246], "fast": [29, 377], "faster": 0, "featur": [4, 53, 127, 314, 363], "feedback": 1, "feel": [231, 355], "field": [53, 60, 76, 175, 305], "fieldeditor": [231, 355], "figur": [66, 76, 127], "fiinitializehandl": 77, "file": [0, 4, 8, 14, 28, 42, 47, 48, 53, 66, 76, 86, 98, 99, 103, 119, 122, 124, 127, 188, 191, 192, 227, 231, 249, 250, 316, 318, 319, 351, 355, 371, 373], "filepath": 3, "final": [371, 377, 378], "find": [76, 80], "finitializehandl": [223, 347], "fire": [29, 112], "first": [239, 383], "fit": [94, 96, 133, 227, 261, 351], "fitcriterion": [129, 257], "fitter": [93, 94, 96, 227, 351], "fittodata": [129, 257], "fix": [1, 42, 78, 86, 103, 124], "flexibl": 126, "flow": [81, 126, 377], "fly": 34, "foo": 76, "fooba": 76, "footnot": [45, 377], "for_netcon": [155, 250, 284], "form": 94, "format": [190, 244, 317], "forum": 82, "forward": 377, "fourier": [201, 328], "frankenhaus": [163, 292], "frequenc": [25, 227, 351], "frequent": 76, "from": [7, 29, 37, 76, 79, 99, 126, 166, 191, 250, 296, 314, 318, 373, 377, 378, 390], "fromcellbuild": [227, 351], "func": 185, "function": [28, 54, 76, 81, 91, 94, 98, 105, 119, 120, 154, 163, 195, 206, 223, 227, 250, 283, 292, 293, 299, 322, 332, 347, 351, 368, 370, 387, 388], "function_t": [154, 250, 283], "functionfitt": [129, 257], "funni": 78, "further": [35, 127], "futur": [1, 53, 89], "g": 76, "gain": 29, "gate": 95, "gatewai": 49, "gather": 385, "gathervalu": [227, 351], "gathervec": [221, 345], "gdb": 242, "gener": [3, 4, 32, 37, 51, 53, 63, 76, 94, 96, 98, 100, 112, 126, 133, 153, 154, 200, 230, 261, 282, 283, 327, 354, 383, 384, 392], "geometri": [66, 163, 166, 292, 296, 382], "get": [7, 24, 35, 45, 47, 56, 67, 76, 82, 83, 373, 388], "git": 377, "github": [249, 377], "gitlab": 377, "give": [94, 96, 107], "global": [155, 227, 284, 351], "globalra": [227, 351], "glyph": [228, 352], "go": [35, 42, 80, 103, 124], "goal": 89, "good": 76, "govern": 105, "gpu": [4, 54, 242, 246], "grammar": 52, "graph": [28, 29, 76, 79, 92, 127, 227, 229, 231, 351, 353, 355], "grapher": [227, 230, 351, 354], "graphic": 126, "grid": 67, "group": [103, 124, 392], "groupmanag": [227, 351], "gui": [28, 29, 31, 65, 76, 86, 94, 107, 119, 128, 141, 183, 231, 239, 256, 270, 312, 313, 355, 390, 392, 393], "guid": [56, 87, 377], "guidelin": [377, 378], "guimath": [196, 323], "h": [368, 388], "ha": 249, "hack": 55, "halfgap": 38, "hand": 392, "handl": [0, 53, 81, 163, 171, 292, 301], "hard": 76, "hardcopi": [227, 351], "have": [4, 28, 53, 76], "help": [1, 76, 231, 355, 388], "helper": 370, "hierarchi": 331, "hint": [14, 94, 96], "histori": [154, 283, 377], "hoc": [11, 28, 29, 32, 37, 52, 55, 58, 66, 76, 81, 140, 148, 184, 185, 195, 204, 211, 249, 277, 314, 322, 381, 393], "hoccommand": 56, "hodgkin": [30, 163, 292], "homeostat": 371, "homogen": [227, 351], "hopfield": 29, "how": [29, 42, 46, 53, 56, 64, 76, 79, 80, 82, 83, 84, 85, 92, 99, 100, 103, 122, 124, 239, 248, 249, 366], "huxlei": 30, "hybrid": [74, 117], "i": [28, 42, 46, 56, 64, 76, 93, 103, 122, 124, 126, 239, 249, 388, 392], "iclamp": [76, 96], "identif": [216, 340], "idiom": 126, "idraw": [73, 127, 231, 355], "ii": [239, 392], "imag": [63, 127, 248], "imped": [130, 136, 227, 258, 264, 351], "impedanceratio": [132, 260], "implement": [10, 11, 24, 29, 30, 31, 45, 46, 76, 95, 160, 289], "implicit": 98, "import": [40, 47, 61, 367, 371, 387, 388, 392], "import3d": [47, 86], "import3d_gui": 58, "improv": 1, "impshap": [130, 258], "impx": [131, 259], "incf": 390, "includ": [28, 154, 249, 250, 283], "incompat": 76, "incorrect": 98, "increas": 29, "indepbegin": [230, 354], "independ": [100, 126, 154, 230, 283, 354], "independentvar": [129, 230, 257, 354], "indic": 53, "indirect": 53, "inf": 242, "inhibit": 29, "inhomogen": [43, 373], "init": [224, 348], "initbatpar": [10, 11, 13], "initbats": [10, 11, 13], "initi": [24, 52, 60, 126, 154, 250, 283, 365, 368, 371, 373, 393], "initonerun": [10, 11, 13], "initrun": [224, 348], "input": [81, 96, 101, 102, 107, 187, 383], "insert": [60, 143, 227, 272, 351, 388], "instal": [3, 7, 63, 76, 82, 240, 245, 246, 248, 249], "instanc": [80, 111, 133, 261], "instruct": [7, 241, 244], "instrument": [13, 242, 382], "integr": [53, 107, 112, 126, 246, 390], "interact": 30, "interepret": 81, "interfac": [46, 126, 393], "intern": [56, 186, 315], "interoper": 89, "interpret": [52, 81, 119, 126, 222, 346], "interv": 76, "interval2": 29, "interview": 3, "intfir": 29, "intfire1": 29, "intibfir": 29, "intracellular": [163, 292], "introduc": 81, "introduct": [3, 31, 32, 33, 81, 88, 89, 154, 283, 366, 377, 387, 392], "invalid": 98, "invas": 53, "ion": [4, 64, 149, 163, 278, 292, 371, 388, 393], "ip3": 375, "issu": 40, "iter": [0, 185, 387], "its": [76, 367], "iv_dir": 3, "iv_enable_shar": 3, "iv_enable_x11_dynam": 3, "iv_enable_x11_dynamic_make_head": 3, "ivdialog": [210, 335], "job": [218, 342], "json": 388, "julia": 253, "just": 76, "k": 98, "keep": 40, "keeplin": [231, 355], "keyword": [81, 204], "kind": 109, "kinet": [119, 120, 154, 227, 250, 283, 351], "kineticbuild": [142, 271], "know": 53, "kschan": [150, 279], "label": [12, 84], "lack": 371, "lag": [154, 283], "landport": [231, 355], "languag": [154, 184, 250, 253, 283], "larg": 126, "late": 96, "latex": 127, "launch": 248, "layer": 89, "layout": [53, 99, 173, 303], "learn": [76, 83, 239], "lectur": [392, 393], "legaci": [53, 58, 98], "less": 53, "let": [47, 63, 86], "leverag": 0, "librari": [126, 249, 367, 370, 371, 384], "life": [377, 380], "like": [29, 47, 76, 86], "line": 61, "linear": [12, 33, 154, 250, 283], "linearmechan": [151, 280], "link": [140, 269], "linux": [35, 241, 244, 246, 248, 392], "list": [28, 76, 174, 304, 387], "literal_valu": 53, "litmu": 47, "load": [58, 63, 94, 96, 170, 300, 370, 382, 384, 388], "loaddll": [227, 351], "loadhoc": [227, 351], "loadsess": [227, 351], "local": [0, 98, 154, 248, 250, 283, 367], "localvariabledt": [227, 351], "log": [25, 94], "logavsx": [131, 227, 259, 351], "longitudinal_diffus": [154, 283], "look": [29, 47, 63, 86, 231, 355], "loop": 387, "lot": 51, "m": [76, 108, 109, 110], "m1": [246, 247], "mac": [35, 122, 244, 246, 247, 392], "machin": [52, 216, 340], "maco": [122, 248], "main": [76, 227, 351], "mainen": 46, "make": [29, 45, 64, 76, 117, 118, 384, 387], "manag": [4, 34, 42, 67, 76, 96, 99, 103, 124, 144, 210, 222, 227, 231, 273, 335, 346, 351, 355, 377, 378], "manipul": [163, 214, 216, 292, 338, 340], "manual": [54, 248], "math": [195, 322, 366], "mathemat": [163, 202, 292, 293, 329], "matplotlib": [63, 388], "matrix": [197, 324], "mcell_ran4": [198, 325], "mcellran4": 4, "measur": [29, 96], "mecan": 76, "mechan": [60, 76, 82, 83, 95, 126, 148, 153, 155, 227, 277, 282, 284, 314, 351, 371, 388, 390], "mechanismstandard": [203, 330], "mechanismtyp": [156, 285], "mechtyp": [145, 274], "membran": [76, 163, 292], "memori": [4, 60], "menu": [76, 133, 176, 227, 231, 261, 306, 351, 355], "menuexplor": [238, 362], "merg": 377, "messag": 76, "method": [39, 250, 388, 390, 393], "metric": 104, "migrat": 53, "mind": 40, "minim": 96, "miscellan": [3, 56, 137, 176, 186, 199, 216, 227, 265, 306, 315, 326, 340, 351], "miss": 249, "ml": 53, "mod": [4, 8, 29, 38, 53, 76, 98, 122, 250, 371], "mode": [59, 385], "model": [10, 11, 13, 24, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 63, 64, 66, 67, 74, 75, 76, 80, 86, 89, 95, 96, 100, 106, 119, 120, 121, 126, 127, 140, 141, 146, 154, 250, 269, 270, 275, 283, 367, 371, 372, 377, 385, 392], "modeldb": [46, 89, 390, 393], "modeldescriptionissu": [220, 344], "modelview": 89, "modul": [387, 388], "modular": 66, "moor": 46, "more": [29, 45, 388, 393], "morphio": 58, "morpholog": 388, "morphologi": [58, 63, 64, 367, 370, 382, 393], "morphometr": [40, 47, 86], "motoneuron": 108, "move": 84, "movetext": [231, 234, 355, 358], "movi": 63, "mp4": 63, "mpi": [3, 35, 160, 242, 248, 289, 385], "mrf": [94, 96], "mswin": 35, "mswindow": 127, "mulrunfitt": [133, 261], "multipl": [93, 94, 96, 227, 351], "multiplerunfitt": 96, "multiscal": 392, "multithread": 36, "mutexlock": [155, 250, 284], "mutexunlock": [155, 250, 284], "my": 249, "name": [56, 80, 81, 94, 96, 107], "namespac": [186, 315], "namevalu": [227, 351], "nan": 242, "narrow": 29, "need": [53, 76, 86, 94, 96, 107, 108, 110, 111, 112, 113, 114, 115, 116], "net": 117, "net_rec": [154, 250, 283], "netcon": [159, 288], "netpyn": 392, "netstim": 383, "network": [29, 32, 37, 74, 75, 80, 88, 90, 111, 112, 113, 115, 118, 126, 157, 160, 286, 289, 383, 384, 390, 392, 393], "networkbuild": [227, 351], "networkcel": [227, 351], "neuromorpho": 390, "neuron": [0, 1, 3, 4, 9, 25, 26, 29, 38, 46, 47, 53, 54, 56, 57, 58, 60, 63, 64, 76, 82, 83, 86, 89, 93, 98, 100, 118, 119, 120, 122, 126, 127, 140, 155, 166, 227, 240, 246, 248, 249, 250, 253, 254, 255, 269, 284, 296, 316, 331, 351, 367, 368, 371, 377, 378, 379, 380, 382, 385, 388, 390, 392, 393], "neuron_module_opt": 268, "neuronhom": 81, "neurosci": 49, "new": [0, 1, 28, 47, 76, 82, 83, 107, 119, 120, 205, 249, 380, 390], "newaxi": [231, 355], "newview": [231, 355], "next": 61, "nhost": 242, "nightli": 248, "ninja": 3, "nmodl": [3, 48, 76, 82, 83, 91, 119, 154, 155, 250, 283, 284, 368, 390], "nmodl_enable_python_bind": 3, "nmodlanguag": 251, "nmodlrandom": 327, "nn": 89, "node": [53, 163, 292, 366], "nodelist": 366, "non": [64, 98], "nonlinear": [154, 194, 250, 283, 321], "nonspecific_curr": [155, 250, 284], "notar": 247, "notat": [169, 299], "note": [96, 160, 289, 371, 380], "notebook": [0, 61], "notif": [232, 356], "now": 76, "nrn": 3, "nrn_coverage_fil": 3, "nrn_enable_backtrac": 3, "nrn_enable_coreneuron": 3, "nrn_enable_coverag": 3, "nrn_enable_discrete_event_observ": 3, "nrn_enable_doc": 3, "nrn_enable_interview": 3, "nrn_enable_math_opt": 3, "nrn_enable_mech_dll_styl": 3, "nrn_enable_mod_compat": 3, "nrn_enable_module_instal": 3, "nrn_enable_mpi": 3, "nrn_enable_mpi_dynam": 3, "nrn_enable_mus": 3, "nrn_enable_python": 3, "nrn_enable_python_dynam": 3, "nrn_enable_rx3d": 3, "nrn_enable_shar": 3, "nrn_enable_test": 3, "nrn_enable_thread": 3, "nrn_extra_cxx_flag": 3, "nrn_extra_mech_cxx_flag": 3, "nrn_link_against_python": 3, "nrn_mpi_dynam": 3, "nrn_nmodl_cxx_flag": 3, "nrn_python_dynam": 3, "nrn_python_extra_for_test": 3, "nrn_rx3d_opt_level": 3, "nrn_sanit": 3, "nrn_use_rel_rpath": 3, "nrnoc": 81, "nseg": [76, 382], "nsg": 49, "nthread": 242, "nullobject": 205, "number": [4, 28, 56, 98, 200, 327, 387], "numberofdataregion": [134, 262], "numer": [28, 39, 76, 163, 292, 390, 393], "o": [35, 246], "obfunc": 185, "object": [28, 56, 186, 205, 315, 316, 331, 387], "objectnam": [231, 355], "objectvar": 205, "objref": [28, 205], "obsolet": [162, 189, 192, 206, 233, 291, 319, 332, 357], "oc": 76, "occasion": 3, "ocomm": 29, "odd": 76, "off": 3, "old": 28, "older": 53, "onc": 239, "one": 46, "onli": 4, "onlin": [0, 389, 390, 392, 393], "open": [192, 319], "oper": [28, 50, 59, 377], "optim": [93, 94, 96, 138, 246, 266, 392], "option": [2, 3, 53, 139, 163, 267, 292, 368], "org": 390, "orient": [99, 205, 316, 383], "other": [1, 3, 32, 37, 50, 76, 92, 93, 231, 250, 253, 355, 377, 390], "our": [94, 111, 383], "out": [53, 86, 190, 317], "outlin": [100, 117, 118], "output": [81, 99, 101, 102, 187, 190, 317], "over": 126, "overhead": 53, "overkil": 76, "overload": 98, "overview": [14, 27, 53, 55, 86, 163, 166, 292, 296, 366, 367, 369, 371], "own": [28, 46, 49, 239], "packag": 247, "page": 99, "painless": 126, "panel": [133, 231, 261, 355], "paperitem": [231, 355], "paradigm": [154, 283], "parallel": [10, 11, 35, 36, 160, 289, 385, 393], "parallelcontext": [13, 160, 289], "parallelnetmanag": [161, 290], "paramet": [13, 44, 89, 94, 96, 105, 106, 114, 116, 133, 154, 203, 250, 261, 283, 330, 365, 369, 370, 384, 392], "parameter": [68, 227, 351], "parameterrang": [134, 262], "parameterrangelimit": [129, 257], "parameterstovari": [134, 262], "pars": [213, 337], "part": [367, 392, 393], "patch": [377, 378], "path": [3, 25, 60, 216, 227, 340, 351], "pattern": 98, "pclamp": 76, "pdata": 53, "pdb": 239, "pep": 377, "perform": [94, 96, 242], "period": 29, "pfwm": 42, "phaseplan": [227, 351], "physic": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46], "pickl": [387, 388], "pickvector": [231, 355], "pip": 7, "pitfal": 96, "place": 110, "placement": [175, 305], "plai": [76, 227, 351], "plot": [50, 76, 80, 84, 92, 101, 102, 123, 129, 230, 233, 257, 354, 355, 357, 370, 371, 382, 383, 388, 392], "plotrang": [231, 355], "plotshap": [234, 235, 358, 359], "plotsm": [224, 348], "plotter": 189, "plotwhat": [231, 234, 355, 358], "point": [28, 153, 282], "point_process": [155, 250, 284], "pointer": [4, 98, 154, 155, 206, 207, 212, 283, 284, 332, 333, 336], "pointgroup": [144, 273], "pointmanag": [144, 273], "pointprocess": [144, 227, 273, 351], "pointprocessgroupmanag": [144, 273], "pointprocessloc": [238, 362], "pointprocessmanag": [144, 273], "poirazi": 89, "polici": 380, "portal": 49, "posit": [99, 368, 383], "postscript": [99, 127, 231, 355], "postsynapt": 76, "potenti": [76, 163, 292], "power": 126, "pr": 249, "practic": 377, "praxisfit": [129, 257], "pre": 249, "precalcul": 76, "predeclar": 209, "prerequisit": 248, "pretti": 53, "principl": 96, "print": [42, 53, 76, 99, 226, 231, 350, 355], "printf": [52, 190, 317], "printtofil": [231, 355], "printwindowmanag": [175, 305], "prjnrnci": [210, 335], "prjnrncmp": [210, 335], "prjnrnco": [210, 335], "prjnrninit": [210, 335], "prjnrnpr": [210, 335], "problem": [86, 94, 96, 100], "proc": 185, "procedur": [28, 29, 76, 81, 154, 250, 283], "process": [153, 282], "produc": 76, "profil": 242, "program": [66, 81, 140, 205, 269], "programmat": [135, 146, 223, 263, 275, 347], "project": [96, 210, 335], "prompt": 76, "prop": 53, "proper": 80, "properti": [45, 68, 108, 299, 388], "protect": [155, 250, 284], "protein": [163, 292, 370], "prototyp": 98, "proxi": 96, "psection": 388, "pseudo": [200, 327], "ptrvector": [208, 334], "public": [127, 205, 254, 255], "publish": 248, "pull": 377, "puls": [64, 76], "pure": 126, "purpos": [46, 126], "push": 248, "put": 63, "pwmanag": [177, 307], "py": [0, 10, 13, 59], "pyobject": 56, "pypi": 248, "pyramid": 89, "python": [3, 46, 55, 211, 239, 246, 248, 269, 314, 331, 374, 380, 381, 386, 387, 388, 393], "python_execut": 3, "q": 393, "qualiti": 40, "quantit": 47, "question": [4, 14, 76], "quick": [140, 269], "quiet": [224, 348], "quit": [227, 231, 351, 355], "r": [95, 98], "rais": 56, "random": [4, 98, 100, 200, 284, 327, 393], "random123": 4, "randomli": 29, "rang": [53, 155, 284], "rangevarplot": [236, 360], "rare": [3, 139, 267], "rate": [163, 292, 293, 366], "rational": [154, 283], "re": [50, 76], "reaction": [41, 95, 163, 292, 366, 367, 370, 373, 374, 376, 390], "read": [47, 76, 86, 155, 166, 191, 250, 284, 296, 318, 366, 393], "readdata": [134, 262], "readdatafil": [129, 257], "readi": 37, "readline_root_dir": 3, "readthedoc": 0, "real": 76, "realli": 93, "realtim": [224, 348], "rebas": 377, "recentdir": [227, 351], "recommend": 188, "record": [28, 76, 370, 371, 373, 382, 383, 388], "rectangular": 76, "redirect": [190, 317], "redraw": 96, "reduc": [29, 53], "refer": [28, 41, 56, 89, 95, 126, 377, 378], "region": [163, 292, 367, 369], "regist": 60, "regular": 76, "relat": [186, 292, 315], "releas": [0, 248, 377, 378, 379, 380], "relwithdebinfo": 3, "remov": 363, "removeparmfromlist": [134, 262], "renshaw": 110, "repeat": 105, "report": 13, "repres": [46, 155, 250, 284], "represent": [45, 46], "reproduc": 393, "request": 377, "requir": [126, 377], "requisit": 249, "reset": 377, "resist": 96, "resiz": 99, "resourc": [54, 292, 390], "respond": 64, "respons": [64, 96], "restor": 292, "restrict": [94, 175, 305, 367], "result": [13, 242, 382, 387, 388], "retriev": [45, 103, 124, 231, 355], "retrievefromfil": [227, 351], "reus": 46, "reusabl": 66, "review": 377, "rewir": 29, "rhythm": 370, "rig": 45, "ring": [383, 384], "role": 382, "roll": 28, "rotat": 50, "rotate3d": [234, 358], "roughfit": [129, 134, 257, 262], "roundview": [231, 355], "rtd": 0, "rule": [125, 239], "run": [8, 10, 11, 29, 54, 76, 93, 94, 96, 101, 102, 129, 134, 218, 227, 242, 246, 257, 262, 342, 351, 367, 370, 371, 381, 382, 383, 388], "runcontrol": [224, 348], "runfitt": [134, 262], "runtim": 53, "rxd": [367, 371, 374, 392], "safe": 4, "sai": 76, "sanit": 242, "satisfi": 94, "save": [14, 29, 42, 45, 63, 66, 76, 103, 124, 218, 226, 227, 292, 342, 350, 351, 388], "saveal": [231, 355], "saverestorefitparam": [134, 262], "saverestorefunct": [129, 257], "saveselect": [231, 355], "savesess": [227, 351], "savest": [225, 349], "sbml": 292, "scalar": 366, "scale": [76, 94, 393], "scene": [231, 244, 355], "scene_equal_view": 231, "scheme": [95, 227, 351, 377, 378], "scm": 379, "screenitem": [231, 355], "script": [38, 119, 253, 381, 388, 390, 393], "se": [14, 42, 76, 103, 124], "sec": 299, "seclamp": 76, "section": [80, 166, 169, 234, 296, 299, 358, 382, 388], "sectionbrows": [178, 308], "sectionlist": [167, 297], "sectionref": [168, 298], "see": [47, 76, 81, 86, 94, 96], "seem": [61, 76], "segfault": 242, "segment": [163, 169, 292, 299, 314, 388], "sejnowski": 46, "select": [7, 37, 42, 94, 103, 124, 169, 299], "selectprint": [231, 355], "semant": 377, "send": 76, "separ": 126, "sequenc": 76, "serial": 385, "session": [14, 42, 66, 76, 103, 124, 226, 231, 350, 355], "set": [29, 66, 67, 76, 96, 104, 113, 115, 175, 248, 249, 253, 305, 387, 388], "setup": [0, 55, 59, 63, 367, 371], "setuptool": 59, "setview": [231, 355], "shape": [25, 47, 50, 76, 92, 166, 227, 237, 296, 351, 361], "shapebrows": [238, 362], "shapenam": [227, 351], "shapeplot": [227, 234, 351, 358], "shapestyl": [234, 358], "short": 107, "should": [3, 29, 76], "showmechan": [145, 274], "sign": 247, "simpl": [75, 253, 366], "simplifi": 241, "simul": [8, 13, 28, 30, 31, 32, 33, 36, 37, 44, 45, 51, 60, 63, 64, 101, 102, 126, 140, 223, 240, 269, 347, 367, 370, 371, 382, 383, 388, 390, 393], "singl": [373, 392], "singlecompart": [227, 351], "singlerunfit": [134, 262], "singlestep": [224, 348], "slow": 29, "snippet": 250, "so": 29, "softwar": 380, "solut": [100, 393], "solv": [194, 250, 321], "soma": 382, "some": 249, "someth": 76, "sort": 53, "sourc": [7, 10, 13, 37, 47, 52, 100, 246, 377], "space": [94, 163, 292], "spaceplot": [234, 358], "spatial": [67, 126], "spec": [227, 351], "speci": [367, 369], "special": 24, "specif": [3, 13, 66, 67, 94, 96, 121, 126, 140, 141, 146, 166, 269, 270, 275, 296, 314, 369], "specifi": [66, 67, 68, 76, 94, 96, 104, 105, 106, 107, 108, 109, 114, 116, 123, 163, 292, 382], "speed": 390, "sphinx": 55, "spike": [29, 76, 100, 101, 102, 107, 108, 112, 385, 390], "spikeplot1": 29, "spinal": 392, "spine": 393, "squash": 377, "sscanf": [213, 337], "stabil": 390, "stack": 169, "stage": 377, "stand": 81, "standard": [29, 190, 227, 317, 351], "start": [14, 24, 35, 45, 81, 82, 83, 122, 373], "state": [24, 44, 154, 250, 283, 292, 368, 370], "stateaxi": [227, 351], "statement": [81, 154, 185, 283], "statetransitionev": [164, 294], "steadi": [24, 368], "step": [1, 7, 48, 66, 67, 76, 94, 96, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 129, 227, 230, 257, 351, 354, 369, 388], "stick": [37, 45, 66, 382, 383, 384, 385, 386], "stimul": [37, 382], "stimuli": [162, 291], "stimulu": [371, 388], "stop": [224, 348], "stopatnextquadform": [129, 134, 257, 262], "store": 53, "strategi": [10, 11, 66, 67, 96, 368], "stream": 100, "stretegi": 76, "string": [3, 28, 213, 214, 215, 337, 338, 339, 387], "stringfunct": [214, 338], "struct": 53, "structur": [53, 369], "studi": 382, "studio": 249, "style": [175, 305], "styliz": [66, 166, 296, 382], "subset": [66, 67, 104], "subsetdomainiter": 104, "subsystem": 246, "subthreshold": 89, "subworld": [160, 289], "suffix": [155, 250, 284], "suggest": 51, "summari": [53, 89], "summat": 89, "suppli": [107, 108], "support": [126, 246, 248, 380], "symbol": 56, "symchoos": [179, 309], "synaps": [37, 109, 110, 383, 392], "synapt": [89, 95, 107, 114, 116, 383, 390], "sync": 29, "synchron": [29, 163, 292], "synchroni": 29, "syntax": [77, 81, 185], "system": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46, 126, 127, 194, 216, 321, 340], "t": [76, 224, 239, 348], "tabl": [4, 154, 250, 283], "tag": 377, "take": [47, 98], "target": 37, "task": 27, "tech": 392, "templat": 29, "tempor": 126, "termin": [191, 318], "test": [47, 54, 94, 96, 246, 248, 249, 384, 385], "text": 76, "texteditor": [180, 310], "than": 76, "them": [29, 76, 103, 124], "theori": [387, 392], "thereof": 371, "thi": [25, 76, 94, 96, 107], "thing": [10, 11, 40], "thread": 4, "threadsaf": [155, 250, 284], "three": 111, "threshold": 376, "time": [29, 76, 96, 216, 239, 340, 369], "timeplot": [234, 358], "timer": [217, 341], "tip": [56, 127], "tissu": 373, "titl": [154, 283], "togeth": [63, 155, 284], "too": 76, "tool": [25, 47, 76, 86, 93, 94, 96, 107, 127, 128, 130, 135, 141, 227, 256, 258, 263, 270, 351], "topic": 57, "topologi": [66, 165, 295, 388], "trai": [231, 355], "train": [101, 102, 107, 112, 391], "transfer": [160, 289], "transient": 53, "translat": [76, 85, 231, 355], "transmiss": 390, "trigger": 390, "troubleshoot": 249, "try": 239, "tstop": [224, 348], "tutori": [65, 90, 93, 94, 96, 117, 118, 120, 251, 373, 374, 386, 389, 390, 392], "two": 12, "type": [28, 32, 53, 56, 66, 76, 98, 107, 108, 111, 250, 387], "under": 122, "underli": 46, "ungroup": [227, 351], "uniform": 368, "uniqu": 107, "unit": [76, 119, 120, 154, 250, 283, 370], "unoptim": 96, "unsupport": 4, "until": 105, "up": [66, 67, 94, 96, 104, 113, 115, 127, 248, 249, 253, 377, 388, 390], "updat": [4, 63], "upgrad": 1, "upload": 248, "us": [3, 14, 24, 28, 30, 31, 45, 46, 48, 49, 53, 65, 66, 67, 76, 80, 82, 83, 86, 90, 92, 93, 94, 96, 103, 119, 121, 122, 123, 124, 125, 127, 139, 246, 248, 253, 255, 267, 368, 388, 390], "usag": [4, 10, 13, 82, 154, 283, 381], "useion": [155, 250, 284], "user": [46, 126], "usevariabledt": [227, 351], "usr": 3, "util": [210, 335], "v": [4, 25, 66, 79, 377, 385], "valenc": [155, 250, 284], "valgrind": 242, "valu": [53, 56, 76, 94, 96, 231, 242, 355], "valueeditor": [231, 355], "valuefieldeditor": [181, 311], "vari": [106, 365], "variabl": [4, 53, 80, 81, 123, 209, 227, 248, 250, 268, 351, 369, 371, 387, 388], "variablescal": [234, 358], "variabletofit": [134, 262], "variat": 68, "vclamp": 76, "ve": 76, "vector": [28, 53, 76, 201, 227, 328, 351], "vectormovi": [227, 351], "vectorplai": [221, 345], "vecwrap": [221, 345], "verbatim": [155, 250, 252, 284], "verifi": 105, "version": [76, 377, 378, 380], "via": [248, 316, 383], "video": 391, "view": [46, 85, 94, 96, 355], "view_equal_plot": 231, "viewaxi": [231, 355], "viewbox": [231, 355], "viewer": [144, 227, 273, 351], "virtual": [0, 392], "virtualscreen": [231, 355], "visibl": 53, "visual": [140, 249, 269, 367], "void": 98, "voltag": 12, "voltageaxi": [227, 351], "voxel": 373, "wa": 46, "wai": [53, 76, 188], "walkthrough": 13, "want": [76, 94], "watch": [154, 283], "watchthefit": [129, 257], "wave": [366, 369], "waveform": 76, "we": [86, 94, 96, 107, 108, 110, 111, 112, 113, 114, 115, 116], "welcom": 390, "what": [1, 14, 25, 42, 46, 47, 76, 80, 86, 93, 96, 103, 109, 123, 124, 126, 388], "wheel": [0, 246, 248], "when": [42, 50, 53, 76, 103, 124], "where": [3, 76, 366], "which": 76, "while": [154, 283], "who": 366, "wholescen": [231, 355], "why": [76, 93, 103, 124], "widget": [182, 312], "window": [42, 76, 99, 103, 124, 127, 227, 231, 234, 239, 246, 249, 351, 355, 358], "windowtitlesprint": [231, 355], "within": 119, "without": 249, "work": [14, 29, 47, 50, 53, 56, 64, 93, 126, 127, 239], "workflow": [60, 241, 248], "workingdir": [227, 351], "worsen": 29, "wrap": [56, 390], "write": [155, 192, 239, 250, 284, 319], "wrong": [42, 103, 124], "wsl": 246, "x": [25, 35], "x86_64": [246, 247], "xexpr": [230, 354], "yale": 46, "yexpr": [129, 257], "you": [14, 28, 46, 50, 53, 239], "your": [14, 28, 46, 49, 66, 239], "zoom": [47, 86], "zoomin10": [231, 355], "zoominout": [231, 355], "zoomout10": [231, 355]}})